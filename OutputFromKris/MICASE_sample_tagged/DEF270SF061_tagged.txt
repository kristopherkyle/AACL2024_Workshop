#sentid = 0
0	any	any		dt									DT	det	1
1	questions	question		nn	pl	nom							NNS	ROOT	1
2	any	any											DT	nsubj	5
3	of	of		in	in_othr								IN	prep	2
4	you	you		pro	2nd	sg							PRP	pobj	3
5	want	want	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	1
6	to	to		to									TO	aux	7
7	get	get		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	5
8	out	out	rb+advl	rb	advl								RB	advmod	7
9	right	right	rb+jjrbmod	rb	othr								RB	advmod	10
10	now	now	rb+advl	rb	advl								RB	advmod	7
11	before	before		cs	cs_othr								IN	mark	15
12	it	it		pro	3rd	sg							PRP	dep	15
13	,	,											,	punct	15
14	it	it		pro	3rd	sg							PRP	nsubj	15
15	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	7
16	official	official		jj	pred								JJ	acomp	15
17	?	?											.	punct	1

#sentid = 1
0													_SP	dep	0
1	(	(											-LRB-	punct	2
2	xx	xx											XX	dep	4
3	)	)											-RRB-	punct	4
4	to	to		in	in_othr								IN	prep	0
5	that	that		pro	dem	sg							DT	pobj	4
6	?	?											.	punct	4

#sentid = 2
0													_SP	dep	8
1	yes	yes											UH	intj	4
2	,	,											,	punct	3
3	we	we		pro	1st								PRP	nmod	4
4	we	we		pro	1st								PRP	dep	8
5													_SP	dep	8
6	does	do		vbaux									VBZ	aux	8
7	it	it		pro	3rd	sg							PRP	nsubj	8
8	work	work		vbmain	vblex	pres	simple	active					VB	ROOT	8
9	?	?											.	punct	8

#sentid = 3
0													_SP	dep	2
1	first	first		rb	link								RB	advmod	2
2	put	put		vbmain	vblex	past	simple	active					VBD	ROOT	2
3	it	it		pro	3rd	sg							PRP	dobj	2
4	on	on	in+advl	in	advl								IN	prep	2
5	the	the		dt	art								DT	det	6
6	table	table		nn									NN	pobj	4
7	but	but		cc	phrs								CC	cc	2
8	figured	figure		vbmain	vblex	past	simple	active					VBD	conj	2
9	it	it		pro	3rd	sg							PRP	nsubj	11
10	would	would		vbaux	mod	prd							MD	aux	11
11	hit	hit	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	8
12	,	,											,	punct	11
13	the	the		dt	art								DT	det	14
14	heads	head		nn	pl								NNS	dobj	11
15	of	of	of+npostmod	in	nmod								IN	prep	14
16	the	the		dt	art								DT	det	18
17	committee	committee	nn+npremod	nn		nom	npremod						NN	compound	18
18	members	member		nn	pl	nom							NNS	pobj	15
19	and	and		cc	phrs								CC	cc	2
20	so	so		cc	phrs								CC	cc	2
21	we	we		pro	1st								PRP	nsubj	22
22	decided	decide		vbmain	vblex	past	simple	active					VBD	conj	2
23	not	not											RB	neg	25
24	to	to		to									TO	aux	25
25	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	22
26	that	that		pro	dem	sg							DT	dobj	25
27													_SP	dep	22

#sentid = 4
0	that	that		pro	dem	sg							DT	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	one	one											CD	nummod	3
3	strategy	strategy		nn									NN	attr	1
4													_SP	dep	1
5	yeah	yeah											UH	intj	1
6	.	.											.	punct	1

#sentid = 5
0	well	well											UH	intj	4
1	yeah	yeah											UH	intj	4
2	,	,											,	punct	4
3	that	that		pro	dem	sg							DT	nsubj	4
4	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	true	true		jj	pred								JJ	acomp	4
6	.	.											.	punct	4

#sentid = 6
0													_SP	dep	3
1	it	it		pro	3rd	sg							PRP	nsubjpass	3
2	's	be		vbaux									VBZ	auxpass	3
3	called	call		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	3
4	a	a		dt	art								DT	det	6
5	defense	defense	nn+npremod	nn			npremod						NN	compound	6
6	strategy	strategy		nn									NN	oprd	3
7	.	.											.	punct	3

#sentid = 7
0													_SP	dep	5
1	hm	hm											UH	intj	5
2	i	i		pro	1st	sg							PRP	nsubj	5
3	should	should		vbaux	mod	nec							MD	aux	5
4	have	have		vbaux									VB	aux	5
5	brought	bring		vbmain	vblex	vp_w_modal	perf	active					VBN	ROOT	5
6	the	the		dt	art								DT	det	7
7	plane	plane		nn									NN	dobj	5
8	that	that		relpro	relpro_that	sg							WDT	nsubj	9
9	runs	run	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	7
10	down	down	rb+advl	rb	advl								RP	advmod	9
11	.	.											.	punct	5

#sentid = 8
0	have	have		vbmain	vblex	nonfinite	simple	active	advlcls				VB	advcl	3
1	it	it		pro	3rd	sg							PRP	dobj	0
2	,	,											,	punct	3
3	try	try		vbmain	vblex	nonfinite	simple	active					VB	ROOT	3
4	to	to		to									TO	aux	5
5	take	take	tocls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	3
6	off	off		rb	prtcle								RP	prt	5
7	in	in	in+advl	in	advl								IN	prep	5
8	that	that		dt	dt_dem								DT	det	9
9	direction	direction		nn		nom							NN	pobj	7
10	.	.											.	punct	3

#sentid = 9
0													_SP	dep	1
1	take	take		vbmain	vblex	nonfinite	simple	active					VB	ROOT	1
2	a	a		dt	art								DT	det	3
3	bullet	bullet		nn		nom							NN	dobj	1
4													_SP	dep	1
5	exactly	exactly	rb+advl	rb	advl	ly							RB	advmod	1
6	.	.											.	punct	1

#sentid = 10
0													_SP	dep	3
1	i	i		pro	1st	sg							PRP	nsubj	3
2	'd	would		vbaux	mod								MD	aux	3
3	say	say		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	3
4	the	the		dt	art								DT	det	5
5	key	key		nn									NN	nsubj	10
6	to	to	in+npostmod	in	nmod								IN	prep	5
7	a	a		dt	art								DT	det	9
8	good	good	attr+npremod	jj	attr								JJ	amod	9
9	defense	defense		nn									NN	pobj	6
10	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	3
11	a	a		dt	art								DT	det	13
12	good	good	attr+npremod	jj	attr								JJ	amod	13
13	offense	offense		nn									NN	attr	10
14	.	.											.	punct	3

#sentid = 11
0													_SP	dep	10
1	mm	mm											UH	intj	10
2	,	,											,	punct	10
3	that	that		pro	dem	sg							DT	nsubj	4
4	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	csubj	10
5	basically	basically	rb+advl	rb	advl	ly							RB	advmod	4
6	what	what											WP	pobj	9
7	this	this		pro	dem	sg							DT	nsubj	8
8	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	4
9	for	for	in+advl	in	advl								IN	prep	8
10	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	10
11	humor	humor		nn		nom							NN	attr	10
12	so	so		cc	phrs								CC	cc	10
13	i	i		pro	1st	sg							PRP	nsubj	14
14	can	can	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	MD	ccomp	10
15	_	_											.	punct	10

#sentid = 12
0	it	it		pro	3rd	sg							PRP	nsubj	2
1	really	really	rb+advl	rb	advl	ly							RB	advmod	2
2	serves	serve		vbmain	vblex	pres	simple	active					VBZ	ROOT	2
3	no	no		dt									DT	det	5
4	research	research	nn+npremod	nn			npremod						NN	compound	5
5	purpose	purpose		nn									NN	dobj	2
6	.	.											.	punct	2

#sentid = 13
0													_SP	dep	17
1	so	so		rb	link								RB	advmod	17
2	if	if		cs	cnd								IN	mark	4
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	want	want	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	17
5	more	more	attr+npremod	jj	attr								JJR	amod	6
6	details	detail		nn	pl								NNS	dobj	4
7	on	on	in+npostmod	in	nmod								IN	prep	6
8	what	what											WP	nsubj	9
9	happened	happen	whcls+incomp	vbmain	prepv	past	simple	active	compcls	whcls	incomp		VBD	pcomp	7
10	to	to	in+advl	in	advl								IN	prep	9
11	this	this		dt	dt_dem								DT	det	12
12	airplane	airplane		nn									NN	pobj	10
13	nobody	nobody		nn									NN	npadvmod	9
14	,	,											,	punct	17
15	i-	i-		in	in_othr								PRP	prep	14
16	this	this		pro	dem	sg							DT	nsubj	17
17	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	17
18	not	not											RB	neg	17
19	part	part		nn									NN	attr	17
20	of	of	of+npostmod	in	nmod								IN	prep	19
21	the	the		dt	art								DT	det	22
22	defense	defense		nn									NN	pobj	20
23	so	so		cc	cls								CC	cc	17
24	i	i		pro	1st	sg							PRP	nsubj	26
25	'll	will		vbaux	mod								MD	aux	26
26	tell	tell		vbmain	vblex	vp_w_modal	simple	active					VB	conj	17
27	it	it		pro	3rd	sg							PRP	dobj	26
28	now	now	rb+advl	rb	advl								RB	advmod	26

#sentid = 14
0													_SP	dep	0

#sentid = 15
0	okay	okay											UH	ROOT	0
1													_SP	dep	0

#sentid = 16
0	so	so		rb	link								RB	advmod	7
1	,	,											,	punct	7
2	basically	basically	rb+advl	rb	advl	ly							RB	advmod	7
3	last	last	attr+npremod	jj	attr								JJ	amod	4
4	Thursday	thursday		nn		proper							NNP	npadvmod	7
5	we	we		pro	1st								PRP	nsubj	7
6	w-	w-											XX	dep	7
7	went	go		vbmain	vblex	past	simple	active					VBD	ROOT	7
8	out	out	rb+advl	rb	advl								RB	advmod	7
9	on	on	in+advl	in	advl								IN	prep	7
10	a	a		dt	art								DT	det	11
11	test	test		nn									NN	pobj	9
12	and	and		cc	cls								CC	cc	7
13	,	,											,	punct	7
14	this	this		pro	dem	sg							DT	nsubj	15
15	is	be		vbmain	be	pres	simple	active					VBZ	conj	7
16	our	our		dt	poss								PRP$	poss	18
17	trainer	trainer	nn+npremod	nn		nom	npremod						NN	compound	18
18	plane	plane		nn									NN	attr	15
19	all	all											DT	nsubj	40
20	of	of		in	in_othr								IN	prep	19
21	us	we		pro	pl								PRP	pobj	20
22	,	,											,	punct	26
23	um	um											UH	intj	26
24	s-	s-											XX	nmod	26
25	grad	grad	attr+npremod	jj	attr								JJ	amod	26
26	students	student	appos+npostmod	nn	pl	nom	nappos						NNS	appos	19
27	and	and		cc	phrs								CC	cc	26
28	s-	s-		nn	pl								NNS	conj	26
29	so	so	rb+jjrbmod	rb	othr								RB	advmod	30
30	forth	forth		rb	othr								RB	advmod	28
31	who	who		relpro	relpro_wh								WP	nsubj	34
32	've	've		vbaux									VBP	aux	34
33	been	be		vbaux									VBN	aux	34
34	working	work	finitecls+rel	vbmain	prepv	pres	prog	active	nmod_cls	whcls	rel		VBG	relcl	26
35	on	on	in+advl	in	advl								IN	prep	34
36	the	the		dt	art								DT	det	37
37	project	project		nn									NN	pobj	35
38	never	never											RB	neg	40
39	really	really	rb+advl	rb	advl	ly							RB	advmod	40
40	knew	know		vbmain	vblex	past	simple	active					VBD	conj	7
41	how	how		rb	advl								WRB	advmod	43
42	to	to		to									TO	aux	43
43	fly	fly	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	40
44	,	,											,	punct	40
45	model	model	nn+npremod	nn			npremod						NN	compound	46
46	airplanes	airplane		nn	pl								NNS	dep	40
47	before	before	in+npostmod	in	nmod								IN	prep	46
48	this	this		pro	dem	sg							DT	pobj	47
49	and	and		cc	cls								CC	cc	7
50	so	so		cc	cls								CC	cc	7
51	,	,											,	punct	53
52	we	we		pro	1st								PRP	nsubj	53
53	had	have		vbmain	vblex	past	simple	active					VBD	conj	7
54	this	this		dt	dt_dem								DT	det	55
55	trainer	trainer		nn		nom							NN	dobj	53
56	that	that											WDT	dep	64
57	for	for	in+advl	in	advl								IN	prep	64
58	the	the		dt	art								DT	det	61
59	past	past	attr+npremod	jj	attr								JJ	amod	61
60	two	two											CD	nummod	61
61	years	year		nn	pl								NNS	pobj	57
62	we	we		pro	1st								PRP	nsubj	64
63	've	've		vbaux									VBP	aux	64
64	taken	take	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBN	relcl	55
65	it	it		pro	3rd	sg							PRP	dobj	64
66	out	out	rb+advl	rb	advl								RB	advmod	64
67	and	and		cc	phrs								CC	cc	64
68	flown	fly		vbmain	vblex	nonfinite	simple	active		edcls			VBN	conj	64
69	it	it		pro	3rd	sg							PRP	dobj	68
70	just	just	rb+jjrbmod	rb	othr								RB	advmod	71
71	manually	manually	rb+advl	rb	advl	ly							RB	advmod	68
72	occasionally	occasionally	rb+advl	rb	advl	ly							RB	advmod	68
73	.	.											.	punct	53

#sentid = 17
0	last	last	attr+npremod	jj	attr								JJ	amod	1
1	Thursday	thursday		nn		proper							NNP	npadvmod	3
2	we	we		pro	1st								PRP	nsubj	3
3	lost	lose		vbmain	vblex	past	simple	active					VBD	ROOT	3
4	radio	radio	nn+npremod	nn			npremod						NN	compound	6
5	c-	c-		nn									NN	punct	6
6	communications	communication		nn	pl	nom							NNS	dobj	3
7	with	with	in+npostmod	in	nmod								IN	prep	6
8	it	it		pro	3rd	sg							PRP	pobj	7
9	and	and		cc	cls								CC	cc	3
10	it	it		pro	3rd	sg							PRP	nsubj	11
11	flew	fly		vbmain	vblex	past	simple	active					VBD	conj	3
12	around	around	rb+advl	rb	advl								RB	advmod	11
13	for	for	in+advl	in	advl								IN	prep	11
14	a	a		dt	art								DT	det	15
15	while	while		nn									NN	pobj	13
16	by	by	in+advl	in	advl								IN	prep	11
17	itself	itself											PRP	pobj	16
18	and	and		cc	phrs								CC	cc	11
19	,	,											,	punct	11
20	promptly	promptly	rb+advl	rb	advl	ly							RB	advmod	21
21	crashed	crash		vbmain	vblex	past	simple	active					VBD	conj	11
22	into	into	in+advl	in	advl								IN	prep	21
23	a	a		dt	art								DT	det	24
24	tree	tree		nn		nom							NN	pobj	22
25	,	,											,	punct	11
26	and	and		cc	phrs								CC	cc	11
27	uh	uh											UH	intj	31
28	,	,											,	punct	31
29	the	the		dt	art								DT	det	30
30	wing	wing		nn		nom							NN	nsubj	31
31	came	come		vbmain	phrsv	past	simple	active					VBD	conj	11
32	off	off		rb	prtcle								RP	prt	31
33	in	in	in+advl	in	advl								IN	prep	31
34	the	the		dt	art								DT	det	35
35	tree	tree		nn		nom							NN	pobj	33
36	and	and		cc	cls								CC	cc	31
37	the	the		dt	art								DT	det	39
38	,	,											,	punct	39
39	fuselage	fuselage		nn		nom							NN	nsubj	40
40	came	come		vbmain	vblex	past	simple	active					VBD	conj	31
41	down	down	rb+advl	rb	advl								RB	advmod	40
42	and	and		cc	phrs								CC	cc	40
43	hit	hit		vbmain	vblex	past	simple	active					VBD	conj	40
44	the	the		dt	art								DT	det	45
45	ground	ground		nn									NN	dobj	43
46	so	so		cc	phrs								CC	cc	40
47													_SP	dep	40
48	wow	wow											UH	intj	40
49													_SP	dep	40
50	but	but		cc	phrs								CC	cc	40
51	we	we		pro	1st								PRP	nsubj	52
52	got	get		vbmain	vblex	past	simple	active					VBD	conj	40
53	good	good	attr+npremod	jj	attr								JJ	amod	55
54													_SP	dep	55
55	data	datum		nn	pl								NNS	dobj	52
56	on	on	in+npostmod	in	nmod								IN	prep	55
57	the	the		dt	art								DT	det	59
58	research	research	nn+npremod	nn			npremod						NN	compound	59
59	airplane	airplane		nn									NN	pobj	56
60													_SP	dep	52
61	the	the		dt	art								DT	det	62
62	motivation	motivation		nn		nom							NN	dobj	52
63	for	for	in+npostmod	in	nmod								IN	prep	62
64	your	your		dt	poss								PRP$	poss	65
65	work	work		nn									NN	pobj	63
66	.	.											.	punct	11

#sentid = 18
0													_SP	dep	3
1	yeah	yeah											UH	intj	3
2	,	,											,	punct	3
3	right	right											UH	ROOT	3
4	...	...											:	punct	3

#sentid = 19
0													_SP	dep	2
1	this	this		pro	dem	sg							DT	nsubj	2
2	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	the	the		dt	art								DT	det	4
4	what	what											WP	attr	2
5	?	?											.	punct	2

#sentid = 20
0	what	what											WP	attr	1
1	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	this	this		pro	dem	sg							DT	nsubj	1
3	?	?											.	punct	1

#sentid = 21
0													_SP	dep	3
1	oh	oh											UH	intj	3
2	this	this		pro	dem	sg							DT	nsubj	3
3	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	our	our		dt	poss								PRP$	poss	6
5	trainer	trainer	nn+npremod	nn		nom	npremod						NN	compound	6
6	airplane	airplane		nn									NN	attr	3
7	.	.											.	punct	3

#sentid = 22
0	last	last	attr+npremod	jj	attr								JJ	amod	1
1	Thursday	thursday		nn		proper							NNP	npadvmod	5
2	it	it		pro	3rd	sg							PRP	nsubj	5
3	uh	uh											UH	intj	5
4	,	,											,	punct	5
5	had	have		vbmain	vblex	past	simple	active					VBD	ROOT	5
6	an	an		dt									DT	det	7
7	incident	incident		nn		nom							NN	dobj	5
8	with	with	in+npostmod	in	nmod								IN	prep	7
9	a	a		dt	art								DT	det	10
10	tree	tree		nn		nom							NN	pobj	8
11	.	.											.	punct	5

#sentid = 23
0													_SP	dep	0
1	so	so		rb	link								RB	advmod	3
2	it	it		pro	3rd	sg							PRP	nsubj	3
3	's	be		vbmain	in_othr	pres	simple	active					VBZ	prep	0
4	broken	broken		jj	pred								JJ	acomp	3
5	?	?											.	punct	3

#sentid = 24
0													_SP	dep	11
1	oh	oh											UH	intj	0
2	yeah	yeah											UH	intj	1
3													_SP	dep	11
4	oh	oh											UH	intj	11
5	yeah	yeah											UH	intj	4
6	,	,											,	punct	11
7	this	this		pro	dem	sg							DT	nsubj	8
8	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	11
9	broken	broken		jj	pred								JJ	acomp	8
10	this	this		pro	dem	sg							DT	nsubj	11
11	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	23
12	not	not											RB	neg	11
13	the	the		dt	art								DT	det	15
14	research	research	nn+npremod	nn		proper	npremod						NNP	compound	15
15	airplane	airplane		nn									NN	attr	11
16													_SP	dep	23
17	yeah	yeah											UH	intj	19
18	this	this		pro	dem	sg							DT	nsubj	19
19	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	23
20	,	,											,	punct	19
21	structurally	structurally	rb+advl	rb	advl	ly							RB	advmod	23
22	this	this		pro	dem	sg							DT	nsubj	23
23	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	23
24													_SP	dep	23
25	the	the		dt	art								DT	det	26
26	same	same											JJ	attr	23
27	as	as	in+jcomp	in	jcomp								IN	prep	26
28	the	the		dt	art								DT	det	30
29	last	last		jj	attr								JJ	amod	30
30	one	one		pro	other	pl							CD	pobj	27
31	.	.											.	punct	23

#sentid = 25
0													_SP	dep	0
1	c-	c-											:	dobj	4
2	can	can		vbaux	mod	pos							MD	aux	4
3	we	we		pro	1st								PRP	nsubj	4
4	pass	pass		vbmain	in_othr	vp_w_modal	simple	active					VB	prep	0
5	you	you		pro	2nd	sg							PRP	dobj	4
6	?	?											.	punct	4

#sentid = 26
0													_SP	dep	3
1	you	you		pro	2nd	sg							PRP	nsubj	3
2	can	can		vbaux	mod	pos							MD	aux	3
3	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	3
4	part	part	nn+npremod	nn			npremod						NN	nmod	6
5	spatial	spatial	attr+npremod	jj	attr								JJ	amod	6
6	constraints	constraint		nn	pl								NNS	dobj	3
7	as	as		rb	othr								RB	advmod	9
8	well	well		rb	othr								RB	advmod	9
9	as	as		cc	phrs								IN	cc	6
10	temporal	temporal	attr+npremod	jj	attr								JJ	amod	11
11	constraints	constraint		nn	pl								NNS	conj	6
12	.	.											.	punct	3

#sentid = 27
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2	.	.											.	punct	0

#sentid = 28
0													_SP	dep	2
1	he	he		pro	3rd	sg							PRP	nsubj	2
2	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBZ	advcl	25
3	the	the											DT	dep	5
4	he	he		pro	3rd	sg							PRP	nsubj	5
5	's	be		vbmain	be	pres	simple	active					VBZ	meta	2
6	the	the		dt	art								DT	det	9
7	last	last	attr+npremod	jj	attr								JJ	amod	9
8	committee	committee	nn+npremod	nn		nom	npremod						NN	compound	9
9	member	member		nn		nom							NN	attr	5
10	so	so	rb+advl	rb	advl								CC	advmod	2
11	,	,											,	punct	2
12	he	he		pro	3rd	sg							PRP	nsubj	13
13	needs	need		vbmain	vblex	pres	simple	active					VBZ	conj	2
14	to	to		to									TO	aux	15
15	fill	fill		vbmain	phrsv	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	13
16	out	out		rb	prtcle								RP	prt	15
17	the	the		dt	art								DT	det	18
18	form	form		nn									NN	dobj	15
19	i	i		pro	1st	sg							PRP	nsubj	20
20	guess	guess		vbmain	vblex	pres	simple	active					VBP	parataxis	13
21													_SP	dep	20
22	yes	yes											UH	intj	25
23	there	there											EX	expl	25
24	should	should		vbaux	mod	nec							MD	aux	25
25	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	25
26	an	an		dt									DT	det	28
27	extra	extra	attr+npremod	jj	attr								JJ	amod	28
28	stack	stack		nn									NN	attr	25
29	sitting	sit	ingcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	28
30	over	over	rb+jjrbmod	rb	othr								RB	advmod	31
31	there	there	rb+advl	rb	advl								RB	advmod	29
32	somewhere	somewhere	rb+advl	rb	advl								RB	advmod	29
33	.	.											.	punct	25

#sentid = 29
0													_SP	dep	5
1	mkay	mkay											UH	intj	5
2													_SP	dep	5
3	here	here	rb+advl	rb	advl								RB	advmod	5
4	it	it		pro	3rd	sg							PRP	nsubj	5
5	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	5
6	.	.											.	punct	5

#sentid = 30
0													_SP	dep	3
1	yeah	yeah											UH	intj	3
2	i	i		pro	1st	sg							PRP	nsubj	3
3	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	3
4	so	so	rb+advl	rb	advl								RB	advmod	3
5	,	,											,	punct	3
6	yeah	yeah											UH	intj	3
7	.	.											.	punct	3

#sentid = 31
0													_SP	dep	12
1	so	so		rb	link								RB	advmod	12
2	if	if		cs	cnd								IN	mark	5
3	you	you		pro	2nd	sg							PRP	nsubj	5
4	wanna	wanna		vbaux									VBP	aux	5
5	fill	fill	finitecls+advl	vbmain	phrsv	pres	simple	active	advlcls		conditional		VB	advcl	12
6	that	that		pro	dem	sg							DT	dobj	5
7	out	out		rb	prtcle								RP	prt	5
8	um	um											UH	intj	12
9	,	,											,	punct	12
10	the	the		dt	art								DT	det	11
11	tradition	tradition		nn		nom							NN	nsubj	12
12	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	12
13	that	that		comp	comp_that								IN	mark	21
14	before	before		cs	cs_othr								IN	mark	17
15	we	we		pro	1st								PRP	nsubjpass	17
16	get	get		vbaux									VBP	auxpass	17
17	started	start	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls		other_advl		VBN	advcl	21
18	,	,											,	punct	21
19	everybody	everybody		nn	other	sg							NN	nsubj	21
20	else	else		rb	othr								RB	advmod	19
21	leaves	leave	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	12
22	and	and		cc	cls								CC	cc	21
23	the	the		dt	art								DT	det	24
24	committee	committee		nn		nom							NN	nsubj	25
25	meets	meet		vbmain	vblex	pres	simple	active					VBZ	conj	21
26													_SP	dep	29
27	oh	oh											UH	intj	29
28	it	it		pro	3rd	sg							PRP	nsubj	29
29	's	be		vbmain	be	pres	simple	active					VBZ	parataxis	25
30	on	on	in+advl	in	advl								IN	prep	29
31	tape	tape		nn									NN	pobj	30
32	.	.											.	punct	12

#sentid = 32
0	yes	yes											UH	intj	5
1	,	,											,	punct	5
2	i	i		pro	1st	sg							PRP	nsubj	5
3	'll	will		vbaux	mod								MD	aux	5
4	be	be		vbaux									VB	aux	5
5	talking	talk		vbmain	prepv	vp_w_modal	prog	active					VBG	ROOT	5
6	to	to	in+advl	in	advl								IN	prep	5
7	you	you		pro	2nd	sg							PRP	pobj	6
8	later	later	rb+advl	rb	advl								RB	advmod	5
9	.	.											.	punct	5

#sentid = 33
0													_SP	dep	0
1	oh	oh											UH	intj	0

#sentid = 34
0													_SP	dep	18
1	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	2
2	of	of		rb	othr								RB	advmod	3
3	in	in	in+advl	in	advl								IN	prep	18
4	two	two											CD	nummod	5
5	parts	part		nn	pl								NNS	pobj	3
6	the	the		dt	art								DT	det	8
7	first	first	attr+npremod	jj	attr								JJ	amod	8
8	part	part		nn									NN	nsubj	18
9	which	which		relpro	relpro_wh								WDT	nsubj	10
10	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	8
11	the	the		dt	art								DT	det	13
12	major	major	attr+npremod	jj	attr								JJ	amod	13
13	part	part		nn									NN	attr	10
14	of	of	of+npostmod	in	nmod								IN	prep	13
15	the	the		dt	art								DT	det	16
16	research	research		nn									NN	pobj	14
17	is	be		vbaux									VBZ	aux	18
18	talking	talk		vbmain	prepv	pres	prog	active					VBG	ROOT	18
19	about	about	in+advl	in	advl								IN	prep	18
20	the	the		dt	art								DT	det	21
21	generation	generation		nn		nom							NN	pobj	19
22	and	and		cc	phrs								CC	cc	21
23	execution	execution		nn		nom							NN	conj	21
24	of	of	of+npostmod	in	nmod								IN	prep	21
25	,	,											,	punct	24
26	real	real	attr+npremod	jj	attr								JJ	amod	28
27	-	-											HYPH	punct	28
28	time	time	nn+npremod	nn			npremod						NN	compound	29
29	plans	plan		nn	pl								NNS	pobj	24
30	,	,											,	punct	18
31	and	and		cc	cls								CC	cc	18
32	then	then		rb	link								RB	advmod	34
33	we	we		pro	1st								PRP	nsubj	34
34	talk	talk		vbmain	prepv	pres	simple	active					VBP	conj	18
35	about	about	in+advl	in	advl								IN	prep	34
36	an	an		dt									DT	det	37
37	application	application		nn		nom							NN	pobj	35
38	which	which											WDT	pobj	44
39	i	i		pro	1st	sg							PRP	nsubj	40
40	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	37
41	a	a		dt	art								DT	det	43
42	particular	particular	attr+npremod	jj	attr								JJ	amod	43
43	interest	interest		nn									NN	dobj	40
44	in	in	in+npostmod	in	nmod								IN	prep	43
45	,	,											,	punct	37
46	namely	namely		rb	othr	ly							RB	advmod	48
47	autonomous	autonomous	attr+npremod	jj	attr								JJ	amod	48
48	flight	flight	appos+npostmod	nn			nappos						NN	appos	37
49	...	...											:	punct	34

#sentid = 35
0	so	so		rb	link								RB	advmod	11
1	,	,											,	punct	11
2	the	the		dt	art								DT	det	5
3	overall	overall	attr+npremod	jj	attr								JJ	amod	5
4	research	research	nn+npremod	nn			npremod						NN	compound	5
5	problem	problem		nn									NN	nsubj	11
6	that	that		pro	dem	sg							WDT	dobj	10
7	i	i		pro	1st	sg							PRP	nsubj	10
8	have	have		vbaux									VBP	aux	10
9	been	be		vbaux									VBN	aux	10
10	studying	studying		nn		nom							NN	relcl	5
11	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	11
12	,	,											,	punct	11
13	how	how		comp	comp_wh								WRB	advmod	16
14	do	do		vbaux									VBP	aux	16
15	you	you		pro	2nd	sg							PRP	nsubj	16
16	get	get	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VB	ccomp	11
17	safe	safe	attr+npremod	jj	attr								JJ	amod	19
18	autonomous	autonomous	attr+npremod	jj	attr								JJ	amod	19
19	operation	operation		nn		nom							NN	dobj	16
20	when	when		rb	advl								WRB	advmod	24
21	you	you		pro	2nd	sg							PRP	nsubj	24
22	really	really	rb+advl	rb	advl	ly							RB	advmod	24
23	are	be		vbaux									VBP	aux	24
24	looking	look	finitecls+advl	vbmain	prepv	pres	prog	active	advlcls	whcls			VBG	advcl	16
25	at	at	in+advl	in	advl								IN	prep	24
26	a	a		dt	art								DT	det	29
27	real	real	attr+npremod	jj	attr								JJ	amod	29
28	,	,											,	punct	29
29	system	system		nn									NN	pobj	25
30	,	,											,	punct	29
31	um	um											UH	intj	29
32	which	which		relpro	relpro_wh								WDT	nsubj	33
33	re-	re-											XX	relcl	29
34	well	well											UH	intj	35
35	for	for											IN	dep	33
36	for	for		in	in_othr								IN	prep	35
37	the	the		dt	art								DT	det	38
38	main	main											JJ	pobj	36
39	that	that		relpro	relpro_that	sg							WDT	nsubj	40
40	requires	require	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	29
41	real	real	attr+npremod	jj	attr								JJ	amod	43
42	-	-											HYPH	punct	43
43	time	time	nn+npremod	nn			npremod						NN	compound	44
44	response	response		nn									NN	dobj	40
45	.	.											.	punct	11

#sentid = 36
0	um	um											UH	intj	7
1	,	,											,	punct	7
2	in	in	in+advl	in	advl								IN	prep	7
3	particular	particular		jj	attr								JJ	amod	2
4	when	when		rb	advl								WRB	advmod	7
5	your	your		dt	poss								PRP$	poss	6
6	system	system		nn									NN	nsubj	7
7	has	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	56
8	,	,											,	punct	7
9	limitations	limitation		nn	pl	nom							NNS	dobj	7
10	such	such		jj	attr								JJ	amod	11
11	as	as	in+npostmod	in	nmod								IN	prep	9
12	computational	computational	attr+npremod	jj	attr								JJ	amod	13
13	resource	resource	nn+npremod	nn			npremod						NN	compound	14
14	limits	limit		nn	pl								NNS	pobj	11
15	which	which											WDT	pobj	23
16	often	often	rb+advl	rb	advl								RB	advmod	21
17	people	people		nn	pl								NNS	nsubj	21
18	do	do		vbaux									VBP	aux	21
19	n't	not											RB	neg	21
20	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	21
21	pay	pay	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VB	relcl	14
22	attention	attention		nn		nom							NN	dobj	21
23	to	to	in+advl	in	advl								IN	prep	21
24	even	even	rb+advl	rb	advl								RB	advmod	27
25	though	though		cs	con								IN	mark	27
26	they	they		pro	pl								PRP	nsubj	27
27	're	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		concessive		VBP	advcl	21
28	always	always	rb+advl	rb	advl								RB	advmod	27
29	there	there	rb+advl	rb	advl								RB	advmod	27
30	,	,											,	punct	7
31	and	and		cc	phrs								CC	cc	7
32	,	,											,	punct	7
33	when	when		rb	advl								WRB	advmod	35
34	you	you		pro	2nd	sg							PRP	nsubj	35
35	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	56
36	a	a		dt	art								DT	det	42
37	complex	complex	attr+npremod	jj	attr								JJ	amod	42
38	hard	hard	attr+npremod	jj	attr								JJ	amod	42
39	real	real	attr+npremod	jj	attr								JJ	amod	41
40	-	-											HYPH	punct	41
41	time	time	nn+npremod	nn			npremod						NN	compound	42
42	system	system		nn									NN	dobj	35
43	where	where		rb	advl								WRB	advmod	45
44	you	you		pro	2nd	sg							PRP	nsubj	45
45	require	require	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	42
46	safety	safety	nn+npremod	nn			npremod						NN	compound	47
47	guarantees	guarantee		nn	pl	nom							NNS	dobj	45
48	,	,											,	punct	56
49	um	um											UH	intj	56
50	those	those		dt	dt_dem								DT	det	52
51	two	two											CD	nummod	52
52	things	thing		nn	pl	nom							NNS	nsubj	56
53	do	do		vbaux									VBP	aux	56
54	n't	not											RB	neg	56
55	always	always	rb+advl	rb	advl		splaux						RB	advmod	56
56	go	go		vbmain	vblex	pres	simple	active					VB	ROOT	56
57	together	together	rb+advl	rb	advl								RB	advmod	56
58	naturally	naturally	rb+advl	rb	advl	ly							RB	advmod	56
59	because	because		cs	cos								IN	mark	74
60	,	,											,	punct	74
61	w-	w-											XX	dep	74
62	when	when		rb	advl								WRB	advmod	64
63	you	you		pro	2nd	sg							PRP	nsubj	64
64	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	74
65	a	a		dt	art								DT	det	70
66	hard	hard	attr+npremod	jj	attr								JJ	amod	70
67	real	real	attr+npremod	jj	attr								JJ	amod	69
68	-	-											HYPH	punct	69
69	time	time	nn+npremod	nn			npremod						NN	compound	70
70	system	system		nn									NN	dobj	64
71	you	you		pro	2nd	sg							PRP	nsubj	74
72	really	really	rb+advl	rb	advl	ly							RB	advmod	74
73	,	,											,	punct	74
74	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBP	advcl	56
75	to	to		to									TO	aux	77
76	,	,											,	punct	77
77	talk	talk		vbmain	prepv	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	74
78	about	about	in+advl	in	advl								IN	prep	77
79	deadlines	deadline		nn	pl								NNS	pobj	78
80	and	and		cc	phrs								CC	cc	79
81	meeting	meet		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	79
82	those	those		dt	dt_dem								DT	det	83
83	deadlines	deadline		nn	pl								NNS	dobj	81
84	,	,											,	punct	74
85	because	because		cs	cos								IN	mark	95
86	if	if		cs	cnd								IN	mark	90
87	you	you		pro	2nd	sg							PRP	nsubj	90
88	do	do		vbaux									VBP	aux	90
89	n't	not											RB	neg	90
90	meet	meet	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VB	advcl	95
91	them	they		pro	pl								PRP	dobj	90
92	then	then		rb	link								RB	advmod	95
93	you	you		pro	2nd	sg							PRP	nsubj	95
94	might	might		vbaux	mod	pos							MD	aux	95
95	compromise	compromise	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		causative		VB	advcl	74
96	safety	safety		nn									NN	dobj	95
97	of	of	of+npostmod	in	nmod								IN	prep	96
98	your	your		dt	poss								PRP$	poss	99
99	system	system		nn									NN	pobj	97
100	.	.											.	punct	56

#sentid = 37
0	so	so		rb	link								RB	advmod	9
1	uh	uh											UH	intj	9
2	,	,											,	punct	9
3	at	at	in+advl	in	advl								IN	prep	9
4	this	this		dt	dt_dem								DT	det	5
5	point	point		nn									NN	pobj	3
6	i	i		pro	1st	sg							PRP	nsubj	9
7	'll	will		vbaux	mod								MD	aux	9
8	briefly	briefly	rb+advl	rb	advl	ly	splaux						RB	advmod	9
9	mention	mention		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	9
10	the	the		dt	art								DT	det	17
11	show	show		vbmain	vblex	nonfinite	simple	active					VB	nmod	17
12	-	-											HYPH	punct	11
13	and	and		cc	phrs								CC	cc	11
14	-	-											HYPH	punct	15
15	tell	tell		vbmain	vblex	nonfinite	simple	active					VB	conj	11
16	,	,											,	punct	17
17	device	device		nn									NN	dobj	9
18	that	that		pro	dem	sg							WDT	dobj	21
19	i	i		pro	1st	sg							PRP	nsubj	21
20	've	've		vbaux									VBP	aux	21
21	brought	bring	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBN	relcl	17
22	here	here	rb+advl	rb	advl								RB	advmod	21
23	.	.											.	punct	9

#sentid = 38
0	which	which											WDT	dep	5
1	uh	uh											UH	intj	5
2	,	,											,	punct	5
3	i	i		pro	1st	sg							PRP	nsubj	5
4	'm	be		vbaux									VBP	aux	5
5	going	go		vbmain	vblex	pres	prog	active					VBG	ROOT	5
6	to	to		to									TO	aux	8
7	be	be		vbaux									VB	aux	8
8	talking	talk	ingcls+vcomp	vbmain	prepv	nonfinite	prog	active	compcls	ingcls	vcomp		VBG	xcomp	5
9	about	about	in+advl	in	advl								IN	prep	8
10	airplane	airplane	nn+npremod	nn			npremod						NN	compound	11
11	flight	flight		nn									NN	pobj	9
12	and	and		cc	cls								CC	cc	5
13	um	um											UH	intj	17
14	,	,											,	punct	17
15	i	i		pro	1st	sg							PRP	nsubj	17
16	'm	be		vbaux									VBP	aux	17
17	going	go		vbmain	vblex	pres	prog	active					VBG	conj	5
18	to	to		to									TO	aux	19
19	claim	claim	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	17
20	that	that		comp	comp_that								IN	mark	23
21	airplane	airplane	nn+npremod	nn			npremod						NN	compound	22
22	flight	flight		nn									NN	nsubj	23
23	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	19
24	inherently	inherently	rb+jjrbmod	rb	adjmod	ly							RB	advmod	25
25	dangerous	dangerous		jj	pred								JJ	acomp	23
26	.	.											.	punct	17

#sentid = 39
0	so	so		rb	link								RB	advmod	3
1	,	,											,	punct	3
2	this	this		pro	dem	sg							DT	nsubj	3
3	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	127
4	an	an		dt									DT	det	5
5	example	example		nn									NN	attr	3
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	an	an		dt									DT	det	9
8	airplane	airplane	nn+npremod	nn			npremod						NN	compound	9
9	flight	flight		nn									NN	pobj	6
10	gone	go	edcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	edcls	ncomp		VBN	acl	9
11	wrong	wrong											RB	oprd	10
12	,	,											,	punct	9
13	which	which											WDT	dep	18
14	basically	basically	rb+advl	rb	advl	ly							RB	advmod	18
15	um	um											UH	intj	18
16	,	,											,	punct	18
17	we	we		pro	1st								PRP	nsubj	18
18	lost	lose	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel		VBD	relcl	9
19	communication	communication		nn		nom							NN	dobj	18
20	with	with	in+npostmod	in	nmod								IN	prep	19
21	this	this		dt	dt_dem								DT	det	22
22	airplane	airplane		nn									NN	pobj	20
23	last	last	attr+npremod	jj	attr								JJ	amod	24
24	Thursday	thursday		nn		proper							NNP	npadvmod	18
25	when	when		rb	advl								WRB	advmod	28
26	we	we		pro	1st								PRP	nsubj	28
27	were	be		vbaux									VBD	aux	28
28	flying	fly	finitecls+advl	vbmain	vblex	past	prog	active	advlcls	whcls			VBG	advcl	18
29	it	it		pro	3rd	sg							PRP	dobj	28
30	manually	manually	rb+advl	rb	advl	ly							RB	advmod	28
31	so	so		cc	cls								IN	cc	18
32	,	,											,	punct	18
33	our	our		dt	poss								PRP$	poss	34
34	flight	flight		nn									NN	nsubj	35
35	was	be		vbmain	be	past	simple	active					VBD	conj	18
36	neither	neither											CC	preconj	37
37	safe	safe		jj	pred								JJ	acomp	35
38	nor	nor		cc	phrs								CC	cc	37
39	autonomous	autonomous											JJ	conj	37
40	,	,											,	punct	9
41	and	and		cc	cls								CC	cc	3
42	basically	basically	rb+advl	rb	advl	ly							RB	advmod	45
43	what	what											WP	nsubj	44
44	happened	happen		vbmain	vblex	past	simple	active	compcls	whcls	vcomp		VBD	csubj	45
45	was	be		vbmain	be	past	simple	active					VBD	conj	3
46	,	,											,	punct	45
47	um	um											UH	intj	45
48	it	it		pro	3rd	sg							PRP	nsubj	49
49	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	45
50	equivalent	equivalent		jj	pred								JJ	acomp	49
51	to	to	in+jcomp	in	jcomp								IN	prep	50
52	having	have	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	51
53	,	,											,	punct	52
54	a	a		dt	art								DT	det	57
55	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	56
56	long	long	attr+npremod	jj	attr								JJ	amod	57
57	delay	delay		nn									NN	dobj	52
58	without	without	in+npostmod	in	nmod								IN	prep	57
59	doing	do	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	58
60	anything	anything		nn	other	nom							NN	dobj	59
61	,	,											,	punct	52
62	in	in	in+advl	in	advl								IN	prep	67
63	which	which		dt									WDT	det	64
64	case	case		nn									NN	pcomp	62
65	the	the		dt	art								DT	det	66
66	plane	plane		nn									NN	nsubj	67
67	had	have	finitecls+advl	vbmain	vblex	past	simple	active	advlcls				VBD	advcl	52
68	plenty	plenty		nn									NN	dobj	67
69	of	of	of+npostmod	in	nmod								IN	prep	68
70	time	time		nn									NN	pobj	69
71	to	to		to									TO	aux	72
72	fly	fly	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	70
73	into	into	in+advl	in	advl								IN	prep	72
74	a	a		dt	art								DT	det	75
75	tree	tree		nn		nom							NN	pobj	73
76	,	,											,	punct	127
77	so	so		rb	link								RB	advmod	127
78	,	,											,	punct	127
79	if	if		cs	cnd								IN	mark	81
80	you	you		pro	2nd	sg							PRP	nsubj	81
81	think	think	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	127
82	at	at	in+advl	in	advl								IN	prep	81
83	the	the		dt	art								DT	det	85
84	extreme	extreme	attr+npremod	jj	attr								JJ	amod	85
85	limit	limit		nn									NN	pobj	82
86	of	of	of+npostmod	in	nmod								IN	prep	85
87	where	where		comp	comp_wh								WRB	advmod	89
88	you	you		pro	2nd	sg							PRP	nsubj	89
89	have	have	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VBP	pcomp	86
90	a	a		dt	art								DT	det	94
91	resource	resource		nn									NN	npadvmod	93
92	-	-											HYPH	punct	93
93	limited	limit	attr+npremod	jj	attr	ed							VBN	amod	94
94	system	system		nn									NN	dobj	89
95	,	,											,	punct	81
96	and	and		cc	cls								CC	cc	81
97	,	,											,	punct	81
98	you	you		pro	2nd	sg							PRP	nsubj	99
99	end	end		vbmain	phrsv	pres	simple	active					VBP	conj	81
100	up	up		rb	prtcle								RP	prt	99
101	in	in	in+advl	in	advl								IN	prep	99
102	some	some		dt									DT	det	104
103	processing	processing	nn+npremod	nn		nom	npremod						NN	compound	104
104	loop	loop		nn									NN	pobj	101
105	or	or		cc	cls								CC	cc	99
106	you	you		pro	2nd	sg							PRP	nsubj	108
107	're	be		vbaux									VBP	aux	108
108	doing	do		vbmain	vblex	pres	prog	active					VBG	conj	99
109	something	something		nn	other	nom							NN	dobj	108
110	and	and		cc	phrs								CC	cc	108
111	not	not											RB	neg	112
112	paying	pay		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	108
113	attention	attention		nn		nom							NN	dobj	112
114	to	to		to									TO	aux	115
115	say	say	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	112
116	where	where		comp	comp_wh								WRB	advmod	120
117	your	your		dt	poss								PRP$	poss	118
118	airplane	airplane		nn									NN	nsubj	120
119	is	be		vbaux									VBZ	aux	120
120	flying	fly	whcls+vcomp	vbmain	vblex	pres	prog	active	compcls	whcls	vcomp		VBG	ccomp	115
121	,	,											,	punct	127
122	this	this		dt	dt_dem								DT	det	123
123	kind	kind		nn									NN	nsubj	127
124	of	of	of+npostmod	in	nmod								IN	prep	123
125	thing	thing		nn		nom							NN	pobj	124
126	could	could		vbaux	mod	pos							MD	aux	127
127	happen	happen		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	127
128	.	.											.	punct	127

#sentid = 40
0	so	so		rb	link								RB	advmod	14
1	,	,											,	punct	14
2	anyway	anyway											UH	intj	6
3	i	i		pro	1st	sg							PRP	nsubj	6
4	wo	will		vbaux	mod								MD	aux	6
5	n't	not											RB	neg	6
6	talk	talk		vbmain	prepv	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	14
7	about	about	in+advl	in	advl								IN	prep	6
8	the	the		dt	art								DT	det	9
9	airplane	airplane		nn									NN	pobj	7
10	anymore	anymore	rb+advl	rb	advl								RB	advmod	6
11	do	do		vbaux									VBP	aux	14
12	n't	not											RB	neg	14
13	,	,											,	punct	14
14	let	let		vbmain	vblex	pres	simple	active					VB	ROOT	14
15	it	it		pro	3rd	sg							PRP	nsubj	16
16	be	be		vbmain	be	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	14
17	too	too	rb+jjrbmod	rb	othr								RB	advmod	18
18	much	much											JJ	attr	16
19	of	of	in+jcomp	in	jcomp								IN	prep	18
20	a	a		dt	art								DT	det	21
21	distraction	distraction		nn		nom							NN	pobj	19
22	.	.											.	punct	14

#sentid = 41
0	so	so		rb	link								RB	advmod	11
1	the	the		dt	art								DT	det	5
2	final	final	attr+npremod	jj	attr								JJ	amod	5
3	,	,											,	punct	5
4	um	um											UH	intj	5
5	aspect	aspect		nn									NN	nsubj	11
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	our	our		dt	poss								PRP$	poss	8
8	problem	problem		nn									NN	pobj	6
9	that	that		relpro	relpro_that	sg							WDT	nsubj	10
10	complicates	complicate	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	5
11	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	11
12	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	11
13	that	that		comp	comp_that								IN	mark	28
14	whenever	whenever		rb	advl								WRB	advmod	16
15	you	you		pro	2nd	sg							PRP	nsubj	16
16	describe	describe	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	28
17	a	a		dt	art								DT	det	18
18	problem	problem		nn									NN	dobj	16
19	that	that		relpro	relpro_that	sg							WDT	nsubj	20
20	's	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	18
21	,	,											,	punct	20
22	fairly	fairly	rb+jjrbmod	rb	adjmod	ly							RB	advmod	23
23	complex	complex		jj	pred								JJ	acomp	20
24	you	you		pro	2nd	sg							PRP	nsubj	28
25	do	do		vbaux									VBP	aux	28
26	n't	not											RB	neg	28
27	always	always	rb+advl	rb	advl		splaux						RB	advmod	28
28	get	get	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VB	ccomp	12
29	everything	everything		nn	other	nom							NN	nsubj	30
30	right	right											RB	ccomp	28
31	.	.											.	punct	11

#sentid = 42
0	so	so		rb	link								RB	advmod	14
1	,	,											,	punct	14
2	in	in	in+advl	in	advl								IN	prep	6
3	some	some		dt									DT	det	4
4	cases	case		nn	pl								NNS	pobj	2
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	have	have		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	14
7	imprecise	imprecise	attr+npremod	jj	attr								JJ	amod	8
8	knowledge	knowledge		nn									NN	dobj	6
9	in	in	in+advl	in	advl								IN	prep	14
10	other	other	attr+npremod	jj	attr								JJ	amod	11
11	cases	case		nn	pl								NNS	pobj	9
12	you	you		pro	2nd	sg							PRP	nsubj	14
13	may	may		vbaux	mod	pos							MD	aux	14
14	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	14
15	incomplete	incomplete	attr+npremod	jj	attr								JJ	amod	16
16	knowledge	knowledge		nn									NN	dobj	14
17	.	.											.	punct	14

#sentid = 43
0	or	or		cc									CC	cc	1
1	both	both											DT	ROOT	1
2	put	put	edcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	edcls	ncomp		VBN	acl	1
3	together	together	rb+advl	rb	advl								RB	advmod	2
4	.	.											.	punct	1

#sentid = 44
0	so	so		rb	link								RB	advmod	7
1	in	in	in+advl	in	advl								IN	prep	7
2	the	the		dt	art								DT	det	4
3	worst	bad	attr+npremod	jj	attr								JJS	amod	4
4	case	case		nn									NN	pobj	1
5	,	,											,	punct	7
6	you	you		pro	2nd	sg							PRP	nsubj	7
7	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	7
8	to	to		to									TO	aux	9
9	make	make		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	7
10	trade	trade	nn+npremod	nn			npremod						NN	compound	12
11	-	-											HYPH	punct	12
12	offs	off		nn	pl								NNS	dobj	9
13	.	.											.	punct	7

#sentid = 45
0	the	the		dt	art								DT	det	5
1	three	three											CD	nummod	5
2	specific	specific	attr+npremod	jj	attr								JJ	amod	5
3	uh	uh											UH	intj	5
4	,	,											,	punct	5
5	types	type		nn	pl								NNS	nsubj	15
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	trade	trade	nn+npremod	nn			npremod						NN	compound	9
8	-	-											HYPH	punct	9
9	offs	off		nn	pl								NNS	pobj	6
10	that	that		pro	dem	sg							WDT	pobj	13
11	we	we		pro	1st								PRP	nsubj	12
12	focussed	focusse	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel	reldel	VBD	relcl	5
13	on	on	in+advl	in	advl								IN	prep	12
14	,	,											,	punct	15
15	are	be		vbmain	be	pres	simple	active					VBP	ROOT	15
16	first	first	rb+advl	rb	advl								RB	advmod	15
17	of	of		in	in_othr								IN	prep	16
18	all	all											DT	pobj	17
19	if	if		cs	cnd								IN	mark	21
20	you	you		pro	2nd	sg							PRP	nsubj	21
21	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	51
22	a	a		dt	art								DT	det	27
23	real	real	attr+npremod	jj	attr								JJ	amod	25
24	-	-											HYPH	punct	25
25	time	time	nn+npremod	nn			npremod						NN	compound	27
26	reaction	reaction	nn+npremod	nn		nom	npremod						NN	compound	27
27	set	set		nn									NN	dobj	21
28	which	which		relpro	relpro_wh								WDT	nsubj	31
29	would	would		vbaux	mod	prd							MD	aux	31
30	ideally	ideally	rb+advl	rb	advl	ly	splaux						RB	advmod	31
31	keep	keep	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	whcls	rel		VB	relcl	27
32	you	you		pro	2nd	sg							PRP	dobj	31
33	safe	safe											JJ	oprd	31
34	all	all											PDT	predet	36
35	the	the		dt	art								DT	det	36
36	time	time		nn									NN	npadvmod	31
37	,	,											,	punct	21
38	and	and		cc	cls								CC	cc	21
39	it	it		pro	3rd	sg							PRP	nsubj	42
40	does	do		vbaux									VBZ	aux	42
41	n't	not											RB	neg	42
42	fit	fit		vbmain	vblex	pres	simple	active					VB	conj	21
43	on	on	in+advl	in	advl								IN	prep	42
44	the	the		dt	art								DT	det	45
45	resources	resource		nn	pl								NNS	pobj	43
46	that	that		pro	dem	sg							WDT	dobj	48
47	you	you		pro	2nd	sg							PRP	nsubj	48
48	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	45
49	,	,											,	punct	51
50	you	you		pro	2nd	sg							PRP	nsubj	51
51	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	15
52	to	to		to									TO	aux	53
53	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	51
54	something	something		nn	other	nom							NN	dobj	53
55	you	you		pro	2nd	sg							PRP	nsubj	59
56	ca	can		vbaux	mod								MD	aux	59
57	n't	not											RB	neg	59
58	just	just	rb+advl	rb	advl		splaux						RB	advmod	59
59	say	say	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	54
60	oh	oh											UH	intj	64
61	well	well											UH	intj	60
62	we	we		pro	1st								PRP	nsubj	64
63	'll	will		vbaux	mod								MD	aux	64
64	assume	assume	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	59
65	that	that		comp	comp_that								IN	mark	67
66	it	it		pro	3rd	sg							PRP	nsubj	67
67	fits	fit	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	64
68	.	.											.	punct	15

#sentid = 46
0	so	so		rb	link								RB	advmod	2
1	we	we		pro	1st								PRP	nsubj	2
2	study	study		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	that	that		dt	dt_dem								DT	det	6
4	trade	trade	nn+npremod	nn			npremod						NN	compound	6
5	-	-											HYPH	punct	6
6	off	off		nn									NN	dobj	2
7	.	.											.	punct	2

#sentid = 47
0	um	um											UH	intj	13
1	basically	basically	rb+advl	rb	advl	ly							RB	advmod	13
2	,	,											,	punct	13
3	in	in	in+advl	in	advl								IN	prep	13
4	order	order		nn		nom							NN	pobj	3
5	to	to		to									TO	aux	6
6	make	make		vbmain	vblex	nonfinite	simple	active	nmod_cls		ncomp		VB	acl	4
7	that	that		dt	dt_dem								DT	det	10
8	trade	trade	nn+npremod	nn			npremod						NN	compound	10
9	-	-											HYPH	punct	10
10	off	off		nn									NN	dobj	6
11	sometimes	sometimes	rb+advl	rb	advl								RB	advmod	13
12	you	you		pro	2nd	sg							PRP	nsubj	13
13	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	13
14	to	to		to									TO	aux	15
15	relax	relax		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	13
16	your	your		dt	poss								PRP$	poss	18
17	safety	safety	nn+npremod	nn			npremod						NN	compound	18
18	guarantees	guarantee		nn	pl	nom							NNS	dobj	15
19	from	from	in+advl	in	advl								IN	prep	15
20	absolute	absolute		jj	attr								JJ	amod	19
21	,	,											,	punct	15
22	to	to	in+advl	in	advl								IN	prep	15
23	some	some		dt									DT	det	27
24	other	other	attr+npremod	jj	attr								JJ	amod	27
25	,	,											,	punct	27
26	um	um											UH	intj	27
27	method	method		nn									NN	pobj	22
28	of	of	of+npostmod	in	nmod								IN	prep	27
29	guaranteeing	guarantee	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	28
30	the	the		dt	art								DT	det	31
31	system	system		nn									NN	dobj	29
32	.	.											.	punct	13

#sentid = 48
0	um	um											UH	intj	9
1	a	a		dt	art								DT	det	4
2	natural	natural	attr+npremod	jj	attr								JJ	amod	4
3	,	,											,	punct	4
4	way	way		nn									NN	nsubj	9
5	to	to		to									TO	aux	6
6	look	look	tocls+rel	vbmain	prepv	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	4
7	at	at	in+advl	in	advl								IN	prep	6
8	it	it		pro	3rd	sg							PRP	pobj	7
9	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	9
10	to	to		to									TO	aux	12
11	,	,											,	punct	12
12	maximize	maximize	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	9
13	the	the		dt	art								DT	det	14
14	probability	probability		nn		nom							NN	dobj	12
15	that	that		relpro	relpro_that								IN	mark	18
16	you	you		pro	2nd	sg							PRP	nsubj	18
17	're	be		vbaux									VBP	aux	18
18	going	go	thatcls+ncomp	vbmain	vblex	pres	prog	active	nmod_cls	thatcls	ncomp		VBG	acl	14
19	to	to		to									TO	aux	20
20	succeed	succeed	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	18
21	.	.											.	punct	9

#sentid = 49
0	so	so		rb	link								RB	advmod	7
1	that	that		pro	dem	sg							DT	nsubj	2
2	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	csubj	7
3	what	what											WP	pobj	6
4	we	we		pro	1st								PRP	nsubj	5
5	look	look	thatcls+vcomp	vbmain	prepv	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	2
6	at	at	in+advl	in	advl								IN	prep	5
7	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	7
8	to	to		to									TO	aux	10
9	decra-	decra-		vbmain	vblex	nonfinite	simple	active					VB	dep	10
10	degrade	degrade	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	7
11	,	,											,	punct	10
12	safety	safety	nn+npremod	nn			npremod						NN	compound	13
13	guarantees	guarantee		nn	pl	nom							NNS	dobj	10
14	to	to	in+advl	in	advl								TO	prep	10
15	probabilistic	probabilistic		jj	attr								JJ	amod	14
16	when	when	rb+jjrbmod	rb	othr								WRB	advmod	17
17	necessary	necessary											JJ	advcl	10
18	,	,											,	punct	7
19	and	and		cc	cls								CC	cc	7
20	then	then		rb	link								RB	advmod	36
21	,	,											,	punct	36
22	since	since		cs	cs_othr								IN	mark	24
23	we	we		pro	1st								PRP	nsubj	24
24	degraded	degrade	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		other_advl		VBD	advcl	36
25	those	those		dt	dt_dem								DT	det	26
26	guarantees	guarantee		nn	pl	nom							NNS	dobj	24
27	and	and		cc	cls								CC	cc	24
28	since	since		cs	cs_othr								IN	mark	31
29	we	we		pro	1st								PRP	nsubj	31
30	,	,											,	punct	31
31	allow	allow		vbmain	vblex	pres	simple	active			other_advl		VBP	conj	24
32	incomplete	incomplete	attr+npremod	jj	attr								JJ	amod	33
33	knowledge	knowledge		nn									NN	dobj	31
34	,	,											,	punct	36
35	we	we		pro	1st								PRP	nsubj	36
36	have	have		vbmain	vblex	pres	simple	active					VBP	conj	7
37	to	to		to									TO	aux	38
38	recognize	recognize		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	36
39	and	and		cc	phrs								CC	cc	38
40	react	react		vbmain	vblex	nonfinite	simple	active					VB	conj	38
41	when	when		rb	advl								WRB	advmod	44
42	we	we		pro	1st								PRP	nsubj	44
43	,	,											,	punct	44
44	reach	reach	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	40
45	unhandled	unhandled	attr+npremod	jj	attr								JJ	amod	46
46	states	state		nn	pl	nom							NNS	dobj	44
47	.	.											.	punct	36

#sentid = 50
0	basically	basically	rb+advl	rb	advl	ly							RB	advmod	3
1	unhandled	unhandled	attr+npremod	jj	attr								JJ	amod	2
2	states	state		nn	pl	nom							NNS	nsubj	3
3	are	be		vbmain	be	pres	simple	active					VBP	ROOT	3
4	those	those											DT	attr	3
5	that	that		relpro	relpro_that	sg							WDT	nsubjpass	9
6	,	,											,	punct	9
7	have	have		vbaux									VBP	aux	9
8	been	be		vbaux									VBN	auxpass	9
9	ignored	ignore	finitecls+rel	vbmain	vblex	pres	perf	pasv_agls	nmod_cls	thatcls	rel		VBN	relcl	4
10	due	due	in+advl	in	advl								JJ	prep	9
11	to	to											IN	pcomp	10
12	incomplete	incomplete	attr+npremod	jj	attr								JJ	amod	13
13	knowledge	knowledge		nn									NN	pobj	10
14	or	or		cc	phrs								CC	cc	13
15	,	,											,	punct	13
16	probabilistic	probabilistic	attr+npremod	jj	attr								JJ	amod	17
17	guarantees	guarantee		nn	pl	nom							NNS	conj	13
18	...	...											:	punct	3

#sentid = 51
0	so	so		cc	cls								RB	cc	26
1	,	,											,	punct	26
2	two	two											CD	nummod	3
3	aspects	aspect		nn	pl								NNS	nsubj	26
4	of	of	of+npostmod	in	nmod								IN	prep	3
5	our	our		dt	poss								PRP$	poss	6
6	approach	approach		nn									NN	pobj	4
7	first	first		rb	link								RB	advmod	26
8	the	the											DT	dep	26
9	,	,											,	punct	26
10	an	an		dt									DT	det	12
11	overall	overall	attr+npremod	jj	attr								JJ	amod	12
12	view	view		nn									NN	nsubj	26
13	of	of	of+npostmod	in	nmod								IN	prep	12
14	how	how		comp	comp_wh								WRB	advmod	16
15	we	we		pro	1st								PRP	nsubj	16
16	look	look	whcls+incomp	vbmain	prepv	pres	simple	active	compcls	whcls	incomp		VBP	pcomp	13
17	at	at	in+advl	in	advl								IN	prep	16
18	plan	plan	nn+npremod	nn			npremod						NN	compound	19
19	generation	generation		nn		nom							NN	pobj	17
20	and	and		cc	phrs								CC	cc	19
21	real	real	attr+npremod	jj	attr								JJ	amod	23
22	-	-											HYPH	punct	23
23	time	time	nn+npremod	nn			npremod						NN	compound	24
24	execution	execution		nn		nom							NN	conj	19
25	,	,											,	punct	26
26	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	26
27	that	that		comp	comp_that								IN	mark	29
28	we	we		pro	1st								PRP	nsubj	29
29	separate	separate	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	26
30	the	the		dt	art								DT	det	32
31	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	32
32	process	process		nn		nom							NN	dobj	29
33	from	from	in+advl	in	advl								IN	prep	29
34	the	the		dt	art								DT	det	38
35	plan	plan	nn+npremod	nn			npremod						NN	compound	37
36	-	-											HYPH	punct	37
37	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	38
38	process	process		nn		nom							NN	pobj	33
39	.	.											.	punct	26

#sentid = 52
0	and	and		cc	cls								CC	cc	5
1	in	in	in+advl	in	advl								IN	prep	5
2	doing	do	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	1
3	so	so	rb+advl	rb	advl								RB	advmod	2
4	it	it		pro	3rd	sg							PRP	nsubj	5
5	allows	allow		vbmain	vblex	pres	simple	active					VBZ	ROOT	5
6	us	we		pro	pl								PRP	nsubj	8
7	to	to		to									TO	aux	8
8	use	use		vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	5
9	,	,											,	punct	8
10	a	a		dt	art								DT	det	11
11	lot	lot		nn									NN	dobj	8
12	of	of	of+npostmod	in	nmod								IN	prep	11
13	the	the		dt	art								DT	det	20
14	powerful	powerful	attr+npremod	jj	attr								JJ	amod	20
15	but	but		cc	phrs								CC	cc	14
16	computationally	computationally	rb+jjrbmod	rb	othr	ly							RB	advmod	17
17	intensive	intensive											JJ	conj	14
18	,	,											,	punct	20
19	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	20
20	algorithms	algorithm		nn	pl								NNS	pobj	12
21	,	,											,	punct	8
22	to	to		to									TO	aux	23
23	develop	develop	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	8
24	the	the		dt	art								DT	det	25
25	plans	plan		nn	pl								NNS	dobj	23
26	,	,											,	punct	23
27	and	and		cc	phrs								CC	cc	8
28	then	then		rb	link								RB	advmod	30
29	also	also	rb+advl	rb	advl								RB	advmod	30
30	schedule	schedule		vbmain	vblex	nonfinite	simple	active					VB	conj	8
31	them	they		pro	pl								PRP	dobj	30
32	,	,											,	punct	30
33	so	so		cs	cs_othr								IN	mark	37
34	that	that		cs	cs_othr								IN	mark	37
35	,	,											,	punct	37
36	we	we		pro	1st								PRP	nsubj	37
37	know	know	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	30
38	they	they		pro	pl								PRP	nsubj	40
39	will	will		vbaux	mod	prd							MD	aux	40
40	fit	fit	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	37
41	onto	onto	in+advl	in	advl								IN	prep	40
42	our	our		dt	poss								PRP$	poss	44
43	limited	limited	attr+npremod	jj	attr								JJ	amod	44
44	resources	resource		nn	pl								NNS	pobj	41
45	when	when		rb	advl								WRB	advmod	47
46	they	they		pro	pl								PRP	nsubj	47
47	execute	execute	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	40
48	.	.											.	punct	5

#sentid = 53
0	we	we		pro	1st								PRP	nsubj	1
1	began	begin		vbmain	vblex	past	simple	active					VBD	ROOT	1
2	this	this		dt	dt_dem								DT	det	3
3	work	work		nn									NN	dobj	1
4	,	,											,	punct	1
5	by	by	in+advl	in	advl								IN	prep	1
6	,	,											,	punct	5
7	considering	consider	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	5
8	a	a		dt	art								DT	det	9
9	system	system		nn									NN	dobj	7
10	that	that		relpro	relpro_that	sg							WDT	nsubjpass	12
11	was	be		vbaux									VBD	auxpass	12
12	designed	design	finitecls+rel	vbmain	vblex	past	simple	pasv_agls	nmod_cls	thatcls	rel		VBN	relcl	9
13	specifically	specifically	rb+advl	rb	advl	ly							RB	advmod	15
14	to	to		to									TO	aux	15
15	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	12
16	that	that		pro	dem	sg							DT	dobj	15
17	,	,											,	punct	9
18	namely	namely		rb	othr	ly							RB	advmod	26
19	the	the		dt	art								DT	det	26
20	Cooperative	cooperative		nn		proper	npremod						NNP	compound	26
21	Intelligent	intelligent		nn		proper	npremod						NNP	compound	26
22	Real	real	attr+npremod	nn	attr	proper							NNP	amod	24
23	-	-											HYPH	punct	24
24	time	time		nn		proper	npremod						NNP	compound	26
25	Control	control		nn		proper	npremod						NNP	compound	26
26	Architecture	architecture	appos+npostmod	nn		proper	nappos						NNP	appos	9
27	,	,											,	punct	26
28	called	call	edcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	edcls	ncomp		VBN	acl	26
29	CIRCA	circa		nn		proper							NNP	oprd	28
30	,	,											,	punct	9
31	which	which		relpro	relpro_wh								WDT	nsubj	32
32	has	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	9
33	,	,											,	punct	32
34	a	a		dt	art								DT	det	35
35	planner	planner		nn		nom							NN	dobj	32
36	and	and		cc	phrs								CC	cc	35
37	a	a		dt	art								DT	det	38
38	scheduler	scheduler		nn		nom							NN	conj	35
39	and	and		cc	phrs								CC	cc	35
40	,	,											,	punct	32
41	to	to		to									TO	aux	42
42	develop	develop		vbmain	vblex	nonfinite	simple	active		tocls			VB	conj	32
43	the	the		dt	art								DT	det	44
44	plans	plan		nn	pl								NNS	dobj	42
45	and	and		cc	phrs								CC	cc	32
46	then	then		rb	link								RB	advmod	47
47	uses	use		vbmain	vblex	pres	simple	active					VBZ	conj	32
48	,	,											,	punct	47
49	um	um											UH	intj	47
50	what	what		comp	comp_wh								WP	dobj	52
51	it	it		pro	3rd	sg							PRP	nsubj	52
52	calls	call	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	47
53	a	a		dt	art								DT	det	57
54	real	real	attr+npremod	jj	attr								JJ	amod	56
55	-	-											HYPH	punct	56
56	time	time	nn+npremod	nn			npremod						NN	compound	57
57	subsystem	subsystem		nn									NN	oprd	52
58	basically	basically		rb	othr	ly							RB	advmod	57
59	,	,											,	punct	47
60	a	a		dt	art								DT	det	62
61	special	special	attr+npremod	jj	attr								JJ	amod	62
62	module	module		nn									NN	dobj	47
63	that	that		relpro	relpro_that	sg							WDT	nsubj	66
64	has	have		vbaux									VBZ	aux	66
65	carefully	carefully	rb+advl	rb	advl	ly	splaux						RB	advmod	66
66	designed	design	finitecls+rel	vbmain	vblex	pres	perf	active	nmod_cls	thatcls	rel		VBN	relcl	62
67	um	um											UH	intj	66
68	,	,											,	punct	66
69	knowledge	knowledge		nn									NN	dobj	66
70	of	of	of+npostmod	in	nmod								IN	prep	69
71	its	its		dt	poss								PRP$	poss	72
72	resources	resource		nn	pl								NNS	pobj	70
73	and	and		cc	phrs								CC	cc	69
74	how	how											WRB	conj	69
75	,	,											,	punct	74
76	uh	uh											UH	intj	80
77	worst	bad	attr+npremod	jj	attr								JJS	amod	79
78	-	-											HYPH	punct	79
79	case	case	nn+npremod	nn			npremod						NN	compound	80
80	properties	property		nn	pl								NNS	meta	74
81	of	of	of+npostmod	in	nmod								IN	prep	80
82	,	,											,	punct	81
83	the	the		dt	art								DT	det	85
84	various	various	attr+npremod	jj	attr								JJ	amod	85
85	items	item		nn	pl								NNS	conj	69
86	that	that		relpro	relpro_that	sg							WDT	nsubj	88
87	might	might		vbaux	mod	pos							MD	aux	88
88	be	be	finitecls+rel	vbmain	be	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	85
89	in	in	in+advl	in	advl								IN	prep	88
90	the	the		dt	art								DT	det	91
91	plan	plan		nn									NN	pobj	89
92	to	to		to									TO	aux	93
93	execute	execute	tocls+ncomp	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	ncomp		VB	acl	91
94	those	those		dt	dt_dem								DT	det	95
95	plans	plan		nn	pl								NNS	dobj	93
96	.	.											.	punct	1

#sentid = 54
0													_SP	dep	9
1	so	so		rb	link								RB	advmod	9
2	given	give	edcls+advl	vbmain	advl	nonfinite	simple	active		edcls			VBN	prep	9
3	that	that		dt	dt_dem								DT	det	4
4	architecture	architecture		nn		nom							NN	pobj	2
5	ideally	ideally	rb+advl	rb	advl	ly							RB	advmod	9
6	,	,											,	punct	9
7	you	you		pro	2nd	sg							PRP	nsubj	9
8	would	would		vbaux	mod	prd							MD	aux	9
9	build	build		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	9
10	perfect	perfect	attr+npremod	jj	attr								JJ	amod	11
11	plans	plan		nn	pl								NNS	dobj	9
12	that	that		relpro	relpro_that	sg							WDT	nsubj	14
13	would	would		vbaux	mod	prd							MD	aux	14
14	execute	execute	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	11
15	in	in	in+advl	in	advl								IN	prep	14
16	hard	hard	attr+npremod	jj	attr								JJ	amod	19
17	real	real	attr+npremod	jj	attr								JJ	amod	19
18	-	-											HYPH	punct	19
19	time	time		nn									NN	pobj	15
20	for	for	in+advl	in	advl								IN	prep	14
21	all	all		dt									DT	det	22
22	situations	situation		nn	pl	nom							NNS	pobj	20
23	but	but		cc	cls								CC	cc	9
24	as	as		cs	cs_othr								IN	mark	26
25	i	i		pro	1st	sg							PRP	nsubj	26
26	spoke	speak	finitecls+advl	vbmain	prepv	past	simple	active	advlcls		other_advl		VBD	advcl	31
27	of	of	in+advl	in	advl								IN	prep	26
28	before	before	rb+advl	rb	advl								RB	advmod	26
29	,	,											,	punct	31
30	you	you		pro	2nd	sg							PRP	nsubj	31
31	have	have		vbmain	vblex	pres	simple	active					VBP	conj	9
32	to	to		to									TO	aux	33
33	be	be		vbmain	be	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	31
34	able	able		jj	pred								JJ	acomp	33
35	to	to		to									TO	aux	36
36	make	make	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	34
37	,	,											,	punct	36
38	trade	trade	nn+npremod	nn			npremod						NN	compound	40
39	-	-											HYPH	punct	40
40	offs	off		nn	pl								NNS	dobj	36
41	and	and		cc	cls								CC	cc	31
42	our	our		dt	poss								PRP$	poss	45
43	,	,											,	punct	45
44	um	um											UH	intj	45
45	approach	approach		nn									NN	nsubj	46
46	is	be		vbmain	be	pres	simple	active					VBZ	conj	31
47	to	to		to									TO	aux	48
48	try	try	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	46
49	to	to		to									TO	aux	50
50	be	be	tocls+vcomp	vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	48
51	as	as		rb	adjmod								RB	advmod	52
52	intelligent	intelligent		jj	pred								JJ	acomp	50
53	about	about	in+jcomp	in	jcomp								IN	prep	52
54	them	they		pro	pl								PRP	pobj	53
55	as	as	in+jcomp	in	jcomp								IN	prep	52
56	possible	possible		jj	attr								JJ	amod	55
57	.	.											.	punct	46

#sentid = 55
0	so	so		rb	link								RB	advmod	13
1	the	the		dt	art								DT	det	3
2	first	first	attr+npremod	jj	attr								JJ	amod	3
3	thing	thing		nn		nom							NN	nsubj	13
4	we	we		pro	1st								PRP	nsubj	5
5	did	do	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel	reldel	VBD	relcl	3
6	to	to		to									TO	aux	7
7	allow	allow	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	3
8	us	we		pro	pl								PRP	nsubj	10
9	to	to		to									TO	aux	10
10	make	make		vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	7
11	probabilistic	probabilistic	attr+npremod	jj	attr								JJ	amod	12
12	guarantees	guarantee		nn	pl	nom							NNS	dobj	10
13	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	13
14	to	to		to									TO	aux	15
15	incorporate	incorporate	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	13
16	a	a		dt	art								DT	det	18
17	stochastic	stochastic	attr+npremod	jj	attr								JJ	amod	18
18	planner	planner		nn		nom							NN	dobj	15
19	.	.											.	punct	13

#sentid = 56
0	so	so		rb	link								RB	advmod	3
1	our	our		dt	poss								PRP$	poss	2
2	goal	goal		nn		nom							NN	nsubj	3
3	was	be		vbmain	be	past	simple	active					VBD	ROOT	3
4	not	not											RB	neg	3
5	,	,											,	punct	3
6	to	to		to									TO	aux	8
7	,	,											,	punct	8
8	get	get	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	3
9	the	the		dt	art								DT	det	12
10	most	most	rb+jjrbmod	rb	adjmod								RBS	advmod	11
11	accurate	accurate	attr+npremod	jj	attr								JJ	amod	12
12	probabilities	probability		nn	pl	nom							NNS	dobj	8
13	and	and		cc	phrs								CC	cc	12
14	optimal	optimal	attr+npremod	jj	attr								JJ	amod	15
15	plan	plan		nn									NN	conj	12
16	,	,											,	punct	3
17	but	but		cc	phrs								CC	cc	3
18	rather	rather		rb	othr								RB	advmod	17
19	,	,											,	punct	3
20	it	it		pro	3rd	sg							PRP	nsubjpass	22
21	was	be		vbaux									VBD	auxpass	22
22	designed	design		vbmain	vblex	past	simple	pasv_agls					VBN	conj	3
23	first	first	rb+advl	rb	advl								RB	advmod	22
24	to	to		to									TO	aux	25
25	select	select	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	22
26	actions	action		nn	pl	nom							NNS	dobj	25
27	and	and		cc	phrs								CC	cc	26
28	their	their		dt	poss								PRP$	poss	29
29	deadlines	deadline		nn	pl								NNS	conj	26
30	that	that		relpro	relpro_that	sg							WDT	nsubj	32
31	would	would		vbaux	mod	prd							MD	aux	32
32	allow	allow	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	26
33	us	we		pro	pl								PRP	nsubj	35
34	to	to		to									TO	aux	35
35	preempt	preempt		vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	32
36	all	all		dt									DT	det	40
37	possible	possible	attr+npremod	jj	attr								JJ	amod	40
38	catastrophic	catastrophic	attr+npremod	jj	attr								JJ	amod	40
39	failure	failure	nn+npremod	nn		nom	npremod						NN	compound	40
40	modes	mode		nn	pl								NNS	dobj	35
41	of	of	of+npostmod	in	nmod								IN	prep	40
42	our	our		dt	poss								PRP$	poss	43
43	system	system		nn									NN	pobj	41
44	.	.											.	punct	22

#sentid = 57
0	and	and		cc	cls								CC	cc	5
1	then	then		rb	link								RB	advmod	5
2	it	it		pro	3rd	sg							PRP	nsubjpass	5
3	was	be		vbaux									VBD	auxpass	5
4	also	also	rb+advl	rb	advl								RB	advmod	5
5	used	use		vbmain	vblex	past	simple	pasv_agls					VBN	ROOT	5
6	,	,											,	punct	5
7	um	um											UH	intj	5
8	to	to		to									TO	aux	9
9	give	give	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	5
10	us	we		pro	pl								PRP	dative	9
11	these	these		dt	dt_dem								DT	det	13
12	probabilistic	probabilistic	attr+npremod	jj	attr								JJ	amod	13
13	guarantees	guarantee		nn	pl	nom							NNS	dobj	9
14	by	by	in+advl	in	advl								IN	prep	9
15	,	,											,	punct	14
16	basically	basically	rb+advl	rb	advl	ly							RB	advmod	17
17	setting	set	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	14
18	a	a		dt	art								DT	det	19
19	threshold	threshold		nn									NN	dobj	17
20	and	and		cc	phrs								CC	cc	17
21	ignoring	ignore		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	17
22	the	the		dt	art								DT	det	23
23	states	state		nn	pl	nom							NNS	dobj	21
24	that	that		relpro	relpro_that	sg							WDT	nsubj	25
25	were	be	finitecls+rel	vbmain	be	past	simple	active	nmod_cls	thatcls	rel		VBD	relcl	23
26	less	less	rb+jjrbmod	rb	adjmod								RBR	advmod	27
27	likely	likely		jj	pred								JJ	acomp	25
28	than	than	in+jcomp	in	jcomp								IN	prep	27
29	that	that		pro	dem	sg							DT	pobj	28
30	.	.											.	punct	5

#sentid = 58
0	so	so		rb	link								RB	advmod	7
1	,	,											,	punct	7
2	during	during	in+advl	in	advl								IN	prep	7
3	the	the		dt	art								DT	det	5
4	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	5
5	process	process		nn		nom							NN	pobj	2
6	we	we		pro	1st								PRP	nsubj	7
7	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	7
8	to	to		to									TO	aux	9
9	converge	converge		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	7
10	on	on	in+advl	in	advl								IN	prep	9
11	a	a		dt	art								DT	det	13
12	schedulable	schedulable	attr+npremod	jj	attr								JJ	amod	13
13	plan	plan		nn									NN	pobj	10
14	.	.											.	punct	7

#sentid = 59
0	what	what											WP	dobj	3
1	does	do		vbaux									VBZ	aux	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	mean	mean		vbmain	vblex	pres	simple	active					VB	ROOT	3
4	?	?											.	punct	3

#sentid = 60
0	that	that		pro	dem	sg							DT	nsubj	1
1	means	mean		vbmain	vblex	pres	simple	active					VBZ	ROOT	1
2	that	that		comp	comp_that								IN	mark	12
3	,	,											,	punct	12
4	you	you		pro	2nd	sg							PRP	nsubj	5
5	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBP	advcl	12
6	a	a		dt	art								DT	det	7
7	planner	planner		nn		nom							NN	dobj	5
8	it	it		pro	3rd	sg							PRP	nsubj	9
9	says	say		vbmain	vblex	pres	simple	active					VBZ	parataxis	12
10	,	,											,	punct	9
11	here	here	rb+advl	rb	advl								RB	advmod	12
12	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	1
13	what	what		comp	comp_wh								WP	dobj	16
14	i	i		pro	1st	sg							PRP	nsubj	16
15	wanna	wanna		vbaux	mod								MD	aux	16
16	do	do	whcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	whcls	vcomp		VB	ccomp	12
17	.	.											.	punct	1

#sentid = 61
0	that	that		pro	dem	sg							DT	nsubj	2
1	may	may		vbaux	mod	pos							MD	aux	2
2	overutilize	overutilize		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	2
3	the	the		dt	art								DT	det	5
4	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	5
5	resources	resource		nn	pl								NNS	dobj	2
6	in	in	in+advl	in	advl								IN	prep	14
7	which	which		dt									WDT	det	8
8	case	case		nn									NN	pcomp	6
9	,	,											,	punct	14
10	um	um											UH	intj	14
11	,	,											,	punct	14
12	the	the		dt	art								DT	det	13
13	scheduler	scheduler		nn		nom							NN	nsubj	14
14	says	say	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBZ	advcl	2
15	no	no											UH	intj	19
16	i	i		pro	1st	sg							PRP	nsubj	19
17	ca	can		vbaux	mod								MD	aux	19
18	n't	not											RB	neg	19
19	do	do	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	14
20	that	that		pro	dem	sg							DT	dobj	19
21	,	,											,	punct	14
22	and	and		cc	cls								CC	cc	14
23	,	,											,	punct	14
24	at	at	in+advl	in	advl								IN	prep	30
25	that	that		dt	dt_dem								DT	det	26
26	point	point		nn									NN	pobj	24
27	,	,											,	punct	30
28	it	it		pro	3rd	sg							PRP	nsubj	30
29	,	,											,	punct	30
30	provides	provide		vbmain	vblex	pres	simple	active					VBZ	conj	14
31	feedback	feedback		nn									NN	dobj	30
32	for	for	in+advl	in	advl								IN	prep	30
33	the	the		dt	art								DT	det	34
34	planner	planner		nn		nom							NN	pobj	32
35	that	that		relpro	relpro_that	sg							WDT	nsubj	37
36	will	will		vbaux	mod	prd							MD	aux	37
37	help	help	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	31
38	it	it		pro	3rd	sg							PRP	nsubj	39
39	guide	guide		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	37
40	its	its		dt	poss								PRP$	poss	41
41	efforts	effort		nn	pl								NNS	dobj	39
42	toward	toward	in+advl	in	advl								IN	prep	39
43	replanning	replanne		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	pobj	42
44	.	.											.	punct	2

#sentid = 62
0	at	at	in+advl	in	advl								IN	prep	4
1	that	that		dt	dt_dem								DT	det	2
2	point	point		nn									NN	pobj	0
3	we	we		pro	1st								PRP	nsubj	4
4	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	4
5	a	a		dt	art								DT	det	6
6	plan	plan		nn									NN	dobj	4
7	that	that		relpro	relpro_that	sg							WDT	nsubj	10
8	may	may		vbaux	mod	pos							MD	aux	10
9	not	not											RB	neg	10
10	be	be	finitecls+rel	vbmain	be	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	6
11	complete	complete		jj	pred								JJ	acomp	10
12	,	,											,	punct	4
13	but	but		cc	cls								CC	cc	4
14	it	it		pro	3rd	sg							PRP	nsubj	15
15	's	be		vbmain	be	pres	simple	active					VBZ	conj	4
16	the	the		dt	art								DT	det	17
17	best	good											JJS	attr	15
18	we	we		pro	1st								PRP	nsubj	20
19	can	can		vbaux	mod	pos							MD	aux	20
20	do	do	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	17
21	given	give	edcls+advl	vbmain	advl	nonfinite	simple	active		edcls			VBN	prep	20
22	our	our		dt	poss								PRP$	poss	23
23	resources	resource		nn	pl								NNS	pobj	21
24	.	.											.	punct	15

#sentid = 63
0	so	so		rb	link								RB	advmod	8
1	at	at	in+advl	in	advl								IN	prep	8
2	that	that		dt	dt_dem								DT	det	3
3	point	point		nn									NN	pobj	1
4	we	we		pro	1st								PRP	nsubj	8
5	,	,											,	punct	8
6	um	um											UH	intj	8
7	,	,											,	punct	8
8	find	find		vbmain	vblex	pres	simple	active					VBP	ROOT	8
9	that	that		comp	comp_that								IN	mark	11
10	it	it		pro	3rd	sg							PRP	nsubj	11
11	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	8
12	necessary	necessary		jj	pred								JJ	acomp	11
13	to	to		to									TO	aux	14
14	be	be	xtrapos+tocls+jcomp	vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	11
15	able	able		jj	pred								JJ	acomp	14
16	to	to		to									TO	aux	17
17	identify	identify	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	15
18	and	and		cc	phrs								CC	cc	17
19	react	react		vbmain	vblex	nonfinite	simple	active					VB	conj	17
20	to	to	in+advl	in	advl								IN	prep	19
21	other	other	attr+npremod	jj	attr								JJ	amod	22
22	states	state		nn	pl	nom							NNS	pobj	20
23	as	as		cs	cs_othr								IN	mark	25
24	they	they		pro	pl								PRP	nsubj	25
25	happen	happen	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	19
26	.	.											.	punct	8

#sentid = 64
0	uh	uh											UH	intj	6
1	basically	basically	rb+advl	rb	advl	ly							RB	advmod	6
2	,	,											,	punct	6
3	um	um											UH	intj	6
4	,	,											,	punct	6
5	we	we		pro	1st								PRP	nsubj	6
6	look	look		vbmain	prepv	pres	simple	active					VBP	ROOT	6
7	at	at	in+advl	in	advl								IN	prep	6
8	,	,											,	punct	7
9	classes	class		nn	pl								NNS	pobj	7
10	of	of	of+npostmod	in	nmod								IN	prep	9
11	important	important	attr+npremod	jj	attr								JJ	amod	14
12	,	,											,	punct	14
13	unhandled	unhandled	attr+npremod	jj	attr								JJ	amod	14
14	states	state		nn	pl	nom							NNS	pobj	10
15	,	,											,	punct	6
16	and	and		cc	phrs								CC	cc	6
17	respond	respond		vbmain	prepv	pres	simple	active					VBP	conj	6
18	to	to	in+advl	in	advl								IN	prep	17
19	those	those		pro	dem	pl							DT	pobj	18
20	by	by	in+advl	in	advl								IN	prep	17
21	adding	add	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	20
22	additional	additional	attr+npremod	jj	attr								JJ	amod	23
23	plans	plan		nn	pl								NNS	dobj	21
24	so	so		cs	cs_othr								IN	mark	27
25	that	that		cs	cs_othr								IN	mark	27
26	we	we		pro	1st								PRP	nsubj	27
27	end	end	finitecls+advl	vbmain	phrsv	pres	simple	active	advlcls		other_advl		VBP	advcl	21
28	up	up		rb	prtcle								RP	prt	27
29	having	have	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	27
30	r-	r-											XX	nmod	34
31	a	a											DT	nmod	34
32	,	,											,	punct	34
33	reactive	reactive	attr+npremod	jj	attr								JJ	amod	34
34	system	system		nn									NN	dobj	29
35	that	that		relpro	relpro_that	sg							WDT	nsubj	36
36	has	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	34
37	multiple	multiple	attr+npremod	jj	attr								JJ	amod	38
38	plans	plan		nn	pl								NNS	dobj	36
39	,	,											,	punct	38
40	each	each											DT	nsubj	43
41	of	of		in	in_othr								IN	prep	40
42	which	which											WDT	pobj	41
43	react	react	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	38
44	in	in	in+advl	in	advl								IN	prep	43
45	real	real	attr+npremod	jj	attr								JJ	amod	47
46	-	-											HYPH	punct	47
47	time	time		nn									NN	pobj	44
48	,	,											,	punct	43
49	to	to	in+advl	in	advl								IN	prep	43
50	,	,											,	punct	49
51	um	um											UH	intj	49
52	,	,											,	punct	49
53	the	the		dt	art								DT	det	56
54	r-	r-											XX	nmod	56
55	dangerous	dangerous	attr+npremod	jj	attr								JJ	amod	56
56	situations	situation		nn	pl	nom							NNS	pobj	49
57	as	as		cs	cs_othr								IN	mark	59
58	they	they		pro	pl								PRP	nsubj	59
59	arise	arise	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	56
60	.	.											.	punct	6

#sentid = 65
0													_SP	dep	39
1	during	during		in	in_othr								IN	prep	6
2	this	this		dt	dt_dem								DT	det	3
3	talk	talk		nn									NN	pobj	1
4	i	i		pro	1st	sg							PRP	nsubj	6
5	'm	be		vbaux									VBP	aux	6
6	gon	go		vbaux									TO	aux	11
7	na	to		vbaux									TO	aux	11
8	first	first		rb	link		splaux						RB	advmod	11
9	,	,											,	punct	11
10	um	um											UH	intj	11
11	describe	describe		vbmain	in_othr	nonfinite	simple	active					VB	prep	0
12	at	at	in+advl	in	advl								IN	prep	11
13	a	a		dt	art								DT	det	16
14	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	15
15	high	high	attr+npremod	jj	attr								JJ	amod	16
16	level	level		nn									NN	pobj	12
17	the	the		dt	art								DT	det	22
18	,	,											,	punct	19
19	CIRCA	circa	nn+npremod	nn		proper	npremod						NNP	nmod	22
20	-	-											HYPH	punct	19
21	two	two											CD	nummod	19
22	architecture	architecture		nn		nom							NN	dobj	11
23	which	which		relpro	relpro_wh								WDT	nsubj	24
24	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	22
25	the	the		dt	art								DT	det	26
26	extension	extension		nn									NN	attr	24
27	of	of	of+npostmod	in	nmod								IN	prep	26
28	the	the		dt	art								DT	det	29
29	CIRCA	circa		nn		proper							NNP	pobj	27
30	as	as		cs	cs_othr								IN	mark	34
31	it	it		pro	3rd	sg							PRP	nsubjpass	34
32	was	be		vbaux									VBD	auxpass	34
33	originally	originally	rb+advl	rb	advl	ly							RB	advmod	34
34	developed	develop	finitecls+advl	vbmain	vblex	past	simple	pasv_agls	advlcls		other_advl		VBN	advcl	29
35	,	,											,	punct	39
36	then	then		rb	link								RB	advmod	39
37	i	i		pro	1st	sg							PRP	nsubj	39
38	'm	be		vbaux									VBP	aux	39
39	going	go		vbmain	vblex	pres	prog	active					VBG	ROOT	39
40	to	to		to									TO	aux	41
41	talk	talk	tocls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	39
42	about	about	in+advl	in	advl								IN	prep	41
43	the	the		dt	art								DT	det	50
44	uh	uh											UH	intj	50
45	,	,											,	punct	50
46	stochastic	stochastic	attr+npremod	jj	attr								JJ	amod	50
47	planning	planning	nn+npremod	nn		nom	npremod						NN	nmod	50
48	and	and		cc	phrs								CC	cc	47
49	temporal	temporal											JJ	conj	47
50	model	model		nn									NN	pobj	42
51	that	that		pro	dem	sg							WDT	dobj	54
52	we	we		pro	1st								PRP	nsubj	54
53	currently	currently	rb+advl	rb	advl	ly							RB	advmod	54
54	use	use	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	50
55	um	um											UH	intj	54
56	,	,											,	punct	54
57	in	in	in+advl	in	advl								IN	prep	54
58	CIRCA	circa		nn		proper							NNP	pobj	57
59	-	-											HYPH	punct	58
60	two	two											CD	nummod	58
61	,	,											,	punct	58
62	um	um											UH	intj	58
63	,	,											,	punct	58
64	the	the		dt	art								DT	det	65
65	procedures	procedure		nn	pl								NNS	dobj	54
66	that	that		pro	dem	sg							WDT	dobj	68
67	we	we		pro	1st								PRP	nsubj	68
68	use	use	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	65
69	to	to		to									TO	aux	70
70	detect	detect	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	68
71	and	and		cc	phrs								CC	cc	70
72	react	react		vbmain	vblex	nonfinite	simple	active					VB	conj	70
73	to	to	in+advl	in	advl								IN	prep	72
74	unhandled	unhandled	attr+npremod	jj	attr								JJ	amod	75
75	states	state		nn	pl	nom							NNS	pobj	73
76	,	,											,	punct	41
77	and	and		cc	phrs								CC	cc	41
78	then	then	rb+advl	rb	advl								RB	advmod	41
79	,	,											,	punct	41
80	um	um											UH	intj	41
81	how	how		comp	comp_wh								WRB	advmod	84
82	we	we		pro	1st								PRP	nsubj	84
83	,	,											,	punct	84
84	get	get	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	41
85	our	our		dt	poss								PRP$	poss	86
86	planner	planner		nn		nom							NN	nsubj	90
87	and	and		cc	phrs								CC	cc	86
88	scheduler	scheduler		nn		nom							NN	conj	86
89	to	to		to									TO	aux	90
90	negotiate	negotiate		vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	84
91	efficiently	efficiently	rb+advl	rb	advl	ly							RB	advmod	90
92	with	with	in+advl	in	advl								IN	prep	90
93	each	each		dt									DT	det	97
94	other	other		jj	attr								JJ	amod	97
95	tow-	tow-		nn									NN	dep	97
96	to	to		to									TO	aux	97
97	trade	trade		vbmain	phrsv	nonfinite	simple	active		tocls			VB	pobj	92
98	-	-											HYPH	punct	97
99	off	off		rb	prtcle								RP	prt	97
100	um	um											UH	intj	97
101	,	,											,	punct	97
102	um	um											UH	intj	97
103	,	,											,	punct	97
104	basically	basically		rb	othr	ly							RB	advmod	105
105	task	task		nn									NN	dep	90
106	,	,											,	punct	105
107	to	to		to									TO	aux	109
108	to	to		to									TO	aux	109
109	select	select	tocls+ncomp	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	ncomp		VB	acl	105
110	tasks	task		nn	pl								NNS	dobj	109
111	to	to		to									TO	aux	112
112	trade	trade	tocls+rel	vbmain	phrsv	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	110
113	-	-											HYPH	punct	112
114	off	off		rb	prtcle								RP	prt	112
115	when	when		rb	advl								WRB	advmod	121
116	,	,											,	punct	121
117	everything	everything		nn	other	nom							NN	nsubjpass	121
118	ca	can		vbaux	mod								MD	aux	121
119	n't	not											RB	neg	121
120	be	be		vbaux									VB	auxpass	121
121	scheduled	schedule	finitecls+advl	vbmain	vblex	vp_w_modal	simple	pasv_agls	advlcls	whcls			VBN	advcl	112
122	.	.											.	punct	39

#sentid = 66
0	and	and		cc	cls								CC	cc	4
1	then	then		rb	link								RB	advmod	4
2	i	i		pro	1st	sg							PRP	nsubj	4
3	'll	will		vbaux	mod								MD	aux	4
4	talk	talk		vbmain	prepv	vp_w_modal	simple	active					VB	ROOT	4
5	about	about	in+advl	in	advl								IN	prep	4
6	,	,											,	punct	5
7	automated	automate	attr+npremod	jj	attr	ed							VBN	amod	8
8	flight	flight		nn									NN	pobj	5
9	,	,											,	punct	8
10	using	use	ingcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	8
11	the	the		dt	art								DT	det	15
12	CIRCA	circa	nn+npremod	nn		proper	npremod						NNP	nmod	15
13	-	-											HYPH	punct	12
14	two	two											CD	nummod	12
15	architecture	architecture		nn		nom							NN	dobj	10
16	...	...											:	punct	4
17	and	and		cc	phrs								CC	cc	23
18	of	of		in	in_othr								IN	prep	20
19	course	course		nn									NN	pobj	18
20	the	the		dt	art								DT	det	23
21	,	,											,	punct	23
22	concl-	concl-	attr+npremod	jj	attr								FW	amod	23
23	conclusions	conclusion		nn	pl								NNS	dep	4
24	and	and		cc	phrs								CC	cc	23
25	future	future	attr+npremod	jj	attr								JJ	amod	26
26	work	work		nn									NN	conj	23
27	.	.											.	punct	4

#sentid = 67
0	so	so											RB	ROOT	0
1	before	before		cs	cs_othr								IN	mark	4
2	i	i		pro	1st	sg							PRP	nsubjpass	4
3	get	get		vbaux									VBP	auxpass	4
4	started	start	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls		other_advl		VBN	advcl	0
5	just	just	rb+advl	rb	advl								RB	advmod	8
6	so	so		cs	cs_othr								IN	mark	8
7	everyone	everyone		nn	other	sg							NN	nsubj	8
8	knows	know	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	4
9	what	what		comp	comp_wh								WP	dobj	11
10	i	i		pro	1st	sg							PRP	nsubj	11
11	mean	mean	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	8
12	when	when		comp	comp_wh								WRB	advmod	14
13	i	i		pro	1st	sg							PRP	nsubj	14
14	say	say	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	8
15	hard	hard	attr+npremod	jj	attr								JJ	amod	19
16	real	real	attr+npremod	jj	attr								JJ	amod	18
17	-	-											HYPH	punct	18
18	time	time	nn+npremod	nn			npremod						NN	compound	19
19	system	system		nn									NN	dobj	14
20	.	.											.	punct	0

#sentid = 68
0	a	a		dt	art								DT	det	1
1	lot	lot		nn									NN	npadvmod	14
2	of	of		in	nmod								IN	prep	1
3	times	time		nn	pl								NNS	pobj	2
4	in	in	in+advl	in	advl								IN	prep	14
5	the	the		dt	art								DT	det	11
6	planning	planning	nn+npremod	nn		nom	npremod						NN	nmod	11
7	and	and		cc	phrs								CC	cc	6
8	plan	plan	nn+npremod	nn			npremod						NN	compound	10
9	-	-											HYPH	punct	10
10	execution	execution		nn		nom							NN	conj	6
11	committee	committee		nn		nom							NN	pobj	4
12	they	they		pro	pl								PRP	nsubj	14
13	'll	will		vbaux	mod								MD	aux	14
14	think	think		vbmain	prepv	vp_w_modal	simple	active					VB	ROOT	14
15	of	of	in+advl	in	advl								IN	prep	14
16	real	real	attr+npremod	jj	attr								JJ	amod	18
17	-	-											HYPH	punct	18
18	time	time		nn									NN	pobj	15
19	as	as	in+advl	in	advl								IN	prep	14
20	meaning	mean	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	19
21	,	,											,	punct	20
22	best	good	attr+npremod	jj	attr								JJS	amod	24
23	-	-											HYPH	punct	24
24	effort	effort		nn									NN	dobj	20
25	or	or		cc	phrs								CC	cc	24
26	soft	soft	attr+npremod	jj	attr								JJ	amod	29
27	real	real	attr+npremod	jj	attr								JJ	amod	29
28	-	-											HYPH	punct	29
29	time	time		nn									NN	conj	24
30	.	.											.	punct	14

#sentid = 69
0	in	in	in+advl	in	advl								IN	prep	8
1	that	that		dt	dt_dem								DT	det	2
2	kind	kind		nn									NN	pobj	0
3	of	of	of+npostmod	in	nmod								IN	prep	2
4	system	system		nn									NN	pobj	3
5	,	,											,	punct	8
6	you	you		pro	2nd	sg							PRP	nsubj	8
7	only	only	rb+advl	rb	advl	ly							RB	advmod	8
8	get	get		vbmain	vblex	pres	simple	active					VBP	ROOT	8
9	the	the		dt	art								DT	det	11
10	maximum	maximum	attr+npremod	jj	attr								JJ	amod	11
11	reward	reward		nn									NN	dobj	8
12	if	if		cs	cnd								IN	mark	15
13	you	you		pro	2nd	sg							PRP	nsubj	15
14	,	,											,	punct	15
15	meet	meet	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	8
16	some	some		dt									DT	det	17
17	sort	sort		nn									NN	dobj	15
18	of	of	of+npostmod	in	nmod								IN	prep	17
19	deadline	deadline		nn									NN	pobj	18
20	but	but		cc	cls								CC	cc	8
21	,	,											,	punct	8
22	if	if		cs	cnd								IN	mark	24
23	you	you		pro	2nd	sg							PRP	nsubj	24
24	pass	pass	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	28
25	that	that		dt	dt_dem								DT	det	26
26	deadline	deadline		nn									NN	dobj	24
27	it	it		pro	3rd	sg							PRP	nsubj	28
28	's	be		vbmain	be	pres	simple	active					VBZ	conj	8
29	still	still	rb+advl	rb	advl								RB	advmod	28
30	okay	okay		jj	pred								JJ	acomp	28
31	to	to		to									TO	aux	34
32	,	,											,	punct	34
33	to	to		to									TO	aux	34
34	keep	keep	xtrapos+tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	28
35	going	go	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	34
36	and	and		cc	phrs								CC	cc	34
37	do	do		vbmain	vblex	nonfinite	simple	active					VB	conj	34
38	those	those		dt	dt_dem								DT	det	39
39	tasks	task		nn	pl								NNS	dobj	37
40	.	.											.	punct	28

#sentid = 70
0	so	so		rb	link								RB	advmod	3
1	this	this		dt	dt_dem								DT	det	2
2	curve	curve		nn									NN	nsubj	3
3	represents	represent		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	10
4	,	,											,	punct	3
5	um	um											UH	intj	3
6	the	the		dt	art								DT	det	7
7	do-	do-		vbmain	vblex	nonfinite	simple	active					VB	nmod	9
8	dashed	dash		cc	phrs	nonfinite	simple	active		edcls			VBN	cc	7
9	line	line		nn									NN	nsubj	10
10	represents	represent		vbmain	vblex	pres	simple	active					VBZ	ROOT	10
11	a	a		dt	art								DT	det	16
12	soft	soft	attr+npremod	jj	attr								JJ	amod	16
13	real	real	attr+npremod	jj	attr								JJ	amod	15
14	-	-											HYPH	punct	15
15	time	time	nn+npremod	nn			npremod						NN	compound	16
16	task	task		nn									NN	dobj	10
17	where	where		rb	advl								WRB	advmod	33
18	,	,											,	punct	29
19	if	if		cs	cnd								IN	mark	23
20	you	you		pro	2nd	sg							PRP	nsubj	23
21	do	do		vbaux									VBP	aux	23
22	n't	not											RB	neg	23
23	finish	finish	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VB	advcl	29
24	it	it		pro	3rd	sg							PRP	dobj	23
25	in	in	in+advl	in	advl								IN	prep	23
26	time	time		nn									NN	pobj	25
27	the	the		dt	art								DT	det	28
28	reward	reward		nn									NN	nsubj	29
29	degrades	degrade	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	16
30	but	but		cc	cls								CC	cc	29
31	,	,											,	punct	29
32	it	it		pro	3rd	sg							PRP	nsubj	33
33	's	be		vbmain	be	pres	simple	active					VBZ	conj	29
34	_	_											NFP	punct	33
35	your	your		dt	poss								PRP$	poss	36
36	system	system		nn									NN	nsubj	37
37	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	33
38	still	still	rb+advl	rb	advl								RB	advmod	37
39	okay	okay		jj	pred								JJ	acomp	37
40	.	.											.	punct	10

#sentid = 71
0	we	we		pro	1st								PRP	nsubj	2
1	're	be		vbaux									VBP	aux	2
2	talking	talk		vbmain	vblex	pres	prog	active					VBG	ROOT	2
3	specifically	specifically		rb	othr	ly							RB	advmod	4
4	about	about	in+advl	in	advl								IN	prep	2
5	a	a		dt	art								DT	det	6
6	system	system		nn									NN	pobj	4
7	where	where		rb	advl								WRB	advmod	19
8	if	if		cs	cnd								IN	mark	12
9	you	you		pro	2nd	sg							PRP	nsubj	12
10	do	do		vbaux									VBP	aux	12
11	n't	not											RB	neg	12
12	meet	meet	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VB	advcl	19
13	the	the		dt	art								DT	det	14
14	deadline	deadline		nn									NN	dobj	12
15	,	,											,	punct	19
16	you	you		pro	2nd	sg							PRP	nsubj	19
17	will	will		vbaux	mod	prd							MD	aux	19
18	catastrophically	catastrophically	rb+advl	rb	advl	ly	splaux						RB	advmod	19
19	fail	fail	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	whcls	rel		VB	relcl	6
20	.	.											.	punct	2

#sentid = 72
0	so	so		rb	link								RB	advmod	3
1	,	,											,	punct	3
2	we	we		pro	1st								PRP	nsubj	3
3	require	require		vbmain	vblex	pres	simple	active					VBP	ROOT	3
4	absolutely	absolutely	rb+advl	rb	advl	ly							RB	advmod	3
5	,	,											,	punct	3
6	to	to		to									TO	aux	7
7	meet	meet	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	3
8	that	that		dt	dt_dem								DT	det	9
9	deadline	deadline		nn									NN	dobj	7
10	and	and		cc	phrs								CC	cc	7
11	say	say		vbmain	vblex	nonfinite	simple	active					VB	conj	7
12	our	our		dt	poss								PRP$	poss	13
13	system	system		nn									NN	nsubj	14
14	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	11
15	not	not											RB	neg	14
16	safe	safe		jj	pred								JJ	acomp	14
17	if	if		cs	cnd								IN	mark	19
18	it	it		pro	3rd	sg							PRP	nsubj	19
19	does	do	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBZ	advcl	14
20	not	not											RB	neg	19
21	.	.											.	punct	3

#sentid = 73
0	so	so		rb	link								RB	advmod	15
1	the	the		dt	art								DT	det	3
2	two	two											CD	nummod	3
3	methods	method		nn	pl								NNS	dep	15
4	that	that		relpro	relpro_that	sg							WDT	nsubjpass	7
5	are	be		vbaux									VBP	auxpass	7
6	typically	typically	rb+advl	rb	advl	ly							RB	advmod	7
7	used	use	finitecls+rel	vbmain	vblex	pres	simple	pasv_agls	nmod_cls	thatcls	rel		VBN	relcl	3
8	to	to		to									TO	aux	9
9	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	7
10	this	this		pro	dem	sg							DT	dobj	9
11	,	,											,	punct	15
12	um	um											UH	intj	15
13	,	,											,	punct	15
14	one	one		pro	other	pl							CD	nsubj	15
15	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	15
16	to	to		to									TO	aux	17
17	use	use	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	15
18	,	,											,	punct	17
19	um	um											UH	intj	17
20	real	real	attr+npremod	jj	attr								JJ	amod	22
21	-	-											HYPH	punct	22
22	time	time	nn+npremod	nn			npremod						NN	compound	24
23	scheduling	scheduling	nn+npremod	nn		nom	npremod						NN	compound	24
24	algorithms	algorithm		nn	pl								NNS	dobj	17
25	,	,											,	punct	24
26	which	which											WDT	dep	30
27	it	it		pro	3rd	sg							PRP	nsubj	30
28	,	,											,	punct	30
29	specifically	specifically	rb+advl	rb	advl	ly							RB	advmod	30
30	put	put	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	24
31	tasks	task		nn	pl								NNS	dobj	30
32	on	on	in+advl	in	advl								IN	prep	30
33	a	a		dt	art								DT	det	34
34	timeline	timeline		nn									NN	pobj	32
35	to	to		to									TO	aux	36
36	prove	prove	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	30
37	that	that		comp	comp_that								IN	mark	41
38	deadlines	deadline		nn	pl								NNS	nsubjpass	41
39	will	will		vbaux	mod	prd							MD	aux	41
40	be	be		vbaux									VB	auxpass	41
41	met	meet	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	pasv_agls	compcls	thatcls	vcomp		VBN	ccomp	36
42	.	.											.	punct	15

#sentid = 74
0	the	the		dt	art								DT	det	2
1	other	other	attr+npremod	jj	attr								JJ	amod	2
2	method	method		nn									NN	nsubj	3
3	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	to	to		to									TO	aux	5
5	demonstrate	demonstrate	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	3
6	your	your		dt	poss								PRP$	poss	7
7	system	system		nn									NN	nsubj	8
8	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	5
9	fast	fast		jj	pred								JJ	acomp	8
10	enough	enough	rb+jjrbmod	rb	adjmod								RB	advmod	9
11	.	.											.	punct	3

#sentid = 75
0	a	a		dt	art								DT	det	1
1	lot	lot		nn									NN	nsubj	4
2	of	of	of+npostmod	in	nmod								IN	prep	1
3	people	people		nn	pl								NNS	pobj	2
4	use	use		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	24
5	this	this		dt	dt_dem								DT	det	6
6	approach	approach		nn									NN	dobj	4
7	,	,											,	punct	4
8	and	and		cc	phrs								CC	cc	4
9	it	it		pro	3rd	sg							PRP	nsubjpass	12
10	has	have		vbaux									VBZ	aux	12
11	been	be		vbaux									VBN	auxpass	12
12	shown	show		vbmain	vblex	pres	perf	pasv_agls					VBN	conj	4
13	to	to		to									TO	aux	14
14	be	be	tocls+vcomp	vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	12
15	successful	successful		jj	pred								JJ	acomp	14
16	in	in	in+advl	in	advl								IN	prep	14
17	a	a		dt	art								DT	det	18
18	lot	lot		nn									NN	pobj	16
19	of	of	of+npostmod	in	nmod								IN	prep	18
20	applications	application		nn	pl	nom							NNS	pobj	19
21	however	however		rb	link								RB	advmod	24
22	,	,											,	punct	24
23	it	it		pro	3rd	sg							PRP	nsubj	24
24	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	24
25	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	26
26	difficult	difficult		jj	pred								JJ	acomp	24
27	to	to		to									TO	aux	28
28	prove	prove	xtrapos+tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	24
29	,	,											,	punct	28
30	that	that		comp	comp_that								IN	mark	36
31	,	,											,	punct	36
32	all	all											DT	nsubj	36
33	of	of		in	in_othr								IN	prep	32
34	your	your		dt	poss								PRP$	poss	35
35	testing	testing		nn		nom							NN	pobj	33
36	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	28
37	comprehensive	comprehensive		jj	pred								JJ	acomp	36
38	so	so		cs	cs_othr								IN	mark	41
39	you	you		pro	2nd	sg							PRP	nsubj	41
40	can	can		vbaux	mod	pos							MD	aux	41
41	guarantee	guarantee	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	36
42	deadlines	deadline		nn	pl								NNS	nsubjpass	45
43	will	will		vbaux	mod	prd							MD	aux	45
44	be	be		vbaux									VB	auxpass	45
45	met	meet	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	41
46	.	.											.	punct	24

#sentid = 76
0													_SP	dep	6
1	for	for	in+advl	in	advl								IN	prep	6
2	our	our		dt	poss								PRP$	poss	3
3	system	system		nn									NN	pobj	1
4	,	,											,	punct	6
5	we	we		pro	1st								PRP	nsubj	6
6	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	6
7	a	a		dt	art								DT	det	9
8	specific	specific	attr+npremod	jj	attr								JJ	amod	9
9	definition	definition		nn		nom							NN	dobj	6
10	of	of	of+npostmod	in	nmod								IN	prep	9
11	what	what		comp	comp_wh								WP	dobj	13
12	we	we		pro	1st								PRP	nsubj	13
13	mean	mean	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VBP	pcomp	10
14	when	when		rb	advl								WRB	advmod	16
15	we	we		pro	1st								PRP	nsubj	16
16	say	say	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	13
17	plan	plan		nn									NN	dobj	16
18	.	.											.	punct	6

#sentid = 77
0	we	we		pro	1st								PRP	nsubj	1
1	mean	mean		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	real	real	attr+npremod	jj	attr								JJ	amod	4
3	-	-											HYPH	punct	4
4	time	time	nn+npremod	nn			npremod						NN	compound	6
5	control	control	nn+npremod	nn			npremod						NN	compound	6
6	plan	plan		nn									NN	dobj	1
7	.	.											.	punct	1

#sentid = 78
0	there	there											EX	expl	1
1	are	be		vbmain	be	pres	simple	active					VBP	ROOT	1
2	two	two											CD	nummod	3
3	parts	part		nn	pl								NNS	attr	1
4	to	to	in+npostmod	in	nmod								IN	prep	3
5	this	this		dt	dt_dem								DT	det	6
6	plan	plan		nn									NN	pobj	4
7	.	.											.	punct	1

#sentid = 79
0	the	the		dt	art								DT	det	2
1	first	first	attr+npremod	jj	attr								JJ	amod	2
2	part	part		nn									NN	nsubj	3
3	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	what	what		comp	comp_wh								WP	dobj	6
5	we	we		pro	1st								PRP	nsubj	6
6	call	call	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	3
7	task	task	nn+npremod	nn			npremod						NN	compound	8
8	action	action	nn+npremod	nn		nom	npremod						NN	compound	9
9	pairs	pair		nn	pl								NNS	oprd	6
10	which	which		relpro	relpro_wh								WDT	nsubj	11
11	specify	specify	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	9
12	,	,											,	punct	11
13	the	the		dt	art								DT	det	14
14	set	set		nn									NN	dobj	11
15	of	of	of+npostmod	in	nmod								IN	prep	14
16	tasks	task		nn	pl								NNS	pobj	15
17	or	or		cc	phrs								CC	cc	16
18	actions	action		nn	pl	nom							NNS	conj	16
19	that	that		pro	dem	sg							WDT	dobj	23
20	we	we		pro	1st								PRP	nsubj	21
21	want	want	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	14
22	to	to		to									TO	aux	23
23	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	21
24	,	,											,	punct	23
25	um	um											UH	intj	23
26	as	as	in+advl	in	advl								IN	prep	23
27	part	part		nn									NN	pobj	26
28	of	of	of+npostmod	in	nmod								IN	prep	27
29	the	the		dt	art								DT	det	30
30	plan	plan		nn									NN	pobj	28
31	,	,											,	punct	23
32	and	and		cc	phrs								CC	cc	23
33	the	the		dt	art								DT	det	34
34	tasks	task		nn	pl								NNS	conj	23
35	which	which		relpro	relpro_wh								WDT	nsubj	37
36	basically	basically	rb+advl	rb	advl	ly							RB	advmod	37
37	describe	describe	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	34
38	,	,											,	punct	37
39	which	which											WDT	nsubj	40
40	states	state		nn	pl	nom							NNS	ccomp	37
41	,	,											,	punct	40
42	you	you		pro	2nd	sg							PRP	nsubj	44
43	will	will		vbaux	mod	prd							MD	aux	44
44	be	be		vbmain	be	vp_w_modal	simple	active	compcls		ncomp	compdel	VB	ccomp	40
45	in	in	in+advl	in	advl								IN	prep	44
46	when	when		rb	advl								WRB	advmod	49
47	you	you		pro	2nd	sg							PRP	nsubj	49
48	actually	actually	rb+advl	rb	advl	ly							RB	advmod	49
49	do	do	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	44
50	those	those		dt	dt_dem								DT	det	51
51	actions	action		nn	pl	nom							NNS	dobj	49
52	.	.											.	punct	3

#sentid = 80
0	um	um											UH	intj	16
1	,	,											,	punct	16
2	th-	th-											XX	dep	16
3	the	the		dt	art								DT	det	4
4	set	set		nn									NN	nsubjpass	16
5	of	of	of+npostmod	in	nmod								IN	prep	4
6	,	,											,	punct	5
7	of	of		in	in_othr								IN	prep	5
8	TAPs	taps		nn	pl	proper							NNPS	pobj	7
9	as	as		cs	cs_othr								IN	mark	12
10	i	i		pro	1st	sg							PRP	nsubj	12
11	will	will		vbaux	mod	prd							MD	aux	12
12	call	call	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	5
13	them	they		pro	pl								PRP	dobj	12
14	,	,											,	punct	5
15	is	be		vbaux									VBZ	auxpass	16
16	divided	divide		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	16
17	into	into	in+advl	in	advl								IN	prep	16
18	a	a		dt	art								DT	det	20
19	guaranteed	guarantee	attr+npremod	jj	attr	ed							VBN	amod	20
20	set	set		nn									NN	pobj	17
21	and	and		cc	phrs								CC	cc	20
22	a	a		dt	art								DT	det	26
23	best	good	attr+npremod	jj	attr								JJS	amod	25
24	-	-											HYPH	punct	25
25	effort	effort	nn+npremod	nn			npremod						NN	compound	26
26	set	set		nn									NN	conj	20
27	.	.											.	punct	16

#sentid = 81
0	the	the		dt	art								DT	det	2
1	guaranteed	guaranteed	attr+npremod	jj	attr								JJ	amod	2
2	set	set		nn									NN	nsubj	5
3	,	,											,	punct	5
4	um	um											UH	intj	5
5	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	5
6	the	the		dt	art								DT	det	7
7	set	set		nn									NN	attr	5
8	that	that		relpro	relpro_that	sg							WDT	nsubj	11
9	's	's											POS	nsubj	11
10	_	_											NFP	punct	9
11	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	7
12	,	,											,	punct	11
13	the	the		dt	art								DT	det	20
14	hard	hard	attr+npremod	jj	attr								JJ	amod	20
15	real	real	attr+npremod	jj	attr								JJ	amod	17
16	-	-											HYPH	punct	17
17	time	time	nn+npremod	nn			npremod						NN	nmod	20
18	,	,											,	punct	20
19	um	um											UH	intj	20
20	tasks	task		nn	pl								NNS	attr	11
21	and	and		cc	cls								CC	cc	5
22	they	they		pro	pl								PRP	nsubj	23
23	have	have		vbmain	vblex	pres	simple	active					VBP	conj	5
24	to	to		to									TO	aux	26
25	be	be		vbaux									VB	auxpass	26
26	scheduled	schedule		vbmain	vblex	nonfinite	simple	pasv_agls	compcls		vcomp	compdel	VBN	xcomp	23
27	,	,											,	punct	23
28	so	so		cs	cs_othr								IN	mark	32
29	that	that		cs	cs_othr								IN	mark	32
30	they	they		pro	pl								PRP	nsubj	32
31	will	will		vbaux	mod	prd							MD	aux	32
32	meet	meet	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	23
33	their	their		dt	poss								PRP$	poss	34
34	guarantees	guarantee		nn	pl	nom							NNS	dobj	32
35	so	so		cs	cs_othr								IN	mark	37
36	they	they		pro	pl								PRP	nsubj	37
37	come	come	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	32
38	with	with	in+advl	in	advl								IN	prep	37
39	a	a		dt	art								DT	det	40
40	deadline	deadline		nn									NN	pobj	38
41	that	that		pro	dem	sg							WDT	pobj	47
42	you	you		pro	2nd	sg							PRP	nsubj	43
43	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	40
44	to	to		to									TO	aux	45
45	schedule	schedule		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	43
46	them	they		pro	pl								PRP	dobj	45
47	with	with	in+advl	in	advl								IN	prep	45
48	.	.											.	punct	5

#sentid = 82
0	the	the		dt	art								DT	det	4
1	best	good	attr+npremod	jj	attr								JJS	amod	3
2	-	-											HYPH	punct	3
3	effort	effort	nn+npremod	nn			npremod						NN	compound	4
4	tasks	task		nn	pl								NNS	nsubj	6
5	basically	basically	rb+advl	rb	advl	ly							RB	advmod	6
6	execute	execute		vbmain	vblex	pres	simple	active					VBP	ROOT	6
7	whenever	whenever		rb	advl								WRB	advmod	9
8	there	there											EX	expl	9
9	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	6
10	time	time		nn									NN	attr	9
11	so	so		cs	cs_othr								IN	mark	13
12	they	they		pro	pl								PRP	nsubj	13
13	're	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBP	advcl	6
14	the	the		dt	art								DT	det	19
15	soft	soft	attr+npremod	jj	attr								JJ	amod	19
16	real	real	attr+npremod	jj	attr								JJ	amod	18
17	-	-											HYPH	punct	18
18	time	time	nn+npremod	nn			npremod						NN	compound	19
19	tasks	task		nn	pl								NNS	attr	13
20	.	.											.	punct	6

#sentid = 83
0													_SP	dep	6
1	do	do		vbaux									VBP	aux	6
2	the	the		dt	art								DT	det	5
3	um	um											UH	intj	5
4	,	,											,	punct	5
5	tests	test		nn	pl								NNS	nsubj	6
6	overlap	overlap		vbmain	vblex	pres	simple	active					VB	ROOT	6
7	between	between	in+advl	in	advl								IN	prep	6
8	different	different	attr+npremod	jj	attr								JJ	amod	11
9	,	,											,	punct	11
10	um	um											UH	intj	11
11	TAPs	tap		nn	pl								NNS	pobj	7
12	?	?											.	punct	6

#sentid = 84
0													_SP	dep	7
1	uh	uh											UH	intj	7
2	no	no											UH	intj	7
3	,	,											,	punct	7
4	the	the		dt	art								DT	det	5
5	planner	planner		nn		nom							NN	nsubjpass	7
6	is	be		vbaux									VBZ	auxpass	7
7	set	set		vbmain	phrsv	pres	simple	pasv_agls					VBN	ROOT	7
8	up	up		rb	prtcle								RP	prt	7
9	so	so		cs	cs_othr								IN	mark	13
10	you	you		pro	2nd	sg							PRP	nsubj	13
11	can	can		vbaux	mod	pos							MD	aux	13
12	only	only	rb+advl	rb	advl	ly	splaux						RB	advmod	13
13	choose	choose	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	7
14	one	one											CD	nummod	15
15	action	action		nn		nom							NN	dobj	13
16	for	for	in+npostmod	in	nmod								IN	prep	15
17	each	each		dt									DT	det	18
18	state	state		nn		nom							NN	pobj	16
19	.	.											.	punct	7

#sentid = 85
0													_SP	dep	0
1	so	so		rb	link								RB	advmod	2
2	wait	wait		vbmain	vblex	nonfinite	simple	active					VB	punct	0
3	assume	assume		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	2
4	these	these		dt	dt_dem								DT	det	5
5	tests	test		nn	pl								NNS	nsubj	6
6	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	3
7	things	thing		nn	pl	nom							NNS	attr	6
8	like	like	in+npostmod	in	nmod								IN	prep	7
9	sensing	sensing		nn		nom							NN	pobj	8
10	.	.											.	punct	2

#sentid = 86
0													_SP	dep	32
1	um	um											UH	intj	32
2													_SP	dep	32
3	yeah	yeah											UH	intj	32
4	so	so		rb	link								RB	advmod	32
5	so	so		rb	link								RB	advmod	32
6	basically	basically	rb+advl	rb	advl	ly							RB	advmod	32
7	if	if		cs	cnd								IN	mark	9
8	you	you		pro	2nd	sg							PRP	nsubj	9
9	start	start	finitecls+advl	vbmain	prepv	pres	simple	active	advlcls		conditional		VBP	advcl	32
10	with	with	in+advl	in	advl								IN	prep	9
11	a	a		dt	art								DT	det	12
12	description	description		nn		nom							NN	pobj	10
13	of	of	of+npostmod	in	nmod								IN	prep	12
14	a	a		dt	art								DT	det	15
15	plan	plan		nn									NN	pobj	13
16	as	as	in+npostmod	in	nmod								IN	prep	12
17	,	,											,	punct	16
18	a	a		dt	art								DT	det	19
19	list	list		nn		nom							NN	pobj	16
20	of	of	of+npostmod	in	nmod								IN	prep	19
21	states	state		nn	pl	nom							NNS	pobj	20
22	,	,											,	punct	16
23	that	that		relpro	relpro_that	sg							WDT	nsubj	24
24	go	go	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	9
25	with	with	in+advl	in	advl								IN	prep	24
26	an	an		dt									DT	det	27
27	action	action		nn		nom							NN	pobj	25
28	,	,											,	punct	32
29	then	then		rb	link								RB	advmod	32
30	we	we		pro	1st								PRP	nsubj	32
31	basically	basically	rb+advl	rb	advl	ly							RB	advmod	32
32	pass	pass		vbmain	vblex	pres	simple	active					VBP	ROOT	32
33	that	that		dt	dt_dem								DT	det	34
34	list	list		nn		nom							NN	dobj	32
35	of	of	of+npostmod	in	nmod								IN	prep	34
36	states	state		nn	pl	nom							NNS	pobj	35
37	into	into	in+advl	in	advl								IN	prep	32
38	the	the		dt	art								DT	det	47
39	I	i		nn	1st	proper	npremod						NNP	compound	41
40	-	-											HYPH	punct	41
41	D	d	nn+npremod	nn		proper	npremod						NNP	nmod	47
42	-	-											HYPH	punct	41
43	three	three											CD	nummod	41
44	decision	decision	nn+npremod	nn			npremod						NN	compound	46
45	-	-											HYPH	punct	46
46	making	making	nn+npremod	nn		nom	npremod						NN	compound	47
47	algorithm	algorithm		nn									NN	pobj	37
48	and	and		cc	cls								CC	cc	32
49	it	it		pro	3rd	sg							PRP	nsubj	50
50	comes	come		vbmain	phrsv	pres	simple	active					VBZ	conj	32
51	up	up		rb	prtcle								RP	prt	50
52	with	with	in+advl	in	advl								IN	prep	50
53	,	,											,	punct	52
54	tests	test		nn	pl								NNS	pobj	52
55	that	that		relpro	relpro_that	sg							WDT	nsubj	57
56	uniquely	uniquely	rb+advl	rb	advl	ly							RB	advmod	57
57	describe	describe	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	54
58	that	that		dt	dt_dem								DT	det	59
59	set	set		nn									NN	dobj	57
60	of	of	of+npostmod	in	nmod								IN	prep	59
61	states	state		nn	pl	nom							NNS	pobj	60
62	,	,											,	punct	59
63	versus	versus	in+npostmod	in	nmod								IN	prep	59
64	all	all											DT	pobj	63
65	of	of		in	in_othr								IN	prep	64
66	the	the		dt	art								DT	det	68
67	other	other	attr+npremod	jj	attr								JJ	amod	68
68	states	state		nn	pl	nom							NNS	pobj	65
69	that	that		pro	dem	sg							WDT	pobj	76
70	you	you		pro	2nd	sg							PRP	nsubj	73
71	do	do		vbaux									VBP	aux	73
72	n't	not											RB	neg	73
73	do	do	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VB	relcl	68
74	that	that		dt	dt_dem								DT	det	75
75	action	action		nn		nom							NN	dobj	73
76	in	in	in+advl	in	advl								IN	prep	73
77	...	...											:	punct	50

#sentid = 87
0													_SP	dep	0
1	okay	okay											UH	intj	3
2	so	so		rb	othr								RB	advmod	3
3	y-	y-		in	in_othr								XX	prep	0

#sentid = 88
0	so	so		rb	link								RB	advmod	6
1	any	any		dt									DT	det	2
2	kind	kind		nn									NN	nsubjpass	6
3	of	of	of+npostmod	in	nmod								IN	prep	2
4	overlap	overlap		nn									NN	pobj	3
5	is	be		vbaux									VBZ	auxpass	6
6	handled	handle		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	6
7	by	by	in+advl	in	advl								IN	prep	6
8	that	that		dt	dt_dem								DT	det	9
9	process	process		nn		nom							NN	pobj	7
10													_SP	dep	7
11	not	not											RB	neg	7
12	by	by		in	in_othr								IN	prep	7
13	,	,											,	punct	12
14													_SP	dep	12
15	right	right											UH	intj	12
16													_SP	dep	12
17	not	not											RB	pobj	12
18	,	,											,	punct	12
19	when	when		rb	advl								WRB	advmod	21
20	it	it		pro	3rd	sg							PRP	nsubj	21
21	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	7
22	,	,											,	punct	7
23	not	not											RB	neg	24
24	at	at		in	in_othr								IN	prep	7
25	scheduling	scheduling	nn+npremod	nn		nom	npremod						NN	compound	26
26	time	time		nn									NN	pobj	24
27	.	.											.	punct	6

#sentid = 89
0													_SP	dep	0
1	right	right											UH	intj	0
2	no	no											UH	intj	0
3	.	.											.	punct	0

#sentid = 90
0	that	that											DT	ROOT	0
1	,	,											,	punct	3
2	this	this		pro	dem	sg							DT	nsubj	3
3	is	be		vbmain	nmod	pres	simple	active					VBZ	prep	13
4	,	,											,	punct	3
5	so	so		cc	phrs								CC	cc	3
6	basically	basically	rb+advl	rb	advl	ly							RB	advmod	10
7	part	part		nn									NN	nsubjpass	10
8	one	one											CD	nummod	7
9	is	be		vbaux									VBZ	auxpass	10
10	done	do		vbmain	vblex	pres	simple	pasv_by					VBN	conj	0
11	by	by											IN	agent	10
12	the	the		dt	art								DT	det	13
13	planner	planner		nn		nom							NN	pobj	11
14	.	.											.	punct	10

#sentid = 91
0	and	and		cc	cls								CC	cc	4
1	the	the		dt	art								DT	det	2
2	planner	planner		nn		nom							NN	nsubj	4
3	also	also	rb+advl	rb	advl								RB	advmod	4
4	comes	come		vbmain	phrsv	pres	simple	active					VBZ	ROOT	4
5	up	up		rb	prtcle								RP	prt	4
6	with	with	in+advl	in	advl								IN	prep	4
7	the	the		dt	art								DT	det	8
8	deadlines	deadline		nn	pl								NNS	pobj	6
9	.	.											.	punct	4

#sentid = 92
0	and	and		cc	cls								CC	cc	20
1	then	then		rb	link								RB	advmod	20
2	part	part		nn									NN	nsubjpass	20
3	two	two											CD	nummod	2
4	,	,											,	punct	2
5	the	the		dt	art								DT	det	6
6	development	development	appos+npostmod	nn		nom	nappos						NN	appos	2
7	of	of	of+npostmod	in	nmod								IN	prep	6
8	this	this		dt	dt_dem								DT	det	10
9	TAP	tap	nn+npremod	nn		proper	npremod						NNP	compound	10
10	schedule	schedule		nn									NN	pobj	7
11	on	on	in+npostmod	in	nmod								IN	prep	6
12	a	a		dt	art								DT	det	13
13	timeline	timeline		nn									NN	pobj	11
14	for	for	in+npostmod	in	nmod								IN	prep	13
15	,	,											,	punct	14
16	the	the		dt	art								DT	det	18
17	guaranteed	guarantee	attr+npremod	jj	attr	ed							VBN	amod	18
18	TAPs	tap		nn	pl								NNS	pobj	14
19	is	be		vbaux									VBZ	auxpass	20
20	done	do		vbmain	vblex	pres	simple	pasv_by					VBN	ROOT	20
21	by	by											IN	agent	20
22	,	,											,	punct	21
23	the	the		dt	art								DT	det	24
24	scheduler	scheduler		nn		nom							NN	pobj	21
25	.	.											.	punct	20

#sentid = 93
0	and	and		cc	cls								CC	cc	4
1	it	it		pro	3rd	sg							PRP	nsubj	4
2	does	do		vbaux									VBZ	aux	4
3	n't	not											RB	neg	4
4	know	know		vbmain	vblex	pres	simple	active					VB	ROOT	4
5	anything	anything		nn	other	nom							NN	dobj	4
6	about	about	in+npostmod	in	nmod								IN	prep	5
7	tests	test		nn	pl								NNS	pobj	6
8	versus	versus	in+npostmod	in	nmod								IN	prep	7
9	actions	action		nn	pl	nom							NNS	pobj	8
10	it	it		pro	3rd	sg							PRP	nsubj	12
11	just	just	rb+advl	rb	advl								RB	advmod	12
12	knows	know	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	7
13	,	,											,	punct	7
14	the	the		dt	art								DT	det	19
15	worst	bad	attr+npremod	jj	attr								JJS	amod	17
16	-	-											HYPH	punct	17
17	case	case	nn+npremod	nn			npremod						NN	compound	19
18	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	19
19	times	time	appos+npostmod	nn	pl		nappos						NNS	appos	7
20	,	,											,	punct	19
21	W	w	nn+npremod	nn			npremod						NN	compound	27
22	-	-											HYPH	punct	27
23	C	c	nn+npremod	nn			npremod						NN	compound	27
24	-	-											HYPH	punct	27
25	E	e	nn+npremod	nn			npremod						NN	compound	27
26	-	-											HYPH	punct	27
27	T	t	appos+npostmod	nn			nappos						NN	appos	19
28	there	there		rb	othr								RB	advmod	7
29	for	for	in+npostmod	in	nmod								IN	prep	7
30	each	each		dt									DT	det	31
31	TAP	tap		nn		proper							NNP	pobj	29
32	which	which		relpro	relpro_wh								WDT	nsubj	33
33	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	7
34	what	what		comp	comp_wh								WP	dobj	36
35	it	it		pro	3rd	sg							PRP	nsubj	36
36	assumes	assume	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	33
37	when	when		rb	advl								WRB	advmod	39
38	it	it		pro	3rd	sg							PRP	nsubj	39
39	builds	build	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	36
40	the	the		dt	art								DT	det	41
41	schedule	schedule		nn									NN	dobj	39
42	,	,											,	punct	4
43	but	but		cc	phrs								CC	cc	4
44	then	then		rb	link								RB	advmod	50
45	as	as		cs	cs_othr								IN	mark	47
46	you	you		pro	2nd	sg							PRP	nsubj	47
47	see	see	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	50
48	there	there											EX	expl	50
49	there	there											EX	expl	50
50	is	be		vbmain	be	pres	simple	active					VBZ	conj	4
51	this	this		dt	dt_dem								DT	det	56
52	average	average	attr+npremod	jj	attr								JJ	amod	54
53	-	-											HYPH	punct	54
54	case	case	nn+npremod	nn			npremod						NN	compound	56
55	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	56
56	time	time		nn									NN	attr	50
57	so	so		cc	cls								CC	cc	50
58	,	,											,	punct	50
59	any	any		dt									DT	det	60
60	time	time		nn									NN	npadvmod	77
61	one	one		pro	other	pl							CD	nsubj	65
62	of	of		in	in_othr								IN	prep	61
63	the	the		dt	art								DT	det	64
64	TAPs	tap		nn	pl								NNS	pobj	62
65	takes	take	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	60
66	less	less											JJR	dobj	65
67	than	than	in+comparative	in	jcomp								IN	prep	66
68	its	its		dt	poss								PRP$	poss	73
69	worst	bad	attr+npremod	jj	attr								JJS	amod	71
70	-	-											HYPH	punct	71
71	case	case	nn+npremod	nn			npremod						NN	compound	73
72	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	73
73	time	time		nn									NN	pobj	67
74	,	,											,	punct	77
75	you	you		pro	2nd	sg							PRP	nsubj	77
76	can	can		vbaux	mod	pos							MD	aux	77
77	reclaim	reclaim		vbmain	vblex	vp_w_modal	simple	active					VB	conj	50
78	that	that		dt	dt_dem								DT	det	79
79	time	time		nn									NN	dobj	77
80	for	for	in+advl	in	advl								IN	prep	77
81	all	all											DT	pobj	80
82	of	of		in	in_othr								IN	prep	81
83	the	the		dt	art								DT	det	87
84	best	good	attr+npremod	jj	attr								JJS	amod	86
85	-	-											HYPH	punct	86
86	effort	effort	nn+npremod	nn			npremod						NN	compound	87
87	TAPs	tap		nn	pl								NNS	pobj	82
88	,	,											,	punct	81
89	plus	plus		cc									CC	cc	81
90	any	any		dt									DT	det	91
91	time	time		nn									NN	conj	81
92	that	that		relpro	relpro_that	sg							WDT	nsubj	93
93	remains	remain	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	91
94	,	,											,	punct	91
95	once	once		cs	cs_othr								IN	mark	98
96	everything	everything		nn	other	nom							NN	nsubjpass	98
97	is	be		vbaux									VBZ	auxpass	98
98	scheduled	schedule	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls		other_advl		VBN	advcl	91
99	.	.											.	punct	77

#sentid = 94
0													_SP	dep	2
1	so	so		rb	link								RB	advmod	2
2	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	this	this		pro	dem	sg							DT	nsubj	2
4	a	a		dt	art								DT	det	6
5	a	a		dt	art								DT	det	6
6	partition	partition		nn		nom							NN	attr	2
7	of	of	of+npostmod	in	nmod								IN	prep	6
8	the	the		dt	art								DT	det	9
9	sensors	sensor		nn	pl	nom							NNS	pobj	7
10	basically	basically	rb+advl	rb	advl	ly							RB	advmod	2
11	?	?											.	punct	2

#sentid = 95
0													_SP	dep	0
1	no	no											UH	intj	5
2	it	it		pro	3rd	sg							PRP	nsubj	5
3	does	do		vbaux									VBZ	aux	5
4	n't	not											RB	neg	5
5	pa-	pa-		in	in_othr								XX	prep	0

#sentid = 96
0	no	no											UH	intj	3
1	you	you		pro	2nd	sg							PRP	nsubj	3
2	might	might		vbaux	mod	pos							MD	aux	3
3	use	use		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	3
4	the	the		dt	art								DT	det	5
5	sensors	sensor		nn	pl	nom							NNS	dobj	3
6	,	,											,	punct	3
7	um	um											UH	intj	3
8	,	,											,	punct	3
9	in	in	in+advl	in	advl								IN	prep	3
10	any	any											DT	pobj	9
11	of	of		in	in_othr								IN	prep	10
12	these	these		dt	dt_dem								DT	det	13
13	tests	test		nn	pl								NNS	pobj	11
14	so	so		cc	cls								CC	cc	3
15	,	,											,	punct	3
16	say	say		vbmain	vblex	nonfinite	simple	active	advlcls				VB	advcl	28
17	you	you		pro	2nd	sg							PRP	nsubj	18
18	had	have	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	16
19	a	a		dt	art								DT	det	20
20	feature	feature		nn		nom							NN	dobj	18
21	,	,											,	punct	20
22	altitude	altitude	appos+npostmod	nn			nappos						NN	appos	20
23	for	for	in+npostmod	in	nmod								IN	prep	22
24	example	example		nn									NN	pobj	23
25	,	,											,	punct	28
26	you	you		pro	2nd	sg							PRP	nsubj	28
27	might	might		vbaux	mod	pos							MD	aux	28
28	use	use		vbmain	vblex	vp_w_modal	simple	active					VB	conj	3
29	it	it		pro	3rd	sg							PRP	dobj	28
30	,	,											,	punct	28
31	in	in	in+advl	in	advl								IN	prep	28
32	every	every		dt									DT	det	33
33	test	test		nn									NN	pobj	31
34	that	that		pro	dem	sg							WDT	dobj	36
35	you	you		pro	2nd	sg							PRP	nsubj	36
36	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	33
37	.	.											.	punct	28

#sentid = 97
0													_SP	dep	12
1	let	let		vbmain	vblex	nonfinite	simple	active	compcls			compdel	VB	ccomp	0
2	me	i		pro	1st	sg							PRP	nsubj	3
3	take	take		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	1
4	all	all											PDT	predet	6
5	the	the		dt	art								DT	det	6
6	sensors	sensor		nn	pl	nom							NNS	dobj	3
7	and	and		cc	phrs								CC	cc	3
8	put	put		vbmain	vblex	nonfinite	simple	active					VB	conj	3
9	them	they		pro	pl								PRP	dobj	8
10	together	together	rb+advl	rb	advl								RB	advmod	8
11	,	,											,	punct	12
12	let	let		vbmain	vblex	nonfinite	simple	active					VB	ROOT	12
13	's	us											PRP	nsubj	14
14	call	call		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	12
15	that	that		pro	dem	sg							DT	dobj	14
16	the	the		dt	art								DT	det	17
17	sensorium	sensorium		nn									NN	oprd	14
18	okay	okay											UH	oprd	14
19	?	?											.	punct	12

#sentid = 98
0													_SP	dep	0
1	okay	okay											UH	intj	0
2	.	.											.	punct	1

#sentid = 99
0													_SP	dep	3
1	is	is		nn	pl								NNS	nsubj	3
2	,	,											,	punct	3
3	are	be		vbmain	be	pres	simple	active					VBP	ROOT	3
4	,	,											,	punct	3
5	do	do		vbmain	vblex	pres	simple	active	nmod_cls		ncomp		VBP	acl	6
6	these	these		pro	dem	pl							DT	dobj	3
7	does	do		vbmain	vblex	pres	simple	active					VBZ	dep	9
8	the	the		dt	art								DT	det	9
9	un-	un-											XX	meta	6
10	do	do		vbmain	vblex	pres	simple	active					VBP	dep	6
11	the	the		dt	art								DT	det	12
12	union	union		nn									NN	dobj	10
13	of	of	of+npostmod	in	nmod								IN	prep	12
14	all	all											PDT	predet	16
15	these	these		dt	dt_dem								DT	det	16
16	tests	test		nn	pl								NNS	pobj	13
17	,	,											,	punct	3
18	if	if		cs	cnd								IN	mark	19
19	you	you		pro	2nd	sg							PRP	dep	38
20	if	if		cs	cnd								IN	mark	22
21	you	you		pro	2nd	sg							PRP	nsubj	22
22	look	look	finitecls+advl	vbmain	prepv	pres	simple	active	advlcls		conditional		VBP	advcl	38
23	at	at	in+advl	in	advl								IN	prep	22
24	the	the		dt	art								DT	det	25
25	on	on		nn									NN	pobj	23
26	of	of	of+npostmod	in	nmod								IN	prep	25
27	all	all											DT	pobj	26
28	of	of		in	in_othr								IN	prep	27
29	them	they		pro	pl								PRP	pobj	28
30													_SP	dep	33
31	mhm	mhm											UH	intj	32
32													_SP	dep	33
33	is	is		nn	pl								NNS	dep	34
34	that	that											DT	dep	38
35	,	,											,	punct	38
36	does	do		vbaux									VBZ	aux	38
37	that	that		pro	dem	sg							DT	nsubj	38
38	recover	recover		vbmain	vblex	pres	simple	active	compcls		vcomp		VB	ccomp	3
39	the	the		dt	art								DT	det	41
40	entire	entire	attr+npremod	jj	attr								JJ	amod	41
41	sensorium	sensorium		nn									NN	dobj	38
42	or	or		cc	phrs								CC	cc	38
43	are	be		vbmain	be	pres	simple	active					VBP	conj	38
44	there	there											EX	expl	43
45	parts	part		nn	pl								NNS	attr	43
46	of	of	of+npostmod	in	nmod								IN	prep	45
47	the	the		dt	art								DT	det	48
48	sensorium	sensorium		nn									NN	pobj	46
49	which	which		relpro	relpro_wh								WDT	nsubj	50
50	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	45
51	not	not											RB	neg	50
52	?	?											.	punct	43

#sentid = 100
0													_SP	dep	19
1	if	if		cs	cnd								IN	mark	6
2	your	your		dt	poss								PRP$	poss	3
3	plan	plan		nn									NN	nsubj	6
4	does	do		vbaux									VBZ	aux	6
5	not	not											RB	neg	6
6	require	require	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VB	advcl	19
7	,	,											,	punct	6
8	knowledge	knowledge		nn									NN	dobj	6
9	of	of	of+npostmod	in	nmod								IN	prep	8
10	a	a		dt	art								DT	det	13
11	certain	certain	attr+npremod	jj	attr								JJ	amod	13
12	sensor	sensor	nn+npremod	nn		nom	npremod						NN	compound	13
13	value	value		nn									NN	pobj	9
14	then	then		rb	link								RB	advmod	19
15	,	,											,	punct	19
16	you	you		pro	2nd	sg							PRP	nsubj	19
17	'll	will		vbaux	mod								MD	aux	19
18	never	never											RB	neg	19
19	care	care		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	19
20	about	about	in+advl	in	advl								IN	prep	19
21	it	it		pro	3rd	sg							PRP	pobj	20
22	in	in	in+advl	in	advl								IN	prep	19
23	this	this		dt	dt_dem								DT	det	24
24	plan	plan		nn									NN	pobj	22
25	.	.											.	punct	19

#sentid = 101
0	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	0
1	that	that		pro	dem	sg							DT	nsubj	0
2	what	what		comp	comp_wh								WP	dobj	5
3	you	you		pro	2nd	sg							PRP	nsubj	5
4	're	be		vbaux									VBP	aux	5
5	asking	ask	whcls+vcomp	vbmain	vblex	pres	prog	active	compcls	whcls	vcomp		VBG	ccomp	0
6	?	?											.	punct	0

#sentid = 102
0													_SP	dep	3
1	i	i		pro	1st	sg							PRP	nsubj	3
2	'm	be		vbaux									VBP	aux	3
3	asking	ask		vbmain	vblex	pres	prog	active					VBG	ROOT	3
4	i	i		pro	1st	sg							PRP	nsubj	5
5	guess	guess		vbmain	vblex	pres	simple	active					VBP	parataxis	3
6	,	,											,	punct	5
7	you	you		pro	2nd	sg							PRP	nsubj	9
8	've	've		vbaux									VBP	aux	9
9	rejected	reject		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBN	ccomp	13
10	,	,											,	punct	13
11	you	you		pro	2nd	sg							PRP	nsubj	13
12	've	've		vbaux									VBP	aux	13
13	referred	refer	thatcls+vcomp	vbmain	prepv	pres	simple	active	compcls		vcomp	compdel	VBN	ccomp	3
14	to	to	in+advl	in	advl								IN	prep	13
15	this	this		dt	dt_dem								DT	det	16
16	paper	paper		nn		nom							NN	pobj	14
17	in	in	in+npostmod	in	nmod								IN	prep	16
18	the	the											DT	pobj	17
19	,	,											,	punct	16
20	in	in	in+npostmod	in	nmod								IN	prep	16
21	your	your		dt	poss								PRP$	poss	22
22	thesis	thesis		nn									NN	pobj	20
23	that	that		pro	dem	sg							WDT	nsubj	24
24													_SP	dep	16
25	uhuh	uhuh											UH	intj	26
26													_SP	dep	3
27	talks	talk	thatcls+vcomp	vbmain	prepv	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	3
28	about	about	in+advl	in	advl								IN	prep	27
29	how	how	rb+jjrbmod	rb	adjmod								WRB	advmod	30
30	stupid	stupid		jj	pred								JJ	acomp	33
31	universal	universal	attr+npremod	jj	attr								JJ	amod	32
32	plans	plan		nn	pl								NNS	nsubj	33
33	are	be		vbmain	be	pres	simple	active	compcls		incomp	compdel	VBP	pcomp	28
34	.	.											.	punct	3

#sentid = 103
0													_SP	dep	4
1	oh	oh											UH	intj	0
2	yes	yes											UH	intj	1
3													_SP	dep	0
4	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	this	this		pro	dem	sg							DT	nsubj	4
6	,	,											,	punct	4
7	if	if		cs	cnd								IN	mark	12
8	if	if		cs	cnd								IN	mark	12
9	you	you		pro	2nd	sg							PRP	nsubj	12
10	did	do		vbaux									VBD	aux	12
11	n't	not											RB	neg	12
12	have	have	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VB	advcl	26
13	this	this		dt	dt_dem								DT	det	14
14	scheduler	scheduler		nn		nom							NN	dobj	12
15	if	if		cs	cnd								IN	mark	18
16	you	you		pro	2nd	sg							PRP	nsubj	18
17	just	just	rb+advl	rb	advl								RB	advmod	18
18	had	have	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	12
19	this	this		dt	dt_dem								DT	det	20
20	planner	planner		nn		nom							NN	dobj	18
21													_SP	dep	26
22	uh'uh	uh'uh											UH	intj	26
23													_SP	dep	26
24	in	in											UH	intj	26
25	,	,											,	punct	26
26	is	be		vbmain	be	pres	simple	active					VBZ	parataxis	32
27	this	this		pro	dem	sg							DT	nsubj	26
28	,	,											,	punct	26
29	has	have		vbaux									VBZ	aux	32
30	this	this		dt	dt_dem								DT	det	31
31	planner	planner		nn		nom							NN	nsubj	32
32	come	come		vbmain	phrsv	pres	perf	active					VBN	appos	5
33	up	up		rb	prtcle								RP	prt	32
34	with	with	in+advl	in	advl								IN	prep	32
35	a	a		dt	art								DT	det	37
36	universal	universal		jj	attr								JJ	amod	37
37													_SP	dep	38
38	plan	plan		nn									NN	pobj	34
39	(	(											-LRB-	punct	38
40	for	for	in+npostmod	in	nmod								IN	prep	38
41	this	this		dt	dt_dem								DT	det	42
42	state	state		nn		nom							NN	pobj	40
43	?	?											.	punct	38
44	)	)											.	punct	38

#sentid = 104
0													_SP	dep	15
1	no	no											UH	intj	8
2	it	it		pro	3rd	sg							PRP	nsubj	8
3	has	have		vbaux									VBZ	aux	8
4	not	not											RB	neg	8
5	because	because		cs	cos								IN	mark	8
6	it	it		pro	3rd	sg							PRP	nsubj	8
7	only	only	rb+advl	rb	advl	ly	splaux						RB	advmod	8
8	considers	consider		vbmain	vblex	pres	perf	active	compcls		causative	compdel	VBZ	ccomp	15
9	states	state		nn	pl	nom							NNS	dobj	8
10	starting	start	ingcls+rel	vbmain	prepv	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	9
11	with	with	in+advl	in	advl								IN	prep	10
12	,	,											,	punct	11
13	you	you		pro	2nd	sg							PRP	dep	15
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	15
16	knowledge	knowledge		nn									NN	dobj	15
17	of	of	of+npostmod	in	nmod								IN	prep	16
18	your	your		dt	poss								PRP$	poss	20
19	initial	initial	attr+npremod	jj	attr								JJ	amod	20
20	state	state		nn		nom							NN	pobj	17
21	.	.											.	punct	15

#sentid = 105
0	and	and		cc	cls								CC	cc	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	looks	look		vbmain	prepv	pres	simple	active					VBZ	ROOT	2
3	at	at	in+advl	in	advl								IN	prep	2
4	all	all											PDT	predet	7
5	the	the		dt	art								DT	det	7
6	state	state	nn+npremod	nn		nom	npremod						NN	compound	7
7	transitions	transition		nn	pl	nom							NNS	pobj	3
8	and	and		cc	phrs								CC	cc	2
9	comes	come		vbmain	phrsv	pres	simple	active					VBZ	conj	2
10	up	up		rb	prtcle								RP	prt	9
11	with	with	in+advl	in	advl								IN	prep	9
12	the	the		dt	art								DT	det	13
13	set	set		nn									NN	pobj	11
14	of	of	of+npostmod	in	nmod								IN	prep	13
15	actions	action		nn	pl	nom							NNS	pobj	14
16	specifically	specifically		rb	othr	ly							RB	advmod	17
17	for	for	in+npostmod	in	nmod								IN	prep	13
18	those	those		pro	dem	pl							DT	pobj	17
19	which	which											WDT	nsubj	22
20	it	it		pro	3rd	sg							PRP	nsubj	21
21	considers	consider	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	18
22	reachable	reachable											JJ	ccomp	21
23	from	from	in+jcomp	in	jcomp								IN	prep	22
24	its	its		dt	poss								PRP$	poss	26
25	initial	initial	attr+npremod	jj	attr								JJ	amod	26
26	state	state		nn		nom							NN	pobj	23
27	.	.											.	punct	2

#sentid = 106
0	so	so		rb	link								RB	advmod	18
1	,	,											,	punct	18
2	um	um											UH	intj	18
3	,	,											,	punct	18
4	if	if		cs	cnd								IN	mark	8
5	you	you		pro	2nd	sg							PRP	nsubj	8
6	never	never											RB	neg	8
7	,	,											,	punct	8
8	think	think	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	18
9	that	that		comp	comp_that								IN	mark	12
10	a	a		dt	art								DT	det	11
11	state	state		nn		nom							NN	nsubj	12
12	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	8
13	reachable	reachable		jj	pred								JJ	acomp	12
14	then	then		rb	link								RB	advmod	18
15	it	it		pro	3rd	sg							PRP	nsubj	18
16	wo	will		vbaux	mod								MD	aux	18
17	n't	not											RB	neg	18
18	put	put		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	18
19	that	that		pro	dem	sg							DT	dobj	18
20	into	into	in+advl	in	advl								IN	prep	18
21	,	,											,	punct	20
22	into	into		in	in_othr								IN	prep	20
23	this	this		dt	dt_dem								DT	det	24
24	list	list		nn		nom							NN	pobj	22
25	.	.											.	punct	18

#sentid = 107
0													_SP	dep	41
1	i	i		pro	1st	sg							PRP	nsubj	2
2	was	be		vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	5
3	confused	confused		jj	pred								JJ	acomp	2
4	i	i		pro	1st	sg							PRP	nsubj	5
5	thought	think		vbmain	in_othr	past	simple	active					VBD	prep	0
6	you	you		pro	2nd	sg							PRP	nsubj	9
7	did	do		vbaux									VBD	aux	9
8	n't	not											RB	neg	9
9	deal	deal	thatcls+vcomp	vbmain	prepv	past	simple	active	compcls		vcomp	compdel	VB	ccomp	5
10	with	with	in+advl	in	advl								IN	prep	9
11	states	state		nn	pl	nom							NNS	pobj	10
12	i	i		pro	1st	sg							PRP	nsubj	13
13	thought	think	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	5
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	dealt	deal	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	13
16	in	in	in+advl	in	advl								IN	prep	15
17	se-	se-											XX	pobj	16
18	in	in		in	in_othr								IN	prep	16
19	outputs	output		nn	pl								NNS	pobj	18
20	and	and		cc									CC	cc	16
21	in	in											IN	conj	16
22	perception	perception		nn		nom							NN	pobj	21
23	in	in	in+npostmod	in	nmod								IN	prep	22
24	per-	per-											IN	pobj	23
25	and	and		cc									CC	cc	23
26	in	in											IN	conj	23
27	perceptions	perception		nn	pl	nom							NNS	pobj	26
28	and	and		cc	cls								CC	cc	5
29	then	then		rb	link								RB	advmod	31
30	you	you		pro	2nd	sg							PRP	nsubj	31
31	imputed	impute		vbmain	vblex	past	simple	active					VBD	conj	5
32	,	,											,	punct	31
33	families	family		nn	pl								NNS	dobj	31
34	of	of	of+npostmod	in	nmod								IN	prep	33
35	states	state		nn	pl	nom							NNS	pobj	34
36	to	to	in+npostmod	in	nmod								IN	prep	33
37	those	those		dt	dt_dem								DT	det	38
38	perceptions	perception		nn	pl	nom							NNS	pobj	36
39													_SP	dep	41
40	that	that		pro	dem	sg							DT	nsubj	41
41	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	41
42	right	right		jj	pred								JJ	acomp	41
43	?	?											.	punct	41

#sentid = 108
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	0

#sentid = 109
0	right	right											UH	ROOT	0
1	.	.											.	punct	0

#sentid = 110
0	so	so		rb	link								RB	advmod	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	possible	possible		jj	pred								JJ	acomp	2
4	that	that		comp	comp_that								IN	mark	8
5	you	you		pro	2nd	sg							PRP	nsubj	8
6	will	will		vbaux	mod	prd							MD	aux	8
7	accidentally	accidentally	rb+advl	rb	advl	ly	splaux						RB	advmod	8
8	do	do	xtrapos+thatcls+jcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	jcomp		VB	ccomp	2
9	one	one		pro	other	pl							CD	dobj	8
10	of	of		in	in_othr								IN	prep	9
11	these	these		dt	dt_dem								DT	det	12
12	tests	test		nn	pl								NNS	pobj	10
13	for	for	in+advl	in	advl								IN	prep	8
14	a	a		dt	art								DT	det	15
15	state	state		nn		nom							NN	pobj	13
16	that	that		relpro	relpro_that	sg							WDT	nsubj	18
17	you	you		pro	2nd	sg							PRP	nsubj	18
18	considered	consider	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls	thatcls	rel		VBD	relcl	15
19	unreachable	unreachable											JJ	oprd	18
20	,	,											,	punct	8
21	because	because		cs	cos								IN	mark	31
22	,	,											,	punct	31
23	what	what											WP	pobj	27
24	you	you		pro	2nd	sg							PRP	nsubj	25
25	end	end		vbmain	phrsv	pres	simple	active	compcls		vcomp	compdel	VBP	csubj	31
26	up	up		rb	prtcle								RP	prt	25
27	with	with	in+advl	in	advl								IN	prep	25
28	when	when		rb	advl								WRB	advmod	30
29	you	you		pro	2nd	sg							PRP	nsubj	30
30	plan	plan	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	25
31	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		causative		VBZ	advcl	8
32	a	a		dt	art								DT	det	33
33	list	list		nn		nom							NN	attr	31
34	of	of	of+npostmod	in	nmod								IN	prep	33
35	states	state		nn	pl	nom							NNS	pobj	34
36	that	that		relpro	relpro_that	sg							WDT	nsubj	38
37	you	you		pro	2nd	sg							PRP	nsubj	38
38	consider	consider	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	35
39	reachable	reachable											JJ	oprd	38
40	,	,											,	punct	33
41	that	that		pro	dem	sg							DT	nsubj	42
42	map	map	appos+npostmod	nn			nappos						NN	appos	33
43	to	to	in+npostmod	in	nmod								IN	prep	42
44	,	,											,	punct	42
45	each	each											DT	nsubj	50
46	of	of		in	in_othr								IN	prep	45
47	those	those		dt	dt_dem								DT	det	49
48	fa-	fa-											XX	nmod	49
49	states	state		nn	pl	nom							NNS	pobj	46
50	map	map	appos+npostmod	nn			nappos						NN	appos	42
51	to	to	in+npostmod	in	nmod								IN	prep	50
52	one	one		pro	other	pl							CD	pobj	51
53	or	or		cc									CC	cc	52
54	zero	zero											CD	conj	52
55	of	of		in	in_othr								IN	prep	52
56	these	these		dt	dt_dem								DT	det	57
57	actions	action		nn	pl	nom							NNS	pobj	55
58	.	.											.	punct	2

#sentid = 111
0	at	at	in+advl	in	advl								IN	prep	8
1	that	that		dt	dt_dem								DT	det	2
2	point	point		nn									NN	pobj	0
3	that	that		dt	dt_dem								DT	det	4
4	list	list		nn		nom							NN	nsubjpass	8
5	of	of	of+npostmod	in	nmod								IN	prep	4
6	states	state		nn	pl	nom							NNS	pobj	5
7	is	be		vbaux									VBZ	auxpass	8
8	fed	feed		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	8
9	into	into	in+advl	in	advl								IN	prep	8
10	I	i	nn+npremod	nn	1st	sg	npremod						NN	compound	12
11	-	-											HYPH	punct	12
12	D	d		nn									NN	pobj	9
13	-	-											HYPH	punct	12
14	three	three											CD	nummod	12
15	,	,											,	punct	8
16	so	so		cs	cs_othr								IN	mark	19
17	that	that		cs	cs_othr								IN	mark	19
18	it	it		pro	3rd	sg							PRP	nsubj	19
19	comes	come	finitecls+advl	vbmain	phrsv	pres	simple	active	advlcls		other_advl		VBZ	advcl	8
20	up	up		rb	prtcle								RP	prt	19
21	with	with	in+advl	in	advl								IN	prep	19
22	these	these		dt	dt_dem								DT	det	23
23	tests	test		nn	pl								NNS	pobj	21
24	.	.											.	punct	8

#sentid = 112
0	so	so		rb	link								RB	advmod	2
1	you	you		pro	2nd	sg							PRP	nsubj	2
2	know	know		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	that	that		comp	comp_that								IN	mark	18
4	for	for	in+advl	in	advl								IN	prep	18
5	all	all											DT	pobj	4
6	of	of		in	in_othr								IN	prep	5
7	your	your		dt	poss								PRP$	poss	9
8	reachable	reachable	attr+npremod	jj	attr								JJ	amod	9
9	states	state		nn	pl	nom							NNS	pobj	6
10	,	,											,	punct	18
11	only	only		rb	othr	ly							RB	advmod	12
12	one	one		pro	other	pl							CD	nsubjpass	18
13	of	of		in	in_othr								IN	prep	12
14	these	these		dt	dt_dem								DT	det	15
15	actions	action		nn	pl	nom							NNS	pobj	13
16	will	will		vbaux	mod	prd							MD	aux	18
17	be	be		vbaux									VB	auxpass	18
18	done	do	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	pasv_agls	compcls	thatcls	vcomp		VBN	ccomp	2
19	.	.											.	punct	2

#sentid = 113
0	or	or		cc									CC	cc	1
1	zero	zero											CD	ROOT	1
2	of	of		in	in_othr								IN	prep	1
3	them	they		pro	pl								PRP	pobj	2
4	.	.											.	punct	1

#sentid = 114
0	but	but		cc	cls								CC	cc	24
1	if	if		cs	cnd								IN	mark	6
2	,	,											,	punct	6
3	your	your		dt	poss								PRP$	poss	4
4	system	system		nn									NN	nsubj	6
5	,	,											,	punct	6
6	reaches	reach	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBZ	advcl	24
7	some	some		dt									DT	det	8
8	state	state		nn		nom							NN	dobj	6
9	that	that		pro	dem	sg							WDT	pobj	18
10	you	you		pro	2nd	sg							PRP	nsubj	13
11	do	do		vbaux									VBP	aux	13
12	n't	not											RB	neg	13
13	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VB	relcl	8
14	one	one		pro	other	pl							CD	dobj	13
15	of	of		in	in_othr								IN	prep	14
16	these	these		dt	dt_dem								DT	det	17
17	tests	test		nn	pl								NNS	pobj	15
18	for	for	in+advl	in	advl								IN	prep	13
19	,	,											,	punct	24
20	then	then		rb	link								RB	advmod	24
21	,	,											,	punct	24
22	it	it		pro	3rd	sg							PRP	nsubj	24
23	might	might		vbaux	mod	pos							MD	aux	24
24	do	do		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	24
25	one	one		pro	other	pl							CD	dobj	24
26	of	of		in	in_othr								IN	prep	25
27	these	these		dt	dt_dem								DT	det	29
28	,	,											,	punct	29
29	actions	action		nn	pl	nom							NNS	pobj	26
30	by	by	in+advl	in	advl								IN	prep	24
31	accident	accident		nn		nom							NN	pobj	30
32	.	.											.	punct	24

#sentid = 115
0	the	the		dt	art								DT	det	1
1	presumption	presumption		nn		nom							NN	nsubj	3
2	here	here		rb	othr								RB	advmod	1
3	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	that	that		comp	comp_that								IN	mark	14
5	,	,											,	punct	14
6	as	as		cs	cs_othr								IN	mark	9
7	i	i		pro	1st	sg							PRP	nsubj	9
8	'll	will		vbaux	mod								MD	aux	9
9	talk	talk	finitecls+advl	vbmain	prepv	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	14
10	about	about	in+advl	in	advl								IN	prep	9
11	later	later	rb+advl	rb	advl								RB	advmod	9
12	,	,											,	punct	14
13	we	we		pro	1st								PRP	nsubj	14
14	worry	worry	thatcls+vcomp	vbmain	prepv	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	3
15	about	about	in+advl	in	advl								IN	prep	14
16	the	the		dt	art								DT	det	18
17	unhandled	unhandled	attr+npremod	jj	attr								JJ	amod	18
18	states	state		nn	pl	nom							NNS	pobj	15
19	basically	basically		rb	othr	ly							RB	advmod	20
20	those	those											DT	appos	18
21	that	that		relpro	relpro_that	sg							WDT	nsubj	26
22	,	,											,	punct	26
23	you	you		pro	2nd	sg							PRP	nsubj	26
24	have	have		vbaux									VBP	aux	26
25	n't	not											RB	neg	26
26	considered	consider	finitecls+rel	vbmain	vblex	pres	perf	active	nmod_cls	thatcls	rel		VBN	relcl	20
27	reachable	reachable											JJ	oprd	26
28	that	that		relpro	relpro_that	sg							WDT	nsubj	29
29	reach	reach	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	20
30	failure	failure		nn		nom							NN	dobj	29
31	,	,											,	punct	29
32	very	very	rb+jjrbmod	rb	othr								RB	advmod	33
33	quickly	quickly	rb+advl	rb	advl	ly							RB	advmod	29
34	.	.											.	punct	3

#sentid = 116
0	but	but		cc	cls								CC	cc	9
1	,	,											,	punct	9
2	the	the		dt	art								DT	det	3
3	others	other		nn	pl	nom							NNS	dep	9
4	,	,											,	punct	9
5	we	we		pro	1st								PRP	nsubj	9
6	do	do		vbaux									VBP	aux	9
7	n't	not											RB	neg	9
8	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	9
9	worry	worry		vbmain	prepv	pres	simple	active					VB	ROOT	9
10	about	about	in+advl	in	advl								IN	prep	9
11	in	in											IN	nmod	15
12	(	(											-LRB-	punct	15
13	delta	delta											XX	nmod	15
14	)	)											-RRB-	punct	15
15	plan	plan		nn									NN	pobj	10
16	.	.											.	punct	9

#sentid = 117
0													_SP	dep	6
1	are	be		vbaux									VBP	aux	6
2	we	we		pro	1st								PRP	dep	6
3	,	,											,	punct	6
4	are	be		vbaux									VBP	aux	6
5	we	we		pro	1st								PRP	nsubj	6
6	equating	equate		vbmain	vblex	pres	prog	active					VBG	ROOT	6
7	states	state		nn	pl	nom							NNS	dobj	6
8	and	and		cc	phrs								CC	cc	7
9	sensor	sensor	nn+npremod	nn		nom	npremod						NN	compound	10
10	outputs	output		nn	pl								NNS	conj	7
11	so	so		cs	cs_othr								IN	mark	15
12	that	that		cs	cs_othr								IN	mark	15
13	,	,											,	punct	15
14	there	there											EX	expl	15
15	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	6
16													_SP	dep	15
17	nothing	nothing		nn		nom							NN	attr	15
18	wrong	wrong		jj	attr								JJ	amod	17
19													_SP	dep	6
20	no	no											UH	intj	25
21	no	no											UH	intj	25
22	,	,											,	punct	25
23	not	not											RB	neg	25
24	at	at	rb+jjrbmod	rb	othr								RB	advmod	25
25	all	all	rb+advl	rb	advl								RB	advmod	6
26	.	.											.	punct	6

#sentid = 118
0													_SP	dep	8
1	not	not											RB	neg	3
2	at	at	rb+jjrbmod	rb	othr								RB	advmod	3
3	all	all		rb	othr								RB	advmod	0
4													_SP	dep	8
5	no	no											UH	intj	8
6	a	a		dt	art								DT	det	7
7	state	state		nn		nom							NN	nsubj	8
8	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	8
9	,	,											,	punct	8
10	the	the		dt	art								DT	det	21
11	typical	typical	attr+npremod	jj	attr								JJ	amod	21
12	,	,											,	punct	21
13	A	a	nn+npremod	nn			npremod						NN	nmod	15
14	-	-											HYPH	punct	15
15	I	i	nn+npremod	nn	1st	sg	npremod						NN	compound	16
16	planning	planning	nn+npremod	nn		nom	npremod						NN	nmod	21
17	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	18
18	of	of		rb	othr								RB	advmod	16
19	,	,											,	punct	21
20	um	um											UH	intj	21
21	set	set		nn									NN	attr	8
22	of	of	of+npostmod	in	nmod								IN	prep	21
23	features	feature		nn	pl								NNS	pobj	22
24	and	and		cc	phrs								CC	cc	23
25	values	value		nn	pl								NNS	conj	23
26	that	that		relpro	relpro_that	sg							WDT	nsubj	28
27	uniquely	uniquely	rb+advl	rb	advl	ly							RB	advmod	28
28	describe	describe		vbmain	vblex	nonfinite	simple	active	nmod_cls	thatcls	rel		VB	relcl	23
29	the	the		dt	art								DT	det	30
30	world	world		nn									NN	dobj	28
31	.	.											.	punct	8

#sentid = 119
0													_SP	dep	17
1	so	so		rb	link								RB	advmod	17
2	,	,											,	punct	17
3	the	the		dt	art								DT	det	6
4	plan	plan	nn+npremod	nn			npremod						NN	compound	5
5	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	6
6	idea	idea		nn									NN	dep	13
7	you	you		pro	2nd	sg							PRP	nsubj	10
8	do	do		vbaux									VBP	aux	10
9	n't	not											RB	neg	10
10	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VB	relcl	6
11	,	,											,	punct	13
12	there	there											EX	expl	13
13	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	17
14	no	no		dt									DT	det	16
15	_	_											JJ	punct	14
16	states	state		nn	pl	nom							NNS	attr	13
17	are	be		vbmain	be	pres	simple	active					VBP	ROOT	17
18	n't	not											RB	neg	17
19	there	there	rb+advl	rb	advl								RB	advmod	17
20	.	.											.	punct	17

#sentid = 120
0													_SP	dep	3
1	you	you		pro	2nd	sg							PRP	nsubj	3
2	just	just	rb+advl	rb	advl								RB	advmod	3
3	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	3
4	to	to											TO	xcomp	3
5													_SP	dep	3
6	no	no											UH	intj	14
7	the	the		dt	art								DT	det	11
8	plan	plan	nn+npremod	nn			npremod						NN	nmod	11
9	ex-	ex-											FW	nmod	11
10	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	11
11	system	system		nn									NN	nsubj	14
12	does	do		vbaux									VBZ	aux	14
13	n't	not											RB	neg	14
14	know	know	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	xcomp	3
15	anything	anything		nn	other	nom							NN	dobj	14
16	about	about	in+npostmod	in	nmod								IN	prep	15
17	states	state		nn	pl	nom							NNS	pobj	16
18	.	.											.	punct	3

#sentid = 121
0													_SP	dep	0
1	okay	okay											UH	intj	0
2	.	.											.	punct	1

#sentid = 122
0	but	but		cc	cls								CC	cc	3
1	,	,											,	punct	3
2	su-	su-											XX	dep	3
3	suppose	suppose		vbmain	vblex	nonfinite	simple	active					VB	ROOT	3
4	TAP	tap		nn									NN	nsubj	7
5	-	-											HYPH	punct	4
6	one	one											CD	nummod	4
7	involves	involve	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	3
8	checking	check	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	7
9	the	the		dt	art								DT	det	10
10	altitude	altitude		nn									NN	dobj	8
11	and	and		cc	cls								CC	cc	7
12	TAP	tap		nn									NN	nsubj	15
13	-	-											HYPH	punct	14
14	two	two											CD	nummod	12
15	involves	involve		vbmain	vblex	pres	simple	active					VBZ	conj	7
16	checking	check	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	15
17	the	the		dt	art								DT	det	18
18	altitude	altitude		nn									NN	dobj	16
19	,	,											,	punct	15
20													_SP	dep	3
21	right	right											UH	intj	3
22													_SP	dep	3
23	and	and		cc	cls								CC	cc	3
24	that	that		pro	dem	sg							DT	nsubj	25
25	takes	take		vbmain	vblex	pres	simple	active					VBZ	conj	3
26	,	,											,	punct	25
27	you	you		pro	2nd	sg							PRP	nsubj	28
28	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	25
29	a	a											DT	quantmod	30
30	few	few											JJ	nummod	31
31	milliseconds	millisecond		nn	pl								NNS	dobj	25
32	or	or		cc	phrs								CC	cc	25
33	something	something		nn		nom							NN	conj	25
34	,	,											,	punct	25
35													_SP	dep	38
36	yeah	yeah											UH	intj	38
37	,	,											,	punct	38
38	mhm	mhm											UH	intj	25
39													_SP	dep	25
40	does	do		vbmain	vblex	pres	simple	active					VBZ	dep	42
41	the	the		dt	art								DT	det	42
42	schedul-	schedul-	appos+npostmod	nn			nappos						NN	appos	24
43	can	can		vbaux	mod	pos							MD	aux	49
44	the	the		dt	art								DT	det	45
45	scheduler	scheduler		nn		nom							NN	nsubj	49
46	in	in	in+advl	in	advl								IN	prep	49
47	some	some		dt									DT	det	48
48	way	way		nn									NN	pobj	46
49	exploit	exploit		vbmain	vblex	vp_w_modal	simple	active					VB	conj	25
50	the	the		dt	art								DT	det	51
51	fact	fact		nn									NN	dobj	49
52	that	that		relpro	relpro_that								IN	mark	70
53	uh	uh											UH	intj	70
54	,	,											,	punct	70
55													_SP	dep	70
56	well	well											UH	intj	70
57	,	,											,	punct	70
58	not	not											RB	neg	70
59	,	,											,	punct	70
60	not	not											RB	neg	61
61													_SP	dep	70
62	you	you		pro	2nd	sg							PRP	nsubjpass	70
63	could	could		vbmain	vblex	vp_w_modal	simple	active					MD	dep	70
64	,	,											,	punct	70
65	you	you		pro	2nd	sg							PRP	nsubjpass	70
66	could	could		vbaux	mod	pos							MD	aux	70
67	,	,											,	punct	70
68	get	get		vbaux									VB	auxpass	70
69	(	(											-LRB-	punct	70
70	surrounded	surround	thatcls+ncomp	vbmain	vblex	vp_w_modal	simple	pasv_by	nmod_cls	thatcls	ncomp		VBN	acl	51
71	)	)											-RRB-	punct	70
72	by	by											IN	agent	70
73	doing	do	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	72
74	them	they		pro	pl								PRP	dobj	73
75	both	both											DT	appos	74
76	,	,											,	punct	70
77	or	or		cc	phrs								CC	cc	70
78	?	?											.	punct	70

#sentid = 123
0													_SP	dep	0
1	not	not											RB	neg	2
2	as	as		in	in_othr								IN	prep	0
3	part	part		nn									NN	pobj	2
4	of	of	of+npostmod	in	nmod								IN	prep	3
5	the	the		dt	art								DT	det	6
6	architecture	architecture		nn		nom							NN	pobj	4
7	but	but		cc									CC	cc	0
8	,	,											,	punct	0
9	for	for	in+advl	in	advl								IN	prep	26
10	the	the		dt	art								DT	det	11
11	architecture	architecture		nn		nom							NN	pobj	9
12	we	we		pro	1st								PRP	nsubj	13
13	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	11
14	,	,											,	punct	26
15	for	for	in+advl	in	advl								IN	prep	26
16	our	our		dt	poss								PRP$	poss	21
17	U	u	nn+npremod	nn		proper	npremod						NNP	compound	21
18	-	-											HYPH	punct	21
19	A	a	nn+npremod	nn			npremod						NN	compound	21
20	-	-											HYPH	punct	21
21	V	v		nn									NN	pobj	15
22	,	,											,	punct	26
23	um	um											UH	intj	26
24	,	,											,	punct	26
25	we	we		pro	1st								PRP	nsubj	26
26	separate	separate		vbmain	vblex	pres	simple	active					VBP	conj	0
27	the	the		dt	art								DT	det	35
28	low	low	attr+npremod	jj	attr								JJ	amod	30
29	-	-											HYPH	punct	30
30	level	level		nn									NN	npadvmod	32
31	-	-											HYPH	punct	32
32	controlled	control	attr+npremod	jj	attr	ed							VBN	amod	35
33	state	state	nn+npremod	nn		nom	npremod						NN	compound	34
34	estimation	estimation	nn+npremod	nn		nom	npremod						NN	compound	35
35	processes	process		nn	pl	nom							NNS	dobj	26
36	from	from	in+advl	in	advl								IN	prep	26
37	the	the		dt	art								DT	det	38
38	stuff	stuff		nn									NN	pobj	36
39	that	that		pro	dem	sg							WDT	dobj	41
40	CIRCA	circa		nn		proper							NNP	nsubj	41
41	does	do	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBZ	relcl	38
42	,	,											,	punct	26
43	so	so		cs	cs_othr								IN	mark	51
44	that	that		cs	cs_othr								IN	mark	51
45	it	it		pro	3rd	sg							PRP	nsubj	51
46	actually	actually	rb+advl	rb	advl	ly							RB	advmod	51
47	_	_											XX	punct	51
48	the	the		dt	art								DT	det	50
49	feature	feature	nn+npremod	nn		nom	npremod						NN	compound	50
50	tests	test		nn	pl								NNS	nsubj	51
51	are	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBP	advcl	26
52	virtually	virtually	rb+jjrbmod	rb	adjmod	ly							RB	advmod	53
53	instantaneous	instantaneous		jj	pred								JJ	acomp	51
54	because	because		cs	cos								IN	mark	60
55	,	,											,	punct	60
56	the	the		dt	art								DT	det	58
57	state	state	nn+npremod	nn		nom	npremod						NN	compound	58
58	estimator	estimator		nn		nom							NN	nsubj	60
59	already	already	rb+advl	rb	advl								RB	advmod	60
60	goes	go	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBZ	advcl	51
61	out	out	rb+advl	rb	advl								RB	advmod	60
62	and	and		cc	phrs								CC	cc	60
63	reads	read		vbmain	vblex	pres	simple	active					VBZ	conj	60
64	all	all											DT	dobj	63
65	of	of		in	in_othr								IN	prep	64
66	the	the		dt	art								DT	det	67
67	features	feature		nn	pl								NNS	pobj	65
68	and	and		cc	phrs								CC	cc	63
69	stores	store		vbmain	vblex	pres	simple	active					VBZ	conj	63
70	them	they		pro	pl								PRP	dobj	69
71	in	in	in+advl	in	advl								IN	prep	69
72	memory	memory		nn		nom							NN	pobj	71
73	,	,											,	punct	69
74	at	at											IN	conj	69
75	a-	a-											DT	pobj	74
76	which	which		dt									WDT	det	77
77	time	time		nn									NN	pcomp	74
78	any	any											DT	nsubj	82
79	of	of		in	in_othr								IN	prep	78
80	these	these		dt	dt_dem								DT	det	81
81	tasks	task		nn	pl								NNS	pobj	79
82	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	26
83	access	access		nn		nom							NN	dobj	82
84	to	to	in+npostmod	in	nmod								IN	prep	83
85	that	that		dt	dt_dem								DT	det	86
86	memory	memory		nn		nom							NN	pobj	84
87	.	.											.	punct	26

#sentid = 124
0	so	so		rb	link								RB	advmod	8
1	for	for	in+advl	in	advl								IN	prep	8
2	that	that		dt	dt_dem								DT	det	4
3	specific	specific	attr+npremod	jj	attr								JJ	amod	4
4	case	case		nn									NN	pobj	1
5	,	,											,	punct	8
6	feature	feature	nn+npremod	nn		nom	npremod						NN	compound	7
7	tests	test		nn	pl								NNS	nsubj	8
8	mean	mean		vbmain	vblex	pres	simple	active					VBP	ROOT	8
9	reading	read	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	8
10	something	something		nn	other	nom							NN	dobj	9
11	from	from	in+advl	in	advl								IN	prep	9
12	memory	memory		nn		nom							NN	pobj	11
13	.	.											.	punct	8

#sentid = 125
0	this	this		pro	dem	sg							DT	nsubj	1
1	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	not	not											RB	neg	1
3	generally	generally	rb+advl	rb	advl	ly							RB	advmod	1
4	the	the		dt	art								DT	det	5
5	case	case		nn									NN	attr	1
6	because	because		cs	cos								IN	mark	14
7	in	in	in+advl	in	advl								IN	prep	14
8	previous	previous	attr+npremod	jj	attr								JJ	amod	9
9	versions	version		nn	pl								NNS	pobj	7
10	of	of	of+npostmod	in	nmod								IN	prep	9
11	CIRCA	circa		nn		proper							NNP	pobj	10
12	there	there											EX	expl	14
13	have	have		vbaux									VBP	aux	14
14	been	be	finitecls+advl	vbmain	be	pres	perf	active	advlcls		causative		VBN	advcl	1
15	,	,											,	punct	14
16	robots	robot		nn	pl								NNS	attr	14
17	that	that		relpro	relpro_that	sg							WDT	nsubj	21
18	really	really	rb+advl	rb	advl	ly							RB	advmod	21
19	have	have		vbaux									VBP	aux	21
20	n't	not											RB	neg	21
21	had	have	finitecls+rel	vbmain	vblex	pres	perf	active	nmod_cls	thatcls	rel		VBD	relcl	16
22	any	any		dt									DT	det	26
23	underlying	underlie	attr+npremod	jj	attr	ing							VBG	amod	26
24	,	,											,	punct	26
25	control	control	nn+npremod	nn			npremod						NN	compound	26
26	mechanisms	mechanism		nn	pl	nom							NNS	dobj	21
27	where	where		rb	advl								WRB	advmod	30
28	feature	feature	nn+npremod	nn		nom	npremod						NN	compound	29
29	tests	test		nn	pl								NNS	nsubj	30
30	meant	mean	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls	whcls	rel		VBD	relcl	26
31	actively	actively	rb+advl	rb	advl	ly							RB	advmod	32
32	going	go	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	30
33	out	out	rb+advl	rb	advl								RB	advmod	32
34	and	and		cc	phrs								CC	cc	32
35	looking	look		vbmain	prepv	nonfinite	simple	active		ingcls			VBG	conj	32
36	at	at	in+advl	in	advl								IN	prep	35
37	something	something		nn	other	nom							NN	pobj	36
38	in	in	in+npostmod	in	nmod								IN	prep	37
39	the	the		dt	art								DT	det	40
40	world	world		nn									NN	pobj	38
41	.	.											.	punct	1

#sentid = 126
0	so	so		rb	link								RB	advmod	12
1	,	,											,	punct	12
2	as	as		rb	othr								RB	advmod	3
3	far	far	rb+advl	rb	advl								RB	advmod	12
4	as	as		cs	cs_othr								IN	mark	8
5	the	the		dt	art								DT	det	6
6	architecture	architecture		nn		nom							NN	nsubjpass	8
7	is	be		vbaux									VBZ	auxpass	8
8	concerned	concern	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls		other_advl		VBN	advcl	3
9	all	all											DT	nsubj	12
10	it	it		pro	3rd	sg							PRP	nsubj	11
11	knows	know	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	9
12	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	12
13	there	there											EX	expl	14
14	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	12
15	some	some		dt									DT	det	16
16	functions	function		nn	pl	nom							NNS	attr	14
17	do	do		vbmain	vblex	pres	simple	active	nmod_cls		ncomp		VBP	acl	16
18	feature	feature	nn+npremod	nn		nom	npremod						NN	compound	19
19	tests	test		nn	pl								NNS	dobj	17
20	.	.											.	punct	12

#sentid = 127
0	and	and		cc	cls								CC	cc	5
1													_SP	dep	5
2	they	they		pro	pl								PRP	nsubj	5
3	do	do		vbaux									VBP	aux	5
4	n't	not											RB	neg	5
5	take	take		vbmain	vblex	pres	simple	active					VB	ROOT	5
6	time	time		nn									NN	dobj	5
7	?	?											.	punct	5

#sentid = 128
0	i	i		pro	1st	sg							PRP	nsubj	1
1	mean	mean		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2													_SP	dep	1
3	hm	hm											UH	intj	2
4	?	?											.	punct	3

#sentid = 129
0													_SP	dep	4
1	they	they		pro	pl								PRP	nsubj	4
2	do	do		vbaux									VBP	aux	4
3	n't	not											RB	neg	4
4	take	take		vbmain	vblex	pres	simple	active					VB	ROOT	4
5	any	any		dt									DT	det	6
6	time	time		nn									NN	dobj	4
7	?	?											.	punct	4

#sentid = 130
0	(	(											-LRB-	punct	2
1	to	to		to									TO	aux	2
2	do	do		vbmain	vblex	nonfinite	simple	active		tocls			VB	ROOT	2
3	the	the											DT	dobj	2
4	)	)											-RRB-	punct	2

#sentid = 131
0													_SP	dep	13
1	no	no											UH	intj	13
2	,	,											,	punct	13
3	well	well											UH	intj	13
4	,	,											,	punct	13
5	in	in	in+advl	in	advl								IN	prep	13
6	the	the		dt	art								DT	det	11
7	U	u		nn		proper	npremod						NNP	compound	11
8	-	-											HYPH	punct	11
9	A	a	nn+npremod	nn			npremod						NN	compound	11
10	-	-											HYPH	punct	11
11	V	v		nn		proper							NNP	pobj	5
12	they	they		pro	pl								PRP	nsubj	13
13	take	take		vbmain	vblex	pres	simple	active					VBP	ROOT	13
14	a	a		dt	art								DT	det	17
15	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	16
16	small	small	attr+npremod	jj	attr								JJ	amod	17
17	amount	amount		nn									NN	dobj	13
18	of	of	of+npostmod	in	nmod								IN	prep	17
19	time	time		nn									NN	pobj	18
20	but	but		cc	cls								CC	cc	13
21	we	we		pro	1st								PRP	nsubj	23
22	still	still	rb+advl	rb	advl								RB	advmod	23
23	have	have		vbmain	vblex	pres	simple	active					VBP	conj	13
24	to	to		to									TO	aux	25
25	account	account		vbmain	prepv	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	23
26	for	for	in+advl	in	advl								IN	prep	25
27	the	the		dt	art								DT	det	28
28	amount	amount		nn									NN	pobj	26
29	of	of	of+npostmod	in	nmod								IN	prep	28
30	time	time		nn									NN	pobj	29
31	it	it		pro	3rd	sg							PRP	nsubj	32
32	takes	take	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	28
33	to	to		to									TO	aux	34
34	read	read	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	32
35	something	something		nn	other	nom							NN	dobj	34
36	from	from	in+advl	in	advl								IN	prep	34
37	memory	memory		nn		nom							NN	pobj	36
38	.	.											.	punct	23

#sentid = 132
0	um	um											UH	intj	9
1	for	for	in+advl	in	advl								IN	prep	9
2	,	,											,	punct	1
3	the	the		dt	art								DT	det	6
4	,	,											,	punct	6
5	general	general	attr+npremod	jj	attr								JJ	amod	6
6	case	case		nn									NN	pobj	1
7	they	they		pro	pl								PRP	nsubj	9
8	could	could		vbaux	mod	pos							MD	aux	9
9	take	take		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	9
10	time	time		nn									NN	dobj	9
11	and	and		cc	cls								CC	cc	9
12	,	,											,	punct	24
13	the	the		dt	art								DT	det	15
14	the	the		dt	art								DT	det	15
15	times	time		nn	pl								NNS	nsubj	24
16	that	that		pro	dem	sg							WDT	dobj	18
17	we	we		pro	1st								PRP	nsubj	18
18	use	use	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	15
19	to	to		to									TO	aux	20
20	schedule	schedule	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	18
21	these	these		dt	dt_dem								DT	det	22
22	TAPs	tap		nn	pl								NNS	dobj	20
23	,	,											,	punct	24
24	include	include		vbmain	vblex	pres	simple	active					VBP	conj	9
25	the	the		dt	art								DT	det	30
26	worst	bad	attr+npremod	jj	attr								JJS	amod	28
27	-	-											HYPH	punct	28
28	case	case	nn+npremod	nn			npremod						NN	compound	30
29	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	30
30	times	time		nn	pl								NNS	dobj	24
31	for	for	in+npostmod	in	nmod								IN	prep	30
32	both	both		dt									DT	det	35
33	the	the		dt	art								DT	det	35
34	feature	feature	nn+npremod	nn		nom	npremod						NN	compound	35
35	tests	test		nn	pl								NNS	pobj	31
36	and	and		cc	phrs								CC	cc	35
37	the	the		dt	art								DT	det	38
38	actions	action		nn	pl	nom							NNS	conj	35
39	...	...											:	punct	24

#sentid = 133
0													_SP	dep	8
1	does	do		vbaux									VBZ	aux	3
2	this	this		pro	dem	sg							DT	nsubj	3
3	uh	uh											UH	intj	8
4	the	the		dt	art								DT	det	6
5	attack	attack	nn+npremod	nn			npremod						NN	compound	6
6	classification	classification		nn		nom							NN	dep	8
7	,	,											,	punct	8
8	stay	stay		vbmain	vblex	nonfinite	simple	active					VB	ROOT	8
9	,	,											,	punct	8
10	static	static		jj	pred								JJ	acomp	8
11	or	or		cc	phrs								CC	cc	8
12	change	change		vbmain	vblex	nonfinite	simple	active					VB	conj	8
13	,	,											,	punct	12
14	depending	depend		vbmain	prepv	nonfinite	simple	active		ingcls			VBG	conj	12
15	on	on	in+advl	in	advl								IN	prep	14
16	,	,											,	punct	15
17	where	where		rb	advl								WRB	advmod	21
18	your	your		dt	poss								PRP$	poss	20
19	control	control	nn+npremod	nn			npremod						NN	compound	20
20	system	system		nn									NN	nsubj	21
21	is	be		vbmain	be	pres	simple	active					VBZ	conj	15
22	in	in	rb+advl	rb	advl								IN	advmod	21
23	?	?											.	punct	8

#sentid = 134
0													_SP	dep	6
1	for	for	in+advl	in	advl								IN	prep	6
2	any	any		dt									DT	det	4
3	particular	particular	attr+npremod	jj	attr								JJ	amod	4
4	plan	plan		nn									NN	pobj	1
5	it	it		pro	3rd	sg							PRP	nsubj	6
6	stays	stay		vbmain	vblex	pres	simple	active					VBZ	ROOT	6
7	static	static		jj	pred								JJ	acomp	6
8	.	.											.	punct	6

#sentid = 135
0													_SP	dep	0
1	why	why		comp	comp_wh								WRB	advmod	4
2	should	should		vbaux	mod	nec							MD	aux	4
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	be	be		vbmain	be	vp_w_modal	simple	active	compcls	whcls			VB	ccomp	0
5	though	though	rb+advl	rb	advl								RB	advmod	4
6	,	,											,	punct	4
7	if	if		cs	cnd								IN	mark	10
8	you	you		pro	2nd	sg							PRP	nsubj	10
9	're	be		vbaux									VBP	aux	10
10	talking	talk	finitecls+advl	vbmain	prepv	pres	prog	active	advlcls		conditional		VBG	advcl	4
11	about	about	in+advl	in	advl								IN	prep	10
12	aircraft	aircraft	nn+npremod	nn			npremod						NN	compound	13
13	landing	landing	nn+npremod	nn		nom	npremod						NN	compound	14
14	problem	problem		nn									NN	pobj	11
15	or	or		cc	phrs								CC	cc	14
16	,	,											,	punct	14
17													_SP	dep	14
18	aircraft	aircraft	nn+npremod	nn			npremod						NN	compound	19
19	control	control	nn+npremod	nn			npremod						NN	compound	20
20	problem	problem		nn									NN	conj	14
21	?	?											.	punct	4

#sentid = 136
0													_SP	dep	19
1	well	well											UH	intj	19
2	,	,											,	punct	19
3	the	the		dt	art								DT	det	4
4	way	way		nn									NN	npadvmod	19
5	we	we		pro	1st								PRP	nsubj	7
6	've	've		vbaux									VBP	aux	7
7	designed	design	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBN	relcl	4
8	,	,											,	punct	7
9	uh	uh											UH	intj	7
10	w-	w-											XX	dobj	7
11	the	the		dt	art								DT	det	14
12	aircraft	aircraft	nn+npremod	nn			npremod						NN	compound	13
13	control	control	nn+npremod	nn			npremod						NN	compound	14
14	problem	problem		nn									NN	dobj	7
15	versus	versus	in+npostmod	in	nmod								IN	prep	14
16	landing	landing		nn		nom							NN	pobj	15
17	,	,											,	punct	19
18	what	what											WP	attr	19
19	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	19
20													_SP	dep	19
21	the	the		dt	art								DT	det	22
22	difference	difference		nn		nom							NN	nsubj	19
23	?	?											.	punct	19

#sentid = 137
0													_SP	dep	35
1	well	well											UH	intj	35
2	like	like	in+advl	in	advl								IN	prep	35
3	the	the		dt	art								DT	det	5
4	good	good	attr+npremod	jj	attr								JJ	amod	5
5	example	example		nn									NN	pobj	2
6	the	the		dt	art								DT	det	12
7	uh	uh											UH	intj	6
8	,	,											,	punct	6
9	the	the		dt	art								DT	det	10
10	altitude	altitude		nn									NN	dep	12
11	the	the		dt	art								DT	det	12
12	sensing	sensing	appos+npostmod	nn		nom	nappos						NN	appos	5
13	,	,											,	punct	5
14													_SP	dep	5
15	yes	yes											UH	intj	35
16													_SP	dep	15
17	uh	uh											UH	intj	21
18	when	when		rb	advl								WRB	advmod	21
19	the	the		dt	art								DT	det	20
20	airplane	airplane		nn									NN	nsubj	21
21	is	be		vbmain	be	pres	simple	active					VBZ	meta	35
22	uh	uh											UH	intj	21
23	thirty	thirty											CD	compound	26
24	-	-											HYPH	punct	26
25	five	five											CD	compound	26
26	thousand	thousand											CD	nummod	27
27	feet	foot		nn	pl								NNS	npadvmod	28
28	above	above	rb+advl	rb	advl								IN	advmod	21
29	above	above		in	in_othr								IN	prep	28
30	the	the		dt	art								DT	det	31
31	ground	ground		nn									NN	pobj	29
32													_SP	dep	21
33	right	right											UH	intj	21
34													_SP	dep	21
35	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	35
36	not	not											RB	neg	35
37	as	as		rb	adjmod								RB	advmod	38
38	critical	critical		jj	pred								JJ	acomp	35
39	as	as	in+jcomp	in	jcomp								IN	prep	38
40	,	,											,	punct	39
41													_SP	dep	39
42	when	when											WRB	pcomp	39
43													_SP	dep	35
44	well	well											UH	intj	46
45	we	we		pro	1st								PRP	nsubj	46
46	assume	assume		vbmain	vblex	pres	simple	active					VBP	meta	35
47	for	for											IN	dobj	46
48	for	for		in	in_othr								IN	prep	47
49	th-	th-											DT	pobj	48
50	okay	okay											UH	intj	51
51	so	so											RB	meta	47
52	,	,											,	punct	47
53	i	i		pro	1st	sg							PRP	nsubj	55
54	'm	be		vbaux									VBP	aux	55
55	hoping	hope		vbmain	vblex	pres	prog	active					VBG	parataxis	47
56	not	not											RB	neg	58
57	to	to		to									TO	aux	58
58	cause	cause	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	55
59	confusion	confusion		nn									NN	dobj	58
60	here	here	rb+advl	rb	advl								RB	advmod	55
61	we	we		pro	1st								PRP	nsubj	72
62	have	have		vbaux									VBP	aux	72
63	,	,											,	punct	72
64	for	for		cs	cs_othr								IN	mark	72
65	our	our		dt	poss								PRP$	poss	68
66	unmanned	unmanned	attr+npremod	jj	attr								JJ	amod	68
67	aerial	aerial	attr+npremod	jj	attr								JJ	amod	68
68	vehicle	vehicle		nn									NN	pobj	64
69	,	,											,	punct	64
70	specifically	specifically	rb+advl	rb	advl	ly	splaux						RB	advmod	72
71	,	,											,	punct	72
72	designed	design		vbmain	vblex	pres	perf	active	compcls		other_advl	compdel	VBN	ccomp	46
73	the	the		dt	art								DT	det	78
74	low	low	attr+npremod	jj	attr								JJ	amod	76
75	-	-											HYPH	punct	76
76	level	level	nn+npremod	nn			npremod						NN	compound	78
77	controller	controller	nn+npremod	nn		nom	npremod						NN	compound	78
78	tasks	task		nn	pl								NNS	dobj	72
79	and	and		cc	phrs								CC	cc	78
80	state	state	nn+npremod	nn		nom	npremod						NN	compound	81
81	estimations	estimation		nn	pl	nom							NNS	conj	78
82	and	and		cc	phrs								CC	cc	81
83	so	so	rb+jjrbmod	rb	othr								RB	advmod	84
84	forth	forth											RB	conj	81
85	so	so		cs	cs_othr								IN	mark	87
86	that	that		pro	dem	sg							DT	nsubj	87
87	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	35
88	a	a		dt	art								DT	det	90
89	unique	unique	attr+npremod	jj	attr								JJ	amod	90
90	situation	situation		nn		nom							NN	attr	87
91	for	for	in+advl	in	advl								IN	prep	87
92	CIRCA	circa		nn		proper							NNP	pobj	91
93	.	.											.	punct	35

#sentid = 138
0	if	if		cs	cnd								IN	mark	2
1	you	you		pro	2nd	sg							PRP	nsubj	2
2	talk	talk	finitecls+advl	vbmain	prepv	pres	simple	active	advlcls		conditional		VBP	advcl	9
3	about	about	in+advl	in	advl								IN	prep	2
4	that	that		dt	dt_dem								DT	det	6
5	particular	particular	attr+npremod	jj	attr								JJ	amod	6
6	situation	situation		nn		nom							NN	pobj	3
7	,	,											,	punct	9
8	we	we		pro	1st								PRP	nsubj	9
9	assume	assume		vbmain	vblex	pres	simple	active					VBP	ROOT	9
10	that	that		comp	comp_that								IN	mark	16
11	the	the		dt	art								DT	det	13
12	state	state	nn+npremod	nn		nom	npremod						NN	compound	13
13	estimator	estimator		nn		nom							NN	nsubj	16
14	,	,											,	punct	16
15	is	be		vbaux									VBZ	aux	16
16	sampling	sample	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls	thatcls	vcomp		VBG	ccomp	9
17	the	the		dt	art								DT	det	18
18	world	world		nn									NN	dobj	16
19	fa-	fa-											XX	nmod	18
20	th-	th-											XX	nmod	18
21	fast	fast	rb+jjrbmod	rb	othr								RB	advmod	22
22	enough	enough	rb+advl	rb	advl								RB	advmod	16
23	to	to		to									TO	aux	24
24	maintain	maintain	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls			VB	xcomp	22
25	an	an		dt									DT	det	29
26	accurate	accurate	attr+npremod	jj	attr								JJ	amod	29
27	,	,											,	punct	29
28	state	state	nn+npremod	nn		nom	npremod						NN	compound	29
29	estimate	estimate		nn		nom							NN	dobj	24
30	.	.											.	punct	9

#sentid = 139
0	so	so		rb	link								RB	advmod	4
1	it	it		pro	3rd	sg							PRP	nsubj	4
2	can	can		vbaux	mod	pos							MD	aux	4
3	,	,											,	punct	4
4	figure	figure		vbmain	phrsv	vp_w_modal	simple	active					VB	ROOT	4
5	out	out		rb	prtcle								RP	prt	4
6	if	if		cs	cnd								IN	mark	8
7	it	it		pro	3rd	sg							PRP	nsubj	8
8	needs	need		vbmain	vblex	pres	simple	active	compcls		conditional	compdel	VBZ	ccomp	4
9	to	to		to									TO	aux	10
10	sample	sample		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	8
11	the	the		dt	art								DT	det	12
12	world	world		nn									NN	dobj	10
13	frequently	frequently		rb	othr	ly							RB	advmod	15
14	,	,											,	punct	15
15	on	on	in+advl	in	advl								IN	prep	10
16	landing	landing		nn		nom							NN	pobj	15
17	versus	versus	in+advl	in	advl								IN	prep	10
18	not	not											RB	neg	20
19	very	very	rb+jjrbmod	rb	othr								RB	advmod	20
20	frequently	frequently											RB	pcomp	17
21	,	,											,	punct	20
22	at	at	in+advl	in	advl								IN	prep	10
23	high	high	attr+npremod	jj	attr								JJ	amod	24
24	altitude	altitude		nn									NN	pobj	22
25	and	and		cc	cls								CC	cc	4
26	CIRCA	circa		nn		proper							NNP	nsubj	29
27	does	do		vbaux									VBZ	aux	29
28	not	not											RB	neg	29
29	concern	concern		vbmain	vblex	pres	simple	active					VB	conj	4
30	itself	itself											PRP	dobj	29
31	with	with	in+advl	in	advl								IN	prep	29
32	that	that		pro	dem	sg							DT	pobj	31
33	.	.											.	punct	29

#sentid = 140
0	in	in	in+advl	in	advl								IN	prep	7
1	general	general		jj	attr								JJ	amod	0
2	,	,											,	punct	7
3	CIRCA	circa		nn		proper							NNP	nsubj	7
4	,	,											,	punct	7
5	would	would		vbaux	mod	prd							MD	aux	7
6	,	,											,	punct	7
7	assume	assume		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	7
8	that	that		comp	comp_that								IN	mark	21
9	,	,											,	punct	21
10	for	for	in+advl	in	advl								IN	prep	21
11	any	any		dt									DT	det	13
12	particular	particular	attr+npremod	jj	attr								JJ	amod	13
13	plan	plan		nn									NN	pobj	10
14	,	,											,	punct	13
15	a	a		dt	art								DT	det	16
16	TAP	tap	appos+npostmod	nn		proper	nappos						NNP	appos	13
17	,	,											,	punct	13
18	the	the		dt	art								DT	det	20
19	TAP	tap	nn+npremod	nn		proper	npremod						NNP	compound	20
20	schedule	schedule		nn									NN	nsubj	21
21	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	7
22	constant	constant		jj	pred								JJ	acomp	21
23	.	.											.	punct	7

#sentid = 141
0	however	however		rb	link								RB	advmod	3
1	it	it		pro	3rd	sg							PRP	nsubj	3
2	can	can		vbaux	mod	pos							MD	aux	3
3	split	split		vbmain	phrsv	vp_w_modal	simple	active					VB	ROOT	3
4	up	up		rb	prtcle								RP	prt	3
5	the	the		dt	art								DT	det	6
6	space	space		nn									NN	dobj	3
7	into	into	in+advl	in	advl								IN	prep	3
8	different	different	attr+npremod	jj	attr								JJ	amod	9
9	subgoals	subgoal		nn	pl	nom							NNS	pobj	7
10	.	.											.	punct	3

#sentid = 142
0	meaning	mean		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	ROOT	0
1	that	that		comp	comp_that								IN	mark	4
2	you	you		pro	2nd	sg							PRP	nsubj	4
3	can	can		vbaux	mod	pos							MD	aux	4
4	have	have	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	0
5	one	one											CD	nummod	6
6	plan	plan		nn									NN	dobj	4
7	for	for	in+npostmod	in	nmod								IN	prep	6
8	high	high	attr+npremod	jj	attr								JJ	amod	10
9	-	-											HYPH	punct	10
10	altitude	altitude	nn+npremod	nn			npremod						NN	compound	11
11	flight	flight		nn									NN	pobj	7
12	,	,											,	punct	6
13	and	and		cc	phrs								CC	cc	6
14	one	one											CD	nummod	15
15	plan	plan		nn									NN	conj	6
16	for	for	in+npostmod	in	nmod								IN	prep	15
17	landing	landing		nn		nom							NN	pobj	16
18	,	,											,	punct	4
19													_SP	dep	4
20	mhm	mhm											UH	intj	19
21													_SP	dep	4
22	in	in	in+advl	in	advl								IN	prep	47
23	which	which		dt									WDT	det	24
24	case	case		nn									NN	pcomp	22
25	,	,											,	punct	47
26	if	if		cs	cnd								IN	mark	28
27	it	it		pro	3rd	sg							PRP	nsubj	28
28	worried	worry	finitecls+advl	vbmain	prepv	past	simple	active	advlcls		conditional		VBD	advcl	47
29	about	about	in+advl	in	advl								IN	prep	28
30	,	,											,	punct	29
31	um	um											UH	intj	29
32	how	how	rb+jjrbmod	rb	othr								WRB	advmod	33
33	quickly	quickly	rb+advl	rb	advl	ly							RB	advmod	38
34	you	you		pro	2nd	sg							PRP	nsubj	35
35	need	need		vbmain	vblex	pres	simple	active	compcls		incomp	compdel	VBP	pcomp	29
36	to	to		to									TO	aux	38
37	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	38
38	sense	sense		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	35
39	the	the		dt	art								DT	det	40
40	feature	feature		nn		nom							NN	dobj	38
41	to	to		to									TO	aux	42
42	avoid	avoid	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	38
43	failure	failure		nn		nom							NN	dobj	42
44	,	,											,	punct	47
45	that	that		relpro	relpro_that	sg							DT	nsubj	47
46	would	would		vbaux	mod	prd							MD	aux	47
47	have	have	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	2
48	to	to		to									TO	aux	52
49	be	be		vbaux									VB	auxpass	52
50	,	,											,	punct	52
51	um	um											UH	intj	52
52	integrated	integrate		vbmain	vblex	nonfinite	simple	pasv_agls	compcls		vcomp	compdel	VBN	xcomp	47
53	somehow	somehow	rb+advl	rb	advl								RB	advmod	52
54	into	into	in+advl	in	advl								IN	prep	52
55	the	the		dt	art								DT	det	57
56	transition	transition	nn+npremod	nn		nom	npremod						NN	compound	57
57	model	model		nn									NN	pobj	54
58	in	in	in+advl	in	advl								IN	prep	52
59	terms	term		nn	pl								NNS	pobj	58
60	of	of	of+npostmod	in	nmod								IN	prep	59
61	how	how	rb+jjrbmod	rb	othr								WRB	advmod	62
62	quickly	quickly	rb+advl	rb	advl	ly							RB	advmod	65
63	you	you		pro	2nd	sg							PRP	nsubj	65
64	could	could		vbaux	mod	pos							MD	aux	65
65	fail	fail		vbmain	vblex	vp_w_modal	simple	active	compcls		incomp	compdel	VB	pcomp	60
66	.	.											.	punct	0

#sentid = 143
0													_SP	dep	3
1	but	but		cc	phrs								CC	cc	3
2	it	it		pro	3rd	sg							PRP	nsubj	3
3	seems	seem		vbmain	vblex	pres	simple	active					VBZ	ROOT	3
4	to	to	in+advl	in	advl								IN	prep	3
5	me	i		pro	1st	sg							PRP	pobj	4
6	,	,											,	punct	3
7	the	the		dt	art								DT	det	17
8	uh	uh											UH	intj	17
9	,	,											,	punct	17
10	altitude	altitude		nn									NN	npadvmod	12
11	-	-											HYPH	punct	12
12	sensing	sense	attr+npremod	jj	attr	ing							VBG	amod	17
13	and	and		cc	phrs								CC	cc	12
14	elevator	elevator	nn+npremod	nn		nom	npremod						NN	compound	16
15	-	-											HYPH	punct	16
16	control	control		nn									NN	conj	12
17	TAP	tap		nn		proper							NNP	nsubjpass	27
18	,	,											,	punct	17
19													_SP	dep	17
20	mhm	mhm											UH	intj	17
21													_SP	dep	17
22	uh	uh											UH	intj	17
23	,	,											,	punct	17
24	could	could		vbaux	mod	pos							MD	aux	27
25	be	be		vbaux									VB	auxpass	27
26	,	,											,	punct	27
27	classified	classify	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	3
28	as	as	in+advl	in	advl								IN	prep	27
29	,	,											,	punct	28
30	a	a		dt	art								DT	det	34
31	best	good	attr+npremod	jj	attr								JJS	amod	33
32	-	-											HYPH	punct	33
33	effort	effort	nn+npremod	nn			npremod						NN	compound	34
34	TAP	tap		nn									NN	pobj	28
35	,	,											,	punct	34
36	or	or		cc	phrs								CC	cc	34
37	,	,											,	punct	34
38	the	the		dt	art								DT	det	44
39	guaranteed	guaranteed	attr+npremod	jj	attr								JJ	amod	44
40	or	or		cc	phrs								CC	cc	39
41	time	time		nn									NN	npadvmod	43
42	-	-											HYPH	punct	43
43	critical	critical											JJ	conj	39
44	TAP	tap		nn									NN	conj	34
45	,	,											,	punct	44
46	depending	depend		vbmain	prepv	nonfinite	simple	active		ingcls			VBG	conj	44
47	on	on	in+advl	in	advl								IN	prep	46
48	which	which		dt									WDT	det	49
49	phase	phase		nn									NN	pobj	55
50	of	of	of+npostmod	in	nmod								IN	prep	49
51	your	your		dt	poss								PRP$	poss	52
52	flight	flight		nn									NN	pobj	50
53	it	it		pro	3rd	sg							PRP	nsubj	54
54	's	be		vbmain	be	pres	simple	active	compcls		incomp	compdel	VBZ	pcomp	47
55	in	in	in+advl	in	advl								IN	prep	54
56	.	.											.	punct	3

#sentid = 144
0													_SP	dep	4
1	well	well											UH	intj	4
2	i	i		pro	1st	sg							PRP	nsubj	4
3	would	would		vbaux	mod	prd							MD	aux	4
4	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	4
5	a	a		dt	art								DT	det	7
6	tough	tough	attr+npremod	jj	attr								JJ	amod	7
7	time	time		nn									NN	dobj	4
8	seeing	see	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	4
9	that	that		comp	comp_that								IN	mark	14
10	elevator	elevator	nn+npremod	nn		nom	npremod						NN	compound	12
11	-	-											HYPH	punct	12
12	control	control		nn									NN	nsubj	14
13	could	could		vbaux	mod	pos							MD	aux	14
14	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	8
15	best	good	attr+npremod	jj	attr								JJS	amod	17
16	-	-											HYPH	punct	17
17	effort	effort		nn									NN	attr	14
18	but	but		cc	cls								CC	cc	4
19	,	,											,	punct	4
20	um	um											UH	intj	4
21	,	,											,	punct	4
22	so	so		cc	phrs								CC	cc	23
23	pretend	pretend		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	65
24	that	that		comp	comp_that								IN	mark	28
25	you	you		pro	2nd	sg							PRP	nsubj	28
26	do	do		vbaux									VBP	aux	28
27	n't	not											RB	neg	28
28	care	care	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VB	ccomp	23
29	about	about	in+advl	in	advl								IN	prep	28
30	altitude	altitude		nn									NN	pobj	29
31	when	when		rb	advl								WRB	advmod	33
32	you	you		pro	2nd	sg							PRP	nsubj	33
33	're	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBP	advcl	28
34	at	at	in+advl	in	advl								IN	prep	33
35	high	high	attr+npremod	jj	attr								JJ	amod	36
36	altitude	altitude		nn									NN	pobj	34
37	although	although		cs	con								IN	mark	41
38	actually	actually	rb+advl	rb	advl	ly							RB	advmod	41
39	i	i		pro	1st	sg							PRP	nsubj	41
40	would	would		vbaux	mod	prd							MD	aux	41
41	care	care	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		concessive		VB	advcl	23
42	about	about	in+advl	in	advl								IN	prep	41
43	that	that		pro	dem	sg							DT	pobj	42
44	too	too	rb+advl	rb	advl								RB	advmod	41
45	because	because		cs	cos								IN	mark	49
46	otherwise	otherwise	rb+advl	rb	advl								RB	advmod	49
47	you	you		pro	2nd	sg							PRP	nsubj	49
48	could	could		vbaux	mod	pos							MD	aux	49
49	end	end	finitecls+advl	vbmain	phrsv	vp_w_modal	simple	active	advlcls		causative		VB	advcl	23
50	up	up		rb	prtcle								RP	prt	49
51	in	in	in+advl	in	advl								IN	prep	49
52	this	this		dt	dt_dem								DT	det	53
53	dive	dive		nn									NN	pobj	51
54	or	or		cc	phrs								CC	cc	53
55	,	,											,	punct	57
56	severe	severe	attr+npremod	jj	attr								JJ	amod	57
57	climb	climb		nn									NN	conj	53
58	,	,											,	punct	23
59	so	so		cc	phrs								CC	cc	23
60	i	i		pro	1st	sg							PRP	nsubj	62
61	would	would		vbaux	mod	prd							MD	aux	62
62	s-	s-											XX	dep	23
63	i	i		pro	1st	sg							PRP	nsubj	65
64	would	would		vbaux	mod	prd							MD	aux	65
65	argue	argue		vbmain	vblex	vp_w_modal	simple	active					VB	conj	4
66	and	and		cc	phrs								CC	cc	65
67	say	say		vbmain	vblex	nonfinite	simple	active					VB	conj	65
68	that	that		comp	comp_that								IN	mark	74
69	they	they		pro	pl								PRP	dep	74
70	we-	we-											XX	appos	69
71	they	they		pro	pl								PRP	nsubjpass	74
72	were	be		vbaux									VBD	auxpass	74
73	all	all											DT	dep	74
74	supposed	suppose	thatcls+vcomp	vbmain	vblex	past	simple	pasv_agls	compcls	thatcls	vcomp		VBN	ccomp	67
75	to	to		to									TO	aux	77
76	be	be		vbaux									VB	auxpass	77
77	guaranteed	guarantee	tocls+vcomp	vbmain	vblex	nonfinite	simple	pasv_agls	compcls	tocls	vcomp		VBN	xcomp	74
78	.	.											.	punct	65

#sentid = 145
0													_SP	dep	5
1	for	for	in+advl	in	advl								IN	prep	5
2	example	example		nn									NN	pobj	1
3	you	you		pro	2nd	sg							PRP	nsubj	5
4	can	can		vbaux	mod	pos							MD	aux	5
5	miss	miss		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	5
6	deadlines	deadline		nn	pl								NNS	dobj	5
7	for	for	in+advl	in	advl								IN	prep	5
8	several	several	attr+npremod	jj	attr								JJ	amod	9
9	periods	period		nn	pl								NNS	pobj	7
10													_SP	dep	9
11	right	right											UH	intj	9
12													_SP	dep	5
13	when	when		rb	advl								WRB	advmod	15
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	're	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBP	advcl	5
16	in	in	in+advl	in	advl								IN	prep	15
17	hi-	hi-	attr+npremod	jj	attr								JJ	amod	19
18	high	high	attr+npremod	jj	attr								JJ	amod	19
19	altitude	altitude		nn									NN	pobj	16
20	whereas	whereas		cs	cs_othr								IN	mark	35
21	,	,											,	punct	35
22													_SP	dep	35
23	in	in	in+advl	in	advl								IN	prep	35
24	the	the		dt	art								DT	det	25
25													_SP	dep	23
26	right	right											UH	intj	23
27	i	i		pro	1st	sg							PRP	nsubj	28
28	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	35
29	with	with	in+advl	in	advl								IN	prep	35
30	our	our		dt	poss								PRP$	poss	32
31	particular	particular	attr+npremod	jj	attr								JJ	amod	32
32	airplane	airplane		nn									NN	pobj	29
33	,	,											,	punct	35
34	that	that		pro	dem	sg							DT	nsubj	35
35	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	5
36	not	not											RB	neg	35
37	the	the		dt	art								DT	det	38
38	case	case		nn									NN	attr	35
39	to	to	in+advl	in	advl								IN	prep	35
40	the	the		dt	art								DT	det	41
41	extent	extent		nn		nom							NN	pobj	39
42	that	that		relpro	relpro_that								IN	mark	45
43	we	we		pro	1st								PRP	nsubj	45
44	could	could		vbaux	mod	pos							MD	aux	45
45	make	make	thatcls+ncomp	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	ncomp		VB	acl	41
46	our	our		dt	poss								PRP$	poss	47
47	airplane	airplane		nn									NN	nsubj	48
48	unstable	unstable											JJ	ccomp	45
49	because	because		cs	cos								IN	mark	62
50	,	,											,	punct	62
51	once	once		cs	cs_othr								IN	mark	53
52	we	we		pro	1st								PRP	nsubj	53
53	enter	enter	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	62
54	a	a		dt	art								DT	det	55
55	spin	spin		nn									NN	dobj	53
56	our	our		dt	poss								PRP$	poss	57
57	controller	controller		nn		nom							NN	nsubj	62
58	,	,											,	punct	62
59	is	be		vbaux									VBZ	aux	62
60	not	not											RB	neg	62
61	necessarily	necessarily		rb	othr	ly							RB	advmod	62
62	gon	go											TO	advcl	35
63	na	to		vbaux									TO	aux	64
64	be	be		vbmain	be	nonfinite	simple	active	advlcls				VB	advcl	35
65	able	able		jj	pred								JJ	acomp	64
66	to	to		to									TO	aux	67
67	recover	recover	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	65
68	from	from	in+advl	in	advl								IN	prep	67
69	that	that		pro	dem	sg							DT	pobj	68
70	because	because		cs	cos								IN	mark	74
71	we	we		pro	1st								PRP	nsubj	74
72	do	do		vbaux									VBP	aux	74
73	n't	not											RB	neg	74
74	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VB	advcl	64
75	a	a		dt	art								DT	det	81
76	,	,											,	punct	81
77	full	full	attr+npremod	jj	attr								JJ	amod	79
78	-	-											HYPH	punct	79
79	state	state	nn+npremod	nn		nom	npremod						NN	compound	81
80	space	space	nn+npremod	nn			npremod						NN	compound	81
81	controller	controller		nn		nom							NN	dobj	74
82	that	that		relpro	relpro_that	sg							WDT	nsubj	84
83	can	can		vbaux	mod	pos							MD	aux	84
84	recover	recover	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	81
85	from	from	in+advl	in	advl								IN	prep	84
86	everything	everything		nn	other	nom							NN	pobj	85
87	.	.											.	punct	5

#sentid = 146
0	so	so											RB	ROOT	0
1	.	.											.	punct	0

#sentid = 147
0													_SP	dep	0
1	okay	okay											UH	intj	0
2	.	.											.	punct	1

#sentid = 148
0													_SP	dep	7
1	so	so		rb	link								RB	advmod	7
2	anyway	anyway											RB	intj	7
3	the	the		dt	art								DT	det	4
4	CIRCA	circa		nn		proper							NNP	nsubj	7
5	-	-											HYPH	punct	4
6	two	two											CD	nummod	4
7	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	7
8	what	what		comp	comp_wh								WP	dobj	10
9	we	we		pro	1st								PRP	nsubj	10
10	use	use	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	7
11	to	to		to									TO	aux	12
12	generate	generate	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	10
13	those	those		dt	dt_dem								DT	det	15
14	control	control	nn+npremod	nn			npremod						NN	compound	15
15	plans	plan		nn	pl								NNS	dobj	12
16	and	and		cc	phrs								CC	cc	12
17	then	then		rb	link								RB	advmod	19
18	to	to		to									TO	aux	19
19	execute	execute		vbmain	vblex	nonfinite	simple	active		tocls			VB	conj	12
20	them	they		pro	pl								PRP	dobj	19
21	.	.											.	punct	7

#sentid = 149
0	the	the											DT	intj	4
1	,	,											,	punct	4
2	it	it		pro	3rd	sg							PRP	nsubjpass	4
3	's	be		vbaux									VBZ	auxpass	4
4	divided	divide		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	4
5	into	into	in+advl	in	advl								IN	prep	4
6	two	two											CD	nummod	7
7	parts	part		nn	pl								NNS	pobj	5
8	the	the		dt	art								DT	det	10
9	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	10
10	subsystem	subsystem	appos+npostmod	nn			nappos						NN	appos	7
11	and	and		cc	phrs								CC	cc	10
12	the	the		dt	art								DT	det	16
13	plan	plan	nn+npremod	nn			npremod						NN	compound	15
14	-	-											HYPH	punct	15
15	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	16
16	subsystem	subsystem		nn									NN	conj	10
17	.	.											.	punct	4

#sentid = 150
0	the	the		dt	art								DT	det	2
1	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	2
2	subsystem	subsystem		nn									NN	nsubj	3
3	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	in	in	in+advl	in	advl								IN	prep	3
5	blue	blue											JJ	pobj	4
6	because	because		cs	cos								IN	mark	10
7	,	,											,	punct	10
8	it	it		pro	3rd	sg							PRP	nsubjpass	10
9	's	be		vbaux									VBZ	auxpass	10
10	executed	execute	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls		causative		VBN	advcl	3
11	in	in	in+advl	in	advl								IN	prep	10
12	soft	soft	attr+npremod	jj	attr								JJ	amod	17
13	or	or		cc	phrs								CC	cc	12
14	best	good	attr+npremod	jj	attr								JJS	amod	16
15	-	-											HYPH	punct	16
16	effort	effort		nn									NN	conj	12
17	mode	mode		nn									NN	pobj	11
18	,	,											,	punct	10
19	meaning	mean	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	10
20	that	that		comp	comp_that								IN	mark	23
21	,	,											,	punct	23
22	it	it		pro	3rd	sg							PRP	nsubj	23
23	takes	take	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	19
24	as	as		rb	othr								RB	advmod	25
25	long	long											RB	dobj	23
26	as	as		cs	cs_othr								IN	mark	28
27	it	it		pro	3rd	sg							PRP	nsubj	28
28	needs	need	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	25
29	to	to											TO	xcomp	28
30	to	to		to									TO	aux	31
31	come	come	tocls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	23
32	up	up		rb	prtcle								RP	prt	31
33	with	with	in+advl	in	advl								IN	prep	31
34	an	an		dt									DT	det	36
35	accurate	accurate	attr+npremod	jj	attr								JJ	amod	36
36	plan	plan		nn									NN	pobj	33
37	,	,											,	punct	36
38	that	that		relpro	relpro_that	sg							WDT	nsubjpass	40
39	's	be		vbaux									VBZ	auxpass	40
40	scheduled	schedule	finitecls+rel	vbmain	vblex	pres	simple	pasv_agls	nmod_cls	thatcls	rel		VBN	relcl	36
41	,	,											,	punct	23
42	and	and		cc	cls								CC	cc	23
43	the	the		dt	art								DT	det	47
44	plan	plan	nn+npremod	nn			npremod						NN	compound	46
45	-	-											HYPH	punct	46
46	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	47
47	subsystem	subsystem		nn									NN	nsubj	48
48	is	be		vbmain	be	pres	simple	active					VBZ	conj	23
49	,	,											,	punct	48
50	the	the		dt	art								DT	det	52
51	the	the		dt	art								DT	det	52
52	part	part		nn									NN	attr	48
53	that	that		pro	dem	sg							WDT	pobj	62
54	,	,											,	punct	56
55	we	we		pro	1st								PRP	nsubj	56
56	require	require	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	52
57	hard	hard	attr+npremod	jj	attr								JJ	amod	61
58	real	real	attr+npremod	jj	attr								JJ	amod	60
59	-	-											HYPH	punct	60
60	time	time	nn+npremod	nn			npremod						NN	compound	61
61	response	response		nn									NN	dobj	56
62	for	for	in+advl	in	advl								IN	prep	56
63	.	.											.	punct	3

#sentid = 151
0	i	i		pro	1st	sg							PRP	nsubj	3
1	'm	be		vbaux									VBP	aux	3
2	first	first		rb	link		splaux						RB	advmod	3
3	gon	go		vbmain	vblex	pres	prog	active					VBG	ROOT	3
4	na	to		vbaux									VBG	aux	5
5	go	go		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	3
6	into	into	in+advl	in	advl								IN	prep	5
7	the	the		dt	art								DT	det	11
8	,	,											,	punct	11
9	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	10
10	subsystem	subsystem	nn+npremod	nn			npremod						NN	compound	11
11	algorithm	algorithm		nn									NN	pobj	6
12	,	,											,	punct	5
13	very	very	rb+jjrbmod	rb	othr								RB	advmod	14
14	briefly	briefly	rb+advl	rb	advl	ly							RB	advmod	5
15	,	,											,	punct	5
16	so	so	rb+advl	rb	advl								RB	advmod	5
17	,	,											,	punct	5
18	when	when		rb	advl								WRB	advmod	20
19	we	we		pro	1st								PRP	nsubj	20
20	start	start	finitecls+advl	vbmain	phrsv	pres	simple	active	advlcls	whcls			VBP	advcl	5
21	up	up		rb	prtcle								RP	prt	20
22	the	the		dt	art								DT	det	23
23	system	system		nn									NN	dobj	20

#sentid = 152
0	,	,											,	punct	4
1	it	it		pro	3rd	sg							PRP	nsubj	4
2	first	first		rb	link								RB	advmod	4
3	,	,											,	punct	4
4	reads	read		vbmain	vblex	pres	simple	active					VBZ	ROOT	4
5	in	in	in+advl	in	advl								IN	prep	4
6	the	the		dt	art								DT	det	9
7	user	user	nn+npremod	nn		nom	npremod						NN	compound	9
8	knowledge	knowledge	nn+npremod	nn			npremod						NN	compound	9
9	base	base		nn									NN	pobj	5
10	which	which		relpro	relpro_wh								WDT	nsubj	11
11	contains	contain	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	9
12	the	the		dt	art								DT	det	14
13	state	state	nn+npremod	nn		nom	npremod						NN	compound	14
14	transitions	transition		nn	pl	nom							NNS	dobj	11
15	the	the		dt	art								DT	det	19
16	initial	initial	attr+npremod	jj	attr								JJ	amod	17
17	states	state	nn+npremod	nn	pl	nom	npremod						NNS	compound	19
18	goal	goal	nn+npremod	nn		nom	npremod						NN	compound	19
19	states	state	appos+npostmod	nn	pl	nom	nappos						NNS	appos	14
20	and	and		cc	phrs								CC	cc	19
21	so	so	rb+jjrbmod	rb	othr								RB	advmod	22
22	forth	forth											RB	conj	19
23	,	,											,	punct	4
24	and	and		cc	cls								CC	cc	4
25	at	at	in+advl	in	advl								IN	prep	31
26	that	that		dt	dt_dem								DT	det	27
27	point	point		nn									NN	pobj	25
28	,	,											,	punct	31
29	um	um											UH	intj	31
30	we	we		pro	1st								PRP	nsubj	31
31	have	have		vbmain	vblex	pres	simple	active					VBP	conj	4
32	a	a		dt	art								DT	det	35
33	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	34
34	simple	simple	attr+npremod	jj	attr								JJ	amod	35
35	algorithm	algorithm		nn									NN	dobj	31
36	right	right	rb+jjrbmod	rb	othr								RB	advmod	37
37	now	now	rb+advl	rb	advl								RB	advmod	31
38	that	that		relpro	relpro_that	sg							WDT	nsubj	41
39	just	just	rb+advl	rb	advl								RB	advmod	41
40	,	,											,	punct	41
41	goes	go	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	35
42	down	down	rb+advl	rb	advl								RB	advmod	41
43	through	through		in	in_othr								IN	prep	42
44	a	a		dt	art								DT	det	45
45	list	list		nn		nom							NN	pobj	43
46	of	of	of+npostmod	in	nmod								IN	prep	45
47	subgoals	subgoal		nn	pl	nom							NNS	pobj	46
48	and	and		cc	phrs								CC	cc	47
49	plans	plan		nn	pl								NNS	conj	47
50	for	for	in+npostmod	in	nmod								IN	prep	49
51	them	they		pro	pl								PRP	pobj	50
52	in	in	in+npostmod	in	nmod								IN	prep	49
53	order	order		nn		nom							NN	pobj	52
54	.	.											.	punct	31

#sentid = 153
0	so	so		rb	link								RB	advmod	2
1	we	we		pro	1st								PRP	nsubj	2
2	select	select		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	the	the		dt	art								DT	det	5
4	first	first	attr+npremod	jj	attr								JJ	amod	5
5	subgoal	subgoal		nn		nom							NN	dobj	2
6	.	.											.	punct	2

#sentid = 154
0	at	at	in+advl	in	advl								IN	prep	4
1	that	that		dt	dt_dem								DT	det	2
2	point	point		nn									NN	pobj	0
3	we	we		pro	1st								PRP	nsubj	4
4	run	run		vbmain	vblex	pres	simple	active					VBP	ROOT	4
5	the	the		dt	art								DT	det	6
6	planner	planner		nn		nom							NN	dobj	4
7	,	,											,	punct	6
8	which	which		relpro	relpro_wh								WDT	nsubj	10
9	basically	basically	rb+advl	rb	advl	ly							RB	advmod	10
10	starts	start	finitecls+rel	vbmain	prepv	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	6
11	with	with	in+advl	in	advl								IN	prep	10
12	the	the		dt	art								DT	det	14
13	initial	initial	attr+npremod	jj	attr								JJ	amod	14
14	state	state		nn		nom							NN	pobj	11
15	and	and		cc	phrs								CC	cc	10
16	um	um											UH	intj	10
17	,	,											,	punct	10
18	develops	develop		vbmain	vblex	pres	simple	active					VBZ	conj	10
19	the	the		dt	art								DT	det	22
20	,	,											,	punct	22
21	the	the		dt	art								DT	det	22
22	set	set		nn									NN	dobj	18
23	of	of	of+npostmod	in	nmod								IN	prep	22
24	TAPs	tap		nn	pl								NNS	pobj	23
25	that	that		pro	dem	sg							WDT	dobj	27
26	it	it		pro	3rd	sg							PRP	nsubj	27
27	needs	need	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBZ	relcl	22
28	,	,											,	punct	27
29	um	um											UH	intj	27
30	to	to		to									TO	aux	31
31	avoid	avoid	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	27
32	failure	failure		nn		nom							NN	dobj	31
33	and	and		cc	phrs								CC	cc	31
34	achieve	achieve		vbmain	vblex	nonfinite	simple	active					VB	conj	31
35	the	the		dt	art								DT	det	36
36	goal	goal		nn		nom							NN	dobj	34
37	,	,											,	punct	4
38	and	and		cc	cls								CC	cc	4
39	it	it		pro	3rd	sg							PRP	nsubj	40
40	develops	develop		vbmain	vblex	pres	simple	active					VBZ	conj	4
41	the	the		dt	art								DT	det	42
42	deadlines	deadline		nn	pl								NNS	dobj	40
43	for	for	in+npostmod	in	nmod								IN	prep	42
44	the	the		dt	art								DT	det	46
45	guaranteed	guarantee	attr+npremod	jj	attr	ed							VBN	amod	46
46	TAPs	tap		nn	pl								NNS	pobj	43
47	,	,											,	punct	42
48	which	which		relpro	relpro_wh								WDT	nsubjpass	51
49	are	be		vbaux									VBP	auxpass	51
50	then	then		rb	link								RB	advmod	51
51	turned	turn	finitecls+rel	vbmain	vblex	pres	simple	pasv_by	nmod_cls	whcls	rel		VBN	relcl	42
52	into	into	in+advl	in	advl								IN	prep	51
53	a	a		dt	art								DT	det	54
54	schedule	schedule		nn									NN	pobj	52
55	by	by											IN	agent	51
56	the	the		dt	art								DT	det	57
57	scheduler	scheduler		nn		nom							NN	pobj	55
58	.	.											.	punct	40

#sentid = 155
0	if	if		cs	cnd								IN	mark	3
1	the	the		dt	art								DT	det	2
2	scheduler	scheduler		nn		nom							NN	nsubj	3
3	succeeds	succeed	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBZ	advcl	7
4	that	that		dt	dt_dem								DT	det	5
5	plan	plan		nn									NN	nsubjpass	7
6	is	be		vbaux									VBZ	auxpass	7
7	downloaded	download		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	7
8	and	and		cc	cls								CC	cc	7
9	everything	everything		nn	other	nom							NN	nsubj	10
10	's	be		vbmain	be	pres	simple	active					VBZ	conj	7
11	happy	happy		jj	pred								JJ	acomp	10
12	and	and		cc	phrs								CC	cc	10
13	we	we		pro	1st								PRP	nsubjpass	16
14	're	be		vbaux									VBP	auxpass	16
15	all	all											DT	dep	16
16	done	do		vbmain	vblex	pres	simple	pasv_agls					VBN	conj	10
17	.	.											.	punct	16

#sentid = 156
0	otherwise	otherwise	rb+advl	rb	advl								RB	advmod	19
1	if	if		cs	cnd								IN	mark	4
2	the	the		dt	art								DT	det	3
3	scheduler	scheduler		nn		nom							NN	nsubj	4
4	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBZ	advcl	19
5	unable	unable		jj	pred								JJ	acomp	4
6	to	to		to									TO	aux	7
7	schedule	schedule	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	5
8	all	all											PDT	predet	10
9	the	the		dt	art								DT	det	10
10	TAPs	tap		nn	pl								NNS	dobj	7
11	onto	onto	in+advl	in	advl								IN	prep	7
12	the	the		dt	art								DT	det	13
13	timeline	timeline		nn									NN	pobj	11
14	that	that		pro	dem	sg							WDT	dobj	16
15	it	it		pro	3rd	sg							PRP	nsubj	16
16	has	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBZ	relcl	13
17	,	,											,	punct	19
18	it	it		pro	3rd	sg							PRP	nsubj	19
19	generates	generate		vbmain	vblex	pres	simple	active					VBZ	ROOT	19
20	feedback	feedback		nn									NN	dobj	19
21	for	for	in+npostmod	in	nmod								IN	prep	20
22	the	the		dt	art								DT	det	23
23	planner	planner		nn		nom							NN	pobj	21
24	,	,											,	punct	23
25	which	which		relpro	relpro_wh								WDT	nsubj	27
26	then	then		rb	link								RB	advmod	27
27	has	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	23
28	to	to		to									TO	aux	30
29	,	,											,	punct	30
30	make	make		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	27
31	trade	trade	nn+npremod	nn			npremod						NN	compound	33
32	-	-											HYPH	punct	33
33	offs	off		nn	pl								NNS	dobj	30
34	to	to		to									TO	aux	36
35	,	,											,	punct	36
36	alter	alter	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	30
37	the	the		dt	art								DT	det	38
38	plan	plan		nn									NN	dobj	36
39	so	so		cs	cs_othr								IN	mark	44
40	that	that		cs	cs_othr								IN	mark	44
41	it	it		pro	3rd	sg							PRP	nsubjpass	44
42	can	can		vbaux	mod	pos							MD	aux	44
43	be	be		vbaux									VB	auxpass	44
44	scheduled	schedule	finitecls+advl	vbmain	vblex	vp_w_modal	simple	pasv_agls	advlcls		other_advl		VBN	advcl	36
45	.	.											.	punct	19

#sentid = 157
0													_SP	dep	3
1	so	so		rb	link								RB	advmod	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	what	what											WP	nsubj	5
5	happens	happen	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	3
6	in	in	in+advl	in	advl								IN	prep	5
7	the	the		dt	art								DT	det	8
8	planner	planner		nn		nom							NN	pobj	6
9	.	.											.	punct	3

#sentid = 158
0	um	um											UH	intj	5
1	,	,											,	punct	5
2	i	i		pro	1st	sg							PRP	nsubj	5
3	do	do		vbaux									VBP	aux	5
4	n't	not											RB	neg	5
5	have	have		vbmain	vblex	pres	simple	active					VB	ROOT	5
6	a	a		dt	art								DT	det	8
7	separate	separate	attr+npremod	jj	attr								JJ	amod	8
8	slide	slide		nn									NN	dobj	5
9	for	for	in+npostmod	in	nmod								IN	prep	8
10	the	the		dt	art								DT	det	14
11	plan	plan	nn+npremod	nn			npremod						NN	compound	13
12	-	-											HYPH	punct	13
13	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	14
14	subsystem	subsystem		nn									NN	pobj	9
15	because	because		cs	cos								IN	mark	17
16	it	it		pro	3rd	sg							PRP	nsubj	17
17	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		causative		VBZ	advcl	5
18	basically	basically	rb+advl	rb	advl	ly							RB	advmod	17
19	,	,											,	punct	17
20	a	a		dt	art								DT	det	21
21	dispatcher	dispatcher		nn		nom							NN	attr	17
22	which	which		relpro	relpro_wh								WDT	nsubj	23
23	processes	process	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	21
24	messages	message		nn	pl	nom							NNS	dobj	23
25	between	between	in+npostmod	in	nmod								IN	prep	24
26	,	,											,	punct	25
27	the	the		dt	art								DT	det	29
28	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	29
29	subsystem	subsystem		nn									NN	pobj	25
30	and	and		cc	phrs								CC	cc	29
31	the	the		dt	art								DT	det	36
32	real	real	attr+npremod	jj	attr								JJ	amod	34
33	-	-											HYPH	punct	34
34	time	time	nn+npremod	nn			npremod						NN	compound	36
35	plan	plan	nn+npremod	nn			npremod						NN	compound	36
36	executor	executor		nn		nom							NN	conj	29
37	,	,											,	punct	17
38	and	and		cc	cls								CC	cc	17
39	it	it		pro	3rd	sg							PRP	nsubj	41
40	also	also	rb+advl	rb	advl								RB	advmod	41
41	accesses	access		vbmain	vblex	pres	simple	active					VBZ	conj	17
42	the	the		dt	art								DT	det	44
43	plan	plan	nn+npremod	nn			npremod						NN	compound	44
44	database	database		nn									NN	dobj	41
45	,	,											,	punct	44
46	um	um											UH	intj	44
47	which	which		relpro	relpro_wh								WDT	nsubj	48
48	contains	contain	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	44
49	all	all											DT	dobj	48
50	of	of		in	in_othr								IN	prep	49
51	the	the		dt	art								DT	det	52
52	plans	plan		nn	pl								NNS	pobj	50
53	that	that		pro	dem	sg							WDT	dobj	57
54	it	it		pro	3rd	sg							PRP	nsubj	55
55	needs	need	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	49
56	to	to		to									TO	aux	57
57	retrieve	retrieve		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	55
58	in	in	in+advl	in	advl								IN	prep	57
59	real	real	attr+npremod	jj	attr								JJ	amod	61
60	-	-											HYPH	punct	61
61	time	time		nn									NN	pobj	58
62	for	for	in+advl	in	advl								IN	prep	57
63	failure	failure	nn+npremod	nn		nom	npremod						NN	compound	64
64	avoidance	avoidance		nn		nom							NN	pobj	62
65	.	.											.	punct	5

#sentid = 159
0	i	i		pro	1st	sg							PRP	nsubj	2
1	'll	will		vbaux	mod								MD	aux	2
2	talk	talk		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	2
3	a	a		dt	art								DT	det	4
4	little	little		jj	attr								JJ	amod	5
5	more	more											JJR	dobj	2
6	about	about	in+advl	in	advl								IN	prep	2
7	that	that		pro	dem	sg							DT	pobj	6
8	later	later	rb+advl	rb	advl								RB	advmod	2
9	...	...											:	punct	2

#sentid = 160
0	so	so		rb	link								RB	advmod	2
1	this	this		pro	dem	sg							DT	nsubj	2
2	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	a	a		dt	art								DT	det	5
4	simple	simple	attr+npremod	jj	attr								JJ	amod	5
5	example	example		nn									NN	attr	2
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	something	something		nn	other	nom							NN	pobj	6
8	that	that		relpro	relpro_that	sg							WDT	nsubjpass	11
9	might	might		vbaux	mod	pos							MD	aux	11
10	be	be		vbaux									VB	auxpass	11
11	generated	generate	finitecls+rel	vbmain	vblex	vp_w_modal	simple	pasv_by	nmod_cls	thatcls	rel		VBN	relcl	7
12	by	by											IN	agent	11
13	the	the		dt	art								DT	det	16
14	CIRCA	circa	nn+npremod	nn		proper	npremod						NNP	nmod	16
15	,	,											,	punct	16
16	planner	planner		nn		nom							NN	pobj	12
17	.	.											.	punct	2

#sentid = 161
0	um	um											UH	intj	6
1	,	,											,	punct	6
2	the	the											DT	nsubj	6
3	oval	oval		nn		nom							NN	nsubj	6
4	talks	talk		nn	pl								NNS	dep	6
5	i-	i-											XX	nsubj	6
6	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	6
7	the	the		dt	art								DT	det	12
8	,	,											,	punct	7
9	what	what		comp	comp_wh								WP	dobj	12
10	i	i		pro	1st	sg							PRP	nsubj	12
11	'll	will		vbaux	mod								MD	aux	12
12	use	use	whcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	whcls	vcomp		VB	ccomp	6
13	to	to		to									TO	aux	14
14	represent	represent	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	12
15	the	the		dt	art								DT	det	17
16	initial	initial	attr+npremod	jj	attr								JJ	amod	17
17	state	state		nn		nom							NN	dobj	14
18	.	.											.	punct	6

#sentid = 162
0	so	so		rb	link								RB	advmod	3
1	,	,											,	punct	3
2	this	this		pro	dem	sg							DT	nsubj	3
3	has	have		vbmain	vblex	pres	simple	active					VBZ	ROOT	3
4	three	three											CD	nummod	5
5	features	feature		nn	pl								NNS	dobj	3
6	,	,											,	punct	5
7	um	um											UH	intj	5
8	,	,											,	punct	5
9	a	a		dt	art								DT	det	11
10	navigation	navigation	nn+npremod	nn		nom	npremod						NN	compound	11
11	setting	setting	appos+npostmod	nn		nom	nappos						NN	appos	5
12	,	,											,	punct	11
13	a	a		dt	art								DT	det	14
14	location	location		nn		nom							NN	conj	11
15	in	in	in+npostmod	in	nmod								IN	prep	14
16	space	space		nn									NN	pobj	15
17	and	and		cc	phrs								CC	cc	14
18	,	,											,	punct	14
19	um	um											UH	intj	14
20	,	,											,	punct	14
21	an	an		dt									DT	det	22
22	altitude	altitude		nn									NN	conj	14
23	.	.											.	punct	3

#sentid = 163
0	and	and		cc	cls								CC	cc	4
1	these	these		pro	dem	pl							DT	nsubjpass	4
2	are	be		vbaux									VBP	auxpass	4
3	heavily	heavily	rb+advl	rb	advl	ly							RB	advmod	4
4	discretized	discretize		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	4
5	just	just		rb	othr								RB	advmod	6
6	for	for	in+advl	in	advl								IN	prep	4
7	the	the		dt	art								DT	det	9
8	example	example	nn+npremod	nn			npremod						NN	compound	9
9	purposes	purpose		nn	pl								NNS	pobj	6
10	so	so		cc	phrs								CC	cc	4
11	,	,											,	punct	14
12	do	do		vbaux									VBP	aux	14
13	n't	not											RB	neg	14
14	look	look		vbmain	prepv	pres	simple	active					VB	conj	4
15	at	at	in+advl	in	advl								IN	prep	14
16	this	this		pro	dem	sg							DT	pobj	15
17	and	and		cc	phrs								CC	cc	14
18	think	think		vbmain	vblex	nonfinite	simple	active					VB	conj	14
19	that	that											IN	mark	24
20	somehow	somehow		rb	othr								RB	advmod	24
21	the	the		dt	art								DT	det	22
22	airplane	airplane		nn									NN	nsubjpass	24
23	's	be		vbaux									VBZ	aux	24
24	gon	go		vbaux									TO	aux	26
25	na	to		vbaux									TO	aux	26
26	fly	fly		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	18
27	itself	itself											PRP	dobj	26
28	with	with	in+advl	in	advl								IN	prep	26
29	just	just		rb	othr								RB	advmod	31
30	these	these		dt	dt_dem								DT	det	31
31	states	state		nn	pl	nom							NNS	pobj	28
32	.	.											.	punct	14

#sentid = 164
0	so	so		rb	link								RB	advmod	15
1	,	,											,	punct	15
2	if	if		cs	cnd								IN	mark	4
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	start	start	finitecls+advl	vbmain	phrsv	pres	simple	active	advlcls		conditional		VBP	advcl	15
5	out	out		rb	prtcle								RP	prt	4
6	in	in	in+advl	in	advl								IN	prep	4
7	the	the		dt	art								DT	det	8
8	state	state	nn+npremod	nn		nom	npremod						NN	compound	9
9	S	s		nn									NN	pobj	6
10	-	-											HYPH	punct	9
11	zero	zero											CD	nummod	9
12	,	,											,	punct	15
13	um	um											UH	intj	15
14	we	we		pro	1st								PRP	nsubj	15
15	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	15
16	what	what		comp	comp_wh								WP	dobj	18
17	we	we		pro	1st								PRP	nsubj	18
18	call	call	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	15
19	temporal	temporal	attr+npremod	jj	attr								JJ	amod	20
20	transitions	transition		nn	pl	nom							NNS	oprd	18
21	which	which		relpro	relpro_wh								WDT	nsubj	22
22	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	20
23	things	thing		nn	pl	nom							NNS	attr	22
24	that	that		relpro	relpro_that	sg							WDT	nsubj	27
25	,	,											,	punct	27
26	can	can		vbaux	mod	pos							MD	aux	27
27	occur	occur	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	23
28	over	over	in+advl	in	advl								IN	prep	27
29	time	time		nn									NN	pobj	28
30	and	and		cc	phrs								CC	cc	23
31	actions	action		nn	pl	nom							NNS	conj	23
32	which	which		relpro	relpro_wh								WDT	nsubjpass	34
33	are	be		vbaux									VBP	auxpass	34
34	represented	represent	finitecls+rel	vbmain	vblex	pres	simple	pasv_by	nmod_cls	whcls	rel		VBN	relcl	31
35	by	by											IN	agent	34
36	the	the		dt	art								DT	det	38
37	dashed	dash	attr+npremod	jj	attr	ed							VBN	amod	38
38	lines	line		nn	pl								NNS	pobj	35
39	which	which											WDT	pobj	51
40	um	um											UH	intj	48
41	the	the		dt	art								DT	det	48
42	,	,											,	punct	48
43	the	the		dt	art								DT	det	48
44	planning	planning	nn+npremod	nn		nom	npremod						NN	nmod	48
45	,	,											,	punct	48
46	uh	uh											UH	intj	48
47	uh	uh											UH	intj	48
48	CIRCA	circa		nn		proper							NNP	nsubj	49
49	has	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	38
50	control	control		nn									NN	dobj	49
51	over	over	in+advl	in	advl								IN	prep	49
52	.	.											.	punct	15

#sentid = 165
0	so	so		rb	link								RB	advmod	16
1	in	in	in+advl	in	advl								IN	prep	16
2	state	state	nn+npremod	nn		nom	npremod						NN	compound	3
3	S	s		nn		proper							NNP	pobj	1
4	-	-											HYPH	nummod	3
5	zero	zero											CD	nummod	3
6	in	in	in+advl	in	advl								IN	prep	16
7	in	in		in	in_othr								IN	prep	6
8	fact	fact		nn									NN	pobj	7
9	from	from		in	in_othr								IN	prep	6
10	any	any											DT	pobj	9
11	of	of		in	in_othr								IN	prep	10
12	these	these		dt	dt_dem								DT	det	13
13	states	state		nn	pl	nom							NNS	pobj	11
14	,	,											,	punct	16
15	we	we		pro	1st								PRP	nsubj	16
16	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	16
17	a	a		dt	art								DT	det	19
18	temporal	temporal	attr+npremod	jj	attr								JJ	amod	19
19	transition	transition		nn		nom							NN	dobj	16
20	to	to	in+npostmod	in	nmod								IN	prep	19
21	,	,											,	punct	20
22	somehow	somehow	rb+advl	rb	advl								RB	advmod	25
23	you	you		pro	2nd	sg							PRP	nsubj	25
24	can	can		vbaux	mod	pos							MD	aux	25
25	lose	lose		vbmain	vblex	vp_w_modal	simple	active	compcls		incomp	compdel	VB	pcomp	20
26	altitude	altitude		nn									NN	dobj	25
27	.	.											.	punct	16

#sentid = 166
0	this	this		pro	dem	sg							DT	nsubj	2
1	would	would		vbaux	mod	prd							MD	aux	2
2	correspond	correspond		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	2
3	to	to	in+advl	in	advl								IN	prep	2
4	,	,											,	punct	3
5	hitting	hit	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	3
6	severe	severe	attr+npremod	jj	attr								JJ	amod	8
7	wind	wind	nn+npremod	nn			npremod						NN	compound	8
8	shear	shear		nn									NN	dobj	5
9	or	or		cc	phrs								CC	cc	8
10	,	,											,	punct	11
11	something	something		nn		nom							NN	conj	8
12	like	like	in+npostmod	in	nmod								IN	prep	11
13	that	that		pro	dem	sg							DT	pobj	12
14	.	.											.	punct	2

#sentid = 167
0	and	and		cc	cls								CC	cc	6
1	if	if		cs	cnd								IN	mark	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	happens	happen	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBZ	advcl	6
4	then	then		rb	link								RB	advmod	6
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	end	end		vbmain	phrsv	pres	simple	active					VBP	ROOT	6
7	up	up		rb	prtcle								RP	prt	6
8	with	with	in+advl	in	advl								IN	prep	6
9	low	low	attr+npremod	jj	attr								JJ	amod	10
10	altitude	altitude		nn									NN	pobj	8
11	which	which											WDT	dobj	20
12	if	if		cs	cnd								IN	mark	14
13	you	you		pro	2nd	sg							PRP	nsubj	14
14	do	do	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	18
15	nothing	nothing		nn	other	nom							NN	dobj	14
16	you	you		pro	2nd	sg							PRP	nsubj	18
17	're	be		vbaux									VBP	aux	18
18	going	go	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel	reldel	VBG	relcl	10
19	to	to		to									TO	aux	20
20	crash	crash	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	18
21	.	.											.	punct	6

#sentid = 168
0	um	um											UH	intj	5
1	,	,											,	punct	5
2	the	the											DT	dep	5
3	,	,											,	punct	5
4	there	there											EX	expl	5
5	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	5
6	one	one											CD	nummod	7
7	action	action		nn		nom							NN	attr	5
8	we	we		pro	1st								PRP	nsubj	9
9	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	7
10	to	to		to									TO	aux	12
11	,	,											,	punct	12
12	avoid	avoid		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	9
13	that	that		pro	dem	sg							DT	dobj	12
14	which	which		relpro	relpro_wh								WDT	nsubj	15
15	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	7
16	to	to		to									TO	aux	17
17	climb	climb	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	15
18	and	and		cc	cls								CC	cc	5
19	that	that		dt	dt_dem								DT	det	20
20	action	action		nn		nom							NN	nsubj	21
21	has	have		vbmain	vblex	pres	simple	active					VBZ	conj	5
22	to	to		to									TO	aux	24
23	be	be		vbaux									VB	auxpass	24
24	guaranteed	guarantee		vbmain	vblex	nonfinite	simple	pasv_agls	compcls		vcomp	compdel	VBN	xcomp	21
25	in	in	in+advl	in	advl								IN	prep	24
26	all	all											DT	pobj	25
27	of	of		in	in_othr								IN	prep	26
28	the	the		dt	art								DT	det	29
29	states	state		nn	pl	nom							NNS	pobj	27
30	where	where											WRB	pobj	35
31	the	the		dt	art								DT	det	32
32	crash	crash		nn									NN	nsubj	34
33	could	could		vbaux	mod	pos							MD	aux	34
34	occur	occur	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	29
35	from	from	in+advl	in	advl								IN	prep	34
36	.	.											.	punct	21

#sentid = 169
0	so	so		rb	link								RB	advmod	3
1	you	you		pro	2nd	sg							PRP	nsubj	3
2	also	also	rb+advl	rb	advl								RB	advmod	3
3	see	see		vbmain	vblex	pres	simple	active					VBP	ROOT	3
4	that	that		comp	comp_that								IN	mark	7
5	this	this		pro	dem	sg							DT	nsubj	7
6	,	,											,	punct	7
7	represents	represent	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	3
8	a	a		dt	art								DT	det	11
9	cyclic	cyclic	attr+npremod	jj	attr								JJ	amod	11
10	state	state	nn+npremod	nn		nom	npremod						NN	compound	11
11	space	space		nn									NN	dobj	7
12	um	um											UH	intj	7
13	,	,											,	punct	3
14	and	and		cc	cls								CC	cc	3
15	uh	uh											UH	intj	19
16	,	,											,	punct	19
17	also	also	rb+advl	rb	advl								RB	advmod	19
18	you	you		pro	2nd	sg							PRP	nsubj	19
19	see	see		vbmain	vblex	pres	simple	active					VBP	conj	3
20	that	that		comp	comp_that								IN	mark	22
21	there	there											EX	expl	22
22	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	19
23	temporal	temporal	attr+npremod	jj	attr								JJ	amod	24
24	transitions	transition		nn	pl	nom							NNS	attr	22
25	that	that		relpro	relpro_that	sg							WDT	nsubj	26
26	occur	occur	finitecls+rel	vbmain	prepv	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	24
27	in	in	in+advl	in	advl								IN	prep	26
28	a	a		dt	art								DT	det	29
29	sequence	sequence		nn		nom							NN	pobj	27
30	of	of	of+npostmod	in	nmod								IN	prep	29
31	states	state		nn	pl	nom							NNS	pobj	30
32	which	which											WDT	dobj	36
33	we	we		pro	1st								PRP	nsubj	36
34	we	we		pro	1st								PRP	nsubj	36
35	'll	will		vbaux	mod								MD	aux	36
36	call	call	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel		VB	relcl	24
37	dependent	dependent	attr+npremod	jj	attr								JJ	amod	39
38	temporal	temporal	attr+npremod	jj	attr								JJ	amod	39
39	transitions	transition		nn	pl	nom							NNS	oprd	36
40	.	.											.	punct	19

#sentid = 170
0	so	so		rb	link								RB	advmod	13
1	basically	basically	rb+advl	rb	advl	ly							RB	advmod	13
2	the	the											DT	dep	13
3	,	,											,	punct	13
4	if	if		cs	cnd								IN	mark	6
5	everything	everything		nn	other	nom							NN	nsubj	6
6	goes	go	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBZ	advcl	13
7	well	well	rb+advl	rb	advl								RB	advmod	6
8	,	,											,	punct	13
9	you	you		pro	2nd	sg							PRP	nsubj	13
10	will	will		vbaux	mod	prd							MD	aux	13
11	,	,											,	punct	13
12	tr-	tr-											XX	dep	13
13	traverse	traverse		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	13
14	the	the		dt	art								DT	det	17
15	top	top	attr+npremod	jj	attr								JJ	amod	17
16	five	five											CD	nummod	17
17	states	state		nn	pl	nom							NNS	dobj	13
18	which	which											WDT	nsubj	19
19	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	13
20	to	to		to									TO	aux	23
21	,	,											,	punct	23
22	um	um											UH	intj	23
23	set	set	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	19
24	the	the		dt	art								DT	det	26
25	next	next	attr+npremod	jj	attr								JJ	amod	26
26	fix	fix		nn									NN	dobj	23
27	and	and		cc	phrs								CC	cc	23
28	then	then		rb	link								RB	advmod	30
29	to	to		to									TO	aux	30
30	wait	wait		vbmain	vblex	nonfinite	simple	active		tocls			VB	conj	23
31	while	while		cs	con								IN	mark	33
32	you	you		pro	2nd	sg							PRP	nsubj	33
33	fly	fly	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		concessive		VBP	advcl	30
34	to	to	in+advl	in	advl								IN	prep	33
35	that	that		dt	dt_dem								DT	det	36
36	fix	fix		nn									NN	pobj	34
37	and	and		cc	phrs								CC	cc	30
38	so	so	rb+jjrbmod	rb	othr								RB	advmod	39
39	forth	forth											RB	conj	30
40	until	until		cs	cs_othr								IN	mark	42
41	you	you		pro	2nd	sg							PRP	nsubj	42
42	get	get	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	30
43	to	to	in+advl	in	advl								IN	prep	42
44	your	your		dt	poss								PRP$	poss	45
45	goal	goal		nn		nom							NN	pobj	43
46	.	.											.	punct	13

#sentid = 171
0													_SP	dep	25
1	so	so		rb	link								RB	advmod	25
2	,	,											,	punct	25
3	why	why		comp	comp_wh								WRB	advmod	6
4	do	do		vbaux									VBP	aux	6
5	we	we		pro	1st								PRP	nsubj	6
6	want	want		vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VB	ccomp	25
7	to	to		to									TO	aux	8
8	have	have		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	6
9	some	some		dt									DT	det	10
10	sort	sort		nn									NN	dobj	8
11	of	of	of+npostmod	in	nmod								IN	prep	10
12	probabilistic	probabilistic	attr+npremod	jj	attr								JJ	amod	13
13	planning	planning		nn		nom							NN	pobj	11
14	in	in	in+advl	in	advl								IN	prep	8
15	CIRCA	circa		nn		proper							NNP	pobj	14
16	we	we		pro	1st								PRP	nsubj	25
17	,	,											,	punct	25
18	first	first		rb	link								RB	advmod	25
19	of	of		in	in_othr								IN	prep	18
20	all	all											DT	pobj	19
21	,	,											,	punct	25
22	um	um											UH	intj	25
23	,	,											,	punct	25
24	we	we		pro	1st								PRP	nsubj	25
25	want	want		vbmain	vblex	pres	simple	active					VBP	ROOT	25
26	to	to		to									TO	aux	28
27	pri-	pri-											XX	dep	28
28	prioritize	prioritize		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	25
29	states	state		nn	pl	nom							NNS	dobj	28
30	by	by	in+advl	in	advl								IN	prep	28
31	,	,											,	punct	30
32	some	some		dt									DT	det	33
33	measure	measure		nn		nom							NN	pobj	30
34	and	and		cc	cls								CC	cc	25
35	the	the		dt	art								DT	det	36
36	likelihood	likelihood		nn		nom							NN	nsubj	40
37	of	of	of+npostmod	in	nmod								IN	prep	36
38	them	they		pro	pl								PRP	nsubj	39
39	occurring	occur	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	37
40	is	be		vbmain	be	pres	simple	active					VBZ	conj	25
41	the	the		dt	art								DT	det	42
42	measure	measure		nn		nom							NN	attr	40
43	that	that		pro	dem	sg							WDT	dobj	46
44	we	we		pro	1st								PRP	nsubj	46
45	currently	currently	rb+advl	rb	advl	ly							RB	advmod	46
46	use	use	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	42
47	.	.											.	punct	40

#sentid = 172
0	this	this		pro	dem	sg							DT	nsubj	1
1	enables	enable		vbmain	vblex	pres	simple	active					VBZ	ROOT	1
2	us	we		pro	pl								PRP	nsubj	4
3	to	to		to									TO	aux	4
4	use	use		vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	1
5	best	good	rb+jjrbmod	rb	adjmod								JJS	advmod	7
6	-	-											HYPH	punct	7
7	first	first	attr+npremod	jj	attr								JJ	amod	8
8	search	search		nn									NN	dobj	4
9	which	which		relpro	relpro_wh								WDT	nsubj	14
10	currently	currently	rb+advl	rb	advl	ly							RB	advmod	14
11	,	,											,	punct	14
12	maybe	maybe	rb+advl	rb	advl								RB	advmod	14
13	it	it		pro	3rd	sg							PRP	nsubj	14
14	's	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	8
15	not	not											RB	neg	14
16	absolutely	absolutely	rb+jjrbmod	rb	adjmod	ly							RB	advmod	17
17	necessary	necessary		jj	pred								JJ	acomp	14
18	but	but		cc	cls								CC	cc	1
19	in	in	in+advl	in	advl								IN	prep	34
20	the	the		dt	art								DT	det	21
21	future	future		nn		nom							NN	pobj	19
22	,	,											,	punct	34
23	one	one		pro	other	pl							CD	nsubj	34
24	of	of		in	in_othr								IN	prep	23
25	the	the		dt	art								DT	det	26
26	things	thing		nn	pl	nom							NNS	pobj	24
27	we	we		pro	1st								PRP	nsubj	29
28	're	be		vbaux									VBP	aux	29
29	going	go	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel	reldel	VBG	relcl	23
30	to	to		to									TO	aux	32
31	be	be		vbaux									VB	aux	32
32	looking	look	ingcls+vcomp	vbmain	prepv	nonfinite	prog	active	compcls	ingcls	vcomp		VBG	xcomp	29
33	at	at	in+advl	in	advl								IN	prep	32
34	is	be		vbmain	be	pres	simple	active					VBZ	conj	1
35	actually	actually	rb+advl	rb	advl	ly							RB	advmod	36
36	placing	place	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	34
37	bounds	bound		nn	pl								NNS	dobj	36
38	on	on	in+advl	in	advl								IN	prep	36
39	planning	plan	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	38
40	time	time		nn									NN	dobj	39
41	,	,											,	punct	39
42	um	um											UH	intj	39
43	,	,											,	punct	39
44	wh-	wh-											WP	dep	53
45	at	at	in+advl	in	advl								IN	prep	53
46	which	which		dt									WDT	det	47
47	case	case		nn									NN	pcomp	45
48	best	good	rb+jjrbmod	rb	adjmod								JJS	advmod	50
49	-	-											HYPH	punct	50
50	first	first	attr+npremod	jj	attr								JJ	amod	51
51	search	search		nn									NN	nsubj	53
52	will	will		vbaux	mod	prd							MD	aux	53
53	become	become	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	39
54	more	more	rb+jjrbmod	rb	adjmod								RBR	advmod	55
55	important	important		jj	pred								JJ	acomp	53
56	.	.											.	punct	34

#sentid = 173
0	the	the		dt	art								DT	det	1
1	others	other		nn	pl	nom							NNS	dobj	5
2													_SP	dep	1
3	we	we		pro	1st								PRP	dep	5
4													_SP	dep	5
5	search	search		vbmain	vblex	pres	simple	active					VBP	ROOT	5
6	for	for	in+advl	in	advl								IN	prep	5
7	what	what											WP	pobj	6
8	?	?											.	punct	6

#sentid = 174
0													_SP	dep	0
1	hm	hm											UH	intj	0
2	?	?											.	punct	1

#sentid = 175
0													_SP	dep	0
1	search	search		vbmain	vblex	pres	simple	active					VBP	dep	0
2	for	for	in+advl	in	advl								IN	prep	1
3	what	what											WP	pobj	2
4	?	?											.	punct	2

#sentid = 176
0													_SP	dep	4
1	best	good	rb+jjrbmod	rb	adjmod								JJS	advmod	3
2	-	-											HYPH	punct	3
3	first	first	attr+npremod	jj	attr								JJ	amod	4
4	search	search		nn									NN	ROOT	4
5	.	.											.	punct	4

#sentid = 177
0													_SP	dep	0
1	what	what											WP	pobj	5
2	are	be		vbaux									VBP	aux	4
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	searching	search		vbmain	vblex	pres	prog	active	compcls			compdel	VBG	ccomp	0
5	for	for	in+advl	in	advl								IN	prep	4
6	?	?											.	punct	4

#sentid = 178
0													_SP	dep	3
1	we	we		pro	1st								PRP	nsubj	3
2	're	be		vbaux									VBP	aux	3
3	searching	search		vbmain	vblex	pres	prog	active					VBG	ROOT	3
4	for	for	in+advl	in	advl								IN	prep	3
5	all	all											DT	pobj	4
6	of	of		in	in_othr								IN	prep	5
7	the	the		dt	art								DT	det	8
8	ways	way		nn	pl								NNS	pobj	6
9	to	to		to									TO	aux	10
10	avoid	avoid	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	8
11	failure	failure		nn		nom							NN	dobj	10
12	primarily	primarily	rb+advl	rb	advl	ly							RB	advmod	10
13	,	,											,	punct	10
14	um	um											UH	intj	10
15	in	in	in+advl	in	advl								IN	prep	10
16	all	all											DT	pobj	15
17	of	of		in	in_othr								IN	prep	16
18	the	the		dt	art								DT	det	19
19	states	state		nn	pl	nom							NNS	pobj	17
20	that	that		relpro	relpro_that	sg							WDT	nsubj	21
21	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	19
22	reachable	reachable		jj	pred								JJ	acomp	21
23	from	from	in+jcomp	in	jcomp								IN	prep	22
24	the	the		dt	art								DT	det	26
25	initial	initial	attr+npremod	jj	attr								JJ	amod	26
26	state	state		nn		nom							NN	pobj	23
27	and	and		cc	phrs								CC	cc	10
28	then	then	rb+jjrbmod	rb	othr								RB	advmod	29
29	also	also	rb+advl	rb	advl								RB	advmod	10
30	,	,											,	punct	10
31	um	um											UH	intj	35
32	at	at		rb	othr								IN	advmod	33
33	least	least		rb	othr								JJS	advmod	34
34	one	one											CD	nummod	35
35	way	way		nn									NN	dobj	10
36	to	to		to									TO	aux	37
37	get	get	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	35
38	to	to	in+advl	in	advl								IN	prep	37
39	our	our		dt	poss								PRP$	poss	41
40	goal	goal	nn+npremod	nn		nom	npremod						NN	compound	41
41	state	state		nn		nom							NN	pobj	38
42	.	.											.	punct	3

#sentid = 179
0													_SP	dep	40
1	so	so		rb	link								RB	advmod	40
2	,	,											,	punct	3
3	yes	yes											UH	intj	40
4													_SP	dep	40
5	but	but		cc	phrs								CC	cc	14
6	but	but		cc	phrs								CC	cc	14
7	all	all											PDT	predet	9
8	the	the		dt	art								DT	det	9
9	things	thing		nn	pl	nom							NNS	nsubj	14
10	that	that		pro	dem	sg							WDT	dobj	13
11	you	you		pro	2nd	sg							PRP	nsubj	13
12	're	be		vbaux									VBP	aux	13
13	prioritizing	prioritize	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel		VBG	relcl	9
14	are	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	40
15	things	thing		nn	pl	nom							NNS	attr	14
16	,	,											,	punct	14
17	are	be		vbmain	be	pres	simple	active					VBP	dep	18
18	are	be		vbmain	be	pres	simple	active					VBP	dep	14
19	the	the											DT	dep	18
20	,	,											,	punct	18
21	the	the		dt	art								DT	det	22
22	ways	way		nn	pl								NNS	attr	14
23	things	thing		nn	pl	nom							NNS	nsubj	25
24	could	could		vbaux	mod	pos							MD	aux	25
25	go	go	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	22
26	wrong	wrong		jj	pred								RB	acomp	25
27	,	,											,	punct	14
28	right	right											UH	intj	29
29	so	so											RB	meta	14
30	,	,											,	punct	29
31													_SP	dep	29
32	best	good		jj	attr								JJS	amod	34
33	-	-											HYPH	punct	34
34	fir-	fir-		jj	attr								JJ	amod	35
35													_SP	dep	29
36	well	well											UH	intj	40
37	,	,											,	punct	40
38	prioritizing	prioritize		vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	csubj	40
39	here	here	rb+advl	rb	advl								RB	advmod	38
40	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	40
41	strictly	strictly		rb	othr	ly							RB	advmod	42
42	by	by	in+advl	in	advl								IN	prep	40
43	state	state	nn+npremod	nn		nom	npremod						NN	compound	44
44	probability	probability		nn		nom							NN	pobj	42
45	.	.											.	punct	40

#sentid = 180
0													_SP	dep	15
1	so	so		rb	link								RB	advmod	15
2													_SP	dep	15
3	right	right											UH	intj	15
4	but	but		cc	phrs								CC	cc	15
5	you	you		pro	2nd	sg							PRP	nsubjpass	15
6	do	do		vbaux									VBP	aux	15
7	n't	not											RB	neg	15
8	,	,											,	punct	15
9	this	this											DT	intj	15
10	this	this		dt	dt_dem								DT	det	11
11	search	search		nn									NN	nsubjpass	15
12	is	be		vbaux									VBZ	auxpass	15
13	not	not											RB	neg	15
14	,	,											,	punct	15
15	concluded	conclude		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	15
16	when	when		rb	advl								WRB	advmod	20
17	you	you		pro	2nd	sg							PRP	nsubj	20
18	've	've		vbaux									VBP	aux	20
19	,	,											,	punct	20
20	found	find	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBN	advcl	15
21	a	a		dt	art								DT	det	22
22	path	path		nn									NN	dobj	20
23	right	right		jj	attr								JJ	amod	22
24	because	because		cs	cos								IN	mark	31
25	you	you		pro	2nd	sg							PRP	dep	27
26	you	you		pro	2nd	sg							PRP	nsubj	27
27	need	need		vbmain	vblex	pres	simple	active					VBP	parataxis	31
28	to	to		to									TO	aux	29
29	find	find		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	27
30	,	,											,	punct	31
31	want	want	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBP	advcl	20
32	to	to		to									TO	aux	33
33	find	find		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	31
34	all	all											DT	dobj	33
35	of	of		in	in_othr								IN	prep	34
36	the	the		dt	art								DT	det	37
37													_SP	dep	35
38	all	all											DT	pobj	35
39	of	of		in	in_othr								IN	prep	38
40	the	the		dt	art								DT	det	41
41	paths	path		nn	pl								NNS	pobj	39
42	to	to	in+npostmod	in	nmod								IN	prep	41
43	?	?											.	punct	34
44													_SP	dep	15
45	to	to		in	in_othr								IN	prep	44
46	failure	failure		nn		nom							NN	pobj	45
47	.	.											.	punct	15

#sentid = 181
0													_SP	dep	22
1	well	well											UH	intj	22
2	,	,											,	punct	22
3	that	that		pro	dem	sg							DT	nsubj	4
4	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	22
5	what	what											WP	attr	7
6	we	we		pro	1st								PRP	nsubj	7
7	're	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	4
8	,	,											,	punct	4
9	when	when		rb	advl								WRB	advmod	11
10	we	we		pro	1st								PRP	nsubj	11
11	relax	relax	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	4
12	our	our		dt	poss								PRP$	poss	14
13	probab-	probab-	nn+npremod	nn			npremod						NN	compound	14
14	guarantees	guarantee		nn	pl	nom							NNS	dobj	11
15	from	from	in+advl	in	advl								IN	prep	11
16	absolute	absolute		jj	attr								JJ	amod	15
17	to	to	in+advl	in	advl								IN	prep	11
18	probabilistic	probabilistic		jj	attr								JJ	amod	17
19	what	what		comp	comp_wh								WP	dobj	21
20	we	we		pro	1st								PRP	nsubj	21
21	say	say		vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	csubj	22
22	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	22
23	that	that		comp	comp_that								IN	mark	27
24	,	,											,	punct	27
25	we	we		pro	1st								PRP	nsubj	27
26	can	can		vbaux	mod	pos							MD	aux	27
27	truncate	truncate	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	22
28	the	the		dt	art								DT	det	29
29	search	search		nn									NN	dobj	27
30	,	,											,	punct	27
31	and	and		cc	cls								CC	cc	27
32	everything	everything		nn	other	nom							NN	nsubj	39
33	after	after		cs	cs_othr								IN	mark	35
34	we	we		pro	1st								PRP	nsubj	35
35	truncate	truncate	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	32
36	the	the		dt	art								DT	det	37
37	search	search		nn									NN	dobj	35
38	,	,											,	punct	39
39	has	have		vbmain	vblex	pres	simple	active					VBZ	conj	27
40	some	some		dt									DT	det	42
41	nonzero	nonzero	attr+npremod	jj	attr								JJ	amod	42
42	probability	probability		nn		nom							NN	dobj	39
43	but	but		cc	cls								CC	cc	22
44	,	,											,	punct	48
45	we	we		pro	1st								PRP	nsubj	48
46	did	do		vbaux									VBD	aux	48
47	n't	not											RB	neg	48
48	have	have		vbmain	vblex	past	simple	active					VB	conj	22
49	time	time		nn									NN	dobj	48
50	to	to		to									TO	aux	51
51	think	think	tocls+rel	vbmain	prepv	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	49
52	about	about	in+advl	in	advl								IN	prep	51
53	them	they		pro	pl								PRP	pobj	52
54	.	.											.	punct	22

#sentid = 182
0													_SP	dep	4
1	okay	okay											UH	intj	4
2	so	so		rb	link								RB	advmod	4
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	best	good											JJS	attr	4
6	-	-											:	punct	4
7	first	first	attr+npremod	jj	attr								JJ	amod	8
8	search	search		nn									NN	dep	4
9	but	but		cc	cls								CC	cc	4
10	instead	instead		rb	othr								RB	advmod	11
11	of	of	in+advl	in	advl								IN	prep	22
12	stopping	stop	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	22
13	,	,											,	punct	12
14	y-	y-		nn									NN	punct	22
15	y-	y-	in+npostmod	in	nmod								XX	prep	14
16	you	you		pro	2nd	sg							PRP	nsubj	17
17	're	be		vbmain	be	pres	simple	active					VBP	meta	22
18	y-	y-											XX	dep	17
19	you	you		pro	2nd	sg							PRP	nsubj	22
20	're	be		vbaux									VBP	aux	22
21	,	,											,	punct	22
22	proceeding	proceed		vbmain	vblex	pres	prog	active					VBG	conj	4
23	until	until		cs	cs_othr								IN	mark	25
24	you	you		pro	2nd	sg							PRP	nsubj	25
25	hit	hit	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	22
26	some	some		dt									DT	det	30
27	,	,											,	punct	30
28													_SP	dep	30
29	some	some		dt									DT	det	30
30	limit	limit		nn									NN	dobj	25
31													_SP	dep	30
32	yeah	yeah											UH	intj	30
33	,	,											,	punct	30
34	some	some		dt									DT	det	38
35	some	some		dt									DT	det	38
36	numerical	numerical	attr+npremod	jj	attr								JJ	amod	38
37	,	,											,	punct	38
38	limit	limit	appos+npostmod	nn			nappos						NN	appos	30
39	for	for	in+npostmod	in	nmod								IN	prep	38
40	,	,											,	punct	39
41	searching	searching		nn		nom							NN	pobj	39
42	.	.											.	punct	22

#sentid = 183
0													_SP	dep	2
1	th-	th-											:	punct	0
2													_SP	dep	2

#sentid = 184
0	well	well											UH	intj	41
1	although	although		cs	con								IN	mark	12
2	,	,											,	punct	12
3	i	i		pro	1st	sg							PRP	nsubj	4
4	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	12
5	so	so		rb	link								RB	advmod	12
6	right	right	rb+jjrbmod	rb	othr								RB	advmod	7
7	now	now	rb+advl	rb	advl								RB	advmod	12
8	we	we		pro	1st								PRP	nsubj	12
9	do	do		vbaux									VBP	aux	12
10	n't	not											RB	neg	12
11	,	,											,	punct	12
12	have	have		vbmain	in_othr	pres	simple	active			concessive		VB	prep	0
13	real	real	attr+npremod	jj	attr								JJ	amod	15
14	-	-											HYPH	punct	15
15	time	time	nn+npremod	nn			npremod						NN	compound	16
16	planning	planning		nn		nom							NN	dobj	12
17	so	so		cc	cls								RB	cc	12
18	,	,											,	punct	23
19	i	i		pro	1st	sg							PRP	nsubj	23
20	ca	can		vbaux	mod								MD	aux	23
21	n't	not											RB	neg	23
22	just	just	rb+advl	rb	advl		splaux						RB	advmod	23
23	say	say		vbmain	vblex	vp_w_modal	simple	active					VB	conj	12
24	we	we		pro	1st								PRP	nsubj	26
25	're	be		vbaux									VBP	aux	26
26	gon	go		vbaux									TO	aux	28
27	na	to		vbaux									TO	aux	28
28	plan	plan		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	23
29	till	till		cs	cs_othr								IN	mark	32
30	the	the		dt	art								DT	det	31
31	time	time		nn									NN	nsubj	32
32	expires	expire	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	28
33	and	and		cc	phrs								CC	cc	23
34	then	then		rb	link								RB	advmod	35
35	truncate	truncate		vbmain	vblex	nonfinite	simple	active					VB	conj	23
36	that	that		dt	dt_dem								DT	det	37
37	search	search		nn									NN	dobj	35
38	because	because		cs	cos								IN	mark	41
39	that	that		pro	dem	sg							DT	nsubj	41
40	can	can		vbaux	mod	pos							MD	aux	41
41	leave	leave		vbmain	vblex	vp_w_modal	simple	active			causative		VB	ROOT	41
42	states	state		nn	pl	nom							NNS	dobj	41
43	with	with	in+advl	in	advl								IN	prep	41
44	a	a		dt	art								DT	det	47
45	ninety	ninety											CD	nummod	46
46	percent	percent	nn+npremod	nn		nom	npremod						NN	compound	47
47	probability	probability		nn		nom							NN	pobj	43
48	.	.											.	punct	41

#sentid = 185
0	so	so		rb	link								RB	advmod	2
1	we	we		pro	1st								PRP	nsubj	2
2	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	to	to		to									TO	aux	4
4	think	think		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	2
5	more	more	rb+jjrbmod	rb	othr								RBR	advmod	6
6	carefully	carefully	rb+advl	rb	advl	ly							RB	advmod	4
7	about	about	in+advl	in	advl								IN	prep	4
8	how	how		comp	comp_wh								WRB	advmod	10
9	to	to		to									TO	aux	10
10	do	do		vbmain	vblex	nonfinite	simple	active	compcls	tocls	incomp		VB	pcomp	7
11	that	that		pro	dem	sg							DT	dobj	10
12	and	and		cc	phrs								CC	cc	4
13	not	not											RB	neg	14
14	have	have		vbmain	vblex	nonfinite	simple	active					VB	conj	4
15	some	some		dt									DT	det	19
16	ridiculously	ridiculously	rb+jjrbmod	rb	adjmod	ly							RB	advmod	17
17	low	low	attr+npremod	jj	attr								JJ	amod	19
18	probabilistic	probabilistic	attr+npremod	jj	attr								JJ	amod	19
19	guarantee	guarantee		nn		nom							NN	dobj	14
20	.	.											.	punct	2

#sentid = 186
0	that	that		pro	dem	sg							DT	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	the	the		dt	art								DT	det	7
3	the	the		dt	art								DT	det	7
4	hard	hard	attr+npremod	jj	attr								JJ	amod	7
5	trade	trade	nn+npremod	nn			npremod						NN	compound	7
6	-	-											HYPH	punct	7
7	off	off		nn									NN	attr	1
8	that	that		pro	dem	sg							WDT	dobj	12
9	we	we		pro	1st								PRP	nsubj	12
10	have	have		vbaux									VBP	aux	12
11	n't	not											RB	neg	12
12	done	do	finitecls+rel	vbmain	vblex	pres	perf	active	nmod_cls		rel		VBN	relcl	7
13	yet	yet	rb+advl	rb	advl								RB	advmod	12
14	.	.											.	punct	1

#sentid = 187
0													_SP	dep	19
1	see	see											UH	intj	19
2	that	that		pro	dem	sg							DT	nsubj	3
3	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBZ	advcl	19
4	not	not											RB	neg	3
5	why	why		rb	advl								WRB	advmod	7
6	i	i		pro	1st	sg							PRP	nsubj	7
7	'm	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBP	advcl	19
8	,	,											,	punct	7
9	i	i		pro	1st	sg							PRP	nsubj	10
10	'm	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	19
11	not	not											RB	neg	10
12	sure	sure		jj	pred								JJ	acomp	10
13	i	i		pro	1st	sg							PRP	nsubj	14
14	'm	be	thatcls+jcomp	vbmain	be	pres	simple	active	compcls		jcomp	compdel	VBP	ccomp	12
15	not	not											RB	neg	14
16	sure	sure		jj	pred								JJ	acomp	14
17	,	,											,	punct	19
18	there	there											EX	expl	19
19	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	19
20	a	a		dt	art								DT	det	21
21	probability	probability		nn		nom							NN	attr	19
22	,	,											,	punct	21
23	of	of	of+npostmod	in	nmod								IN	prep	21
24	_	_											XX	pcomp	23
25	involved	involve		vbmain	vblex	nonfinite	simple	active	compcls	edcls	incomp	compdel	VBN	pcomp	23
26	with	with	in+advl	in	advl								IN	prep	25
27	how	how		comp	comp_wh								WRB	advmod	36
28	,	,											,	punct	30
29	uh	uh											UH	intj	30
30	much	much											JJ	dep	36
31	of	of	in+jcomp	in	jcomp								IN	prep	30
32	a	a		dt	art								DT	det	33
33	plan	plan		nn									NN	pobj	31
34	you	you		pro	2nd	sg							PRP	nsubj	36
35	've	've		vbaux									VBP	aux	36
36	been	be	whcls+incomp	vbmain	be	pres	simple	active	compcls	whcls	incomp		VBN	pcomp	26
37	able	able		jj	pred								JJ	acomp	36
38	to	to		to									TO	aux	39
39	find	find	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	37
40	,	,											,	punct	36
41													_SP	dep	36
42	mhm	mhm											UH	intj	36
43													_SP	dep	26
44	and	and		cc									CC	cc	26
45	the	the		dt	art								DT	det	46
46	probabilities	probability		nn	pl	nom							NNS	pobj	26
47	of	of	of+npostmod	in	nmod								IN	prep	46
48	the	the		dt	art								DT	det	49
49	thing	thing		nn		nom							NN	nsubj	51
50	actually	actually	rb+advl	rb	advl	ly							RB	advmod	51
51	succeeding	succeed	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	47
52	,	,											,	punct	51
53	when	when		rb	advl								WRB	advmod	55
54	you	you		pro	2nd	sg							PRP	nsubj	55
55	execute	execute	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	51
56	it	it		pro	3rd	sg							PRP	dobj	55
57	,	,											,	punct	46
58	and	and		cc	phrs								CC	cc	60
59	these	these		pro	dem	pl							DT	nsubj	60
60	are	be		vbmain	be	pres	simple	active					VBP	parataxis	46
61	two	two											CD	nummod	65
62	,	,											,	punct	65
63	completely	completely	rb+jjrbmod	rb	adjmod	ly							RB	advmod	64
64	different	different	attr+npremod	jj	attr								JJ	amod	65
65	things	thing		nn	pl	nom							NNS	attr	60
66	are	be		vbmain	be	pres	simple	active					VBP	conj	46
67	n't	not											RB	neg	66
68	they	they		pro	pl								PRP	nsubj	66
69	?	?											.	punct	19

#sentid = 188
0	so	so		rb	link								RB	advmod	4
1	which	which		dt									WDT	det	3
2	which	which		dt									WDT	det	3
3	one	one		nn									NN	attr	4
4	are	be		vbmain	be	pres	simple	active					VBP	ROOT	4
5	you	you		pro	2nd	sg							PRP	nsubj	4
6	,	,											,	punct	4
7	um	um											UH	intj	4
8	?	?											.	punct	4

#sentid = 189
0													_SP	dep	3
1	are	be		vbaux									VBP	aux	3
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	talking	talk		vbmain	vblex	pres	prog	active					VBG	ROOT	3
4	for	for	in+advl	in	advl								IN	prep	3
5	the	the											DT	pobj	4
6	for	for		in	in_othr								IN	prep	5
7	the	the		dt	art								DT	det	11
8	real	real	attr+npremod	jj	attr								JJ	amod	10
9	-	-											HYPH	punct	10
10	time	time	nn+npremod	nn			npremod						NN	compound	11
11	plan	plan		nn									NN	pobj	6
12	or	or		cc	cls								CC	cc	3
13	are	be		vbaux									VBP	aux	15
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	talking	talk		vbmain	prepv	pres	prog	active					VBG	conj	3
16	about	about	in+advl	in	advl								IN	prep	15
17													_SP	dep	16
18	strictly	strictly		rb	othr	ly							RB	advmod	19
19	for	for	in+advl	in	advl								IN	prep	15
20													_SP	dep	19
21	which	which		dt									WDT	det	22
22	one	one		nn	other	pl							NN	dobj	25
23	are	be		vbaux									VBP	aux	25
24	you	you		pro	2nd	sg							PRP	nsubj	25
25	prioritizing	prioritize		vbmain	vblex	pres	prog	active					VBG	conj	19
26	?	?											.	punct	15

#sentid = 190
0													_SP	dep	6
1	well	well											UH	intj	6
2	,	,											,	punct	6
3	so	so		rb	link								RB	advmod	6
4	we	we		pro	1st								PRP	nsubj	6
5	're	be		vbaux									VBP	aux	6
6	prioritizing	prioritize		vbmain	vblex	pres	prog	active					VBG	ROOT	6
7	the	the		dt	art								DT	det	8
8	probability	probability		nn		nom							NN	dobj	6
9	of	of	of+npostmod	in	nmod								IN	prep	8
10	ever	ever	rb+advl	rb	advl								RB	advmod	11
11	visiting	visit	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	9
12	a	a		dt	art								DT	det	13
13	state	state		nn		nom							NN	dobj	11
14	.	.											.	punct	6

#sentid = 191
0	so	so		cs	cs_othr								IN	mark	3
1	that	that											IN	mark	3
2	we	we		pro	1st								PRP	nsubj	3
3	end	end		vbmain	phrsv	pres	simple	active			other_advl		VBP	ROOT	3
4	up	up		rb	prtcle								RP	prt	3
5	,	,											,	punct	7
6	cons-	cons-											XX	dep	7
7	expanding	expand	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	3
8	first	first	rb+advl	rb	advl								RB	advmod	7
9	the	the		dt	art								DT	det	10
10	states	state		nn	pl	nom							NNS	dobj	7
11	that	that		pro	dem	sg							WDT	dobj	15
12	we	we		pro	1st								PRP	nsubj	13
13	expect	expect	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	10
14	to	to		to									TO	aux	15
15	visit	visit	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	13
16	with	with	in+advl	in	advl								IN	prep	7
17	the	the		dt	art								DT	det	20
18	highest	high	attr+npremod	jj	attr								JJS	amod	20
19													_SP	dep	20
20	probability	probability		nn		nom							NN	pobj	16
21	.	.											.	punct	3

#sentid = 192
0													_SP	dep	0
1	okay	okay											UH	intj	3
2	this	this		pro	dem	sg							DT	nsubj	3
3	is	be		vbmain	in_othr	pres	simple	active					VBZ	prep	0
4	this	this		pro	dem	sg							DT	nsubj	5
5	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	csubj	3
6	as	as	in+advl	in	advl								IN	prep	5
7	for	for		in	in_othr								IN	prep	6
8	priority	priority		nn		nom							NN	pobj	7
9	for	for	in+npostmod	in	nmod								IN	prep	8
10	whether	whether		cs	cs_othr								IN	mark	12
11	to	to		to									TO	aux	12
12	put	put		vbmain	vblex	nonfinite	simple	active	compcls	tocls	other_advl		VB	pcomp	9
13	it	it		pro	3rd	sg							PRP	dobj	12
14	in	in	in+advl	in	advl								IN	prep	12
15	the	the		dt	art								DT	det	16
16	plan	plan		nn									NN	pobj	14
17	,	,											,	punct	8
18	or	or		cc	phrs								CC	cc	8
19	priority	priority		nn		nom							NN	conj	8
20	whether	whether		cs	cs_othr								IN	mark	24
21	,	,											,	punct	24
22	to	to		to									TO	aux	24
23	be	be		vbaux									VB	aux	24
24	thinking	think		vbmain	prepv	nonfinite	prog	active	nmod_cls	ingcls	other_advl		VBG	acl	19
25	about	about	in+advl	in	advl								IN	prep	24
26	it	it		pro	3rd	sg							PRP	pobj	25
27	in	in	in+advl	in	advl								IN	prep	24
28	plan-	plan-		nn									NN	pobj	27
29													_SP	dep	27
30	during	during	in+advl	in	advl								IN	prep	24
31	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	32
32	time	time		nn									NN	pobj	30
33	.	.											.	punct	0

#sentid = 193
0													_SP	dep	21
1	well	well											UH	intj	21
2	,	,											,	punct	21
3	whether	whether		cs	cs_othr								IN	mark	6
4	to	to		to									TO	aux	6
5	be	be		vbaux									VB	aux	6
6	expanding	expand	ingcls+advl	vbmain	vblex	nonfinite	prog	active	advlcls	ingcls	other_advl		VBG	advcl	21
7	it	it		pro	3rd	sg							PRP	dobj	6
8	during	during	in+advl	in	advl								IN	prep	6
9	planning	planning		nn		nom							NN	pobj	8
10	,	,											,	punct	21
11	you	you		pro	2nd	sg							PRP	nsubj	14
12	do	do		vbaux									VBP	aux	14
13	n't	not											RB	neg	14
14	put	put		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	21
15	a	a		dt	art								DT	det	16
16	state	state		nn		nom							NN	dobj	14
17	in	in	in+advl	in	advl								IN	prep	14
18	a	a		dt	art								DT	det	19
19	plan	plan		nn									NN	pobj	17
20	you	you		pro	2nd	sg							PRP	nsubj	21
21	put	put		vbmain	vblex	pres	simple	active					VBP	ROOT	21
22	an	an		dt									DT	det	23
23	action	action		nn		nom							NN	dobj	21
24	in	in	in+advl	in	advl								IN	prep	21
25	a	a		dt	art								DT	det	26
26	plan	plan		nn									NN	pobj	24
27	.	.											.	punct	21

#sentid = 194
0													_SP	dep	0
1	right	right											UH	intj	0

#sentid = 195
0													_SP	dep	14
1	so	so		rb	link								RB	advmod	14
2	if	if		cs	cnd								IN	mark	6
3	you	you		pro	2nd	sg							PRP	nsubj	6
4	do	do		vbaux									VBP	aux	6
5	n't	not											RB	neg	6
6	expand	expand	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VB	advcl	14
7	a	a		dt	art								DT	det	8
8	state	state		nn		nom							NN	dobj	6
9	,	,											,	punct	14
10	then	then		rb	link								RB	advmod	14
11	you	you		pro	2nd	sg							PRP	nsubj	14
12	do	do		vbaux									VBP	aux	14
13	n't	not											RB	neg	14
14	have	have		vbmain	vblex	pres	simple	active					VB	ROOT	14
15	any	any		dt									DT	det	16
16	action	action		nn		nom							NN	dobj	14
17	for	for	in+npostmod	in	nmod								IN	prep	16
18	that	that		dt	dt_dem								DT	det	19
19	state	state		nn		nom							NN	pobj	17
20	.	.											.	punct	14

#sentid = 196
0	and	and		cc	cls								CC	cc	4
1	you	you		pro	2nd	sg							PRP	nsubj	4
2	do	do		vbaux									VBP	aux	4
3	n't	not											RB	neg	4
4	have	have		vbmain	vblex	pres	simple	active					VB	ROOT	4
5	to	to		to									TO	aux	6
6	schedule	schedule		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	4
7	an	an		dt									DT	det	8
8	action	action		nn		nom							NN	dobj	6
9	for	for	in+advl	in	advl								IN	prep	6
10	that	that		dt	dt_dem								DT	det	11
11	state	state		nn		nom							NN	pobj	9
12	.	.											.	punct	4

#sentid = 197
0	so	so		rb	link								RB	advmod	3
1	the	the		dt	art								DT	det	2
2	idea	idea		nn									NN	nsubj	3
3	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	that	that											IN	mark	5
5	by	by	in+advl	in	advl								IN	prep	3
6	,	,											,	punct	5
7	setting	set	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	5
8	a	a		dt	art								DT	det	9
9	threshold	threshold		nn									NN	dobj	7
10	and	and		cc	phrs								CC	cc	7
11	removing	remove		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	7
12	,	,											,	punct	11
13	uh	uh											UH	intj	16
14	basically	basically	rb+advl	rb	advl	ly							RB	advmod	16
15	we	we		pro	1st								PRP	nsubj	16
16	call	call		vbmain	vblex	pres	simple	active					VBP	parataxis	11
17	it	it		pro	3rd	sg							PRP	dobj	16
18	removing	remove	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	16
19	the	the		dt	art								DT	det	20
20	states	state		nn	pl	nom							NNS	dobj	18
21	that	that		relpro	relpro_that	sg							WDT	nsubj	22
22	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	20
23	lower	low		jj	pred								JJR	acomp	22
24	than	than	in+comparative	in	jcomp								IN	prep	23
25	that	that		dt	dt_dem								DT	det	26
26	priority	priority		nn		nom							NN	pobj	24
27	,	,											,	punct	26
28	or	or		cc	phrs								CC	cc	26
29	probability	probability		nn		nom							NN	conj	26
30	but	but		cc									CC	cc	5
31	effectively	effectively	rb+advl	rb	advl	ly							RB	advmod	35
32	what	what											WP	nsubj	34
33	's	be		vbaux									VBZ	aux	34
34	happening	happen		vbmain	vblex	pres	prog	active	compcls	whcls	vcomp		VBG	csubj	35
35	is	be		vbmain	be	pres	simple	active					VBZ	conj	5
36	that	that		comp	comp_that								IN	mark	49
37	,	,											,	punct	49
38	we	we		pro	1st								PRP	nsubj	42
39	are	be		vbaux									VBP	aux	42
40	just	just	rb+advl	rb	advl		splaux						RB	advmod	42
41	not	not											RB	neg	42
42	expanding	expand		vbmain	in_othr	pres	prog	active					VBG	prep	37
43	those	those		dt	dt_dem								DT	det	44
44	states	state		nn	pl	nom							NNS	dobj	42
45	therefore	therefore		rb	link								RB	advmod	49
46	we	we		pro	1st								PRP	nsubj	49
47	do	do		vbaux									VBP	aux	49
48	n't	not											RB	neg	49
49	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VB	ccomp	35
50	any	any		dt									DT	det	51
51	actions	action		nn	pl	nom							NNS	dobj	49
52	for	for	in+npostmod	in	nmod								IN	prep	51
53	them	they		pro	pl								PRP	pobj	52
54	that	that		relpro	relpro_that	sg							WDT	nsubjpass	56
55	are	be		vbaux									VBP	auxpass	56
56	put	put	finitecls+rel	vbmain	vblex	pres	simple	pasv_agls	nmod_cls	thatcls	rel		VBN	relcl	51
57	into	into	in+advl	in	advl								IN	prep	56
58	the	the		dt	art								DT	det	59
59	plan	plan		nn									NN	pobj	57
60	.	.											.	punct	3

#sentid = 198
0													_SP	dep	0
1	so	so		cc									RB	cc	0

#sentid = 199
0	sure	sure											JJ	ROOT	0
1	to	to		to									TO	aux	2
2	be	be	tocls+jcomp	vbmain	be	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	0
3	plan	plan	nn+npremod	nn			npremod						NN	compound	4
4	time	time		nn									NN	attr	2
5													_SP	dep	0

#sentid = 200
0	well	well											UH	intj	11
1	,	,											,	punct	11
2	so	so		cc	phrs								RB	cc	11
3													_SP	dep	11
4	would	would		vbmain	vblex	vp_w_modal	simple	active					MD	dep	11
5	you	you		pro	2nd	sg							PRP	dep	11
6	,	,											,	punct	11
7	would	would		vbmain	vblex	vp_w_modal	simple	active					MD	dep	8
8	you	you		pro	2nd	sg							PRP	dep	11
9	would	would		vbmain	vblex	vp_w_modal	simple	active					MD	dep	11
10	you	you		pro	2nd	sg							PRP	nsubj	11
11	come	come		vbmain	phrsv	nonfinite	simple	active					VB	ROOT	11
12	up	up		rb	prtcle								RP	prt	11
13	with	with	in+advl	in	advl								IN	prep	11
14	a	a		dt	art								DT	det	16
15	different	different	attr+npremod	jj	attr								JJ	amod	16
16	plan	plan		nn									NN	pobj	13
17	if	if		cs	cnd								IN	mark	20
18	you	you		pro	2nd	sg							PRP	nsubj	20
19	,	,											,	punct	20
20	ordered	order	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	11
21	them	they		pro	pl								PRP	dobj	20
22	in	in	in+advl	in	advl								IN	prep	20
23	some	some		dt									DT	det	25
24	other	other	attr+npremod	jj	attr								JJ	amod	25
25	way	way		nn									NN	pobj	22
26	tha-	tha-											DT	dep	20
27	assuming	assume	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	11
28	you	you		pro	2nd	sg							PRP	nsubj	30
29	still	still	rb+advl	rb	advl								RB	advmod	30
30	ignored	ignore	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	27
31	ones	one		nn	pl	pl							NNS	dobj	30
32	that	that		relpro	relpro_that	sg							WDT	nsubj	33
33	fell	fall	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls	thatcls	rel		VBD	relcl	31
34	below	below	in+advl	in	advl								IN	prep	33
35	some	some		dt									DT	det	36
36	threshold	threshold		nn									NN	pobj	34
37	.	.											.	punct	11

#sentid = 201
0													_SP	dep	2
1	no	no											UH	intj	2
2	i	i		pro	1st	sg							PRP	ROOT	2
3	,	,											,	punct	4
4	yeah	yeah											UH	intj	2
5	.	.											.	punct	4

#sentid = 202
0	that	that		pro	dem	sg							DT	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	,	,											,	punct	8
3	right	right	rb+jjrbmod	rb	othr								RB	advmod	4
4	now	now	rb+advl	rb	advl								RB	advmod	8
5	you	you		pro	2nd	sg							PRP	nsubj	8
6	would	would		vbaux	mod	prd							MD	aux	8
7	not	not											RB	neg	8
8	come	come	thatcls+vcomp	vbmain	phrsv	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	1
9	up	up		rb	prtcle								RP	prt	8
10	with	with	in+advl	in	advl								IN	prep	8
11	a	a		dt	art								DT	det	13
12	different	different	attr+npremod	jj	attr								JJ	amod	13
13	plan	plan		nn									NN	pobj	10
14	,	,											,	punct	8
15	because	because		cs	cos								IN	mark	28
16	,	,											,	punct	28
17	the	the		dt	art								DT	det	18
18	motivation	motivation		nn		nom							NN	nsubj	28
19	for	for	in+npostmod	in	nmod								IN	prep	18
20	best	good	rb+jjrbmod	rb	adjmod								JJS	advmod	22
21	-	-											HYPH	punct	22
22	first	first	attr+npremod	jj	attr								JJ	amod	23
23	search	search		nn									NN	pobj	19
24	,	,											,	punct	28
25	right	right	rb+jjrbmod	rb	othr								RB	advmod	26
26	now	now	rb+advl	rb	advl								RB	advmod	28
27	,	,											,	punct	28
28	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		causative		VBZ	advcl	8
29	,	,											,	punct	28
30	not	not											RB	neg	31
31	really	really	rb+advl	rb	advl	ly							RB	advmod	28
32	,	,											,	punct	28
33	as	as		rb	adjmod								RB	advmod	35
34	as	as		rb	adjmod								RB	advmod	35
35	strong	strong		jj	pred								JJ	acomp	28
36	as	as		cs	cs_othr								IN	mark	39
37	it	it		pro	3rd	sg							PRP	nsubj	39
38	will	will		vbaux	mod	prd							MD	aux	39
39	be	be	finitecls+advl	vbmain	be	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	35
40	when	when		rb	advl								WRB	advmod	42
41	we	we		pro	1st								PRP	nsubj	42
42	try	try	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	39
43	to	to		to									TO	aux	44
44	restrict	restrict	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	42
45	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	46
46	time	time		nn									NN	dobj	44
47	.	.											.	punct	1

#sentid = 203
0	so	so		rb	link								RB	advmod	38
1	right	right	rb+jjrbmod	rb	othr								RB	advmod	2
2	now	now	rb+advl	rb	advl								RB	advmod	38
3	if	if		cs	cnd								IN	mark	6
4	you	you		pro	2nd	sg							PRP	nsubj	6
5	,	,											,	punct	6
6	had	have	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	38
7	the	the		dt	art								DT	det	8
8	search	search		nn									NN	nsubj	9
9	ordered	order	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBN	ccomp	6
10	totally	totally	rb+jjrbmod	rb	othr	ly							RB	advmod	11
11	differently	differently	rb+advl	rb	advl	ly							RB	advmod	9
12	,	,											,	punct	6
13	and	and		cc	phrs								CC	cc	6
14	as	as		cs	cs_othr								IN	mark	16
15	you	you		pro	2nd	sg							PRP	nsubj	16
16	got	get	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		other_advl		VBD	advcl	38
17	to	to	in+advl	in	advl								IN	prep	16
18	states	state		nn	pl	nom							NNS	pobj	17
19	that	that		relpro	relpro_that	sg							WDT	nsubj	20
20	were	be	finitecls+rel	vbmain	be	past	simple	active	nmod_cls	thatcls	rel		VBD	relcl	18
21	unlikely	unlikely		jj	pred								JJ	acomp	20
22	just	just	rb+advl	rb	advl								RB	advmod	23
23	threw	throw		vbmain	phrsv	past	simple	active					VBD	dep	16
24	them	they		pro	pl								PRP	dobj	23
25	out	out		rb	prtcle								RP	prt	23
26	instead	instead		rb	othr								RB	advmod	27
27	of	of	in+advl	in	advl								IN	prep	23
28	searching	search		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	23
29	,	,											,	punct	28
30	uh	uh											UH	intj	28
31	i-	i-											XX	dep	16
32	instead	instead		rb	othr								RB	advmod	33
33	of	of	in+advl	in	advl								IN	prep	16
34	expanding	expand	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	33
35	them	they		pro	pl								PRP	dobj	34
36	you	you		pro	2nd	sg							PRP	nsubj	38
37	'd	would		vbaux	mod								MD	aux	38
38	come	come		vbmain	phrsv	vp_w_modal	simple	active					VB	ROOT	38
39	up	up		rb	prtcle								RP	prt	38
40	with	with	in+advl	in	advl								IN	prep	38
41	the	the		dt	art								DT	det	43
42	same	same	attr+npremod	jj	attr								JJ	amod	43
43	plan	plan		nn									NN	pobj	40
44	.	.											.	punct	38

#sentid = 204
0	so	so		rb	link								RB	advmod	8
1	the	the		dt	art								DT	det	2
2	motivation	motivation		nn		nom							NN	nsubj	8
3	for	for	in+npostmod	in	nmod								IN	prep	2
4	best	good	rb+jjrbmod	rb	adjmod								JJS	advmod	6
5	-	-											HYPH	punct	6
6	first	first	attr+npremod	jj	attr								JJ	amod	7
7	search	search		nn									NN	pobj	3
8	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	8
9	really	really	rb+advl	rb	advl	ly							RB	advmod	8
10	for	for		cs	cs_othr								IN	mark	17
11	in	in	in+advl	in	advl								IN	prep	17
12	the	the		dt	art								DT	det	13
13	future	future		nn		nom							NN	pobj	11
14	,	,											,	punct	17
15	to	to		to									TO	aux	17
16	,	,											,	punct	17
17	be	be	tocls+advl	vbmain	be	nonfinite	simple	active	advlcls	tocls	other_advl		VB	advcl	8
18	able	able		jj	pred								JJ	acomp	17
19	to	to		to									TO	aux	20
20	think	think	tocls+jcomp	vbmain	prepv	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	18
21	about	about	in+advl	in	advl								IN	prep	20
22	having	have	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	21
23	real	real	attr+npremod	jj	attr								JJ	amod	25
24	-	-											HYPH	punct	25
25	time	time	nn+npremod	nn			npremod						NN	compound	27
26	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	27
27	bounds	bound		nn	pl								NNS	dobj	22
28	.	.											.	punct	8

#sentid = 205
0													_SP	dep	4
1	uh	uh											UH	intj	4
2	actually	actually	rb+advl	rb	advl	ly							RB	advmod	4
3	Mark	mark		nn		proper							NNP	nsubj	4
4	has	have		vbmain	vblex	pres	simple	active					VBZ	ROOT	4
5	a	a		dt	art								DT	det	7
6	valid	valid	attr+npremod	jj	attr								JJ	amod	7
7	point	point		nn									NN	dobj	4
8	though	though	rb+advl	rb	advl								RB	advmod	4
9	.	.											.	punct	4

#sentid = 206
0	what	what		comp	comp_wh								WP	dobj	4
1	what	what		comp	comp_wh								WP	dobj	4
2	you	you		pro	2nd	sg							PRP	nsubj	4
3	're	be		vbaux									VBP	aux	4
4	doing	do		vbmain	vblex	pres	prog	active	compcls	whcls	vcomp		VBG	csubj	5
5	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	63
6	attaching	attach	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	5
7	probabilities	probability		nn	pl	nom							NNS	dobj	6
8	to	to	in+advl	in	advl								IN	prep	6
9	states	state		nn	pl	nom							NNS	pobj	8
10	,	,											,	punct	6
11													_SP	dep	6
12	yes	yes											UH	intj	6
13													_SP	dep	6
14	and	and		cc	cls								CC	cc	6
15	therefore	therefore		rb	link								RB	advmod	18
16	you	you		pro	2nd	sg							PRP	nsubj	18
17	can	can		vbaux	mod	pos							MD	aux	18
18	prune	prune		vbmain	vblex	vp_w_modal	simple	active					VB	conj	6
19	state	state	nn+npremod	nn		nom	npremod						NN	compound	21
20	-	-											HYPH	punct	21
21	space	space		nn									NN	dobj	18
22	,	,											,	punct	18
23	with	with	in+advl	in	advl								IN	prep	18
24	uh	uh											UH	intj	23
25	,	,											,	punct	23
26	thresholding	thresholde	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	23
27	these	these		dt	dt_dem								DT	det	28
28	probabilities	probability		nn	pl	nom							NNS	dobj	26
29	properly	properly	rb+advl	rb	advl	ly							RB	advmod	26
30	,	,											,	punct	18
31													_SP	dep	18
32	mhm	mhm											UH	intj	18
33													_SP	dep	5
34	uh	uh											UH	intj	42
35	but	but		cc	phrs								CC	cc	42
36	you	you		pro	2nd	sg							PRP	nsubj	37
37	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	42
38	it	it		pro	3rd	sg							PRP	nsubj	42
39	does	do		vbaux									VBZ	aux	42
40	n't	not											RB	neg	42
41	,	,											,	punct	42
42	give	give		vbmain	vblex	pres	simple	active					VB	meta	5
43	,	,											,	punct	42
44	the	the		dt	art								DT	det	47
45	uh	uh											UH	intj	47
46	,	,											,	punct	47
47	probability	probability		nn		nom							NN	dobj	42
48	of	of	of+npostmod	in	nmod								IN	prep	47
49	uh	uh											UH	intj	48
50	finding	find	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	48
51	right	right	attr+npremod	jj	attr								JJ	amod	52
52	plan	plan		nn									NN	dobj	50
53	,	,											,	punct	42
54													_SP	dep	63
55	well	well											UH	intj	63
56	,	,											,	punct	63
57	we	we		pro	1st								PRP	nsubj	63
58	have	have		vbaux									VBP	aux	63
59	n't	not											RB	neg	63
60	even	even	rb+advl	rb	advl		splaux						RB	advmod	63
61	really	really		rb	othr	ly							RB	advmod	62
62	def-	def-											XX	punct	63
63	defined	define		vbmain	vblex	pres	perf	active					VBN	ROOT	63
64	what	what											WP	attr	68
65	the	the		dt	art								DT	det	67
66	right	right	attr+npremod	jj	attr								JJ	amod	67
67	plan	plan		nn									NN	nsubj	68
68	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	63
69	.	.											.	punct	63

#sentid = 207
0													_SP	dep	29
1	so	so		rb	link								RB	advmod	29
2	,	,											,	punct	29
3	i	i		pro	1st	sg							PRP	nsubj	29
4	uh	uh											UH	intj	6
5	just	just		rb	othr								RB	advmod	6
6	to	to											TO	meta	3
7	_	_											XX	punct	6
8	so	so		rb	link								RB	advmod	29
9	,	,											,	punct	22
10	the	the		dt	art								DT	det	11
11	reason	reason		nn									NN	nsubj	22
12	you	you		pro	2nd	sg							PRP	nsubj	13
13	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	11
14	to	to		to									TO	aux	15
15	prioritize	prioritize		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	13
16	at	at	rb+jjrbmod	rb	othr								RB	advmod	17
17	all	all	rb+advl	rb	advl								RB	advmod	15
18	,	,											,	punct	22
19													_SP	dep	22
20	yes	yes											UH	intj	22
21													_SP	dep	22
22	is	be		vbmain	be	pres	simple	active					VBZ	parataxis	29
23	somehow	somehow	rb+advl	rb	advl								RB	advmod	27
24	you	you		pro	2nd	sg							PRP	nsubj	27
25	ca	can		vbaux	mod								MD	aux	27
26	n't	not											RB	neg	27
27	do	do	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	22
28	everything	everything		nn	other	nom							NN	dobj	27
29	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	29
30	the	the		dt	art								DT	det	31
31	reason	reason		nn									NN	attr	29
32	you	you		pro	2nd	sg							PRP	nsubj	35
33	ca	can		vbaux	mod								MD	aux	35
34	n't	not											RB	neg	35
35	do	do	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	31
36	everything	everything		nn	other	nom							NN	dobj	35
37	because	because		cs	cos								IN	mark	41
38	you	you		pro	2nd	sg							PRP	nsubj	41
39	do	do		vbaux									VBP	aux	41
40	n't	not											RB	neg	41
41	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VB	advcl	29
42	time	time		nn									NN	dobj	41
43	to	to		to									TO	aux	44
44	plan	plan	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	42
45	for	for	in+advl	in	advl								IN	prep	44
46	everything	everything		nn	other	nom							NN	pobj	45
47	?	?											.	punct	29

#sentid = 208
0													_SP	dep	3
1	no	no											UH	intj	3
2	it	it		pro	3rd	sg							PRP	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	because	because		cs	cos								IN	mark	5
5	y-	y-											XX	dep	7
6	you	you		pro	2nd	sg							PRP	nsubj	7
7	ca	can	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	MD	ccomp	3
8	n't	not											RB	neg	7
9													_SP	dep	7
10	or	or		cc									CC	cc	9
11	because	because		cs	cos								IN	mark	15
12	you	you		pro	2nd	sg							PRP	nsubj	15
13	would	would		vbaux	mod	prd							MD	aux	15
14	n't	not											RB	neg	15
15	have	have	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		causative		VB	advcl	3
16	time	time		nn									NN	dobj	15
17	to	to		to									TO	aux	18
18	execute	execute	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	16
19	the	the		dt	art								DT	det	20
20	plan	plan		nn									NN	dobj	18
21													_SP	dep	3
22	(	(											-LRB-	punct	3
23	accurately	accurately	rb+advl	rb	advl	ly							RB	advmod	3
24	)	)											-RRB-	punct	3
25													_SP	dep	30
26	cuz	cuz		cs	cs_othr								IN	mark	30
27	you	you		pro	2nd	sg							PRP	nsubj	30
28	would	would		vbaux	mod	prd							MD	aux	30
29	n't	not											RB	neg	30
30	have	have	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	3
31	time	time		nn									NN	dobj	30
32	to	to		to									TO	aux	33
33	guarantee	guarantee	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	31
34	execution	execution		nn		nom							NN	dobj	33
35	of	of	of+npostmod	in	nmod								IN	prep	34
36	the	the		dt	art								DT	det	37
37	plan	plan		nn									NN	pobj	35
38	with	with	in+npostmod	in	nmod								IN	prep	34
39	the	the		dt	art								DT	det	40
40	deadlines	deadline		nn	pl								NNS	pobj	38
41	that	that		pro	dem	sg							WDT	dobj	43
42	you	you		pro	2nd	sg							PRP	nsubj	43
43	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	40
44	.	.											.	punct	3

#sentid = 209
0													_SP	dep	4
1	okay	okay											UH	intj	4
2	so	so		rb	link								RB	advmod	4
3	,	,											,	punct	4
4	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	,	,											,	punct	4
6	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	7
7	prioritization	prioritization		nn		nom							NN	nsubj	4
8	necessarily	necessarily	rb+advl	rb	advl	ly							RB	advmod	4
9	the	the		dt	art								DT	det	11
10	right	right	attr+npremod	jj	attr								JJ	amod	11
11	thing	thing		nn		nom							NN	attr	4
12	?	?											.	punct	4

#sentid = 210
0	uh	uh											UH	intj	2
1	,	,											,	punct	2
2	for	for											IN	ROOT	2
3	that	that		pro	dem	sg							DT	pobj	2
4	,	,											,	punct	2
5													_SP	dep	6
6	purpose	purpose		nn									NN	dep	2
7	?	?											.	punct	2

#sentid = 211
0													_SP	dep	14
1	if	if		cs	cnd								IN	mark	3
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	want	want	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	14
4	to	to		to									TO	aux	5
5	say	say		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	3
6	that	that		comp	comp_that								IN	mark	10
7	you	you		pro	2nd	sg							PRP	nsubj	10
8	're	be		vbaux									VBP	aux	10
9	,	,											,	punct	10
10	ignoring	ignore	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls	thatcls	vcomp		VBG	ccomp	5
11	unli-	unli-											XX	dobj	10
12	so	so											CC	dep	14
13	you	you		pro	2nd	sg							PRP	nsubj	14
14	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	14
15	to	to		to									TO	aux	16
16	have	have		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	14
17	some	some		dt									DT	det	18
18	prioritization	prioritization		nn		nom							NN	dobj	16
19	and	and		cc	cls								CC	cc	14
20	,	,											,	punct	14
21	we	we		pro	1st								PRP	nsubj	30
22	have	have		vbaux									VBP	aux	30
23	n't	not											RB	neg	30
24	,	,											,	punct	30
25	any	any											DT	dep	27
26	,	,											,	punct	27
27	in	in	in+advl	in	advl								IN	prep	30
28	any	any		dt									DT	det	29
29	way	way		nn									NN	pobj	27
30	proven	prove		vbmain	vblex	pres	perf	active					VBN	conj	14
31	that	that		comp	comp_that								IN	mark	33
32	probability	probability		nn		nom							NN	nsubj	33
33	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	30
34	the	the		dt	art								DT	det	36
35	best	good	attr+npremod	jj	attr								JJS	amod	36
36	measure	measure		nn		nom							NN	attr	33
37	,	,											,	punct	33
38	for	for	in+advl	in	advl								IN	prep	33
39	deciding	decide	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	38
40	what	what											WP	dobj	42
41	to	to		to									TO	aux	42
42	ignore	ignore	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	39
43	and	and		cc	phrs								CC	cc	42
44	what	what											WP	dobj	47
45	not	not											RB	neg	47
46	to	to		to									TO	aux	47
47	ignore	ignore		vbmain	vblex	nonfinite	simple	active		tocls			VB	conj	42
48	.	.											.	punct	30

#sentid = 212
0	but	but		cc	cls								CC	cc	3
1	,	,											,	punct	3
2	we	we		pro	1st								PRP	nsubj	3
3	consider	consider		vbmain	vblex	pres	simple	active					VBP	ROOT	3
4	it	it		pro	3rd	sg							PRP	nsubj	6
5	to	to		to									TO	aux	6
6	be	be		vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	3
7	,	,											,	punct	6
8	at	at		rb	othr								IN	advmod	9
9	least	least	rb+jjrbmod	rb	adjmod								JJS	advmod	10
10	advantageous	advantageous		jj	pred								JJ	acomp	6
11	if	if		cs	cnd								IN	mark	15
12	,	,											,	punct	15
13	you	you		pro	2nd	sg							PRP	nsubj	15
14	're	be		vbaux									VBP	aux	15
15	going	go	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		conditional		VBG	advcl	6
16	to	to		to									TO	aux	17
17	ignore	ignore	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	15
18	things	thing		nn	pl	nom							NNS	dobj	17
19	to	to		to									TO	aux	20
20	ignore	ignore	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	17
21	unlikely	unlikely	attr+npremod	jj	attr								JJ	amod	22
22	things	thing		nn	pl	nom							NNS	dobj	20
23	.	.											.	punct	3

#sentid = 213
0													_SP	dep	0
1	(	(											-LRB-	punct	3
2	so	so	rb+jjrbmod	rb	othr								RB	advmod	3
3	often	often		rb	othr								RB	advmod	0
4	)	)											-RRB-	punct	3

#sentid = 214
0													_SP	dep	10
1	so	so		rb	link								RB	advmod	10
2	,	,											,	punct	10
3	so	so		rb	link								RB	advmod	4
4	sketch	sketch		vbmain	vblex	nonfinite	simple	active					VB	dep	10
5	a	a		dt	art								DT	det	6
6	scenario	scenario		nn									NN	dobj	4
7	ca-	ca-											XX	dep	10
8	could	could		vbaux	mod	pos							MD	aux	10
9	you	you		pro	2nd	sg							PRP	nsubj	10
10	sketch	sketch		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	10
11	a	a		dt	art								DT	det	12
12	scenario	scenario		nn									NN	dobj	10
13	where	where		rb	advl								WRB	advmod	17
14	,	,											,	punct	17
15	this	this		pro	dem	sg							DT	nsubj	17
16	would	would		vbaux	mod	prd							MD	aux	17
17	be	be	finitecls+rel	vbmain	be	vp_w_modal	simple	active	nmod_cls	whcls	rel		VB	relcl	12
18	a	a		dt	art								DT	det	25
19	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	20
20	wr-	wr-	attr+npremod	jj	attr								XX	amod	25
21	a	a		dt	art								DT	det	25
22	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	24
23	wrong	wrong	rb+jjrbmod	rb	adjmod								JJ	advmod	24
24	headed	headed	attr+npremod	jj	attr								JJ	amod	25
25	way	way		nn									NN	attr	17
26	to	to	in+npostmod	in	nmod								IN	prep	25
27													_SP	dep	26
28	the	the											DT	pobj	26
29	,	,											,	punct	25
30	where	where		rb	advl								WRB	advmod	33
31	this	this		pro	dem	sg							DT	nsubj	33
32	would	would		vbaux	mod	prd							MD	aux	33
33	be	be	finitecls+rel	vbmain	be	vp_w_modal	simple	active	nmod_cls	whcls	rel		VB	relcl	25
34	a	a		dt	art								DT	det	36
35	wrong	wrong	attr+npremod	jj	attr								JJ	amod	36
36	kind	kind		nn									NN	attr	33
37	of	of	of+npostmod	in	nmod								IN	prep	36
38	way	way		nn									NN	pobj	37
39	?	?											.	punct	10

#sentid = 215
0													_SP	dep	23
1	yeah	yeah											UH	intj	0
2	,	,											,	punct	1
3	yeah	yeah											UH	intj	1
4													_SP	dep	23
5	well	well											UH	intj	23
6	,	,											,	punct	23
7	i	i		pro	1st	sg							PRP	nsubj	8
8	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	23
9	one	one											CD	nummod	10
10	one	one		pro	other	pl							CD	nsubj	23
11	of	of		in	in_othr								IN	prep	10
12	the	the		dt	art								DT	det	13
13	things	thing		nn	pl	nom							NNS	pobj	11
14	that	that		pro	dem	sg							WDT	pobj	21
15	i	i		pro	1st	sg							PRP	nsubj	16
16	claim	claim	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	13
17	CIRCA	circa		nn		proper							NNP	nsubj	18
18	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	16
19	not	not											RB	neg	18
20	useful	useful		jj	pred								JJ	acomp	18
21	for	for	in+jcomp	in	jcomp								IN	prep	20
22	,	,											,	punct	23
23	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	23
24	in	in	in+advl	in	advl								IN	prep	23
25	a	a		dt	art								DT	det	26
26	domain	domain		nn									NN	pobj	24
27	where	where		rb	advl								WRB	advmod	30
28	achieving	achieve		vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	csubj	30
29	goals	goal		nn	pl	nom							NNS	dobj	28
30	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	26
31	just	just	rb+jjrbmod	rb	adjmod								RB	advmod	33
32	as	as		rb	adjmod								RB	advmod	33
33	useful	useful		jj	pred								JJ	acomp	30
34	as	as	in+jcomp	in	jcomp								IN	prep	33
35	avoiding	avoid	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	34
36	failure	failure		nn		nom							NN	dobj	35
37	.	.											.	punct	23

#sentid = 216
0	so	so		rb	link								RB	advmod	5
1	,	,											,	punct	5
2													_SP	dep	3
3	s-	s-											XX	dep	5
4	that	that		pro	dem	sg							DT	nsubj	5
5	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	42
6													_SP	dep	5
7	wh-	wh-											XX	dep	5
8	what	what											WP	dep	5
9	,	,											,	punct	8
10	what	what											WP	dep	11
11	i	i		pro	1st	sg							PRP	dep	13
12	,	,											,	punct	13
13	let	let		vbmain	vblex	nonfinite	simple	active					VB	meta	8
14	me	i		pro	1st	sg							PRP	dobj	13
15	,	,											,	punct	16
16	let	let		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	13
17	me	i		pro	1st	sg							PRP	nsubj	18
18	offer	offer		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	16
19	something	something		nn	other	nom							NN	dobj	18
20													_SP	dep	5
21	yes	yes											UH	meta	5
22													_SP	dep	21
23	i	i		pro	1st	sg							PRP	nsubj	25
24	'll	will		vbaux	mod								MD	aux	25
25	be	be		vbmain	be	vp_w_modal	simple	active					VB	parataxis	27
26	,	,											,	punct	27
27	tell	tell		vbmain	vblex	nonfinite	simple	active					VB	meta	5
28	me	i		pro	1st	sg							PRP	dobj	27
29	tell	tell		vbmain	vblex	nonfinite	simple	active					VB	dep	27
30	me	i		pro	1st	sg							PRP	dobj	29
31	whether	whether		cs	cs_othr								IN	mark	33
32	this	this		pro	dem	sg							DT	nsubj	33
33	is	be		vbmain	be	pres	simple	active	compcls		other_advl	compdel	VBZ	ccomp	29
34	,	,											,	punct	33
35	uh	uh											UH	intj	37
36	uh	uh											UH	intj	37
37	i	i		pro	1st	sg							PRP	ccomp	33
38	,	,											,	punct	33
39	y-	y-											XX	attr	33
40	one	one		pro	other	pl							PRP	nsubj	42
41	can	can		vbaux	mod	pos							MD	aux	42
42	imagine	imagine		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	42
43	a	a		dt	art								DT	det	44
44	situation	situation		nn		nom							NN	dobj	42
45	where	where		rb	advl								WRB	advmod	51
46	the	the											DT	dep	51
47	,	,											,	punct	51
48	um	um											UH	intj	51
49	,	,											,	punct	51
50	there	there											EX	expl	51
51	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	44
52	some	some		dt									DT	det	53
53	events	event		nn	pl	nom							NNS	attr	51
54	that	that		relpro	relpro_that	sg							WDT	nsubj	55
55	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	53
56	,	,											,	punct	55
57	somewhat	somewhat	rb+jjrbmod	rb	othr								RB	advmod	58
58	less	less	rb+jjrbmod	rb	adjmod								RBR	advmod	59
59	probable	probable		jj	pred								JJ	acomp	55
60													_SP	dep	59
61	mhm	mhm											UH	intj	59
62													_SP	dep	59
63	than	than	in+jcomp	in	jcomp								IN	prep	59
64	other	other	attr+npremod	jj	attr								JJ	amod	65
65	events	event		nn	pl	nom							NNS	pobj	63
66	.	.											.	punct	42

#sentid = 217
0	but	but		cc	cls								CC	cc	10
1	the	the		dt	art								DT	det	3
2	computational	computational	attr+npremod	jj	attr								JJ	amod	3
3	cost	cost		nn									NN	nsubj	10
4	to	to		to									TO	aux	5
5	extricate	extricate	tocls+ncomp	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	ncomp		VB	acl	3
6	oneself	oneself											PRP	dobj	5
7	from	from	in+advl	in	advl								IN	prep	5
8	those	those		dt	dt_dem								DT	det	9
9	events	event		nn	pl	nom							NNS	pobj	7
10	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	10
11	so	so	rb+jjrbmod	rb	othr								RB	advmod	12
12	much	much	rb+jjrbmod	rb	adjmod								RB	advmod	13
13	less	less		jj	pred								JJR	acomp	10
14	,	,											,	punct	13
15	that	that		comp	comp_that								IN	mark	19
16	it	it		pro	3rd	sg							PRP	nsubj	19
17	might	might		vbaux	mod	pos							MD	aux	19
18	have	have		vbaux									VB	aux	19
19	been	be	thatcls+jcomp	vbmain	be	vp_w_modal	perf	active	compcls	thatcls	jcomp		VBN	ccomp	13
20	wiser	wise		jj	pred								JJR	acomp	19
21	to	to		to									TO	aux	22
22	put	put		vbmain	vblex	nonfinite	simple	active		tocls			VB	dep	19
23	your	your		dt	poss								PRP$	poss	27
24	,	,											,	punct	27
25	the	the		dt	art								DT	det	27
26	the	the		dt	art								DT	det	27
27	ensemble	ensemble		nn									NN	dobj	22
28	of	of	of+npostmod	in	nmod								IN	prep	27
29	those	those		pro	dem	pl							DT	pobj	28
30	,	,											,	punct	22
31													_SP	dep	22
32	right	right											UH	intj	22
33	.	.											.	punct	10

#sentid = 218
0													_SP	dep	8
1	right	right											UH	intj	8
2	,	,											,	punct	8
3	so	so		rb	link								RB	advmod	8
4	so	so		rb	link								RB	advmod	8
5													_SP	dep	8
6	tasks	task		nn	pl								NNS	nsubj	8
7	might	might		vbaux	mod	pos							MD	aux	8
8	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	8
9	a	a		dt	art								DT	det	11
10	wiser	wise	attr+npremod	jj	attr								JJR	amod	11
11	thing	thing		nn		nom							NN	attr	8
12	to	to											TO	dep	24
13	to	to											TO	dep	24
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	24
16	,	,											,	punct	15
17	you	you		pro	2nd	sg							PRP	nsubj	24
18	do	do		vbaux									VBP	aux	24
19	n't	not											RB	neg	24
20													_SP	dep	24
21	mhm	mhm											UH	intj	24
22													_SP	dep	24
23	always	always	rb+advl	rb	advl		splaux						RB	advmod	24
24	want	want	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	8
25	to	to		to									TO	aux	26
26	search	search		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	24
27	where	where		comp	comp_wh								WRB	advmod	30
28	the	the		dt	art								DT	det	29
29	light	light		nn									NN	nsubj	30
30	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	26
31	but	but		cc	cls								CC	cc	24
32	sometimes	sometimes	rb+advl	rb	advl								RB	advmod	35
33	it	it		pro	3rd	sg							PRP	nsubj	35
34	does	do		vbaux									VBZ	aux	35
35	make	make		vbmain	vblex	pres	simple	active					VB	conj	24
36	sense	sense		nn									NN	dobj	35
37	to	to		to									TO	aux	38
38	search	search	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	35
39	for	for	in+advl	in	advl								IN	prep	38
40	your	your		dt	poss								PRP$	poss	41
41	keys	key		nn	pl								NNS	pobj	39
42	where	where		rb	advl								WRB	advmod	45
43	the	the		dt	art								DT	det	44
44	light	light		nn									NN	nsubj	45
45	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	38
46	.	.											.	punct	8

#sentid = 219
0													_SP	dep	5
1	so	so		rb	link								RB	advmod	2
2	does	do		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	5
3	that	that		pro	dem	sg							DT	nsubj	2
4	,	,											,	punct	5
5	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	5
6	that	that		pro	dem	sg							DT	nsubj	5
7	?	?											.	punct	5

#sentid = 220
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	1

#sentid = 221
0	right	right											UH	intj	1
1	so	so	rb+jjrbmod	rb	othr								RB	advmod	3
2	a	a		dt	art								DT	det	3
3	little	little											JJ	ROOT	3
4	,	,											,	punct	5
5	yeah	yeah											UH	intj	3

#sentid = 222
0	.	.											.	ROOT	0

#sentid = 223
0	well	well											UH	intj	8
1	so	so		rb	link								RB	advmod	8
2	a	a		dt	art								DT	det	4
3	little	little	attr+npremod	jj	attr								JJ	amod	4
4	bit	bit		nn									NN	npadvmod	5
5	later	later	rb+advl	rb	advl								RBR	advmod	8
6	i	i		pro	1st	sg							PRP	nsubj	8
7	'm	be		vbaux									VBP	aux	8
8	going	go		vbmain	vblex	pres	prog	active					VBG	ROOT	8
9	to	to		to									TO	aux	10
10	talk	talk	tocls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	8
11	about	about	in+advl	in	advl								IN	prep	10
12	two	two											CD	nummod	14
13	different	different	attr+npremod	jj	attr								JJ	amod	14
14	mechanisms	mechanism		nn	pl	nom							NNS	pobj	11
15	we	we		pro	1st								PRP	nsubj	16
16	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	14
17	that	that											WDT	dep	20
18	the	the		dt	art								DT	det	19
19	scheduler	scheduler		nn		nom							NN	nsubj	20
20	directs	direct	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBZ	relcl	14
21	the	the		dt	art								DT	det	22
22	planner	planner		nn		nom							NN	dobj	20
23	to	to		to									TO	aux	25
24	,	,											,	punct	25
25	backtrack	backtrack	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	20
26	.	.											.	punct	8

#sentid = 224
0	the	the		dt	art								DT	det	1
1	one	one		pro	other	pl							CD	nsubj	24
2	that	that		pro	dem	sg							WDT	pobj	8
3	i	i		pro	1st	sg							PRP	nsubj	7
4	have	have		vbaux									VBP	aux	7
5	have	have		vbaux									VB	aux	7
6	mostly	mostly	rb+advl	rb	advl	ly	splaux						RB	advmod	7
7	talked	talk	finitecls+rel	vbmain	prepv	pres	perf	active	nmod_cls		rel	reldel	VBN	relcl	1
8	about	about	in+advl	in	advl								IN	prep	7
9	here	here	rb+advl	rb	advl								RB	advmod	7
10	which	which		relpro	relpro_wh								WDT	nsubj	11
11	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	1
12	the	the		dt	art								DT	det	13
13	one	one		nn									NN	attr	11
14	that	that		relpro	relpro_that	sg							WDT	nsubjpass	18
15	has	have		vbaux									VBZ	aux	18
16	been	be		vbaux									VBN	auxpass	18
17	fully	fully	rb+advl	rb	advl	ly	splaux						RB	advmod	18
18	implemented	implement	finitecls+rel	vbmain	vblex	pres	perf	pasv_agls	nmod_cls	thatcls	rel		VBN	relcl	13
19	and	and		cc	phrs								CC	cc	18
20	tested	test		vbmain	vblex	nonfinite	simple	active		edcls			VBN	conj	18
21	in	in	in+advl	in	advl								IN	prep	20
22	CIRCA	circa		nn		proper							NNP	pobj	21
23	,	,											,	punct	1
24	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	24
25	by	by	in+advl	in	advl								IN	prep	24
26	generating	generate	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	25
27	this	this		dt	dt_dem								DT	det	28
28	threshold	threshold		nn									NN	dobj	26
29	for	for	in+npostmod	in	nmod								IN	prep	28
30	removing	remove	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	29
31	low	low	attr+npremod	jj	attr								JJ	amod	33
32	-	-											HYPH	punct	33
33	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	34
34	states	state		nn	pl	nom							NNS	dobj	30
35	.	.											.	punct	24

#sentid = 225
0	the	the		dt	art								DT	det	2
1	second	second		jj	attr								JJ	amod	2
2	one	one		pro	other	pl							CD	nsubj	28
3	that	that		pro	dem	sg							WDT	pobj	7
4	we	we		pro	1st								PRP	nsubj	6
5	've	've		vbaux									VBP	aux	6
6	thought	think	finitecls+rel	vbmain	prepv	pres	simple	active	nmod_cls		rel	reldel	VBN	relcl	2
7	about	about	in+advl	in	advl								IN	prep	6
8	at	at		rb	othr								IN	advmod	9
9	least	least		rb	othr								JJS	advmod	10
10	from	from	in+advl	in	advl								IN	prep	6
11	the	the		dt	art								DT	det	13
12	higher	high	attr+npremod	jj	attr								JJR	amod	13
13	level	level		nn									NN	pobj	10
14	,	,											,	punct	2
15	how	how		rb	advl								WRB	advmod	17
16	it	it		pro	3rd	sg							PRP	nsubj	17
17	works	work	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	28
18	how	how		comp	comp_wh								WRB	advmod	23
19	the	the		dt	art								DT	det	20
20	scheduler	scheduler		nn		nom							NN	nsubj	23
21	and	and		cc	phrs								CC	cc	20
22	planner	planner		nn		nom							NN	conj	20
23	talk	talk	whcls+vcomp	vbmain	prepv	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	17
24	to	to	in+advl	in	advl								IN	prep	23
25	each	each		dt									DT	det	26
26	other	other											JJ	pobj	24
27	,	,											,	punct	28
28	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	28
29	to	to		to									TO	aux	30
30	identify	identify	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	28
31	a	a		dt	art								DT	det	33
32	bottleneck	bottleneck	nn+npremod	nn			npremod						NN	compound	33
33	task	task		nn									NN	dobj	30
34	y-	y-											XX	relcl	33
35	that	that		pro	dem	sg							WDT	nsubj	36
36	does	do		vbmain	vblex	pres	simple	active					VBZ	dep	41
37	n't	not											RB	neg	36
38	,	,											,	punct	41
39	um	um											UH	intj	41
40	that	that		relpro	relpro_that	sg							DT	nsubj	41
41	uses	use	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	33
42	a	a		dt	art								DT	det	43
43	lot	lot		nn									NN	dobj	41
44	of	of	of+npostmod	in	nmod								IN	prep	43
45	resources	resource		nn	pl								NNS	pobj	44
46	but	but		cc	cls								CC	cc	41
47	it	it		pro	3rd	sg							PRP	nsubj	48
48	may	may		vbmain	vblex	vp_w_modal	simple	active					MD	conj	41
49	not	not											RB	neg	48
50	necessarily	necessarily		rb	othr	ly							RB	advmod	48
51	.	.											.	punct	28

#sentid = 226
0	it	it		pro	3rd	sg							PRP	nsubj	1
1	considers	consider		vbmain	vblex	pres	simple	active					VBZ	ROOT	1
2	the	the		dt	art								DT	det	3
3	probability	probability		nn		nom							NN	dobj	1
4	but	but		cc	cls								CC	cc	1
5	it	it		pro	3rd	sg							PRP	nsubj	8
6	does	do		vbaux									VBZ	aux	8
7	n't	not											RB	neg	8
8	focus	focus		vbmain	vblex	pres	simple	active					VB	conj	1
9	only	only		rb	othr	ly							RB	advmod	10
10	on	on	in+advl	in	advl								IN	prep	8
11	that	that		pro	dem	sg							DT	pobj	10
12	.	.											.	punct	8

#sentid = 227
0	so	so		rb	link								RB	advmod	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	that	that		pro	dem	sg							DT	nsubj	6
4	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	5
5	of	of	rb+advl	rb	advl								RB	advmod	6
6	gets	get	thatcls+vcomp	vbmain	prepv	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	2
7	at	at	in+advl	in	advl								IN	prep	6
8	what	what											WP	pobj	12
9	you	you		pro	2nd	sg							PRP	nsubj	11
10	're	be		vbaux									VBP	aux	11
11	talking	talk		vbmain	prepv	pres	prog	active					VBG	pobj	7
12	about	about	in+advl	in	advl								IN	prep	11
13	,	,											,	punct	11
14	which	which		relpro	relpro_wh								WDT	nsubj	15
15	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	11
16	that	that		comp	comp_that								IN	mark	19
17	maybe	maybe	rb+advl	rb	advl								RB	advmod	19
18	there	there											EX	expl	19
19	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	15
20	some	some		dt									DT	det	21
21	task	task		nn									NN	attr	19
22	that	that		relpro	relpro_that	sg							WDT	nsubj	23
23	's	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	21
24	expensive	expensive		jj	pred								JJ	acomp	23
25	and	and		cc	cls								CC	cc	19
26	you	you		pro	2nd	sg							PRP	nsubj	28
27	wanna	wanna		vbaux	mod								MD	aux	28
28	consider	consider		vbmain	vblex	vp_w_modal	simple	active					VB	conj	19
29	removing	remove	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	28
30	that	that		pro	dem	sg							DT	dobj	29
31	instead	instead		rb	othr								RB	advmod	32
32	of	of		cc									IN	cc	30
33	the	the		dt	art								DT	det	34
34	threshold	threshold		nn									NN	conj	30
35	.	.											.	punct	2

#sentid = 228
0													_SP	dep	6
1	so	so		rb	link								RB	advmod	6
2	did	do		vbaux									VBD	aux	6
3	you	you		pro	2nd	sg							PRP	nsubj	6
4	,	,											,	punct	6
5	pa-	pa-											XX	dep	6
6	try	try	finitecls+advl	vbmain	vblex	past	simple	active	advlcls				VB	advcl	19
7	to	to		to									TO	aux	8
8	work	work	tocls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	6
9	up	up		rb	prtcle								RP	prt	8
10	,	,											,	punct	8
11	a	a		dt	art								DT	det	12
12	representation	representation		nn		nom							NN	dobj	8
13	of	of	of+npostmod	in	nmod								IN	prep	12
14	the	the		dt	art								DT	det	15
15	p-	p-		nn									NN	pobj	13
16	i	i		pro	1st	sg							PRP	nsubj	17
17	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	19
18	,	,											,	punct	19
19	seems	seem		vbmain	vblex	pres	simple	active					VBZ	ROOT	19
20	to	to	in+advl	in	advl								IN	prep	19
21	me	i		pro	1st	sg							PRP	pobj	20
22	that	that		cs	cs_othr								IN	mark	24
23	there	there											EX	expl	24
24	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBZ	advcl	42
25	a	a		dt	art								DT	det	26
26	fun-	fun-											:	attr	24
27	there	there											EX	expl	28
28	's	be		vbmain	be	pres	simple	active					VBZ	dep	42
29	a	a		dt	art								DT	det	32
30	more	more	rb+jjrbmod	rb	adjmod								RBR	advmod	31
31	fundamental	fundamental	attr+npremod	jj	attr								JJ	amod	32
32	problem	problem		nn									NN	attr	28
33	,	,											,	punct	28
34													_SP	dep	28
35	mhm	mhm											UH	intj	28
36													_SP	dep	28
37	that	that		cs	cs_othr								IN	mark	42
38	,	,											,	punct	42
39	i	i		pro	1st	sg							PRP	nsubj	42
40	do	do		vbaux									VBP	aux	42
41	n't	not											RB	neg	42
42	hear	hear	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VB	advcl	57
43	you	you		pro	2nd	sg							PRP	nsubj	44
44	articulating	articulate		vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	ccomp	42
45	,	,											,	punct	57
46	that	that		cs	cs_othr								IN	mark	48
47	we	we		pro	1st								PRP	nsubj	48
48	're	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBP	advcl	57
49	,	,											,	punct	57
50	that	that		comp	comp_that								IN	mark	57
51	,	,											,	punct	57
52	i	i		pro	1st	sg							PRP	nsubj	53
53	do	do		vbmain	vblex	pres	simple	active					VBP	parataxis	57
54	n't	not											RB	neg	53
55	,	,											,	punct	57
56	i	i		pro	1st	sg							PRP	nsubj	57
57	'm	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	19
58	not	not											RB	neg	57
59	sure	sure		jj	pred								JJ	acomp	57
60	i	i		pro	1st	sg							PRP	nsubj	61
61	know	know	thatcls+jcomp	vbmain	vblex	pres	simple	active	compcls		jcomp	compdel	VBP	ccomp	59
62	how	how		rb	advl								WRB	advmod	64
63	to	to		to									TO	aux	64
64	articulate	articulate	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	61
65	it	it		pro	3rd	sg							PRP	dobj	64
66	,	,											,	punct	57
67													_SP	dep	57
68	right	right											UH	intj	19
69													_SP	dep	19

#sentid = 229
0	but	but		cc	cls								CC	cc	10
1	,	,											,	punct	10
2	i	i		pro	1st	sg							PRP	nsubj	6
3	i	i		pro	1st	sg							PRP	nsubj	6
4	do	do		vbaux									VBP	aux	6
5	n't	not											RB	neg	6
6	believe	believe		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	10
7	that	that		pro	dem	sg							DT	dobj	6
8	,	,											,	punct	10
9	i	i		pro	1st	sg							PRP	nsubj	10
10	'm	be		vbmain	be	pres	simple	active					VBP	ROOT	10
11	not	not											RB	neg	10
12	sure	sure		jj	pred								JJ	acomp	10
13	that	that		comp	comp_that								IN	mark	18
14	you	you		pro	2nd	sg							PRP	nsubj	18
15	've	've		vbaux									VBP	aux	18
16	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	18
17	,	,											,	punct	18
18	done	do	thatcls+jcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	jcomp		VBN	ccomp	12
19	your	your		dt	poss								PRP$	poss	20
20	job	job		nn									NN	dobj	18
21	in	in	in+npostmod	in	nmod								IN	prep	20
22	looking	look	ingcls+incomp	vbmain	prepv	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	21
23	at	at	in+advl	in	advl								IN	prep	22
24	the	the		dt	art								DT	det	26
25	various	various	attr+npremod	jj	attr								JJ	amod	26
26	ways	way		nn	pl								NNS	pobj	23
27	that	that	rb+advl	rb	advl								WDT	advmod	30
28	you	you		pro	2nd	sg							PRP	nsubj	30
29	could	could		vbaux	mod	pos							MD	aux	30
30	make	make	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel		VB	relcl	26
31	the	the		dt	art								DT	det	32
32	decision	decision		nn									NN	dobj	30
33	without	without	in+advl	in	advl								IN	prep	30
34	having	have	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	33
35	proof	proof		nn									NN	dobj	34
36	.	.											.	punct	10

#sentid = 230
0	and	and		cc	cls								CC	cc	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	that	that		comp	comp_that								IN	mark	8
4	,	,											,	punct	8
5	if	if		cs	cnd								IN	mark	6
6	not	not											RB	advcl	8
7	,	,											,	punct	8
8	pro-	pro-											XX	ccomp	2
9	possibly	possibly		rb	othr	ly							RB	advmod	12
10	not	not											RB	neg	12
11	this	this		dt	dt_dem								DT	det	12
12	month	month		nn									NN	npadvmod	8
13	but	but		cc	phrs								CC	cc	12
14													_SP	dep	12
15	mhm	mhm											UH	intj	12
16													_SP	dep	12
17	maybe	maybe		rb	othr								RB	advmod	18
18	in	in											IN	conj	12
19	the	the		dt	art								DT	det	22
20	next	next	attr+npremod	jj	attr								JJ	amod	22
21	couple	couple	nn+npremod	nn			npremod						NN	compound	22
22	months	month		nn	pl								NNS	pobj	18
23	as	as		cs	cs_othr								IN	mark	25
24	you	you		pro	2nd	sg							PRP	nsubj	25
25	settle	settle	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	2
26	into	into	in+advl	in	advl								IN	prep	25
27	your	your		dt	poss								PRP$	poss	30
28	new	new		jj	attr								JJ	amod	30
29	,	,											,	punct	30
30													_SP	dep	26
31	right	right											UH	intj	2
32	.	.											.	punct	2

#sentid = 231
0													_SP	dep	0
1	situation	situation		nn		nom							NN	dobj	0

#sentid = 232
0	you	you		pro	2nd	sg							PRP	ROOT	0

#sentid = 233
0	might	might		vbmain	vblex	vp_w_modal	simple	active					MD	ROOT	0

#sentid = 234
0	,	,											,	punct	4
1	you	you		pro	2nd	sg							PRP	nsubj	4
2	might	might		vbaux	mod	pos							MD	aux	4
3	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	4
4	make	make		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	4
5	it	it		pro	3rd	sg							PRP	dobj	4
6	,	,											,	punct	4
7	a	a		dt	art								DT	det	10
8	more	more	rb+jjrbmod	rb	adjmod								RBR	advmod	9
9	fundamental	fundamental	attr+npremod	jj	attr								JJ	amod	10
10	contribution	contribution		nn		nom							NN	dobj	4
11	by	by	in+advl	in	advl								IN	prep	4
12	,	,											,	punct	11
13	trying	try	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	11
14	to	to		to									TO	aux	15
15	work	work	tocls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	13
16	out	out		rb	prtcle								RP	prt	15
17	,	,											,	punct	15
18	what	what											WP	attr	22
19	the	the		dt	art								DT	det	21
20	pruning	pruning	nn+npremod	nn		nom	npremod						NN	compound	21
21	dimensions	dimension		nn	pl								NNS	nsubj	22
22	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	15
23	.	.											.	punct	4

#sentid = 235
0	how	how		rb	advl								WRB	advmod	5
1	how	how		rb	advl								WRB	advmod	5
2	do	do		vbmain	vblex	nonfinite	simple	active					VB	dep	5
3	,	,											,	punct	5
4	what	what											WP	attr	5
5	are	be		vbmain	be	pres	simple	active					VBP	ROOT	5
6	some	some											DT	nsubj	5
7	of	of											IN	dep	16
8	the	the											DT	dep	16
9	,	,											,	punct	16
10	what	what											WP	dep	16
11	,	,											,	punct	16
12	almost	almost	rb+jjrbmod	rb	othr								RB	advmod	13
13	formally	formally	rb+advl	rb	advl	ly							RB	advmod	16
14	,	,											,	punct	16
15	what	what											WP	attr	16
16	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	5
17	some	some											DT	nsubj	16
18	of	of		in	in_othr								IN	prep	17
19	the	the		dt	art								DT	det	20
20	dimensions	dimension		nn	pl								NNS	pobj	18
21	along	along	in+advl	in	advl								IN	prep	25
22	which	which											WDT	pobj	21
23	you	you		pro	2nd	sg							PRP	nsubj	25
24	could	could		vbaux	mod	pos							MD	aux	25
25	prove	prove	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	20
26	this	this		pro	dem	sg							DT	dobj	25
27	.	.											.	punct	5

#sentid = 236
0													_SP	dep	18
1	you	you		pro	2nd	sg							PRP	nsubj	2
2	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	0
3	,	,											,	punct	2
4	large	large		jj	attr								JJ	amod	5
5	expan-	expan-											XX	punct	0
6													_SP	dep	0
7	well	well											UH	intj	18
8	,	,											,	punct	18
9	so	so		rb	link								RB	advmod	11
10	there	there											EX	expl	11
11	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	18
12	two	two											CD	nummod	14
13	basic	basic	attr+npremod	jj	attr								JJ	amod	14
14	dimensions	dimension		nn	pl								NNS	attr	11
15	,	,											,	punct	11
16	one	one		pro	other	pl							CD	nsubj	18
17	is	be		vbaux									VBZ	aux	18
18	relaxing	relax		vbmain	vblex	pres	prog	active					VBG	ROOT	18
19	the	the		dt	art								DT	det	20
20	deadlines	deadline		nn	pl								NNS	dobj	18
21	for	for	in+npostmod	in	nmod								IN	prep	20
22	tasks	task		nn	pl								NNS	pobj	21
23	and	and		cc	cls								CC	cc	18
24	the	the		dt	art								DT	det	25
25	other	other											JJ	nsubj	26
26	is	be		vbmain	be	pres	simple	active					VBZ	conj	18
27	removing	remove	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	26
28	them	they		pro	pl								PRP	dobj	27
29	altogether	altogether	rb+advl	rb	advl								RB	advmod	27
30	or	or		cc	phrs								CC	cc	27
31	replacing	replace		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	27
32	them	they		pro	pl								PRP	dobj	31
33	with	with	in+advl	in	advl								IN	prep	31
34	a	a		dt	art								DT	det	35
35	task	task		nn									NN	pobj	33
36	that	that		relpro	relpro_that	sg							WDT	nsubj	37
37	requires	require	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	35
38	fewer	few	attr+npremod	jj	attr								JJR	amod	39
39	resources	resource		nn	pl								NNS	dobj	37
40	.	.											.	punct	18

#sentid = 237
0	so	so		rb	link								RB	advmod	3
1	the	the		dt	art								DT	det	2
2	difficulty	difficulty		nn									NN	nsubj	3
3	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	,	,											,	punct	3
5	uh	uh											UH	intj	3
6	mapping	map	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	3
7	that	that		pro	dem	sg							DT	dobj	6
8	back	back	rb+advl	rb	advl								RB	advmod	6
9	to	to		in	in_othr								IN	prep	8
10	,	,											,	punct	9
11	a	a		dt	art								DT	det	12
12	planner	planner		nn		nom							NN	pobj	9
13	which	which		relpro	relpro_wh								WDT	nsubj	14
14	thinks	think	finitecls+rel	vbmain	prepv	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	12
15	about	about	in+advl	in	advl								IN	prep	14
16	states	state		nn	pl	nom							NNS	pobj	15
17	and	and		cc	phrs								CC	cc	16
18	actions	action		nn	pl	nom							NNS	conj	16
19	to	to		to									TO	aux	20
20	select	select	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	18
21	for	for	in+advl	in	advl								IN	prep	20
22	those	those		dt	dt_dem								DT	det	23
23	states	state		nn	pl	nom							NNS	pobj	21
24	.	.											.	punct	3

#sentid = 238
0	whereas	whereas		cs	cs_othr								IN	mark	11
1	in	in	in+advl	in	advl								IN	prep	11
2	the	the		dt	art								DT	det	3
3	planner	planner		nn		nom							NN	pobj	1
4	,	,											,	punct	11
5	basically	basically	rb+advl	rb	advl	ly							RB	advmod	11
6	the	the		dt	art								DT	det	8
7	only	only	attr+npremod	jj	attr								JJ	amod	8
8	control	control		nn									NN	nsubj	11
9	you	you		pro	2nd	sg							PRP	nsubj	10
10	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	8
11	is	be		vbmain	be	pres	simple	active			other_advl		VBZ	ROOT	11
12	over	over	in+advl	in	advl								IN	prep	11
13	directing	direct	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	12
14	the	the		dt	art								DT	det	15
15	backtracking	backtracking		nn		nom							NN	dobj	13
16	and	and		cc	phrs								CC	cc	13
17	selecting	select		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	13
18	different	different	attr+npremod	jj	attr								JJ	amod	19
19	actions	action		nn	pl	nom							NNS	dobj	17
20	.	.											.	punct	11

#sentid = 239
0	um	um											UH	intj	3
1	,	,											,	punct	3
2	we	we		pro	1st								PRP	nsubj	3
3	have	have		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	17
4	,	,											,	punct	3
5	i-	i-											PRP	punct	3
6	in	in	in+advl	in	advl								IN	prep	11
7	,	,											,	punct	6
8	the	the		dt	art								DT	det	9
9	dissertation	dissertation		nn		nom							NN	pobj	6
10	i	i		pro	1st	sg							PRP	nsubj	11
11	talked	talk	thatcls+vcomp	vbmain	prepv	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	3
12	about	about	in+advl	in	advl								IN	prep	11
13	two	two											CD	nummod	15
14	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	15
15	thresholds	threshold		nn	pl								NNS	pobj	12
16	one	one		pro	other	pl							CD	nsubj	17
17	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	17
18	,	,											,	punct	17
19	uh	uh											UH	intj	17
20	,	,											,	punct	17
21	threshold	threshold		nn									NN	attr	17
22	where	where		rb	advl								WRB	advmod	26
23	locally	locally	rb+advl	rb	advl	ly							RB	advmod	26
24	,	,											,	punct	26
25	you	you		pro	2nd	sg							PRP	nsubj	26
26	consider	consider	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	21
27	a	a		dt	art								DT	det	28
28	transition	transition		nn		nom							NN	nsubjpass	31
29	to	to		to									TO	aux	31
30	be	be		vbaux									VB	auxpass	31
31	preempted	preempt	thatcls+vcomp	vbmain	vblex	past	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	26
32	.	.											.	punct	17

#sentid = 240
0	which	which											WDT	dobj	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	called	call		vbmain	vblex	past	simple	active					VBD	ROOT	2
3	P	p		nn									NN	dep	5
4	-	-											HYPH	punct	5
5	thresh	thresh											JJ	oprd	2
6	or	or		cc	phrs								CC	cc	5
7	something	something		nn		nom							NN	conj	5
8	like	like	in+npostmod	in	nmod								IN	prep	7
9	that	that		pro	dem	sg							DT	pobj	8
10	.	.											.	punct	2

#sentid = 241
0	if	if		cs	cnd								IN	mark	3
1	that	that		dt	dt_dem								DT	det	2
2	threshold	threshold		nn									NN	nsubj	3
3	was	be	finitecls+advl	vbmain	be	past	simple	active	advlcls		conditional		VBD	advcl	8
4	not	not											RB	neg	3
5	,	,											,	punct	8
6	wa-	wa-											XX	dep	8
7	you	you		pro	2nd	sg							PRP	nsubj	8
8	had	have		vbmain	vblex	past	simple	active					VBD	ROOT	8
9	to	to		to									TO	aux	11
10	not	not											RB	neg	11
11	exceed	exceed		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	8
12	that	that		dt	dt_dem								DT	det	13
13	threshold	threshold		nn									NN	dobj	11
14	.	.											.	punct	8

#sentid = 242
0	so	so		rb	link								RB	advmod	2
1	that	that		pro	dem	sg							DT	nsubj	2
2	speaks	speak		vbmain	vblex	pres	simple	active					VBZ	ROOT	2
3	in	in	in+advl	in	advl								IN	prep	2
4	terms	term		nn	pl								NNS	pobj	3
5	of	of	of+npostmod	in	nmod								IN	prep	4
6	what	what		dt									WDT	det	7
7	deadline	deadline		nn									NN	dobj	12
8	you	you		pro	2nd	sg							PRP	nsubj	10
9	're	be		vbaux									VBP	aux	10
10	going	go		vbmain	vblex	pres	prog	active	compcls		incomp	compdel	VBG	pcomp	5
11	to	to		to									TO	aux	12
12	compute	compute	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	10
13	for	for	in+advl	in	advl								IN	prep	12
14	an	an		dt									DT	det	15
15	action	action		nn		nom							NN	pobj	13
16	.	.											.	punct	2

#sentid = 243
0	we	we		pro	1st								PRP	nsubj	4
1	have	have		vbaux									VBP	aux	4
2	n't	not											RB	neg	4
3	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	4
4	come	come		vbmain	phrsv	pres	perf	active					VBN	ROOT	4
5	up	up		rb	prtcle								RP	prt	4
6	with	with	in+advl	in	advl								IN	prep	4
7	a	a		dt	art								DT	det	9
8	principal	principal	attr+npremod	jj	attr								JJ	amod	9
9	way	way		nn									NN	pobj	6
10	to	to		to									TO	aux	11
11	vary	vary	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	9
12	that	that		pro	dem	sg							DT	dobj	11
13	dynamically	dynamically	rb+advl	rb	advl	ly							RB	advmod	11
14	,	,											,	punct	4
15	so	so		cc	cls								CC	cc	4
16	we	we		pro	1st								PRP	nsubj	17
17	set	set		vbmain	vblex	pres	simple	active					VBP	conj	4
18	that	that		pro	dem	sg							DT	dobj	17
19	originally	originally	rb+advl	rb	advl	ly							RB	advmod	17
20	and	and		cc	cls								CC	cc	17
21	in	in	in+advl	in	advl								IN	prep	27
22	fact	fact		nn									NN	pobj	21
23	in	in	in+advl	in	advl								IN	prep	27
24	these	these		dt	dt_dem								DT	det	25
25	tests	test		nn	pl								NNS	pobj	23
26	we	we		pro	1st								PRP	nsubj	27
27	set	set		vbmain	vblex	pres	simple	active					VBP	conj	17
28	it	it		pro	3rd	sg							PRP	dobj	27
29	to	to	in+advl	in	advl								IN	prep	27
30	zero	zero											CD	pobj	29
31	,	,											,	punct	27
32	um	um											UH	intj	27
33	because	because		cs	cos								IN	mark	35
34	we	we		pro	1st								PRP	nsubj	35
35	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBP	advcl	27
36	our	our		dt	poss								PRP$	poss	40
37	simple	simple	attr+npremod	jj	attr								JJ	amod	40
38	,	,											,	punct	40
39	transition	transition	nn+npremod	nn		nom	npremod						NN	compound	40
40	models	model		nn	pl								NNS	dobj	35
41	for	for	in+npostmod	in	nmod								IN	prep	40
42	probability	probability		nn		nom							NN	pobj	41
43	,	,											,	punct	27
44	but	but		cc	cls								CC	cc	27
45	uh	uh											UH	intj	51
46	,	,											,	punct	51
47	in	in	in+advl	in	advl								IN	prep	51
48	future	future	attr+npremod	jj	attr								JJ	amod	49
49	work	work		nn									NN	pobj	47
50	we	we		pro	1st								PRP	nsubj	51
51	hope	hope		vbmain	vblex	pres	simple	active					VBP	conj	27
52	to	to		to									TO	aux	53
53	address	address	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	51
54	changing	change	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	53
55	that	that		pro	dem	sg							DT	dobj	54
56	as	as		rb	othr								RB	advmod	58
57	well	well		rb	othr								RB	advmod	58
58	as	as		cc	phrs								IN	cc	54
59	this	this		dt	dt_dem								DT	det	60
60	threshold	threshold		nn									NN	conj	54
61	for	for	in+npostmod	in	nmod								IN	prep	60
62	removing	remove	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	61
63	unlikely	unlikely	attr+npremod	jj	attr								JJ	amod	64
64	states	state		nn	pl	nom							NNS	dobj	62
65	.	.											.	punct	4

#sentid = 244
0	so	so		cs	cs_othr								IN	mark	3
1	that	that											IN	mark	3
2	al-	al-											XX	dep	3
3	addresses	address		vbmain	vblex	pres	simple	active			other_advl		VBZ	ROOT	3
4	the	the		dt	art								DT	det	5
5	problem	problem		nn									NN	dobj	3
6	at	at		rb	othr								IN	advmod	7
7	least	least	rb+advl	rb	advl								JJS	advmod	8
8	considering	consider	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	3
9	deadline	deadline		nn									NN	dobj	8
10	,	,											,	punct	8
11	changing	change		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	dep	8
12	the	the		dt	art								DT	det	13
13	deadlines	deadline		nn	pl								NNS	dobj	11
14	in	in	in+advl	in	advl								IN	prep	11
15	addition	addition		nn		nom							NN	pobj	14
16	to	to	in+npostmod	in	nmod								IN	prep	15
17	,	,											,	punct	16
18	um	um											UH	intj	16
19	,	,											,	punct	16
20	just	just	rb+advl	rb	advl								RB	advmod	21
21	ignoring	ignore	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	16
22	states	state		nn	pl	nom							NNS	dobj	21
23	altogether	altogether	rb+advl	rb	advl								RB	advmod	21
24	...	...											:	punct	3

#sentid = 245
0	but	but		cc	cls								CC	cc	4
1	okay	okay											UH	intj	4
2	so	so		rb	link								RB	advmod	4
3	,	,											,	punct	4
4	let	let		vbmain	vblex	nonfinite	simple	active					VB	ROOT	4
5	me	i		pro	1st	sg							PRP	nsubj	6
6	move	move		vbmain	phrsv	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	4
7	on	on		rb	prtcle								RP	prt	6
8	then	then	rb+advl	rb	advl								RB	advmod	6
9	,	,											,	punct	4
10	since	since		cs	cs_othr								IN	mark	13
11	,	,											,	punct	13
12	i	i		pro	1st	sg							PRP	nsubj	13
13	'm	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBP	advcl	4
14	sure	sure		jj	pred								JJ	acomp	13
15	i	i		pro	1st	sg							PRP	nsubj	17
16	'm	be		vbaux									VBP	aux	17
17	gon	go	thatcls+jcomp	vbmain	vblex	pres	prog	active	compcls		jcomp	compdel	VBG	ccomp	14
18	na	to		vbaux									VBG	aux	22
19	,	,											,	punct	22
20	at	at		rb	othr								IN	advmod	21
21	least	least	rb+advl	rb	advl		splaux						JJS	advmod	22
22	approach	approach		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	17
23	two	two											CD	nummod	24
24	o'clock	o'clock		nn									NN	dobj	22
25	in	in	in+npostmod	in	nmod								IN	prep	24
26	finishing	finish	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	25
27	.	.											.	punct	4

#sentid = 246
0	okay	okay											UH	intj	6
1	so	so		rb	link								RB	advmod	6
2	,	,											,	punct	6
3	i	i		pro	1st	sg							PRP	nsubj	6
4	have	have		vbaux									VBP	aux	6
5	n't	not											RB	neg	6
6	said	say		vbmain	vblex	pres	perf	active					VBN	ROOT	6
7	anything	anything		nn	other	nom							NN	dobj	6
8	about	about	in+npostmod	in	nmod								IN	prep	7
9	uh	uh											UH	intj	8
10	,	,											,	punct	8
11	wait	wait		vbmain	vblex	nonfinite	simple	active	compcls		incomp	compdel	VB	pcomp	8
12	.	.											.	punct	6

#sentid = 247
0	i	i		pro	1st	sg							PRP	nsubj	4
1	did	do		vbaux									VBD	aux	4
2	n't	not											RB	neg	4
3	even	even	rb+advl	rb	advl		splaux						RB	advmod	4
4	finish	finish		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VB	ccomp	7
5	this	this		dt	dt_dem								DT	det	6
6	slide	slide		nn									NN	dobj	4
7	let	let		vbmain	vblex	nonfinite	simple	active					VB	ROOT	7
8	me	i		pro	1st	sg							PRP	nsubj	9
9	finish	finish		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	7
10	this	this		dt	dt_dem								DT	det	11
11	slide	slide		nn									NN	dobj	9
12	first	first	rb+advl	rb	advl								RB	advmod	9
13	,	,											,	punct	7
14	sorry	sorry											UH	intj	7
15	.	.											.	punct	7

#sentid = 248
0	so	so		rb	link								RB	advmod	3
1	,	,											,	punct	3
2	we	we		pro	1st								PRP	nsubj	3
3	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	3
4	motivation	motivation		nn		nom							NN	dobj	3
5	.	.											.	punct	3

#sentid = 249
0	um	um											UH	intj	3
1	,	,											,	punct	3
2	i	i		pro	1st	sg							PRP	nsubj	3
3	think	think		vbmain	vblex	pres	simple	active					VBP	parataxis	38
4	,	,											,	punct	38
5	so	so		rb	link								RB	advmod	17
6	the	the		dt	art								DT	det	7
7	requirements	requirement		nn	pl	nom							NNS	nsubj	17
8	that	that		pro	dem	sg							WDT	dobj	10
9	we	we		pro	1st								PRP	nsubj	10
10	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	7
11	for	for	in+npostmod	in	nmod								IN	prep	7
12	our	our		dt	poss								PRP$	poss	16
13	planning	planning	nn+npremod	nn		nom	npremod						NN	nmod	16
14	um	um											UH	intj	16
15	,	,											,	punct	16
16	model	model	appos+npostmod	nn			nappos						NN	appos	7
17	are	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	38
18	to	to		to									TO	aux	19
19	select	select	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	17
20	actions	action		nn	pl	nom							NNS	dobj	19
21	compute	compute		vbmain	vblex	nonfinite	simple	active	nmod_cls		ncomp		VB	acl	20
22	their	their		dt	poss								PRP$	poss	23
23	deadlines	deadline		nn	pl								NNS	dobj	21
24	to	to		to									TO	aux	25
25	preempt	preempt	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	21
26	temporal	temporal	attr+npremod	jj	attr								JJ	amod	27
27	transitions	transition		nn	pl	nom							NNS	dobj	25
28	to	to	in+npostmod	in	nmod								IN	prep	27
29	failure	failure		nn		nom							NN	pobj	28
30	,	,											,	punct	38
31	this	this		dt	dt_dem								DT	det	32
32	threshold	threshold		nn									NN	nsubj	38
33	that	that		pro	dem	sg							WDT	pobj	37
34	i	i		pro	1st	sg							PRP	nsubj	36
35	was	be		vbaux									VBD	aux	36
36	talking	talk	finitecls+rel	vbmain	prepv	past	prog	active	nmod_cls		rel	reldel	VBG	relcl	32
37	about	about	in+advl	in	advl								IN	prep	36
38	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	38
39	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	40
40	of	of		rb	othr								RB	advmod	44
41	a	a		dt	art								DT	det	44
42	,	,											,	punct	44
43	a	a		dt	art								DT	det	44
44	line	line		nn									NN	attr	38
45	that	that		pro	dem	sg							WDT	dobj	47
46	you	you		pro	2nd	sg							PRP	nsubj	47
47	draw	draw	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	44
48	that	that		relpro	relpro_that	sg							WDT	nsubj	49
49	says	say	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	44
50	if	if		cs	cnd								IN	mark	56
51	the	the		dt	art								DT	det	53
52	temporal	temporal	attr+npremod	jj	attr								JJ	amod	53
53	transition	transition		nn		nom							NN	nsubj	56
54	to	to	in+npostmod	in	nmod								IN	prep	53
55	failure	failure		nn		nom							NN	pobj	54
56	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBZ	advcl	79
57	,	,											,	punct	56
58	um	um											UH	intj	56
59	,	,											,	punct	56
60	i-	i-		nn									NN	nsubj	64
61	i-	i-		nn									NN	punct	60
62	less	less		jj	attr								JJR	amod	60
63	,	,											,	punct	60
64	has	have		vbmain	vblex	pres	simple	active					VBZ	dep	56
65	less	less	attr+npremod	jj	attr								JJR	amod	67
66	net	net	attr+npremod	jj	attr								JJ	amod	67
67	probability	probability		nn		nom							NN	dobj	64
68	of	of	of+npostmod	in	nmod								IN	prep	67
69	occurring	occur	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	68
70	then	then		rb	link								RB	advmod	79
71	,	,											,	punct	79
72	um	um											UH	intj	76
73	it	it		pro	3rd	sg							PRP	nsubj	74
74	's	be		vbaux									VBZ	aux	76
75	not	not											RB	neg	74
76	go-	go-		in	in_othr								:	prep	71
77	you	you		pro	2nd	sg							PRP	nsubj	79
78	can	can		vbaux	mod	pos							MD	aux	79
79	consider	consider	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	49
80	it	it		pro	3rd	sg							PRP	dobj	79
81	in	in	in+advl	in	advl								IN	prep	79
82	planner	planner		nn		nom							NN	pobj	81
83	,	,											,	punct	79
84	planning	plan	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	79
85	to	to		to									TO	aux	87
86	be	be		vbaux									VB	auxpass	87
87	preempted	preempt	tocls+vcomp	vbmain	vblex	nonfinite	simple	pasv_agls	compcls	tocls	vcomp		VBN	xcomp	84
88	,	,											,	punct	79
89	and	and		cc	phrs								CC	cc	79
90	then	then		rb	link								RB	advmod	92
91	to	to		to									TO	aux	92
92	account	account		vbmain	prepv	nonfinite	simple	active		tocls			VB	conj	79
93	for	for	in+advl	in	advl								IN	prep	92
94	dependent	dependent	attr+npremod	jj	attr								JJ	amod	96
95	temporal	temporal	attr+npremod	jj	attr								JJ	amod	96
96	transitions	transition		nn	pl	nom							NNS	pobj	93
97	,	,											,	punct	96
98	which	which		relpro	relpro_wh								WDT	nsubj	100
99	effectively	effectively	rb+advl	rb	advl	ly							RB	advmod	100
100	state	state	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	96
101	history	history		nn		nom							NN	nsubj	102
102	effects	effect	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	100
103	how	how	rb+jjrbmod	rb	othr								WRB	advmod	104
104	long	long	rb+advl	rb	advl								RB	advmod	108
105	has	have		vbaux									VBZ	aux	108
106	a	a		dt	art								DT	det	107
107	transition	transition		nn		nom							NN	nsubj	108
108	been	be		vbmain	be	pres	perf	active	compcls		vcomp		VBN	ccomp	102
109	active	active		jj	pred								JJ	acomp	108
110	,	,											,	punct	108
111	um	um											UH	intj	108
112	.	.											.	punct	38

#sentid = 250
0	so	so		rb	link								RB	advmod	10
1	,	,											,	punct	10
2	uh	uh											UH	intj	10
3	desired	desire	attr+npremod	jj	attr	ed							VBN	amod	4
4	properties	property		nn	pl								NNS	nsubj	10
5	we	we		pro	1st								PRP	nsubj	6
6	want	want	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	4
7	for	for	in+advl	in	advl								IN	prep	6
8	our	our		dt	poss								PRP$	poss	9
9	model	model		nn									NN	pobj	7
10	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	10
11	to	to		to									TO	aux	13
12	,	,											,	punct	13
13	minimize	minimize	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	10
14	knowledge	knowledge	nn+npremod	nn			npremod						NN	compound	16
15	-	-											HYPH	punct	16
16	base	base	nn+npremod	nn			npremod						NN	compound	17
17	size	size		nn									NN	dobj	13
18	because	because		cs	cos								IN	mark	35
19	a	a		dt	art								DT	det	20
20	lot	lot		nn									NN	nsubj	35
21	of	of	of+npostmod	in	nmod								IN	prep	20
22	the	the		dt	art								DT	det	23
23	models	model		nn	pl								NNS	pobj	21
24	,	,											,	punct	23
25	the	the		dt	art								DT	det	29
26	knowledge	knowledge	nn+npremod	nn			npremod						NN	compound	28
27	-	-											HYPH	punct	28
28	base	base	nn+npremod	nn			npremod						NN	compound	29
29	models	model	appos+npostmod	nn	pl		nappos						NNS	appos	23
30	that	that		pro	dem	sg							WDT	dobj	33
31	um	um											UH	intj	33
32	one	one		nn	other	pl							NN	nsubj	33
33	has	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBZ	relcl	29
34	,	,											,	punct	35
35	are	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		causative		VBP	advcl	13
36	,	,											,	punct	35
37	uh	uh											UH	intj	35
38	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	39
39	impossible	impossible		jj	pred								JJ	acomp	35
40	to	to		to									TO	aux	42
41	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	42
42	think	think	tocls+jcomp	vbmain	prepv	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	39
43	about	about	in+advl	in	advl								IN	prep	42
44	that	that		comp	comp_that								IN	mark	51
45	some	some		dt									DT	det	46
46	expert	expert		nn									NN	nsubj	51
47	in	in	in+npostmod	in	nmod								IN	prep	46
48	that	that		dt	dt_dem								DT	det	49
49	domain	domain		nn									NN	pobj	47
50	would	would		vbaux	mod	prd							MD	aux	51
51	be	be	thatcls+jcomp	vbmain	be	vp_w_modal	simple	active	compcls	thatcls	jcomp		VB	ccomp	39
52	able	able		jj	pred								JJ	acomp	51
53	to	to		to									TO	aux	54
54	sit	sit	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	52
55	down	down	rb+advl	rb	advl								RB	advmod	54
56	and	and		cc	phrs								CC	cc	54
57	make	make		vbmain	vblex	nonfinite	simple	active					VB	conj	54
58	it	it		pro	3rd	sg							PRP	dobj	57
59	.	.											.	punct	10

#sentid = 251
0	so	so		rb	link								RB	advmod	2
1	we	we		pro	1st								PRP	nsubj	2
2	want	want		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	to	to		to									TO	aux	6
4	at	at		rb	othr								IN	advmod	5
5	least	least	rb+advl	rb	advl		splaux						JJS	advmod	6
6	start	start		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	2
7	to	to		to									TO	aux	8
8	think	think	tocls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	6
9	about	about	in+advl	in	advl								IN	prep	8
10	making	make	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	9
11	it	it		pro	3rd	sg							PRP	nsubj	12
12	easy	easy											JJ	ccomp	10
13	for	for		cs	cs_othr								IN	mark	16
14	them	they		pro	pl								PRP	nsubj	16
15	to	to		to									TO	aux	16
16	create	create	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls	other_advl		VB	advcl	12
17	a	a		dt	art								DT	det	19
18	knowledge	knowledge	nn+npremod	nn			npremod						NN	compound	19
19	base	base		nn									NN	dobj	16
20	.	.											.	punct	2

#sentid = 252
0	and	and		cc	cls								CC	cc	4
1	then	then		rb	link								RB	advmod	4
2	also	also	rb+advl	rb	advl								RB	advmod	4
3	we	we		pro	1st								PRP	nsubj	4
4	want	want		vbmain	vblex	pres	simple	active					VBP	ROOT	4
5	to	to		to									TO	aux	8
6	uh	uh											UH	intj	8
7	,	,											,	punct	8
8	think	think		vbmain	prepv	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	4
9	about	about	in+advl	in	advl								IN	prep	8
10	maximizing	maximize	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	9
11	planner	planner	nn+npremod	nn		nom	npremod						NN	compound	12
12	efficiency	efficiency		nn		nom							NN	dobj	10
13	which	which											WDT	pobj	20
14	we	we		pro	1st								PRP	nsubj	18
15	really	really	rb+advl	rb	advl	ly							RB	advmod	18
16	have	have		vbaux									VBP	aux	18
17	not	not											RB	neg	18
18	come	come	finitecls+advl	vbmain	vblex	pres	perf	active	advlcls				VBN	advcl	8
19	close	close	rb+advl	rb	advl								RB	advmod	18
20	to	to		in	in_othr								IN	prep	19
21	yet	yet	rb+advl	rb	advl								RB	advmod	18
22	,	,											,	punct	4
23	but	but		cc	phrs								CC	cc	4
24	we	we		pro	1st								PRP	nsubj	25
25	wanna	wanna		vbaux									VBP	aux	28
26	at	at		rb	othr								IN	advmod	27
27	least	least	rb+advl	rb	advl		splaux						JJS	advmod	28
28	think	think		vbmain	prepv	pres	simple	active					VB	conj	4
29	about	about	in+advl	in	advl								IN	prep	28
30	how	how		comp	comp_wh								WRB	advmod	32
31	to	to		to									TO	aux	32
32	do	do		vbmain	vblex	nonfinite	simple	active	compcls	tocls	incomp		VB	pcomp	29
33	that	that		pro	dem	sg							DT	dobj	32
34	so	so		cs	cs_othr								IN	mark	50
35	when	when		rb	advl								WRB	advmod	37
36	we	we		pro	1st								PRP	nsubj	37
37	talk	talk	finitecls+advl	vbmain	prepv	pres	simple	active	advlcls	whcls			VBP	advcl	50
38	about	about	in+advl	in	advl								IN	prep	37
39	real	real	attr+npremod	jj	attr								JJ	amod	41
40	-	-											HYPH	punct	41
41	time	time	nn+npremod	nn			npremod						NN	compound	42
42	planning	planning		nn		nom							NN	pobj	38
43	in	in	in+advl	in	advl								IN	prep	37
44	the	the		dt	art								DT	det	45
45	future	future		nn		nom							NN	pobj	43
46	we	we		pro	1st								PRP	nsubj	50
47	'll	will		vbaux	mod								MD	aux	50
48	at	at		rb	othr								IN	advmod	49
49	least	least	rb+advl	rb	advl		splaux						JJS	advmod	50
50	have	have	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	32
51	a	a		dt	art								DT	det	52
52	start	start		nn									NN	dobj	50
53	.	.											.	punct	4

#sentid = 253
0	so	so		rb	link								RB	advmod	11
1	given	give	edcls+advl	vbmain	advl	nonfinite	simple	active		edcls			VBN	prep	11
2	that	that											IN	mark	4
3	we	we		pro	1st								PRP	nsubj	4
4	started	start	thatcls+vcomp	vbmain	prepv	past	simple	active	compcls	thatcls	vcomp		VBD	pcomp	1
5	with	with	in+advl	in	advl								IN	prep	4
6	CIRCA	circa		nn		proper							NNP	pobj	5
7	,	,											,	punct	11
8	why	why		rb	advl								WRB	advmod	11
9	not	not											RB	neg	11
10	just	just	rb+advl	rb	advl								RB	advmod	11
11	use	use		vbmain	vblex	nonfinite	simple	active					VB	ROOT	11
12	its	its		dt	poss								PRP$	poss	13
13	model	model		nn									NN	dobj	11
14	.	.											.	punct	11

#sentid = 254
0	well	well											UH	intj	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	uses	use		vbmain	vblex	pres	simple	active					VBZ	ROOT	2
3	a	a		dt	art								DT	det	5
4	nondeterministic	nondeterministic	attr+npremod	jj	attr								JJ	amod	5
5	model	model		nn									NN	dobj	2
6	which	which		relpro	relpro_wh								WDT	nsubj	8
7	,	,											,	punct	8
8	was	be	finitecls+rel	vbmain	be	past	simple	active	nmod_cls	whcls	rel		VBD	relcl	5
9	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	10
10	nice	nice		jj	pred								JJ	acomp	8
11	in	in	in+advl	in	advl								IN	prep	8
12	terms	term		nn	pl								NNS	pobj	11
13	of	of	of+npostmod	in	nmod								IN	prep	12
14	minimizing	minimize	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	13
15	knowledge	knowledge	nn+npremod	nn			npremod						NN	compound	17
16	-	-											HYPH	punct	17
17	base	base	nn+npremod	nn			npremod						NN	compound	18
18	size	size		nn									NN	dobj	14
19	,	,											,	punct	11
20	and	and		cc									CC	cc	11
21	uh	uh											UH	conj	11
22	,	,											,	punct	11
23	also	also		rb	othr								RB	advmod	11
24	in	in											IN	conj	11
25	how	how		comp	comp_wh								WRB	advmod	27
26	it	it		pro	3rd	sg							PRP	nsubj	27
27	represented	represent	whcls+incomp	vbmain	vblex	past	simple	active	compcls	whcls	incomp		VBD	pcomp	24
28	the	the		dt	art								DT	det	31
29	state	state	nn+npremod	nn		nom	npremod						NN	compound	31
30	-	-											HYPH	punct	31
31	space	space		nn									NN	dobj	27
32	,	,											,	punct	27
33	um	um											UH	intj	27
34	,	,											,	punct	27
35	with	with	in+advl	in	advl								IN	prep	27
36	cycles	cycle		nn	pl								NNS	pobj	35
37	and	and		cc	phrs								CC	cc	36
38	so	so	rb+jjrbmod	rb	othr								RB	advmod	39
39	forth	forth											RB	conj	36
40	,	,											,	punct	2
41	to	to		to									TO	aux	42
42	guarantee	guarantee	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	2
43	failure	failure	nn+npremod	nn		nom	npremod						NN	compound	44
44	avoidance	avoidance		nn		nom							NN	dobj	42
45	.	.											.	punct	2

#sentid = 255
0	it	it		pro	3rd	sg							PRP	nsubj	1
1	assumed	assume		vbmain	vblex	past	simple	active					VBD	ROOT	1
2	worst	bad	attr+npremod	jj	attr								JJS	amod	4
3	-	-											HYPH	punct	4
4	case	case	nn+npremod	nn			npremod						NN	compound	6
5	transition	transition	nn+npremod	nn		nom	npremod						NN	compound	6
6	properties	property		nn	pl								NNS	dobj	1
7	,	,											,	punct	6
8	where	where		rb	advl								WRB	advmod	10
9	it	it		pro	3rd	sg							PRP	nsubj	10
10	had	have	finitecls+advl	vbmain	vblex	past	simple	active	advlcls	whcls			VBD	advcl	20
11	a	a		dt	art								DT	det	13
12	minimum	minimum	attr+npremod	jj	attr								JJ	amod	13
13	delay	delay		nn									NN	dobj	10
14	where	where		rb	advl								WRB	advmod	20
15	,	,											,	punct	20
16	transitions	transition		nn	pl	nom							NNS	dep	20
17	to	to	in+npostmod	in	nmod								IN	prep	16
18	failure	failure		nn		nom							NN	pobj	17
19	you	you		pro	2nd	sg							PRP	nsubj	20
20	had	have	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls	whcls	rel		VBD	relcl	6
21	to	to		to									TO	aux	22
22	finish	finish		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	20
23	any	any		dt									DT	det	24
24	action	action		nn		nom							NN	dobj	22
25	before	before	in+npostmod	in	nmod								IN	prep	24
26	that	that		pro	dem	sg							DT	pobj	25
27	and	and		cc	cls								CC	cc	20
28	that	that		pro	dem	sg							DT	nsubj	29
29	was	be		vbmain	be	past	simple	active					VBD	conj	20
30	totally	totally	rb+jjrbmod	rb	adjmod	ly							RB	advmod	31
31	inflexible	inflexible		jj	pred								JJ	acomp	29
32	,	,											,	punct	1
33	and	and		cc	cls								CC	cc	1
34	it	it		pro	3rd	sg							PRP	nsubj	35
35	had	have		vbmain	vblex	past	simple	active					VBD	conj	1
36	a	a		dt	art								DT	det	38
37	maximum	maximum	attr+npremod	jj	attr								JJ	amod	38
38	delay	delay		nn									NN	dobj	35
39	for	for	in+npostmod	in	nmod								IN	prep	38
40	,	,											,	punct	39
41	reliable	reliable	attr+npremod	jj	attr								JJ	amod	43
42	temporal	temporal	attr+npremod	jj	attr								JJ	amod	43
43	transitions	transition		nn	pl	nom							NNS	pobj	39
44	.	.											.	punct	35

#sentid = 256
0	um	um											UH	intj	6
1	,	,											,	punct	6
2	you	you		pro	2nd	sg							PRP	nsubj	6
3	really	really	rb+advl	rb	advl	ly							RB	advmod	6
4	could	could		vbaux	mod	pos							MD	aux	6
5	n't	not											RB	neg	6
6	do	do		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	6
7	any	any		dt									DT	det	9
8	state	state	nn+npremod	nn		nom	npremod						NN	compound	9
9	prioritization	prioritization		nn		nom							NN	dobj	6
10	,	,											,	punct	6
11	because	because		cs	cos								IN	mark	14
12	,	,											,	punct	14
13	you	you		pro	2nd	sg							PRP	nsubj	14
14	had	have	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		causative		VBD	advcl	6
15	no	no		dt									DT	det	17
16	,	,											,	punct	17
17	notion	notion		nn		nom							NN	dobj	14
18	of	of	of+npostmod	in	nmod								IN	prep	17
19	what	what											WP	nsubj	20
20	was	be	whcls+incomp	vbmain	be	past	simple	active	compcls	whcls	incomp		VBD	pcomp	18
21	more	more	rb+jjrbmod	rb	adjmod								RBR	advmod	22
22	likely	likely		jj	pred								JJ	acomp	20
23	than	than	in+jcomp	in	jcomp								IN	prep	22
24	another	another		dt									DT	det	25
25	state	state		nn		nom							NN	pobj	23
26	or	or		cc	phrs								CC	cc	20
27	really	really											RB	conj	20
28	,	,											,	punct	14
29	and	and		cc	cls								CC	cc	14
30	you	you		pro	2nd	sg							PRP	nsubj	31
31	had	have		vbmain	vblex	past	simple	active					VBD	conj	14
32	no	no		dt									DT	det	33
33	flexibility	flexibility		nn		nom							NN	dobj	31
34	of	of	of+npostmod	in	nmod								IN	prep	33
35	those	those		dt	dt_dem								DT	det	36
36	deadlines	deadline		nn	pl								NNS	pobj	34
37	in	in	in+npostmod	in	nmod								IN	prep	33
38	those	those		dt	dt_dem								DT	det	39
39	delays	delay		nn	pl								NNS	pobj	37
40	either	either	rb+advl	rb	advl								RB	advmod	31
41	,	,											,	punct	31
42	and	and		cc	cls								CC	cc	6
43	for	for	in+advl	in	advl								IN	prep	48
44	the	the		dt	art								DT	det	46
45	state	state	nn+npremod	nn		nom	npremod						NN	compound	46
46	representation	representation		nn		nom							NN	pobj	43
47	it	it		pro	3rd	sg							PRP	nsubj	48
48	was	be		vbmain	be	past	simple	active					VBD	conj	6
49	either	either											CC	preconj	50
50	reachable	reachable		jj	pred								JJ	acomp	48
51	or	or		cc	cls								CC	cc	48
52	it	it		pro	3rd	sg							PRP	nsubj	53
53	was	be		vbmain	be	past	simple	active					VBD	conj	48
54	n't	not											RB	neg	53
55	reachable	reachable		jj	pred								JJ	acomp	53
56	.	.											.	punct	6

#sentid = 257
0	since	since		cs	cs_othr								IN	mark	3
1	we	we		pro	1st								PRP	nsubj	3
2	're	be		vbaux									VBP	aux	3
3	focussing	focusse	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		other_advl		VBG	advcl	17
4	for	for	in+advl	in	advl								IN	prep	3
5	a	a		dt	art								DT	det	6
6	tr-	tr-		nn									NN	pobj	4
7	in	in											IN	nmod	6
8	trade	trade	nn+npremod	nn			npremod						NN	compound	10
9	-	-											HYPH	punct	10
10	offs	off		nn	pl								NNS	pobj	7
11	in	in	in+advl	in	advl								IN	prep	3
12	this	this		dt	dt_dem								DT	det	13
13	work	work		nn									NN	pobj	11
14	,	,											,	punct	17
15	um	um											UH	intj	17
16	we	we		pro	1st								PRP	nsubj	17
17	thought	think		vbmain	vblex	past	simple	active					VBD	ROOT	17
18	,	,											,	punct	17
19	okay	okay											UH	intj	30
20	well	well											UH	intj	30
21	,	,											,	punct	30
22	if	if		cs	cnd								IN	mark	24
23	we	we		pro	1st								PRP	nsubj	24
24	had	have	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	30
25	a	a		dt	art								DT	det	27
26	stochastic	stochastic	attr+npremod	jj	attr								JJ	amod	27
27	planner	planner		nn		nom							NN	dobj	24
28	we	we		pro	1st								PRP	nsubj	30
29	could	could		vbaux	mod	pos							MD	aux	30
30	think	think	thatcls+vcomp	vbmain	prepv	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	17
31	about	about	in+advl	in	advl								IN	prep	30
32	things	thing		nn	pl	nom							NNS	pobj	31
33	like	like	in+npostmod	in	nmod								IN	prep	32
34	,	,											,	punct	33
35	relative	relative	attr+npremod	jj	attr								JJ	amod	36
36	likelihood	likelihood		nn		nom							NN	pobj	33
37	of	of	of+npostmod	in	nmod								IN	prep	36
38	states	state		nn	pl	nom							NNS	pobj	37
39	,	,											,	punct	36
40	and	and		cc	phrs								CC	cc	36
41	um	um											UH	intj	44
42	how	how		rb	advl								WRB	advmod	44
43	they	they		pro	pl								PRP	nsubj	44
44	change	change		vbmain	vblex	pres	simple	active					VBP	conj	36
45	deadlines	deadline		nn	pl								NNS	dobj	44
46	and	and		cc	phrs								CC	cc	44
47	so	so	rb+jjrbmod	rb	othr								RB	advmod	48
48	forth	forth											RB	conj	44
49	.	.											.	punct	17

#sentid = 258
0	so	so		rb	link								RB	advmod	16
1	in	in	in+advl	in	advl								IN	prep	16
2	our	our		dt	poss								PRP$	poss	4
3	stochastic	stochastic	attr+npremod	jj	attr								JJ	amod	4
4	planner	planner		nn		nom							NN	pobj	1
5	that	that		relpro	relpro_that								WDT	mark	8
6	we	we		pro	1st								PRP	nsubj	8
7	've	've		vbaux									VBP	aux	8
8	come	come	finitecls+rel	vbmain	phrsv	pres	simple	active	nmod_cls	thatcls	rel		VBN	relcl	4
9	up	up		rb	prtcle								RP	prt	8
10	with	with	in+advl	in	advl								IN	prep	8
11	,	,											,	punct	16
12	um	um											UH	intj	16
13	we	we		pro	1st								PRP	nsubj	16
14	,	,											,	punct	16
15	first	first		rb	link								RB	advmod	16
16	assign	assign		vbmain	vblex	pres	simple	active					VBP	ROOT	16
17	,	,											,	punct	16
18	knowledge	knowledge	nn+npremod	nn			npremod						NN	nmod	20
19	-	-											HYPH	punct	20
20	base	base	nn+npremod	nn			npremod						NN	nmod	22
21	temporal	temporal	attr+npremod	jj	attr								JJ	amod	22
22	transitions	transition		nn	pl	nom							NNS	dobj	16
23	,	,											,	punct	22
24	um	um											UH	intj	22
25	what	what											WP	dobj	28
26	i	i		pro	1st	sg							PRP	nsubj	28
27	'm	be		vbaux									VBP	aux	28
28	calling	call	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel		VBG	relcl	22
29	temporally	temporally	rb+jjrbmod	rb	adjmod	ly							RB	advmod	30
30	dependent	dependent	attr+npremod	jj	attr								JJ	amod	34
31	unconditional	unconditional	attr+npremod	jj	attr								JJ	amod	34
32	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	34
33	rate	rate	nn+npremod	nn		nom	npremod						NN	compound	34
34	functions	function		nn	pl	nom							NNS	oprd	28
35	.	.											.	punct	16

#sentid = 259
0	basically	basically	rb+advl	rb	advl	ly							RB	advmod	4
1	what	what											WP	attr	3
2	those	those		pro	dem	pl							DT	nsubj	3
3	are	be		vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	csubj	4
4	are	be		vbmain	be	pres	simple	active					VBP	ROOT	4
5	histograms	histogram		nn	pl								NNS	attr	4
6	,	,											,	punct	5
7	of	of	of+npostmod	in	nmod								IN	prep	5
8	,	,											,	punct	7
9	for	for		in	in_othr								IN	prep	7
10	discrete	discrete	attr+npremod	jj	attr								JJ	amod	12
11	time	time	nn+npremod	nn			npremod						NN	compound	12
12	steps	step		nn	pl								NNS	pobj	9
13	how	how	rb+jjrbmod	rb	adjmod								WRB	advmod	14
14	likely	likely		jj	pred								JJ	acomp	16
15	something	something		nn	other	nom							NN	nsubj	16
16	is	be		vbmain	be	pres	simple	active	compcls		incomp	compdel	VBZ	pcomp	7
17	to	to		to									TO	aux	18
18	occur	occur	xtrapos+tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	16
19	.	.											.	punct	4

#sentid = 260
0	so	so		rb	link								RB	advmod	2
1	here	here	rb+advl	rb	advl								RB	advmod	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	two	two											CD	nummod	4
4	examples	example		nn	pl								NNS	nsubj	2
5	of	of	of+npostmod	in	nmod								IN	prep	4
6	these	these		dt	dt_dem								DT	det	8
7	rate	rate	nn+npremod	nn		nom	npremod						NN	compound	8
8	functions	function		nn	pl	nom							NNS	pobj	5
9	.	.											.	punct	2

#sentid = 261
0	in	in	in+advl	in	advl								IN	prep	4
1	one	one											CD	nummod	2
2	case	case		nn									NN	pobj	0
3	there	there											EX	expl	4
4	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	a	a		dt	art								DT	det	9
6	temporal	temporal	attr+npremod	jj	attr								JJ	amod	9
7	tran-	tran-	attr+npremod	jj	attr								JJ	amod	9
8	uh	uh											UH	intj	9
9	transition	transition		nn		nom							NN	attr	4
10	to	to	in+npostmod	in	nmod								IN	prep	9
11	failure	failure		nn		nom							NN	pobj	10
12	which	which		relpro	relpro_wh								WDT	nsubj	14
13	,	,											,	punct	14
14	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	9
15	preemptible	preemptible		jj	pred								JJ	acomp	14
16	because	because		cs	cos								IN	mark	18
17	there	there											EX	expl	18
18	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		causative		VBZ	advcl	14
19	some	some		dt									DT	det	20
20	delay	delay		nn									NN	attr	18
21	before	before		cs	cs_othr								IN	mark	23
22	it	it		pro	3rd	sg							PRP	nsubj	23
23	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	20
24	possible	possible		jj	pred								JJ	acomp	23
25	.	.											.	punct	4

#sentid = 262
0	um	um											UH	intj	3
1	i	i		pro	1st	sg							PRP	nsubj	3
2	'll	will		vbaux	mod								MD	aux	3
3	call	call		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	3
4	this	this		pro	dem	sg							DT	dobj	3
5	hit	hit		vbmain	vblex	nonfinite	simple	active	nmod_cls		ncomp		VB	acl	7
6	,	,											,	punct	7
7	hit	hit		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	3
8	collision	collision	nn+npremod	nn			npremod						NN	compound	10
9	-	-											HYPH	punct	10
10	course	course	nn+npremod	nn			npremod						NN	compound	11
11	traffic	traffic		nn									NN	oprd	3
12	,	,											,	punct	3
13	after	after		cs	cs_othr								IN	mark	16
14	it	it		pro	3rd	sg							PRP	nsubjpass	16
15	's	be		vbaux									VBZ	auxpass	16
16	detected	detect	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls		other_advl		VBN	advcl	3
17	on	on	in+advl	in	advl								IN	prep	16
18	radar	radar		nn									NN	pobj	17
19	so	so		rb	link								IN	advmod	24
20	at	at	in+advl	in	advl								IN	prep	24
21	time	time		nn									NN	pobj	20
22	zero	zero											CD	nummod	21
23	you	you		pro	2nd	sg							PRP	nsubj	24
24	detect	detect	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBP	advcl	3
25	traffic	traffic		nn									NN	dobj	24
26	on	on	in+advl	in	advl								IN	prep	24
27	radar	radar		nn									NN	pobj	26
28	,	,											,	punct	24
29	at	at	in+advl	in	advl								IN	prep	33
30	that	that		dt	dt_dem								DT	det	31
31	point	point		nn									NN	pobj	29
32	it	it		pro	3rd	sg							PRP	nsubj	33
33	's	be		vbmain	be	pres	simple	active					VBZ	conj	24
34	at	at	in+advl	in	advl								IN	prep	33
35	the	the		dt	art								DT	det	36
36	edge	edge		nn									NN	pobj	34
37	of	of	of+npostmod	in	nmod								IN	prep	36
38	your	your		dt	poss								PRP$	poss	39
39	radar	radar		nn									NN	pobj	37
40	so	so		cs	cs_othr								IN	mark	42
41	you	you		pro	2nd	sg							PRP	nsubj	42
42	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	33
43	some	some		dt									DT	det	44
44	time	time		nn									NN	dobj	42
45	to	to		to									TO	aux	47
46	,	,											,	punct	47
47	get	get	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	44
48	out	out	in+advl	in	advl								IN	prep	47
49	of	of		in	in_othr								IN	prep	48
50	its	its		dt	poss								PRP$	poss	51
51	way	way		nn									NN	pobj	49
52	,	,											,	punct	3
53	and	and		cc	cls								CC	cc	3
54	based	base	edcls+advl	vbmain	advl	nonfinite	simple	active		edcls			VBN	prep	60
55	on	on	in+advl	in	advl								IN	prep	54
56	where	where		comp	comp_wh								WRB	advmod	58
57	it	it		pro	3rd	sg							PRP	nsubj	58
58	started	start	whcls+incomp	vbmain	vblex	past	simple	active	compcls	whcls	incomp		VBD	pcomp	55
59	you	you		pro	2nd	sg							PRP	nsubj	60
60	have	have		vbmain	vblex	pres	simple	active					VBP	conj	3
61	some	some		dt									DT	det	64
62	maximum	maximum	attr+npremod	jj	attr								JJ	amod	64
63	,	,											,	punct	64
64	probability	probability		nn		nom							NN	dobj	60
65	of	of	of+npostmod	in	nmod								IN	prep	64
66	it	it		pro	3rd	sg							PRP	nsubj	68
67	actually	actually	rb+advl	rb	advl	ly							RB	advmod	68
68	hitting	hit	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	65
69	you	you		pro	2nd	sg							PRP	dobj	68
70	which	which											WDT	dobj	75
71	,	,											,	punct	75
72	eventually	eventually	rb+advl	rb	advl	ly							RB	advmod	75
73	it	it		pro	3rd	sg							PRP	nsubj	75
74	'll	will		vbaux	mod								MD	aux	75
75	pass	pass	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel		VB	relcl	64
76	if	if		cs	cnd								IN	mark	80
77	it	it		pro	3rd	sg							PRP	nsubj	80
78	does	do		vbaux									VBZ	aux	80
79	n't	not											RB	neg	80
80	hit	hit	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VB	advcl	75
81	you	you		pro	2nd	sg							PRP	dobj	80
82	.	.											.	punct	60

#sentid = 263
0	another	another		dt									DT	det	1
1	example	example		nn									NN	nsubj	6
2	of	of	of+npostmod	in	nmod								IN	prep	1
3	a	a		dt	art								DT	det	5
4	temporal	temporal	attr+npremod	jj	attr								JJ	amod	5
5	transition	transition		nn		nom							NN	pobj	2
6	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	6
7	a	a		dt	art								DT	det	9
8	reliable	reliable	attr+npremod	jj	attr								JJ	amod	9
9	transition	transition		nn		nom							NN	attr	6
10	which	which											WDT	dep	38
11	,	,											,	punct	38
12	all	all		dt									DT	det	13
13	else	else											RB	nsubj	14
14	being	be	ingcls+advl	vbmain	be	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	19
15	equal	equal		jj	pred								JJ	acomp	14
16	if	if		cs	cnd								IN	mark	19
17	you	you		pro	2nd	sg							PRP	nsubj	19
18	,	,											,	punct	19
19	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	38
20	a	a		dt	art								DT	det	21
21	c-	c-		nn									NN	dobj	19
22	a	a		dt	art								DT	det	24
23	course	course		nn			npremod						NN	compound	24
24	set	set		vbmain	vblex	nonfinite	simple	active		edcls			VBN	dobj	19
25	,	,											,	punct	19
26	and	and		cc	cls								CC	cc	19
27	you	you		pro	2nd	sg							PRP	nsubj	29
28	're	be		vbaux									VBP	aux	29
29	flying	fly		vbmain	vblex	pres	prog	active					VBG	conj	19
30	towards	towards	in+advl	in	advl								IN	prep	29
31	that	that		dt	dt_dem								DT	det	34
32	,	,											,	punct	34
33	particular	particular	attr+npremod	jj	attr								JJ	amod	34
34	location	location		nn		nom							NN	pobj	30
35	you	you		pro	2nd	sg							PRP	nsubj	38
36	'll	will		vbaux	mod								MD	aux	38
37	eventually	eventually	rb+advl	rb	advl	ly	splaux						RB	advmod	38
38	get	get	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel		VB	relcl	9
39	there	there	rb+advl	rb	advl								RB	advmod	38
40	.	.											.	punct	6

#sentid = 264
0													_SP	dep	21
1	what	what		comp	comp_wh								WP	dobj	6
2	does	do		vbaux									VBZ	aux	6
3	the	the		dt	art								DT	det	4
4	unconditional	unconditional											JJ	nsubj	6
5	,	,											,	punct	6
6	mean	mean		vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VB	ccomp	21
7	,	,											,	punct	21
8	in	in	in+advl	in	advl								IN	prep	21
9	the	the		dt	art								DT	det	11
10	,	,											,	punct	11
11													_SP	dep	8
12	in	in											IN	pobj	8
13	the	the		dt	art								DT	det	15
14	(	(											-LRB-	punct	15
15	plan	plan		nn									NN	pobj	12
16	)	)											-RRB-	punct	15
17													_SP	dep	12
18	so	so											RB	pobj	8
19	the	the		dt	art								DT	det	20
20	unconditional	unconditional											JJ	nsubj	21
21	means	mean		vbmain	vblex	pres	simple	active					VBZ	ROOT	21
22	that	that		comp	comp_that								IN	mark	77
23	,	,											,	punct	77
24	if	if		cs	cnd								IN	mark	26
25	you	you		pro	2nd	sg							PRP	nsubj	26
26	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	77
27	...	...											:	punct	26
28	two	two											CD	nummod	30
29	temporal	temporal	attr+npremod	jj	attr								JJ	amod	30
30	transitions	transition		nn	pl	nom							NNS	dobj	26
31	that	that		relpro	relpro_that	sg							WDT	nsubj	33
32	could	could		vbaux	mod	pos							MD	aux	33
33	happen	happen	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	30
34	at	at	in+advl	in	advl								IN	prep	33
35	the	the		dt	art								DT	det	37
36	same	same	attr+npremod	jj	attr								JJ	amod	37
37	time	time		nn									NN	pobj	34
38	like	like	in+npostmod	in	nmod								IN	prep	30
39	s-	s-		nn									NN	pobj	38
40	in	in		in	in_othr								IN	prep	38
41	state	state	nn+npremod	nn		nom	npremod						NN	compound	42
42	S	s		nn		proper							NNP	pobj	40
43	-	-											HYPH	pobj	40
44	one	one		pro	other	pl							CD	pobj	40
45	there	there		rb	othr								RB	advmod	40
46	,	,											,	punct	77
47	you	you		pro	2nd	sg							PRP	nsubj	48
48	have	have		vbaux									VBP	aux	50
49	both	both											DT	dep	50
50	fly	fly		vbmain	nmod	pres	perf	active					VB	prep	63
51	to	to		to									TO	aux	52
52	fix	fix	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	50
53	two	two											CD	dobj	52
54	and	and		cc	phrs								CC	cc	52
55	lose	lose		vbmain	vblex	nonfinite	simple	active					VB	conj	52
56	altitude	altitude		nn									NN	dobj	55
57	that	that		relpro	relpro_that	sg							WDT	nsubj	59
58	could	could		vbaux	mod	pos							MD	aux	59
59	happen	happen	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	46
60	at	at	in+advl	in	advl								IN	prep	59
61	the	the		dt	art								DT	det	63
62	same	same	attr+npremod	jj	attr								JJ	amod	63
63	time	time		nn									NN	pobj	60
64	that	that		dt	dt_dem								DT	det	65
65	function	function		nn		nom							NN	nsubj	77
66	that	that											WDT	dative	68
67	i	i		pro	1st	sg							PRP	nsubj	68
68	showed	show	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel		VBD	relcl	65
69	you	you		pro	2nd	sg							PRP	dobj	68
70	for	for	in+npostmod	in	nmod								IN	prep	65
71	flying	fly	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	70
72	to	to		to									TO	aux	73
73	fix	fix	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	71
74	two	two											CD	dobj	73
75	,	,											,	punct	77
76	basically	basically	rb+advl	rb	advl	ly							RB	advmod	77
77	said	say	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls	thatcls	vcomp		VBD	ccomp	21
78	,	,											,	punct	77
79	you	you		pro	2nd	sg							PRP	nsubj	81
80	're	be		vbaux									VBP	aux	81
81	gon	go		vbaux									VBG	aux	83
82	na	to		vbaux									VBG	aux	83
83	get	get		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	77
84	there	there	rb+advl	rb	advl								RB	advmod	83
85	.	.											.	punct	21

#sentid = 265
0	there	there											EX	expl	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	no	no		dt									DT	det	3
3	question	question		nn		nom							NN	attr	1
4	about	about	in+npostmod	in	nmod								IN	prep	3
5	it	it		pro	3rd	sg							PRP	pobj	4
6	so	so		cs	cs_othr								IN	mark	10
7	it	it		pro	3rd	sg							PRP	nsubj	10
8	does	do		vbaux									VBZ	aux	10
9	n't	not											RB	neg	10
10	consider	consider	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VB	advcl	1
11	the	the		dt	art								DT	det	12
12	fact	fact		nn									NN	dobj	10
13	that	that		relpro	relpro_that								IN	mark	16
14	you	you		pro	2nd	sg							PRP	nsubj	16
15	might	might		vbaux	mod	pos							MD	aux	16
16	lose	lose	thatcls+ncomp	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	ncomp		VB	acl	12
17	altitude	altitude		nn									NN	dobj	16
18	.	.											.	punct	1

#sentid = 266
0	at	at											IN	ROOT	0
1	,	,											,	punct	0
2	from	from		in	in_othr								IN	prep	0
3	that	that		dt	dt_dem								DT	det	5
4	same	same	attr+npremod	jj	attr								JJ	amod	5
5	state	state		nn		nom							NN	pobj	2
6	.	.											.	punct	0

#sentid = 267
0	so	so		rb	link								RB	advmod	3
1	,	,											,	punct	3
2	we	we		pro	1st								PRP	nsubj	3
3	try	try		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	66
4	to	to		to									TO	aux	5
5	combine	combine	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	3
6	those	those		dt	dt_dem								DT	det	7
7	effects	effect		nn	pl								NNS	dobj	5
8	to	to		to									TO	aux	10
9	,	,											,	punct	10
10	give	give	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	5
11	an	an		dt									DT	det	17
12	overall	overall	attr+npremod	jj	attr								JJ	amod	17
13	,	,											,	punct	17
14	um	um											UH	intj	17
15	,	,											,	punct	17
16	uh	uh											UH	intj	17
17	representation	representation		nn		nom							NN	dobj	10
18	of	of		in	in_othr								IN	prep	35
19	,	,											,	punct	18
20	well	well											UH	intj	18
21	if	if		cs	cnd								IN	mark	23
22	you	you		pro	2nd	sg							PRP	nsubj	23
23	go	go	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	35
24	to	to	in+advl	in	advl								IN	prep	23
25	state	state	nn+npremod	nn		nom	npremod						NN	compound	26
26	S	s		nn									NN	pobj	24
27	-	-											HYPH	punct	26
28	three	three											CD	nummod	26
29	then	then		rb	othr								RB	advmod	35
30	,	,											,	punct	35
31	obviously	obviously		rb	othr	ly							RB	advmod	35
32	you	you		pro	2nd	sg							PRP	nsubj	35
33	're	be		vbaux									VBP	aux	35
34	not	not											RB	neg	35
35	gon	go		vbaux									TO	aux	37
36	na	to		vbaux									TO	aux	37
37	go	go		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	3
38	to	to	in+advl	in	advl								IN	prep	37
39	state	state	nn+npremod	nn		nom	npremod						NN	compound	40
40	S	s		nn									NN	pobj	38
41	-	-											HYPH	nummod	40
42	four	four											CD	nummod	40
43	because	because		cs	cos								IN	mark	49
44	,	,											,	punct	49
45	um	um											UH	intj	49
46	,	,											,	punct	49
47	so	so		rb	link								RB	advmod	49
48	we	we		pro	1st								PRP	nsubj	49
49	try	try	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBP	advcl	37
50	to	to		to									TO	aux	51
51	combine	combine	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	49
52	the	the		dt	art								DT	det	55
53	unconditional	unconditional	attr+npremod	jj	attr								JJ	amod	55
54	,	,											,	punct	55
55	functions	function		nn	pl	nom							NNS	dobj	51
56	into	into	in+advl	in	advl								IN	prep	51
57	conditional	conditional		jj	attr								JJ	amod	58
58													_SP	dep	59
59	representations	representation		nn	pl	nom							NNS	pobj	56
60													_SP	dep	3
61	so	so		rb	link								RB	advmod	66
62	you	you		pro	2nd	sg							PRP	nsubj	66
63	could	could		vbaux	mod	pos							MD	aux	66
64	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	66
65	,	,											,	punct	66
66	call	call		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	66
67	it	it		pro	3rd	sg							PRP	dobj	66
68	conditional	conditional											JJ	oprd	66
69	on	on	in+jcomp	in	jcomp								IN	prep	68
70	no	no		dt									DT	det	72
71	other	other	attr+npremod	jj	attr								JJ	amod	72
72	transition	transition		nn		nom							NN	pobj	69
73	.	.											.	punct	66

#sentid = 268
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	0

#sentid = 269
0													_SP	dep	5
1	yes	yes											UH	intj	5
2	,	,											,	punct	5
3	you	you		pro	2nd	sg							PRP	nsubj	5
4	could	could		vbaux	mod	pos							MD	aux	5
5	do	do		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	5
6	that	that		pro	dem	sg							DT	dobj	5
7	.	.											.	punct	5

#sentid = 270
0													_SP	dep	5
1	okay	okay											UH	intj	5
2	as	as	in+advl	in	advl								IN	prep	5
3	a	a		dt	art								DT	det	4
4	r-	r-		nn									NN	pobj	2
5	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	5
6	it	it		pro	3rd	sg							PRP	nsubj	5
7	also	also	rb+advl	rb	advl								RB	advmod	5
8	conditional	conditional		jj	pred								JJ	acomp	5
9	on	on	in+jcomp	in	jcomp								IN	prep	8
10	,	,											,	punct	9
11	uh	uh											UH	intj	9
12	,	,											,	punct	9
13	no	no		dt									DT	det	14
14	action	action		nn		nom							NN	pobj	9
15	?	?											.	punct	5

#sentid = 271
0													_SP	dep	14
1	uh	uh											UH	intj	14
2	,	,											,	punct	14
3	yes	yes											UH	intj	14
4	so	so		rb	link								RB	advmod	14
5	if	if		cs	cnd								IN	mark	7
6	you	you		pro	2nd	sg							PRP	nsubj	7
7	put	put	finitecls+advl	vbmain	phrsv	pres	simple	active	advlcls		conditional		VBP	advcl	14
8	an	an		dt									DT	det	9
9	action	action		nn		nom							NN	dobj	7
10	in	in		rb	prtcle								RB	prt	7
11	then	then	rb+advl	rb	advl								RB	advmod	7
12	that	that		pro	dem	sg							DT	nsubj	14
13	also	also	rb+advl	rb	advl								RB	advmod	14
14	alters	alter		vbmain	vblex	pres	simple	active					VBZ	ROOT	14
15	it	it		pro	3rd	sg							PRP	dative	14
16	its	its		dt	poss								PRP$	poss	17
17	probability	probability		nn		nom							NN	dobj	14
18	.	.											.	punct	14

#sentid = 272
0	in	in	in+advl	in	advl								IN	prep	3
1	fact	fact		nn									NN	pobj	0
2	we	we		pro	1st								PRP	nsubj	3
3	rely	rely		vbmain	prepv	pres	simple	active					VBP	ROOT	3
4	on	on	in+advl	in	advl								IN	prep	3
5	that	that		pro	dem	sg							DT	pobj	4
6	because	because		cs	cos								IN	mark	15
7	,	,											,	punct	15
8	like	like	in+advl	in	advl								IN	prep	15
9	this	this		dt	dt_dem								DT	det	10
10	crash	crash		nn									NN	pobj	8
11	,	,											,	punct	15
12	um	um											UH	intj	15
13	transition	transition		nn		nom							NN	nsubj	15
14	will	will		vbaux	mod	prd							MD	aux	15
15	have	have	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		causative		VB	advcl	3
16	some	some		dt									DT	det	18
17	,	,											,	punct	18
18	function	function		nn		nom							NN	dobj	15
19	that	that		relpro	relpro_that	sg							WDT	nsubj	20
20	shows	show	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	18
21	that	that		comp	comp_that								IN	mark	24
22	it	it		pro	3rd	sg							PRP	nsubj	24
23	's	be		vbaux									VBZ	aux	24
24	going	go	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls	thatcls	vcomp		VBG	ccomp	20
25	to	to		to									TO	aux	26
26	happen	happen	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	24
27	if	if		cs	cnd								IN	mark	31
28	you	you		pro	2nd	sg							PRP	nsubj	31
29	do	do		vbaux									VBP	aux	31
30	n't	not											RB	neg	31
31	do	do	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VB	advcl	24
32	anything	anything		nn	other	nom							NN	dobj	31
33	.	.											.	punct	3

#sentid = 273
0	but	but		cc	cls								CC	cc	3
1	beyon-	beyon-											XX	dep	3
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	3
4	to	to		to									TO	aux	5
5	change	change		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	3
6	that	that		pro	dem	sg							DT	dobj	5
7	by	by	in+advl	in	advl								IN	prep	5
8	having	have	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	7
9	an	an		dt									DT	det	10
10	action	action		nn		nom							NN	dobj	8
11	in	in	rb+advl	rb	advl								RB	advmod	8
12	,	,											,	punct	8
13	that	that		pro	dem	sg							WDT	nsubj	14
14	says	say	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	8
15	well	well											UH	intj	20
16	actually	actually	rb+advl	rb	advl	ly							RB	advmod	20
17	,	,											,	punct	20
18	i	i		pro	1st	sg							PRP	nsubj	20
19	'm	be		vbaux									VBP	aux	20
20	gon	go		vbaux									VBG	aux	22
21	na	to		vbaux									VBG	aux	22
22	get	get		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	14
23	out	out	in+advl	in	advl								IN	prep	22
24	of	of		in	in_othr								IN	prep	23
25	that	that		dt	dt_dem								DT	det	26
26	state	state		nn		nom							NN	pobj	24
27	,	,											,	punct	22
28	S	s		nn									NN	npadvmod	22
29	-	-											HYPH	punct	22
30	two	two											CD	meta	22
31	and	and		cc	phrs								CC	cc	36
32	before	before		cs	cs_othr								IN	mark	36
33	a	a		dt	art								DT	det	34
34	crash	crash		nn									NN	nsubj	36
35	will	will		vbaux	mod	prd							MD	aux	36
36	happen	happen		vbmain	vblex	vp_w_modal	simple	active			other_advl		VB	conj	22
37	so	so		cs	cs_othr								IN	mark	41
38	that	that		pro	dem	sg							IN	nsubj	41
39	effectively	effectively	rb+advl	rb	advl	ly							RB	advmod	41
40	,	,											,	punct	41
41	causes	cause	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	14
42	the	the		dt	art								DT	det	43
43	crash	crash	s+gen	dt	poss		sgen						NN	poss	46
44	's	's											POS	case	43
45	conditional	conditional	attr+npremod	jj	attr								JJ	amod	46
46	probability	probability		nn		nom							NN	nsubj	48
47	to	to		to									TO	aux	48
48	be	be		vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	41
49	zero	zero											CD	attr	48
50	,	,											,	punct	48
51	at	at	in+advl	in	advl								IN	prep	48
52	all	all		dt									DT	det	53
53	time	time		nn									NN	pobj	51
54	.	.											.	punct	3

#sentid = 274
0	so	so		rb	link								RB	advmod	2
1	that	that		pro	dem	sg							DT	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	what	what											WP	dobj	8
4	we	we		pro	1st								PRP	nsubj	6
5	're	be		vbaux									VBP	aux	6
6	trying	try	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	2
7	to	to		to									TO	aux	8
8	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	6
9	with	with	in+advl	in	advl								IN	prep	8
10	those	those		pro	dem	pl							DT	pobj	9
11	.	.											.	punct	2

#sentid = 275
0													_SP	dep	13
1	and	and		cc	phrs								CC	cc	13
2	speaking	speak	ingcls+advl	vbmain	prepv	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	13
3	of	of	in+advl	in	advl								IN	prep	2
4	,	,											,	punct	3
5	how	how		comp	comp_wh								WRB	advmod	9
6	the	the		dt	art								DT	det	7
7	action	action		nn		nom							NN	nsubjpass	9
8	is	be		vbaux									VBZ	auxpass	9
9	specified	specify	whcls+incomp	vbmain	vblex	pres	simple	pasv_agls	compcls	whcls	incomp		VBN	pcomp	3
10	,	,											,	punct	13
11	um	um											UH	intj	13
12	we	we		pro	1st								PRP	nsubj	13
13	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	13
14	,	,											,	punct	13
15	a	a		dt	art								DT	det	18
16	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	17
17	specific	specific	attr+npremod	jj	attr								JJ	amod	18
18	way	way		nn									NN	dobj	13
19	that	that	rb+advl	rb	advl								WDT	advmod	21
20	we	we		pro	1st								PRP	nsubj	21
21	think	think	finitecls+rel	vbmain	prepv	pres	simple	active	nmod_cls		rel		VBP	relcl	18
22	of	of	in+advl	in	advl								IN	prep	21
23	a	a		dt	art								DT	det	25
24	guaranteed	guarantee	attr+npremod	jj	attr	ed							VBN	amod	25
25	action	action		nn		nom							NN	pobj	22
26	.	.											.	punct	13

#sentid = 276
0	now	now											UH	intj	10
1	,	,											,	punct	10
2	if	if		cs	cnd								IN	mark	4
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	remember	remember	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	10
5	from	from	in+advl	in	advl								IN	prep	4
6	the	the		dt	art								DT	det	7
7	plan	plan		nn									NN	pobj	5
8	,	,											,	punct	10
9	it	it		pro	3rd	sg							PRP	nsubj	10
10	was	be		vbmain	be	past	simple	active					VBD	ROOT	10
11	not	not											RB	neg	10
12	an	an		dt									DT	det	14
13	ordered	order	attr+npremod	jj	attr	ed							VBN	amod	14
14	set	set		nn									NN	attr	10
15	of	of	of+npostmod	in	nmod								IN	prep	14
16	actions	action		nn	pl	nom							NNS	pobj	15
17	so	so		cc	cls								CC	cc	10
18	,	,											,	punct	10
19	um	um											UH	intj	10
20	,	,											,	punct	23
21	one	one		pro	other	pl							PRP	nsubj	23
22	could	could		vbaux	mod	pos							MD	aux	23
23	show	show		vbmain	phrsv	vp_w_modal	simple	active					VB	conj	10
24	up	up		rb	prtcle								RP	prt	23
25	,	,											,	punct	23
26	in	in	in+advl	in	advl								IN	prep	23
27	a	a		dt	art								DT	det	29
28	certain	certain	attr+npremod	jj	attr								JJ	amod	29
29	state	state		nn		nom							NN	pobj	26
30	at	at	in+advl	in	advl								IN	prep	23
31	any	any		dt									DT	det	32
32	place	place		nn									NN	pobj	30
33	in	in	in+npostmod	in	nmod								IN	prep	32
34	that	that		dt	dt_dem								DT	det	36
35	cyclic	cyclic	attr+npremod	jj	attr								JJ	amod	36
36	schedule	schedule		nn									NN	pobj	33
37	and	and		cc	cls								CC	cc	23
38	you	you		pro	2nd	sg							PRP	nsubj	41
39	ca	can		vbaux	mod								MD	aux	41
40	n't	not											RB	neg	41
41	predict	predict		vbmain	vblex	vp_w_modal	simple	active					VB	conj	23
42	in	in	in+advl	in	advl								IN	prep	41
43	advance	advance		nn		nom							NN	pobj	42
44	where	where		comp	comp_wh								WRB	advmod	47
45	that	that		pro	dem	sg							DT	nsubj	47
46	will	will		vbaux	mod	prd							MD	aux	47
47	be	be	whcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls	whcls	vcomp		VB	ccomp	41
48	.	.											.	punct	10

#sentid = 277
0	so	so		rb	link								RB	advmod	7
1	,	,											,	punct	7
2	worst	bad	attr+npremod	jj	attr								JJS	amod	3
3	case	case		nn									NN	npadvmod	7
4	,	,											,	punct	7
5	you	you		pro	2nd	sg							PRP	nsubj	7
6	'll	will		vbaux	mod								MD	aux	7
7	go	go		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	7
8	all	all											PDT	predet	10
9	the	the		dt	art								DT	det	10
10	way	way		nn									NN	npadvmod	11
11	around	around	in+advl	in	advl								IN	prep	7
12	the	the		dt	art								DT	det	13
13	schedule	schedule		nn									NN	pobj	11
14	and	and		cc	phrs								CC	cc	7
15	just	just	rb+jjrbmod	rb	othr								RB	advmod	16
16	barely	barely	rb+advl	rb	advl	ly							RB	advmod	17
17	meet	meet		vbmain	vblex	nonfinite	simple	active					VB	conj	7
18	your	your		dt	poss								PRP$	poss	19
19	deadline	deadline		nn									NN	dobj	17
20	.	.											.	punct	7

#sentid = 278
0	um	um											UH	intj	3
1	that	that		pro	dem	sg							DT	nsubjpass	3
2	's	be		vbaux									VBZ	auxpass	3
3	represented	represent		vbmain	vblex	pres	simple	pasv_by					VBN	ROOT	3
4	by	by											IN	agent	3
5	this	this		dt	dt_dem								DT	det	8
6	max	max	nn+npremod	nn			npremod						NN	compound	8
7	-	-											HYPH	punct	8
8	delta	delta		nn									NN	pobj	4
9	which	which		relpro	relpro_wh								WDT	nsubj	10
10	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	8
11	the	the		dt	art								DT	det	12
12	deadline	deadline		nn									NN	attr	10
13	.	.											.	punct	3

#sentid = 279
0	so	so		rb	link								RB	advmod	3
1	,	,											,	punct	3
2	we	we		pro	1st								PRP	nsubj	3
3	represent	represent		vbmain	vblex	pres	simple	active					VBP	ROOT	3
4	the	the		dt	art								DT	det	5
5	probability	probability		nn		nom							NN	dobj	3
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	,	,											,	punct	6
8	the	the		dt	art								DT	det	10
9	guaranteed	guarantee	attr+npremod	jj	attr	ed							VBN	amod	10
10	action	action		nn		nom							NN	pobj	6
11	occurring	occur	ingcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	10
12	at	at	in+advl	in	advl								IN	prep	11
13	the	the		dt	art								DT	det	16
14	given	give	attr+npremod	jj	attr	ed							VBN	amod	16
15	time	time	nn+npremod	nn			npremod						NN	compound	16
16	step	step		nn									NN	pobj	12
17	by	by	in+advl	in	advl								IN	prep	11
18	,	,											,	punct	17
19	this	this		dt	dt_dem								DT	det	20
20	function	function		nn		nom							NN	pobj	17
21	which	which		relpro	relpro_wh								WDT	nsubj	23
22	basically	basically	rb+advl	rb	advl	ly							RB	advmod	23
23	gives	give	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	20
24	us	we		pro	pl								PRP	dative	23
25	,	,											,	punct	23
26	an	an		dt									DT	det	28
27	equal	equal	attr+npremod	jj	attr								JJ	amod	28
28	probability	probability		nn		nom							NN	dobj	23
29	of	of	of+npostmod	in	nmod								IN	prep	28
30	occurring	occur	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	29
31	between	between	in+advl	in	advl								IN	prep	30
32	the	the		dt	art								DT	det	35
33	current	current	attr+npremod	jj	attr								JJ	amod	35
34	time	time	nn+npremod	nn			npremod						NN	compound	35
35	step	step		nn									NN	pobj	31
36	and	and		cc	phrs								CC	cc	35
37	when	when		rb	advl								WRB	advmod	43
38	the	the		dt	art								DT	det	39
39	deadline	deadline		nn									NN	nsubj	41
40	's	be		vbaux									VBZ	aux	41
41	going	go		vbmain	vblex	pres	prog	active					VBG	conj	35
42	to	to		to									TO	aux	43
43	happen	happen	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	41
44	.	.											.	punct	3

#sentid = 280
0	we	we		pro	1st								PRP	nsubj	4
1	do	do		vbaux									VBP	aux	4
2	n't	not											RB	neg	4
3	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	4
4	have	have		vbmain	vblex	pres	simple	active					VB	ROOT	4
5	a	a		dt	art								DT	det	7
6	good	good	attr+npremod	jj	attr								JJ	amod	7
7	representation	representation		nn		nom							NN	dobj	4
8	for	for	in+npostmod	in	nmod								IN	prep	7
9	a	a		dt	art								DT	det	13
10	best	good	attr+npremod	jj	attr								JJS	amod	12
11	-	-											HYPH	punct	12
12	effort	effort	nn+npremod	nn			npremod						NN	compound	13
13	action	action		nn		nom							NN	pobj	8
14	because	because		cs	cos								IN	mark	20
15	,	,											,	punct	20
16	we	we		pro	1st								PRP	nsubj	20
17	do	do		vbaux									VBP	aux	20
18	n't	not											RB	neg	20
19	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	20
20	know	know	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VB	advcl	4
21	,	,											,	punct	20
22	um	um											UH	intj	20
23	,	,											,	punct	20
24	we	we		pro	1st								PRP	nsubj	28
25	have	have		vbaux									VBP	aux	28
26	n't	not											RB	neg	28
27	yet	yet		rb	link		splaux						RB	advmod	28
28	incorporated	incorporate	thatcls+vcomp	vbmain	vblex	pres	perf	active	compcls		vcomp	compdel	VBN	ccomp	20
29	average	average	attr+npremod	jj	attr								JJ	amod	31
30	-	-											HYPH	punct	31
31	case	case	nn+npremod	nn			npremod						NN	compound	33
32	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	33
33	time	time		nn									NN	dobj	28
34	and	and		cc	phrs								CC	cc	28
35	have	have		vbaux									VBP	aux	37
36	n't	not											RB	neg	37
37	iterated	iterate		vbmain	vblex	pres	perf	active					VBN	conj	28
38	between	between	in+advl	in	advl								IN	prep	37
39	planning	planning		nn		nom							NN	pobj	38
40	and	and		cc	phrs								CC	cc	39
41	scheduling	scheduling		nn		nom							NN	conj	39
42	to	to		to									TO	aux	44
43	,	,											,	punct	44
44	try	try	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	37
45	to	to		to									TO	aux	46
46	guess	guess	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	44
47	at	at	in+advl	in	advl								IN	prep	46
48	what	what											WP	attr	56
49	the	the		dt	art								DT	det	53
50	best	good	attr+npremod	jj	attr								JJS	amod	53
51	,	,											,	punct	53
52	um	um											UH	intj	53
53	function	function		nn		nom							NN	nsubj	56
54	for	for	in+npostmod	in	nmod								IN	prep	53
55	that	that		pro	dem	sg							DT	pobj	54
56	is	be	whcls+incomp	vbmain	be	pres	simple	active	compcls	whcls	incomp		VBZ	pcomp	47
57	.	.											.	punct	4

#sentid = 281
0													_SP	dep	4
1	okay	okay											UH	intj	4
2	so	so		rb	link								RB	advmod	4
3	this	this		pro	dem	sg							DT	nsubj	4
4	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	confusing	confusing		jj	pred								JJ	acomp	4
6	so	so		cc	cls								CC	cc	4
7	,	,											,	punct	4
8	what	what		comp	comp_wh								WP	dobj	11
9	does	do		vbaux									VBZ	aux	11
10	it	it		pro	3rd	sg							PRP	nsubj	11
11	mean	mean		vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VB	ccomp	31
12	to	to		to									TO	aux	13
13	have	have	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	11
14	a	a		dt	art								DT	det	15
15	probability	probability		nn		nom							NN	dobj	13
16	of	of	of+npostmod	in	nmod								IN	prep	15
17	,	,											,	punct	16
18	the	the		dt	art								DT	det	19
19	action	action		nn		nom							NN	pobj	16
20	,	,											,	punct	31
21	i	i		pro	1st	sg							PRP	nsubj	22
22	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	28
23	after	after	rb+jjrbmod	rb	othr								RB	advmod	24
24	all	all	rb+advl	rb	advl								RB	advmod	27
25	,	,											,	punct	27
26	you	you		pro	2nd	sg							PRP	nsubj	27
27	're	be		vbaux									VBP	aux	28
28	contr-	contr-											XX	dep	31
29	the	the		dt	art								DT	det	30
30	action	action		nn		nom							NN	nsubj	31
31	is	be		vbmain	be	pres	simple	active					VBZ	conj	4
32	what	what		comp	comp_wh								WP	dobj	35
33	you	you		pro	2nd	sg							PRP	nsubj	35
34	're	be		vbaux									VBP	aux	35
35	controlling	control	whcls+vcomp	vbmain	vblex	pres	prog	active	compcls	whcls	vcomp		VBG	ccomp	31
36	.	.											.	punct	4

#sentid = 282
0													_SP	dep	5
1	so	so		rb	link								RB	advmod	5
2	what	what											WP	dep	5
3	does	do		vbaux									VBZ	aux	5
4	it	it		pro	3rd	sg							PRP	nsubj	5
5	mean	mean		vbmain	vblex	pres	simple	active					VB	ROOT	5
6	to	to		to									TO	aux	7
7	take	take	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	5
8	the	the											DT	dobj	7
9	?	?											.	punct	5

#sentid = 283
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	1

#sentid = 284
0	well	well											UH	intj	3
1	you	you		pro	2nd	sg							PRP	nsubj	3
2	're	be		vbaux									VBP	aux	3
3	controlling	control		vbmain	vblex	pres	prog	active					VBG	ROOT	3
4	the	the		dt	art								DT	det	5
5	action	action		nn		nom							NN	dobj	3
6	but	but		cc	cls								CC	cc	3
7	you	you		pro	2nd	sg							PRP	nsubj	10
8	ca	can		vbaux	mod								MD	aux	10
9	n't	not											RB	neg	10
10	control	control		vbmain	vblex	vp_w_modal	simple	active					VB	conj	3
11	where	where		comp	comp_wh								WRB	advmod	13
12	you	you		pro	2nd	sg							PRP	nsubj	13
13	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	10
14	in	in	in+advl	in	advl								IN	prep	13
15	this	this		dt	dt_dem								DT	det	18
16	s-	s-	attr+npremod	jj	attr								JJ	amod	18
17	cyclic	cyclic	attr+npremod	jj	attr								JJ	amod	18
18	schedule	schedule		nn									NN	pobj	14
19	when	when		rb	advl								WRB	advmod	21
20	you	you		pro	2nd	sg							PRP	nsubj	21
21	do	do	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	13
22	,	,											,	punct	10
23	so	so		cc	cls								RB	cc	10
24	yeah	yeah											UH	intj	28
25	,	,											,	punct	24
26	(	(											-LRB-	punct	28
27	where	where		rb	advl								WRB	advmod	28
28	's	be		vbmain	be	pres	simple	active					VBZ	conj	10
29	my	my		dt	poss								PRP$	poss	30
30	plan	plan		nn									NN	nsubj	28
31	.	.											-RRB-	punct	28
32	)	)											-RRB-	punct	10

#sentid = 285
0	so	so		rb	link								RB	advmod	2
1	,	,											,	punct	2
2	say	say		vbmain	vblex	nonfinite	simple	active					VB	ROOT	2
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	need	need	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	2
5	to	to		to									TO	aux	6
6	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	4
7	TAP	tap		nn									NN	dobj	6
8	-	-											HYPH	punct	7
9	three	three											CD	nummod	7
10	.	.											.	punct	2

#sentid = 286
0	if	if		cs	cnd								IN	mark	3
1	you	you		pro	2nd	sg							PRP	nsubj	3
2	first	first		rb	link								RB	advmod	3
3	reach	reach	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	18
4	the	the		dt	art								DT	det	5
5	state	state		nn		nom							NN	dobj	3
6	,	,											,	punct	3
7	at	at	in+advl	in	advl								IN	prep	3
8	time	time		nn									NN	pobj	7
9	four	four											CD	nummod	8
10	,	,											,	punct	3
11	on	on	in+advl	in	advl								IN	prep	3
12	the	the		dt	art								DT	det	13
13	schedule	schedule		nn									NN	pobj	11
14	then	then		rb	link								RB	advmod	18
15	,	,											,	punct	18
16	you	you		pro	2nd	sg							PRP	nsubj	18
17	will	will		vbaux	mod	prd							MD	aux	18
18	do	do		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	18
19	,	,											,	punct	18
20	this	this		dt	dt_dem								DT	det	21
21	TAP	tap		nn		proper							NNP	dobj	18
22	immediately	immediately	rb+advl	rb	advl	ly							RB	advmod	18
23	so	so		cs	cs_othr								IN	mark	26
24	it	it		pro	3rd	sg							PRP	nsubj	26
25	will	will		vbaux	mod	prd							MD	aux	26
26	be	be	finitecls+advl	vbmain	be	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	18
27	_	_											NFP	punct	26
28	happen	happen		vbmain	vblex	nonfinite	simple	active					VB	dep	26
29	within	within	in+advl	in	advl								IN	prep	28
30	the	the		dt	art								DT	det	34
31	first	first	attr+npremod	jj	attr								JJ	amod	34
32	time	time	nn+npremod	nn			npremod						NN	nmod	34
33	p-	p-		nn									NN	punct	34
34	interval	interval		nn		nom							NN	pobj	29
35	.	.											.	punct	18

#sentid = 287
0	however	however		rb	link								RB	advmod	30
1	if	if		cs	cnd								IN	mark	3
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	are	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBP	advcl	30
4	at	at	in+advl	in	advl								IN	prep	3
5	time	time	nn+npremod	nn			npremod						NN	compound	6
6	unit	unit		nn									NN	pobj	4
7	five	five											CD	nummod	6
8	when	when		rb	advl								WRB	advmod	11
9	you	you		pro	2nd	sg							PRP	nsubj	11
10	first	first		rb	link								RB	advmod	11
11	enter	enter	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	3
12	,	,											,	punct	11
13	um	um											UH	intj	11
14	the	the		dt	art								DT	det	15
15	state	state		nn		nom							NN	dobj	11
16	where	where		rb	advl								WRB	advmod	23
17	TAP	tap		nn									NN	nsubj	20
18	-	-											HYPH	punct	17
19	three	three											CD	nummod	17
20	needs	need	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	15
21	to	to		to									TO	aux	23
22	be	be		vbaux									VB	auxpass	23
23	done	do		vbmain	vblex	nonfinite	simple	pasv_agls	compcls	whcls	vcomp		VBN	xcomp	20
24	,	,											,	punct	30
25	then	then		rb	link								RB	advmod	30
26	,	,											,	punct	30
27	you	you		pro	2nd	sg							PRP	nsubj	30
28	wo	will		vbaux	mod								MD	aux	30
29	n't	not											RB	neg	30
30	notice	notice		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	30
31	that	that		comp	comp_that								IN	mark	33
32	you	you		pro	2nd	sg							PRP	nsubj	33
33	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	30
34	in	in	in+advl	in	advl								IN	prep	33
35	that	that		dt	dt_dem								DT	det	36
36	state	state		nn		nom							NN	pobj	34
37	until	until		cs	cs_othr								IN	mark	39
38	you	you		pro	2nd	sg							PRP	nsubj	39
39	go	go	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	30
40	all	all											PDT	predet	42
41	the	the		dt	art								DT	det	42
42	way	way		nn									NN	npadvmod	43
43	around	around	in+advl	in	advl								IN	prep	39
44	the	the		dt	art								DT	det	45
45	schedule	schedule		nn									NN	pobj	43
46	.	.											.	punct	30

#sentid = 288
0	so	so		rb	link								RB	advmod	2
1	that	that		pro	dem	sg							DT	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	4
4	of	of		rb	othr								RB	advmod	9
5	the	the		dt	art								DT	det	9
6	,	,											,	punct	9
7	the	the		dt	art								DT	det	9
8													_SP	dep	9
9	unpredictability	unpredictability		nn		nom							NN	attr	2
10	of	of	of+npostmod	in	nmod								IN	prep	9
11	the	the		dt	art								DT	det	12
12													_SP	dep	10
13	so	so		rb	link								RB	advmod	15
14	this	this		pro	dem	sg							DT	nsubj	15
15	is	be		vbmain	be	pres	simple	active					VBZ	parataxis	12
16	,	,											,	punct	15
17	so	so		rb	othr								RB	advmod	19
18	the	the		dt	art								DT	det	19
19	p-	p-		nn									NN	meta	15
20	so	so		cc	cls								CC	cc	2
21	in	in	in+advl	in	advl								IN	prep	26
22	a	a		dt	art								DT	det	23
23	way	way		nn									NN	pobj	21
24	you	you		pro	2nd	sg							PRP	nsubj	26
25	're	be		vbaux									VBP	aux	26
26	modelling	model		vbmain	vblex	pres	prog	active					VBG	conj	2
27	the	the		dt	art								DT	det	28
28	planner	planner		nn		nom							NN	nsubj	31
29	's	's											POS	case	28
30	,	,											,	punct	28
31	unpredictability	unpredictability		nn		nom							NN	dobj	26
32	about	about	in+npostmod	in	nmod								IN	prep	31
33	what	what											WP	dobj	39
34	the	the		dt	art								DT	det	35
35	scheduler	scheduler		nn		nom							NN	nsubj	37
36	's	be		vbaux									VBZ	aux	37
37	gon	go											TO	pcomp	32
38	na	to		vbaux									TO	aux	39
39	do	do		vbmain	vblex	nonfinite	simple	active	compcls			compdel	VB	xcomp	37
40	,	,											,	punct	32
41													_SP	dep	32
42	or	or											CC	pobj	32
43	about	about											IN	conj	32
44	how	how		comp	comp_wh								WRB	advmod	52
45	the	the		rb	othr								DT	advmod	44
46	,	,											,	punct	52
47	how-	how-											XX	punct	46
48	uh	uh											UH	intj	51
49	,	,											,	punct	51
50													_SP	dep	51
51	w-	w-											XX	meta	47
52	about	about								whcls			IN	pcomp	43
53	how	how		rb	advl								WRB	advmod	59
54	the	the		dt	art								DT	det	55
55	plan	plan		nn									NN	nsubj	57
56	is	be		vbaux									VBZ	aux	57
57	going	go		vbmain	vblex	pres	prog	active	compcls		incomp	compdel	VBG	pcomp	52
58	to	to		to									TO	aux	59
59	be	be	tocls+vcomp	vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	57
60	,	,											,	punct	52
61													_SP	dep	52
62	about	about		in	in_othr								IN	prep	52
63	when	when		rb	advl								WRB	advmod	74
64	the	the											DT	dep	72
65	,	,											,	punct	72
66	when	when											WRB	dep	72
67													_SP	dep	72
68	uh	uh											UH	intj	72
69	where	where		rb	advl								WRB	advmod	74
70	you	you		pro	2nd	sg							PRP	nsubj	72
71	're	be		vbaux									VBP	aux	72
72	going	go		vbmain	vblex	pres	prog	active	compcls		incomp	compdel	VBG	pcomp	62
73	to	to		to									TO	aux	74
74	be	be	tocls+vcomp	vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	72
75	in	in	in+advl	in	advl								IN	prep	74
76	the	the		dt	art								DT	det	77
77	plan	plan		nn									NN	pobj	75
78	when	when		rb	advl								WRB	advmod	80
79	you	you		pro	2nd	sg							PRP	nsubj	80
80	execute	execute	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	74
81	.	.											.	punct	26

#sentid = 289
0													_SP	dep	19
1	well	well											UH	intj	19
2	it	it		pro	3rd	sg							PRP	nsubj	3
3	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	19
4	the	the		dt	art								DT	det	5
5	trajectory	trajectory		nn		nom							NN	attr	3
6	,	,											,	punct	19
7	you	you		pro	2nd	sg							PRP	nsubj	10
8	do	do		vbaux									VBP	aux	10
9	n't	not											RB	neg	10
10	know	know		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	19
11	the	the		dt	art								DT	det	13
12	exact	exact	attr+npremod	jj	attr								JJ	amod	13
13	trajectory	trajectory		nn		nom							NN	dobj	10
14	right	right											UH	intj	10
15	,	,											,	punct	19
16	different	different	attr+npremod	jj	attr								JJ	amod	17
17	trajectories	trajectory		nn	pl	nom							NNS	nsubj	19
18	are	be		vbaux									VBP	aux	19
19	going	go		vbmain	vblex	pres	prog	active					VBG	ROOT	19
20	to	to		to									TO	aux	21
21	incur	incur	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	19
22	different	different	attr+npremod	jj	attr								JJ	amod	24
23	,	,											,	punct	24
24	actions	action		nn	pl	nom							NNS	dobj	21
25	and	and		cc	phrs								CC	cc	24
26	consequence	consequence		nn		nom							NN	conj	24
27	of	of	of+npostmod	in	nmod								IN	prep	24
28	what	what		comp	comp_wh								WP	dobj	30
29	you	you		pro	2nd	sg							PRP	nsubj	30
30	have	have	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VBP	pcomp	27
31	essentially	essentially		rb	othr	ly							RB	advmod	34
32	a	a		dt	art								DT	det	34
33	closed	close	attr+npremod	jj	attr	ed							VBN	amod	34
34	loop	loop		nn									NN	dobj	30
35													_SP	dep	19
36	o-	o-											XX	punct	19
37	one	one											CD	nummod	38
38	second	second		nn									NN	npadvmod	19
39													_SP	dep	19
40	but	but											CC	meta	19
41	essen-	essen-											XX	dep	19
42	but	but		cc	cls								CC	cc	19
43	essentially	essentially	rb+advl	rb	advl	ly							RB	advmod	49
44	what	what		comp	comp_wh								WP	dobj	48
45	the	the		dt	art								DT	det	46
46	planner	planner		nn		nom							NN	nsubj	48
47	's	be		vbaux									VBZ	aux	48
48	controlling	control		vbmain	vblex	pres	prog	active	compcls	whcls	vcomp		VBG	csubj	49
49	is	be		vbmain	be	pres	simple	active					VBZ	conj	19
50	just	just	rb+advl	rb	advl								RB	advmod	49
51	,	,											,	punct	49
52	does	do		vbaux									VBZ	aux	55
53	this	this		dt	dt_dem								DT	det	54
54	thing	thing		nn		nom							NN	nsubj	55
55	get	get		vbmain	prepv	pres	simple	active	compcls		vcomp		VB	ccomp	49
56	into	into	in+advl	in	advl								IN	prep	55
57	the	the		dt	art								DT	det	58
58	schedule	schedule		nn									NN	pobj	56
59	.	.											.	punct	49

#sentid = 290
0													_SP	dep	8
1	but	but		cc	phrs								CC	cc	8
2	given	give	edcls+advl	vbmain	advl	nonfinite	simple	active		edcls			VBN	prep	8
3	that	that		pro	dem	sg							DT	pobj	2
4													_SP	dep	2
5	well	well											UH	intj	8
6	the	the		dt	art								DT	det	7
7	planner	planner		nn		nom							NN	nsubj	8
8	controls	control		vbmain	vblex	pres	simple	active					VBZ	ROOT	8
9	whether	whether		cs	cs_othr								IN	mark	11
10	it	it		pro	3rd	sg							PRP	nsubj	11
11	's	be		vbmain	be	pres	simple	active	compcls		other_advl	compdel	VBZ	ccomp	8
12	in	in	in+advl	in	advl								IN	prep	11
13	the	the		dt	art								DT	det	14
14	schedule	schedule		nn									NN	pobj	12
15	.	.											.	punct	8

#sentid = 291
0													_SP	dep	9
1	and	and		cc	phrs								CC	cc	9
2	how	how		rb	othr								WRB	advmod	3
3													_SP	dep	9
4	right	right											UH	intj	9
5	but	but		cc	phrs								CC	cc	9
6	it	it		pro	3rd	sg							PRP	nsubj	9
7	does	do		vbaux									VBZ	aux	9
8	n't	not											RB	neg	9
9	control	control		vbmain	vblex	pres	simple	active					VB	ROOT	9
10	,	,											,	punct	9
11													_SP	dep	9
12	yeah	yeah											UH	intj	9
13													_SP	dep	9
14	anything	anything		nn	other	nom							NN	dobj	9
15	else	else		rb	othr								RB	advmod	14
16	,	,											,	punct	9
17	about	about	in+advl	in	advl								IN	prep	9
18	when	when		comp	comp_wh								WRB	advmod	20
19	it	it		pro	3rd	sg							PRP	nsubj	20
20	happens	happen	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VBZ	pcomp	17
21	.	.											.	punct	9

#sentid = 292
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	1

#sentid = 293
0													_SP	dep	0
1	because	because		cs	cos								IN	mark	7
2	the	the		dt	art								DT	det	5
3	plan	plan	nn+npremod	nn			npremod						NN	compound	5
4	-	-											HYPH	punct	5
5	execution	execution		nn		nom							NN	nsubj	7
6	is	be		vbaux									VBZ	aux	7
7	gon	go		vbaux									TO	aux	47
8	na	to		vbaux									TO	aux	10
9													_SP	dep	10
10	so	so											RB	xcomp	7
11	it	it		pro	3rd	sg							PRP	dep	10
12	so	so		cc									RB	cc	7
13	in	in	in+advl	in	advl								IN	prep	27
14	deciding	decide	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	13
15	whether	whether		cs	cs_othr								IN	mark	18
16	it	it		pro	3rd	sg							PRP	nsubjpass	18
17	's	be		vbaux									VBZ	aux	18
18	gon	go		vbaux									TO	aux	21
19	na	to		vbaux									TO	aux	21
20	get	get		vbaux									VB	auxpass	21
21	approved	approve		vbmain	vblex	nonfinite	simple	pasv_agls	compcls		vcomp	compdel	VBN	xcomp	14
22	in	in	in+advl	in	advl								IN	prep	21
23	the	the		dt	art								DT	det	24
24	schedule	schedule		nn									NN	pobj	22
25	it	it		pro	3rd	sg							PRP	nsubj	27
26	's	be		vbaux									VBZ	aux	27
27	figuring	figure		vbmain	phrsv	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	47
28	out	out		rb	prtcle								RP	prt	27
29	,	,											,	punct	27
30	um	um											UH	intj	27
31	,	,											,	punct	27
32	you	you		pro	2nd	sg							PRP	nsubj	33
33	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	27
34	and	and		cc									CC	cc	35
35	with	with	in+advl	in	advl								IN	prep	27
36	and	and		cc									CC	cc	35
37	with	with											IN	conj	35
38	what	what		dt									WDT	det	39
39	parameters	parameter		nn	pl	nom							NNS	dative	41
40	to	to		to									TO	aux	41
41	put	put	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	27
42	it	it		pro	3rd	sg							PRP	dobj	41
43	in	in	in+advl	in	advl								IN	prep	41
44	the	the		dt	art								DT	det	45
45	schedule	schedule		nn									NN	pobj	43
46	it	it		pro	3rd	sg							PRP	nsubj	47
47	's	be		vbmain	be	pres	simple	active	compcls			compdel	VBZ	ccomp	0
48	it	it		pro	3rd	sg							PRP	nsubj	50
49	's	be		vbaux									VBZ	aux	50
50	having	have	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	47
51	to	to		to									TO	aux	52
52	make	make		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	50
53	some	some		dt									DT	det	55
54	,	,											,	punct	55
55	prediction	prediction		nn		nom							NN	dobj	52
56	under	under	in+npostmod	in	nmod								IN	prep	55
57	uncertainty	uncertainty		nn									NN	pobj	56
58	about	about	in+npostmod	in	nmod								IN	prep	55
59	,	,											,	punct	58
60	how	how	rb+jjrbmod	rb	adjmod								WRB	advmod	61
61	responsive	responsive		jj	pred								JJ	acomp	65
62	that	that		dt	dt_dem								DT	det	63
63	thing	thing		nn		nom							NN	nsubj	65
64	will	will		vbaux	mod	prd							MD	aux	65
65	be	be		vbmain	be	vp_w_modal	simple	active	compcls		incomp	compdel	VB	pcomp	58
66	,	,											,	punct	65
67	in	in	in+advl	in	advl								IN	prep	52
68	some	some		dt									DT	det	69
69													_SP	dep	67
70	right	right											UH	intj	71
71	.	.											.	meta	69

#sentid = 294
0													_SP	dep	0

#sentid = 295
0	executing	execute		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	ROOT	0

#sentid = 296
0	schedule	schedule		nn									NN	ROOT	0

#sentid = 297
0	.	.											.	ROOT	0

#sentid = 298
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	1

#sentid = 299
0													_SP	dep	9
1	so	so		rb	link								RB	advmod	9
2	the	the		dt	art								DT	det	4
3	actual	actual	attr+npremod	jj	attr								JJ	amod	4
4	choice	choice		nn									NN	nsubj	9
5	the	the		dt	art								DT	det	6
6	planner	planner		nn		nom							NN	nsubj	8
7	's	be		vbaux									VBZ	aux	8
8	making	make	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel	reldel	VBG	relcl	4
9	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	9
10	,	,											,	punct	9
11	should	should		vbaux	mod	nec							MD	aux	13
12	i	i		pro	1st	sg							PRP	nsubj	13
13	put	put	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	9
14	this	this		pro	dem	sg							DT	dobj	13
15	on	on	in+advl	in	advl								IN	prep	13
16	the	the		dt	art								DT	det	18
17	,	,											,	punct	18
18	schedule	schedule		nn									NN	pobj	15
19	mkay	mkay											UH	intj	13
20	.	.											.	punct	9

#sentid = 300
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2	.	.											.	punct	1

#sentid = 301
0													_SP	dep	3
1	should	should		vbaux	mod	nec							MD	aux	3
2	i	i		pro	1st	sg							PRP	nsubj	3
3	put	put		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	3
4	it	it		pro	3rd	sg							PRP	dobj	3
5	in	in	rb+advl	rb	advl								RB	advmod	3
6	,	,											,	punct	3
7	and	and		cc	phrs								CC	cc	3
8	,	,											,	punct	3
9													_SP	dep	3
10	yeah	yeah											UH	intj	16
11													_SP	dep	10
12	how	how	rb+jjrbmod	rb	othr								WRB	advmod	13
13	frequently	frequently		rb	othr	ly							RB	advmod	16
14	should	should		vbaux	mod	nec							MD	aux	16
15	i	i		pro	1st	sg							PRP	nsubj	16
16													_SP	dep	3
17	right	right											UH	intj	16
18	.	.											.	punct	3

#sentid = 302
0													_SP	dep	0
1	ask	ask		vbmain	vblex	nonfinite	simple	active					VB	dep	0
2	it	it		pro	3rd	sg							PRP	nsubjpass	5
3	to	to		to									TO	aux	5
4	be	be		vbaux									VB	auxpass	5
5	scheduled	schedule	thatcls+vcomp	vbmain	vblex	past	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	1
6	,	,											,	punct	1
7	so	so		cs	cs_othr								IN	mark	14
8	that	that		cs	cs_othr								IN	mark	14
9	i	i		pro	1st	sg							PRP	nsubj	14
10													_SP	dep	14
11	mhm	mhm											UH	intj	14
12													_SP	dep	14
13	can	can		vbaux	mod	pos							MD	aux	14
14	guarantee	guarantee	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	1
15	that	that		comp	comp_that								IN	mark	41
16	,	,											,	punct	41
17	between	between	in+advl	in	advl								IN	prep	41
18	_	_											XX	punct	17
19	if	if		cs	cnd								IN	mark	24
20	if	if		cs	cnd								IN	mark	24
21	it	it		pro	3rd	sg							PRP	nsubjpass	24
22	just	just	rb+advl	rb	advl								RB	advmod	24
23	was	be		vbaux									VBD	auxpass	24
24	tested	test		vbmain	vblex	past	simple	pasv_agls			conditional		VBN	pobj	17
25	and	and		cc	cls								CC	cc	24
26	it	it		pro	3rd	sg							PRP	nsubj	27
27	was	be		vbmain	be	past	simple	active					VBD	conj	24
28	false	false		jj	pred								JJ	acomp	27
29	and	and		cc	cls								CC	cc	27
30	then	then		rb	link								RB	advmod	33
31	we	we		pro	1st								PRP	nsubj	33
32	just	just	rb+advl	rb	advl								RB	advmod	33
33	entered	enter		vbmain	vblex	past	simple	active					VBD	conj	27
34	the	the		dt	art								DT	det	35
35	state	state		nn		nom							NN	dobj	33
36	,	,											,	punct	41
37	how	how	rb+jjrbmod	rb	adjmod								WRB	advmod	38
38	much	much	attr+npremod	jj	attr								JJ	amod	39
39	time	time		nn									NN	nsubj	41
40	could	could		vbaux	mod	pos							MD	aux	41
41	elapse	elapse	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	14
42	before	before		cs	cs_othr								IN	mark	44
43	we	we		pro	1st								PRP	nsubj	44
44	do	do	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	41
45	the	the		dt	art								DT	det	46
46	tests	test		nn	pl								NNS	dobj	44
47	again	again	rb+advl	rb	advl								RB	advmod	44
48	and	and		cc	phrs								CC	cc	44
49	take	take		vbmain	vblex	pres	simple	active					VBP	conj	44
50	the	the		dt	art								DT	det	51
51	action	action		nn		nom							NN	dobj	49
52	.	.											.	punct	1

#sentid = 303
0													_SP	dep	0
1	okay	okay											UH	intj	0
2	.	.											.	punct	1

#sentid = 304
0	so	so		rb	othr								RB	advmod	1
1	why	why		rb	othr								WRB	advmod	4
2	...	...											:	punct	1
3													_SP	dep	1
4	in	in	in+advl	in	advl								IN	prep	23
5	a	a		dt	art								DT	det	6
6	situation	situation		nn		nom							NN	pobj	4
7	where	where		rb	advl								WRB	advmod	9
8	tests	test		nn	pl								NNS	nsubj	9
9	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	6
10	free	free		jj	pred								JJ	acomp	9
11	,	,											,	punct	23
12													_SP	dep	16
13	mhm	mhm											UH	intj	14
14													_SP	dep	16
15	i-	i-											XX	punct	14
16													_SP	dep	23
17	would	would		vbaux	mod	prd							MD	aux	23
18	you	you		pro	2nd	sg							PRP	nsubj	23
19	even	even	rb+advl	rb	advl		splaux						RB	advmod	23
20	,	,											,	punct	23
21	would	would		vbaux	mod	prd							MD	aux	23
22	you	you		pro	2nd	sg							PRP	nsubj	23
23	do	do		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	23
24	this	this		pro	dem	sg							DT	dobj	23
25	at	at	rb+jjrbmod	rb	othr								RB	advmod	26
26	all	all	rb+advl	rb	advl								RB	advmod	23
27	.	.											.	punct	23

#sentid = 305
0													_SP	dep	0
1	would	would		vbmain	vblex	vp_w_modal	simple	active	compcls			compdel	MD	ccomp	0
2	you	you		pro	2nd	sg							PRP	nsubj	1
3	,	,											,	punct	5
4	instead	instead		rb	othr								RB	advmod	5
5	of	of	of+npostmod	in	nmod								IN	prep	2
6	searching	search	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	5
7	through	through	in+advl	in	advl								IN	prep	6
8	all	all											PDT	predet	10
9	the	the		dt	art								DT	det	10
10	states	state		nn	pl	nom							NNS	pobj	7
11	?	?											.	punct	5

#sentid = 306
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2	.	.											.	punct	0

#sentid = 307
0													_SP	dep	5
1	well	well											UH	intj	5
2	,	,											,	punct	5
3	the	the		dt	art								DT	det	4
4	tests	test		nn	pl								NNS	nsubj	5
5	are	be		vbmain	be	pres	simple	active					VBP	ROOT	5
6	almost	almost	rb+jjrbmod	rb	adjmod								RB	advmod	7
7	free	free		jj	pred								JJ	acomp	5
8	.	.											.	punct	5

#sentid = 308
0	but	but		cc	cls								CC	cc	23
1	even	even	rb+advl	rb	advl								RB	advmod	2
2	searching	search	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	23
3	through	through	in+advl	in	advl								IN	prep	2
4	memory	memory		nn		nom							NN	pobj	3
5	if	if		cs	cnd								IN	mark	7
6	you	you		pro	2nd	sg							PRP	nsubj	7
7	think	think	finitecls+advl	vbmain	prepv	pres	simple	active	advlcls		conditional		VBP	advcl	23
8	of	of	in+advl	in	advl								IN	prep	7
9	the	the		dt	art								DT	det	15
10	exponential	exponential	attr+npremod	jj	attr								JJ	amod	15
11	,	,											,	punct	15
12	worst	bad	attr+npremod	jj	attr								JJS	amod	14
13	-	-											HYPH	punct	14
14	case	case	nn+npremod	nn			npremod						NN	compound	15
15	set	set		nn									NN	pobj	8
16	of	of	of+npostmod	in	nmod								IN	prep	15
17	states	state		nn	pl	nom							NNS	pobj	16
18	that	that		pro	dem	sg							WDT	pobj	21
19	you	you		pro	2nd	sg							PRP	nsubj	21
20	're	be		vbaux									VBP	aux	21
21	gon	go											TO	relcl	15
22	na	to		vbaux									TO	aux	23
23	end	end		vbmain	phrsv	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	27
24	up	up		rb	prtcle								RP	prt	23
25	with	with	in+advl	in	advl								IN	prep	23
26	they	they		pro	pl								PRP	nsubj	27
27	're	be		vbmain	be	pres	simple	active					VBP	ROOT	27
28	not	not											RB	neg	27
29	free	free		jj	pred								JJ	acomp	27
30	anymore	anymore	rb+advl	rb	advl								RB	advmod	27
31	.	.											.	punct	27

#sentid = 309
0	so	so		rb	link								RB	advmod	8
1	when	when		rb	advl								WRB	advmod	3
2	i	i		pro	1st	sg							PRP	nsubj	3
3	said	say	finitecls+advl	vbmain	vblex	past	simple	active	advlcls	whcls			VBD	advcl	8
4	they	they		pro	pl								PRP	nsubj	5
5	were	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	3
6	free	free		jj	pred								JJ	acomp	5
7	i	i		pro	1st	sg							PRP	nsubj	8
8	meant	mean		vbmain	vblex	past	simple	active					VBD	ROOT	8
9	they	they		pro	pl								PRP	nsubj	10
10	were	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	8
11	free	free		jj	pred								JJ	acomp	10
12	relative	relative		jj	pred								JJ	acomp	10
13	to	to	in+jcomp	in	jcomp								IN	prep	12
14	going	go	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	13
15	out	out	rb+advl	rb	advl								RB	advmod	14
16	into	into		in	in_othr								IN	prep	15
17	the	the		dt	art								DT	det	18
18	world	world		nn									NN	pobj	16
19	and	and		cc	phrs								CC	cc	14
20	looking	look		vbmain	prepv	nonfinite	simple	active		ingcls			VBG	conj	14
21	at	at	in+advl	in	advl								IN	prep	20
22	each	each		dt									DT	det	24
23	sensor	sensor	nn+npremod	nn		nom	npremod						NN	compound	24
24	value	value		nn									NN	pobj	21
25	each	each		dt									DT	det	26
26	time	time		nn									NN	npadvmod	20
27	you	you		pro	2nd	sg							PRP	nsubj	28
28	look	look	finitecls+rel	vbmain	prepv	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	26
29	at	at	in+advl	in	advl								IN	prep	28
30	a	a		dt	art								DT	det	32
31	feature	feature	nn+npremod	nn		nom	npremod						NN	compound	32
32	value	value		nn									NN	pobj	29
33	.	.											.	punct	8

#sentid = 310
0	so	so		rb	link								RB	advmod	2
1	we	we		pro	1st								PRP	nsubj	2
2	're	be		vbmain	be	pres	simple	active					VBP	ROOT	2
3	not	not											RB	neg	2
4	willing	willing		jj	pred								JJ	acomp	2
5	to	to		to									TO	aux	6
6	go	go	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	4
7	back	back	rb+advl	rb	advl								RB	advmod	6
8	to	to		in	in_othr								IN	prep	7
9	the	the		dt	art								DT	det	10
10	representation	representation		nn		nom							NN	pobj	8
11	where	where		rb	advl								WRB	advmod	13
12	you	you		pro	2nd	sg							PRP	nsubj	13
13	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	10
14	,	,											,	punct	10
15	just	just		rb	othr								RB	advmod	18
16	the	the		dt	art								DT	det	18
17	complete	complete	attr+npremod	jj	attr								JJ	amod	18
18	list	list	appos+npostmod	nn		nom	nappos						NN	appos	10
19	of	of	of+npostmod	in	nmod								IN	prep	18
20	states	state		nn	pl	nom							NNS	pobj	19
21	because	because		cs	cos								IN	mark	34
22	even	even		rb	othr								RB	advmod	23
23	in	in	in+advl	in	advl								IN	prep	34
24	our	our		dt	poss								PRP$	poss	27
25	simple	simple	attr+npremod	jj	attr								JJ	amod	27
26	little	little	attr+npremod	jj	attr								JJ	amod	27
27	problems	problem		nn	pl								NNS	pobj	23
28	we	we		pro	1st								PRP	nsubj	29
29	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	27
30	,	,											,	punct	29
31	uh	uh											UH	intj	29
32	potent-	potent-											:	punct	29
33	we	we		pro	1st								PRP	nsubj	34
34	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBP	advcl	2
35	hundreds	hundred		nn	pl								NNS	dobj	34
36	of	of	of+npostmod	in	nmod								IN	prep	35
37	states	state		nn	pl	nom							NNS	pobj	36
38	that	that		pro	dem	sg							WDT	pobj	44
39	we	we		pro	1st								PRP	nsubj	41
40	would	would		vbaux	mod	prd							MD	aux	41
41	have	have	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	35
42	to	to		to									TO	aux	43
43	look	look		vbmain	prepv	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	41
44	at	at	in+advl	in	advl								IN	prep	43
45	.	.											.	punct	2

#sentid = 311
0	certainly	certainly	rb+advl	rb	advl	ly							RB	advmod	8
1	in	in	in+advl	in	advl								IN	prep	8
2	more	more	attr+npremod	jj	attr								JJR	amod	5
3	,	,											,	punct	5
4	complicated	complicated	attr+npremod	jj	attr								JJ	amod	5
5	problems	problem		nn	pl								NNS	pobj	1
6	we	we		pro	1st								PRP	nsubj	8
7	would	would		vbaux	mod	prd							MD	aux	8
8	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	8
9	thousands	thousand		nn	pl								NNS	nummod	13
10	or	or		cc	phrs								CC	cc	9
11	,	,											,	punct	12
12	more	more											JJR	conj	9
13	states	state		nn	pl	nom							NNS	dobj	8
14	.	.											.	punct	8

#sentid = 312
0	so	so		rb	link								RB	advmod	20
1													_SP	dep	20
2	but	but		cc	phrs								CC	cc	9
3	tho-	tho-											XX	dep	9
4	a	a		dt	art								DT	det	9
5	thou-	thou-											XX	punct	9
6	a	a		dt	art								DT	det	9
7	thousand	thousand											CD	dep	9
8	,	,											,	punct	9
9	thousands	thousand		nn	pl								NNS	dep	20
10	of	of	in+advl	in	advl								IN	prep	16
11													_SP	dep	10
12	well	well											UH	intj	16
13	s-	s-											XX	dep	16
14	it	it		pro	3rd	sg							PRP	nsubj	16
15	could	could		vbaux	mod	pos							MD	aux	16
16	be	be		vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	20
17	,	,											,	punct	16
18	i	i		pro	1st	sg							PRP	nsubj	20
19	i	i		pro	1st	sg							PRP	nsubj	20
20	hesitate	hesitate		vbmain	vblex	pres	simple	active					VBP	ROOT	20
21	to	to		to									TO	aux	22
22	put	put	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	20
23	a	a		dt	art								DT	det	24
24	number	number		nn		nom							NN	dobj	22
25	on	on	in+advl	in	advl								IN	prep	22
26	it	it		pro	3rd	sg							PRP	pobj	25
27	because	because		cs	cos								IN	mark	29
28	i	i		pro	1st	sg							PRP	nsubj	29
29	mean	mean	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBP	advcl	20
30	this	this		pro	dem	sg							DT	nsubj	31
31	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	29
32	an	an		dt									DT	det	33
33	example	example		nn									NN	attr	31
34	that	that		pro	dem	sg							WDT	pobj	53
35	a	a		dt	art								DT	det	37
36	grad	grad	attr+npremod	jj	attr								JJ	amod	37
37	student	student		nn		nom							NN	nsubj	51
38	sitting	sit	ingcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	37
39	,	,											,	punct	38
40	in	in	in+advl	in	advl								IN	prep	38
41	front	front		nn									NN	pobj	40
42	of	of	of+npostmod	in	nmod								IN	prep	41
43	a	a		dt	art								DT	det	44
44	computer	computer		nn		nom							NN	pobj	42
45	trying	try	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	38
46	to	to		to									TO	aux	47
47	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	45
48	too	too	rb+jjrbmod	rb	adjmod								RB	advmod	49
49	many	many	attr+npremod	jj	attr								JJ	amod	50
50	things	thing		nn	pl	nom							NNS	dobj	47
51	comes	come	finitecls+rel	vbmain	phrsv	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	33
52	up	up		rb	prtcle								RP	prt	51
53	with	with	in+advl	in	advl								IN	prep	51
54	for	for	in+advl	in	advl								IN	prep	51
55	a	a		dt	art								DT	det	56
56	model	model		nn									NN	pobj	54
57													_SP	dep	51
58	that	that											IN	mark	66
59	,	,											,	punct	66
60													_SP	dep	66
61	well	well											UH	intj	66
62	no	no											UH	intj	66
63	,	,											,	punct	66
64	you	you		pro	2nd	sg							PRP	nsubj	66
65	actually	actually	rb+advl	rb	advl	ly							RB	advmod	66
66	had	have		vbmain	vblex	past	simple	active					VBD	dep	51
67	a	a		dt	art								DT	det	69
68	motivating	motivate	attr+npremod	jj	attr	ing							VBG	amod	69
69	implication	implication		nn		nom							NN	dobj	66
70													_SP	dep	20
71	right	right											UH	intj	75
72													_SP	dep	75
73	i	i		pro	1st	sg							PRP	nsubj	75
74	'm	be		vbaux									VBP	aux	75
75	asking	ask	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	xcomp	20
76	a	a		dt	art								DT	det	77
77	question	question		nn		nom							NN	dobj	75
78	about	about	in+npostmod	in	nmod								IN	prep	77
79	that	that		dt	dt_dem								DT	det	82
80	motivating	motivate	attr+npremod	jj	attr	ing							VBG	amod	82
81													_SP	dep	82
82	implication	implication		nn		nom							NN	pobj	78
83	.	.											.	punct	75

#sentid = 313
0													_SP	dep	5
1	but	but		cc	cls								CC	cc	5
2	we	we		pro	1st								PRP	nsubj	5
3	have	have		vbaux									VBP	aux	5
4	not	not											RB	neg	5
5	finished	finish		vbmain	vblex	pres	perf	active					VBN	ROOT	5
6	that	that		dt	dt_dem								DT	det	7
7	model	model		nn									NN	dobj	5
8	yet	yet	rb+advl	rb	advl								RB	advmod	5
9	,	,											,	punct	5
10	and	and		cc	cls								CC	cc	5
11	it	it		pro	3rd	sg							PRP	nsubj	12
12	's	be		vbmain	be	pres	simple	active					VBZ	conj	5
13	hard	hard		jj	pred								JJ	acomp	12
14	to	to		to									TO	aux	15
15	say	say	xtrapos+tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	12
16	how	how	rb+jjrbmod	rb	othr								WRB	advmod	17
17	many	many											JJ	dep	34
18	,	,											,	punct	34
19	well	well											UH	intj	34
20	,	,											,	punct	34
21	when	when		rb	advl								WRB	advmod	29
22	we	we		pro	1st								PRP	nsubj	24
23	,	,											,	punct	24
24	fly	fly	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBP	advcl	34
25	our	our		dt	poss								PRP$	poss	26
26	airplane	airplane		nn									NN	dobj	24
27	and	and		cc	cls								CC	cc	24
28	it	it		pro	3rd	sg							PRP	nsubj	29
29	flies	fly		vbmain	vblex	pres	simple	active					VBZ	conj	24
30	autonomously	autonomously	rb+advl	rb	advl	ly							RB	advmod	29
31	,	,											,	punct	34
32	we	we		pro	1st								PRP	nsubj	34
33	're	be		vbaux									VBP	aux	34
34	gon	go	xtrapos+thatcls+jcomp	vbmain	vblex	pres	prog	active	compcls		jcomp	compdel	VBG	ccomp	12
35	na	to		vbaux									TO	aux	37
36	be	be		vbaux									VB	aux	37
37	looking	look	ingcls+vcomp	vbmain	prepv	nonfinite	prog	active	compcls	ingcls	vcomp		VBG	xcomp	34
38	at	at	in+advl	in	advl								IN	prep	37
39	two	two											CD	nummod	40
40	emergencies	emergency		nn	pl	nom							NNS	pobj	38
41	,	,											,	punct	40
42	engine	engine	nn+npremod	nn			npremod						NN	compound	43
43	failure	failure	appos+npostmod	nn		nom	nappos						NN	appos	40
44	and	and		cc	phrs								CC	cc	43
45	airframe	airframe	nn+npremod	nn			npremod						NN	compound	46
46	icing	icing		nn		nom							NN	conj	43
47	.	.											.	punct	12

#sentid = 314
0	and	and		cc	cls								CC	cc	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	'm	be		vbmain	be	pres	simple	active					VBP	ROOT	2
3	,	,											,	punct	2
4	nowhere	nowhere	rb+jjrbmod	rb	adjmod								RB	advmod	5
5	close	close		jj	pred								JJ	acomp	2
6	to	to	in+jcomp	in	jcomp								IN	prep	5
7	saying	say	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	6
8	that	that		pro	dem	sg							DT	nsubj	9
9	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	7
10	all	all											DT	attr	9
11	you	you		pro	2nd	sg							PRP	nsubj	12
12	need	need	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	10
13	to	to		to									TO	aux	14
14	consider	consider		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	12
15	.	.											.	punct	2

#sentid = 315
0	so	so		rb	link								RB	advmod	18
1	for	for	in+advl	in	advl								IN	prep	12
2	each	each		dt									DT	det	4
3	new	new	attr+npremod	jj	attr								JJ	amod	4
4	problem	problem		nn									NN	pobj	1
5	that	that		pro	dem	sg							WDT	dobj	7
6	you	you		pro	2nd	sg							PRP	nsubj	7
7	add	add	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	4
8	into	into	in+advl	in	advl								IN	prep	7
9	your	your		dt	poss								PRP$	poss	10
10	system	system		nn									NN	pobj	8
11	i	i		pro	1st	sg							PRP	nsubj	12
12	'm	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	18
13	,	,											,	punct	12
14	i	i		pro	1st	sg							PRP	nsubj	18
15	really	really	rb+advl	rb	advl	ly							RB	advmod	18
16	do	do		vbaux									VBP	aux	18
17	n't	not											RB	neg	18
18	have	have		vbmain	vblex	pres	simple	active					VB	ROOT	18
19	a	a		dt	art								DT	det	21
20	good	good	attr+npremod	jj	attr								JJ	amod	21
21	handle	handle		nn									NN	dobj	18
22	on	on	in+npostmod	in	nmod								IN	prep	21
23	how	how	rb+jjrbmod	rb	adjmod								WRB	advmod	24
24	much	much	attr+npremod	jj	attr								JJ	amod	29
25	,	,											,	punct	29
26	state	state	nn+npremod	nn		nom	npremod						NN	compound	28
27	-	-											HYPH	punct	28
28	space	space	nn+npremod	nn			npremod						NN	compound	29
29	complexity	complexity		nn		nom							NN	dobj	32
30	that	that		pro	dem	sg							DT	nsubj	32
31	's	be		vbaux									VBZ	aux	32
32	gon	go		vbaux									TO	aux	34
33	na	to		vbaux									TO	aux	34
34	add	add		vbmain	vblex	nonfinite	simple	active	compcls		incomp	compdel	VB	pcomp	22
35	.	.											.	punct	18

#sentid = 316
0													_SP	dep	8
1	so	so		rb	link								RB	advmod	8
2	,	,											,	punct	8
3	um	um											UH	intj	8
4													_SP	dep	8
5	so	so		rb	link								RB	advmod	8
6	anyway	anyway											UH	intj	8
7	those	those		pro	dem	pl							DT	nsubj	8
8	were	be		vbmain	be	past	simple	active					VBD	ROOT	8
9	the	the		dt	art								DT	det	11
10	state	state	nn+npremod	nn		nom	npremod						NN	compound	11
11	transitions	transition		nn	pl	nom							NNS	attr	8
12	that	that		pro	dem	sg							WDT	dobj	14
13	we	we		pro	1st								PRP	nsubj	14
14	assigned	assign	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel		VBD	relcl	11
15	which	which											WDT	dobj	17
16	we	we		pro	1st								PRP	nsubj	17
17	call	call	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	11
18	probability	probability		nn		nom							NN	oprd	17
19	,	,											,	punct	18
20	rate	rate	nn+npremod	nn		nom	npremod						NN	compound	21
21	functions	function	appos+npostmod	nn	pl	nom	nappos						NNS	appos	18
22	.	.											.	punct	8

#sentid = 317
0	um	um											UH	intj	7
1	,	,											,	punct	7
2	initial	initial	attr+npremod	jj	attr								JJ	amod	3
3	states	state		nn	pl	nom							NNS	dep	7
4	,	,											,	punct	7
5	we	we		pro	1st								PRP	nsubj	7
6	could	could		vbaux	mod	pos							MD	aux	7
7	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	7
8	more	more		jj	attr								JJR	amod	10
9	than	than											IN	quantmod	10
10	one	one		pro	other	pl							CD	dobj	7
11	,	,											,	punct	7
12	all	all											PDT	predet	14
13	the	the		dt	art								DT	det	14
14	examples	example		nn	pl								NNS	nsubj	18
15	that	that		pro	dem	sg							WDT	dobj	17
16	i	i		pro	1st	sg							PRP	nsubj	17
17	present	present	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	14
18	have	have		vbmain	vblex	pres	simple	active					VBP	conj	7
19	one	one		pro	other	pl							CD	dobj	18
20	,	,											,	punct	18
21	but	but		cc	cls								CC	cc	18
22	you	you		pro	2nd	sg							PRP	nsubj	24
23	could	could		vbaux	mod	pos							MD	aux	24
24	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	conj	18
25	more	more		jj	attr								JJR	amod	27
26	than	than											IN	quantmod	27
27	one	one		pro	other	pl							CD	dobj	24
28	in	in	in+advl	in	advl								IN	prep	33
29	which	which		dt									WDT	det	30
30	case	case		nn									NN	pcomp	28
31	,	,											,	punct	33
32	we	we		pro	1st								PRP	nsubj	33
33	assume	assume	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBP	advcl	24
34	they	they		pro	pl								PRP	nsubj	36
35	all	all											DT	appos	34
36	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	33
37	equal	equal	attr+npremod	jj	attr								JJ	amod	38
38	likelihood	likelihood		nn		nom							NN	dobj	36
39	cuz	cuz		cs	cs_othr								IN	mark	41
40	we	we		pro	1st								PRP	nsubj	41
41	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	33
42	no	no		dt									DT	det	43
43	representation	representation		nn		nom							NN	dobj	41
44	of	of	of+npostmod	in	nmod								IN	prep	43
45	,	,											,	punct	44
46	how	how		comp	comp_wh								WRB	advmod	48
47	you	you		pro	2nd	sg							PRP	nsubj	48
48	got	get	whcls+incomp	vbmain	vblex	past	simple	active	compcls	whcls	incomp		VBD	pcomp	44
49	to	to	in+advl	in	advl								IN	prep	48
50	those	those		dt	dt_dem								DT	det	52
51	initial	initial	attr+npremod	jj	attr								JJ	amod	52
52	states	state		nn	pl	nom							NNS	pobj	49
53	.	.											.	punct	7

#sentid = 318
0	um	um											UH	intj	7
1	,	,											,	punct	7
2	as	as		cs	cs_othr								IN	mark	4
3	i	i		pro	1st	sg							PRP	nsubj	4
4	said	say	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		other_advl		VBD	advcl	7
5	before	before	rb+advl	rb	advl								RB	advmod	4
6	we	we		pro	1st								PRP	nsubj	7
7	do	do		vbmain	vblex	pres	simple	active					VBP	ROOT	7
8	best	good	attr+npremod	jj	attr								JJS	amod	12
9	-	-											HYPH	punct	12
10	first	first	attr+npremod	jj	attr								JJ	amod	12
11	-	-											HYPH	punct	12
12	state	state	nn+npremod	nn		nom	npremod						NN	compound	13
13	expansion	expansion		nn									NN	dobj	7
14	which	which		relpro	relpro_wh								WDT	nsubj	17
15	right	right	rb+jjrbmod	rb	othr								RB	advmod	16
16	now	now	rb+advl	rb	advl								RB	advmod	17
17	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	13
18	not	not											RB	neg	17
19	,	,											,	punct	17
20	absolutely	absolutely	rb+jjrbmod	rb	adjmod	ly							RB	advmod	21
21	critical	critical		jj	pred								JJ	acomp	17
22	but	but		cc	cls								CC	cc	17
23	in	in	in+advl	in	advl								IN	prep	28
24	the	the		dt	art								DT	det	25
25	future	future		nn		nom							NN	pobj	23
26	it	it		pro	3rd	sg							PRP	nsubj	28
27	might	might		vbaux	mod	pos							MD	aux	28
28	become	become		vbmain	vblex	vp_w_modal	simple	active					VB	conj	17
29	critical	critical		jj	pred								JJ	acomp	28
30	as	as		cs	cs_othr								IN	mark	33
31	we	we		pro	1st								PRP	nsubj	33
32	,	,											,	punct	33
33	move	move	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	28
34	to	to	in+advl	in	advl								IN	prep	33
35	real	real	attr+npremod	jj	attr								JJ	amod	37
36	-	-											HYPH	punct	37
37	time	time	nn+npremod	nn			npremod						NN	compound	38
38	planning	planning		nn		nom							NN	pobj	34
39	.	.											.	punct	7

#sentid = 319
0	um	um											UH	intj	4
1	and	and		cc	phrs								CC	cc	4
2	we	we		pro	1st								PRP	nsubj	4
3	,	,											,	punct	4
4	update	update		vbmain	vblex	pres	simple	active					VBP	ROOT	4
5	all	all											DT	dobj	4
6	of	of		in	in_othr								IN	prep	5
7	the	the		dt	art								DT	det	10
8	reachable	reachable	attr+npremod	jj	attr								JJ	amod	10
9	state	state	nn+npremod	nn		nom	npremod						NN	compound	10
10	probabilities	probability		nn	pl	nom							NNS	pobj	6
11	during	during	in+advl	in	advl								IN	prep	4
12	each	each		dt									DT	det	15
13	state	state	nn+npremod	nn		nom	npremod						NN	compound	14
14	expansion	expansion	nn+npremod	nn			npremod						NN	compound	15
15	step	step		nn									NN	pobj	11
16	.	.											.	punct	4

#sentid = 320
0	i	i		pro	1st	sg							PRP	nsubj	1
1	'm	be		vbmain	be	pres	simple	active					VBP	ROOT	1
2	sure	sure		jj	pred								JJ	acomp	1
3	the	the		dt	art								DT	det	5
4	,	,											,	punct	5
5	members	member		nn	pl	nom							NNS	nsubj	11
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	the	the		dt	art								DT	det	8
8	committee	committee		nn		nom							NN	pobj	6
9	have	have		vbaux									VBP	aux	11
10	,	,											,	punct	11
11	seen	see	thatcls+jcomp	vbmain	vblex	pres	perf	active	compcls		jcomp	compdel	VBN	ccomp	2
12	most	most											JJS	dobj	11
13	of	of	in+jcomp	in	jcomp								IN	prep	12
14	the	the		dt	art								DT	det	15
15	set	set		nn									NN	pobj	13
16	of	of	of+npostmod	in	nmod								IN	prep	15
17	equations	equation		nn	pl	nom							NNS	pobj	16
18	in	in	in+npostmod	in	nmod								IN	prep	15
19	the	the		dt	art								DT	det	20
20	thesis	thesis		nn									NN	pobj	18
21	so	so		cc	cls								CC	cc	1
22	i	i		pro	1st	sg							PRP	nsubj	24
23	i	i		pro	1st	sg							PRP	nsubj	24
24	feel	feel		vbmain	prepv	pres	simple	active					VBP	conj	1
25	like	like		cs	cs_othr								IN	mark	28
26	it	it		pro	3rd	sg							PRP	nsubj	28
27	would	would		vbaux	mod	prd							MD	aux	28
28	take	take	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	24
29	me	i		pro	1st	sg							PRP	dative	28
30	an	an		dt									DT	det	31
31	hour	hour		nn									NN	dobj	28
32	just	just	rb+advl	rb	advl								RB	advmod	34
33	to	to		to									TO	aux	34
34	go	go	tocls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	28
35	through	through	in+advl	in	advl								IN	prep	34
36	those	those		pro	dem	pl							DT	pobj	35
37	so	so		cc	cls								CC	cc	24
38	instead	instead	rb+advl	rb	advl								RB	advmod	41
39	i	i		pro	1st	sg							PRP	nsubj	41
40	'm	be		vbaux									VBP	aux	41
41	going	go		vbmain	vblex	pres	prog	active					VBG	conj	24
42	to	to		to									TO	aux	43
43	summarize	summarize	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	41
44	and	and		cc	phrs								CC	cc	43
45	give	give		vbmain	vblex	nonfinite	simple	active					VB	conj	43
46	an	an		dt									DT	det	47
47	example	example		nn									NN	dobj	45
48	,	,											,	punct	47
49	of	of	of+npostmod	in	nmod								IN	prep	47
50	how	how		comp	comp_wh								WRB	advmod	52
51	we	we		pro	1st								PRP	nsubj	52
52	compute	compute	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VBP	pcomp	49
53	the	the		dt	art								DT	det	54
54	probability	probability		nn		nom							NN	dobj	52
55	.	.											.	punct	41

#sentid = 321
0	so	so		rb	link								RB	advmod	11
1	for	for	in+advl	in	advl								IN	prep	11
2	each	each		dt									DT	det	3
3	state	state		nn		nom							NN	pobj	1
4	that	that		pro	dem	sg							WDT	dobj	6
5	we	we		pro	1st								PRP	nsubj	6
6	expand	expand	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	3
7	,	,											,	punct	11
8	we	we		pro	1st								PRP	nsubj	11
9	first	first		rb	link								RB	advmod	11
10	,	,											,	punct	11
11	estimate	estimate		vbmain	vblex	pres	simple	active					VBP	ROOT	11
12	the	the		dt	art								DT	det	15
13	conditional	conditional	attr+npremod	jj	attr								JJ	amod	15
14	cumulative	cumulative	attr+npremod	jj	attr								JJ	amod	15
15	probabilities	probability		nn	pl	nom							NNS	dobj	11
16	for	for	in+npostmod	in	nmod								IN	prep	15
17	the	the		dt	art								DT	det	19
18	outgoing	outgoing	attr+npremod	jj	attr								JJ	amod	19
19	transitions	transition		nn	pl	nom							NNS	pobj	16
20	,	,											,	punct	19
21	temporal	temporal		jj	attr								JJ	amod	19
22	and	and		cc	phrs								CC	cc	19
23	,	,											,	punct	19
24	the	the		dt	art								DT	det	26
25	selected	select	attr+npremod	jj	attr	ed							VBN	amod	26
26	action	action	appos+npostmod	nn		nom	nappos						NN	appos	19
27	for	for	in+npostmod	in	nmod								IN	prep	26
28	that	that		dt	dt_dem								DT	det	29
29	state	state		nn		nom							NN	pobj	27
30	.	.											.	punct	11

#sentid = 322
0	we	we		pro	1st								PRP	nsubj	1
1	estimate	estimate		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	the	the		dt	art								DT	det	4
3	conditional	conditional	attr+npremod	jj	attr								JJ	amod	4
4	probabilities	probability		nn	pl	nom							NNS	dobj	1
5	from	from	in+advl	in	advl								IN	prep	1
6	those	those		dt	dt_dem								DT	det	13
7	unconditional	unconditional	attr+npremod	jj	attr								JJ	amod	13
8	,	,											,	punct	13
9	um	um											UH	intj	13
10	,	,											,	punct	13
11	uh	uh											UH	intj	13
12	transition	transition	nn+npremod	nn		nom	npremod						NN	compound	13
13	probabilities	probability		nn	pl	nom							NNS	pobj	5
14	that	that		pro	dem	sg							WDT	pobj	17
15	we	we		pro	1st								PRP	nsubj	16
16	start	start	finitecls+rel	vbmain	prepv	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	13
17	with	with	in+advl	in	advl								IN	prep	16
18	,	,											,	punct	1
19	and	and		cc	cls								CC	cc	1
20	then	then		rb	link								RB	advmod	22
21	we	we		pro	1st								PRP	nsubj	22
22	calculate	calculate		vbmain	vblex	pres	simple	active					VBP	conj	1
23	the	the		dt	art								DT	det	28
24	cumative	cumative	attr+npremod	jj	attr								JJ	amod	28
25	,	,											,	punct	28
26	pro-	pro-	attr+npremod	jj	attr								JJ	amod	28
27	cumulative	cumulative	attr+npremod	jj	attr								JJ	amod	28
28	probabilities	probability		nn	pl	nom							NNS	dobj	22
29	by	by	in+advl	in	advl								IN	prep	22
30	summing	sum	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	29
31	those	those		pro	dem	pl							DT	dobj	30
32	,	,											,	punct	31
33	from	from	in+advl	in	advl								IN	prep	30
34	time	time		nn									NN	pobj	33
35	zero	zero											CD	nummod	34
36	s-	s-		nn									NN	nummod	34
37	time	time	nn+npremod	nn			npremod						NN	compound	38
38	step	step	nn+npremod	nn			npremod						NN	compound	39
39	T	t	appos+npostmod	nn			nappos						NN	appos	34
40	-	-											HYPH	punct	39
41	zero	zero											CD	nummod	39
42	to	to		in	in_othr								IN	prep	33
43	when	when		rb	advl								WRB	advmod	46
44	they	they		pro	pl								PRP	nsubj	46
45	,	,											,	punct	46
46	meet	meet	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	59
47	the	the		dt	art								DT	det	51
48	convergece	convergece											FW	nmod	51
49	,	,											,	punct	51
50	convergence	convergence	nn+npremod	nn		nom	npremod						NN	compound	51
51	criteria	criterion		nn	pl								NNS	dobj	46
52	,	,											,	punct	46
53	basically	basically	rb+advl	rb	advl	ly							RB	advmod	59
54	when	when		rb	advl								WRB	advmod	59
55	,	,											,	punct	59
56	they	they		pro	pl								PRP	nsubj	59
57	're	be		vbaux									VBP	aux	59
58	not	not											RB	neg	59
59	gon	go		vbmain	vblex	pres	prog	active					VBG	advmod	22
60	na	to		vbaux									VBG	aux	61
61	change	change		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	59
62	very	very	rb+jjrbmod	rb	othr								RB	advmod	63
63	much	much	rb+advl	rb	advl								RB	advmod	61
64	,	,											,	punct	61
65	in	in	in+advl	in	advl								IN	prep	61
66	the	the		dt	art								DT	det	67
67	future	future		nn		nom							NN	pobj	65
68	.	.											.	punct	22

#sentid = 323
0	um	um											UH	intj	4
1	the	the											DT	intj	4
2	,	,											,	punct	4
3	we	we		pro	1st								PRP	nsubj	4
4	compute	compute		vbmain	vblex	pres	simple	active					VBP	ROOT	4
5	the	the		dt	art								DT	det	8
6	action	action	nn+npremod	nn		nom	npremod						NN	nmod	8
7	maximum	maximum	attr+npremod	jj	attr								JJ	amod	8
8	delay	delay		nn									NN	dobj	4
9	which	which											WDT	pobj	13
10	you	you		pro	2nd	sg							PRP	nsubj	12
11	can	can		vbaux	mod	pos							MD	aux	12
12	think	think	finitecls+rel	vbmain	prepv	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	8
13	of	of	in+advl	in	advl								IN	prep	12
14	as	as	in+advl	in	advl								IN	prep	12
15	the	the		dt	art								DT	det	16
16	deadline	deadline		nn									NN	pobj	14
17	for	for	in+npostmod	in	nmod								IN	prep	16
18	that	that		dt	dt_dem								DT	det	22
19	real	real	attr+npremod	jj	attr								JJ	amod	21
20	-	-											HYPH	punct	21
21	time	time	nn+npremod	nn			npremod						NN	compound	22
22	schedule	schedule		nn									NN	pobj	17
23	,	,											,	punct	8
24	to	to		to									TO	aux	25
25	preempt	preempt	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	8
26	any	any		dt									DT	det	29
27	,	,											,	punct	29
28	temporal	temporal	attr+npremod	jj	attr								JJ	amod	29
29	transitions	transition		nn	pl	nom							NNS	dobj	25
30	to	to	in+npostmod	in	nmod								IN	prep	29
31	failure	failure		nn		nom							NN	pobj	30
32	.	.											.	punct	4

#sentid = 324
0	um	um											UH	intj	5
1	and	and		cc	phrs								CC	cc	5
2	,	,											,	punct	5
3	then	then		rb	link								RB	advmod	5
4	we	we		pro	1st								PRP	nsubj	5
5	look	look		vbmain	prepv	pres	simple	active					VBP	ROOT	5
6	at	at	in+advl	in	advl								IN	prep	5
7	temp-	temp-		nn									NN	npadvmod	8
8	dependent	dependent	attr+npremod	jj	attr								JJ	amod	11
9	temporal	temporal	attr+npremod	jj	attr								JJ	amod	10
10	transition	transition	nn+npremod	nn		nom	npremod						NN	compound	11
11	effects	effect		nn	pl								NNS	pobj	6
12	also	also	rb+advl	rb	advl								RB	advmod	5
13	.	.											.	punct	5

#sentid = 325
0													_SP	dep	2
1	second	second	attr+npremod	jj	attr								JJ	amod	2
2	state	state		nn		nom							NN	ROOT	2
3	after	after	in+npostmod	in	nmod								IN	prep	2
4	re	re		in	in_othr								IN	prep	3
5	,	,											,	punct	3
6	yes.-	yes.-											UH	punct	2

#sentid = 326
0													_SP	dep	6
1	okay	okay											UH	intj	6
2	so	so	rb+jjrbmod	rb	othr								RB	advmod	4
3	okay	okay											UH	intj	4
4	so	so		rb	othr								RB	advmod	6
5	,	,											,	punct	6
6	sorry	sorry											UH	ROOT	6
7	.	.											.	punct	6

#sentid = 327
0	what	what		comp	comp_wh								WP	dobj	4
1	i	i		pro	1st	sg							PRP	nsubj	4
2	do	do		vbaux									VBP	aux	4
3	n't	not											RB	neg	4
4	understand	understand		vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VB	csubj	5
5	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	5
6	what	what											WP	dep	10
7	exactly	exactly		rb	othr	ly							RB	advmod	6
8	your	your											PRP$	dep	10
9	,	,											,	punct	10
10	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	5
11	this	this		dt	dt_dem								DT	det	12
12	probability	probability		nn		nom							NN	attr	10
13	you	you		pro	2nd	sg							PRP	nsubj	15
14	're	be		vbaux									VBP	aux	15
15	computing	compute	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	10
16	.	.											.	punct	5

#sentid = 328
0	this	this		pro	dem	sg							DT	nsubj	1
1	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	,	,											,	punct	1
3	from	from	in+advl	in	advl								IN	prep	1
4	a	a		dt	art								DT	det	6
5	given	give	attr+npremod	jj	attr	ed							VBN	amod	6
6	state	state		nn		nom							NN	pobj	3
7	,	,											,	punct	6
8													_SP	dep	1
9	yes	yes											UH	intj	1
10													_SP	dep	9
11	uh	uh											UH	intj	9
12	,	,											,	punct	9
13	given	give	edcls+advl	vbmain	advl	nonfinite	simple	active		edcls			VBN	prep	1
14	that	that											IN	mark	18
15	you	you		pro	2nd	sg							PRP	nsubj	18
16	do	do		vbaux									VBP	aux	18
17	n't	not											RB	neg	18
18	do	do	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VB	pcomp	13
19	any	any		dt									DT	det	20
20	actions	action		nn	pl	nom							NNS	dobj	18
21	?	?											.	punct	1

#sentid = 329
0													_SP	dep	5
1	what	what											WP	nsubjpass	5
2	's	be		vbaux									VBZ	auxpass	5
3													_SP	dep	5
4	no	no											RB	neg	5
5	given	give		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	5
6	,	,											,	punct	5
7	given	give	edcls+advl	vbmain	advl	nonfinite	simple	active		edcls			VBN	prep	5
8	that	that											IN	mark	17
9	you	you		pro	2nd	sg							PRP	dep	17
10	,	,											,	punct	17
11	if	if		cs	cnd								IN	mark	17
12	,	,											,	punct	17
13	okay	okay											UH	intj	17
14	so	so		rb	link								RB	advmod	17
15	first	first		rb	link								RB	advmod	17
16	you	you		pro	2nd	sg							PRP	nsubj	17
17	decide	decide	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBP	pcomp	7
18	if	if		cs	cnd								IN	mark	20
19	you	you		pro	2nd	sg							PRP	nsubj	20
20	need	need		vbmain	vblex	pres	simple	active	compcls		conditional	compdel	VBP	ccomp	17
21	an	an		dt									DT	det	22
22	action	action		nn		nom							NN	dobj	20
23	.	.											.	punct	5

#sentid = 330
0	that	that		pro	dem	sg							DT	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	a	a		dt	art								DT	det	4
3	separate	separate	attr+npremod	jj	attr								JJ	amod	4
4	algorithm	algorithm		nn									NN	attr	1
5	before	before		cs	cs_othr								IN	mark	9
6	you	you		pro	2nd	sg							PRP	nsubj	9
7	ever	ever	rb+advl	rb	advl								RB	advmod	9
8	,	,											,	punct	9
9	talk	talk	finitecls+advl	vbmain	prepv	pres	simple	active	advlcls		other_advl		VBP	advcl	1
10	about	about	in+advl	in	advl								IN	prep	9
11	probabilities	probability		nn	pl	nom							NNS	pobj	10
12	.	.											.	punct	1

#sentid = 331
0	if	if		cs	cnd								IN	mark	2
1	there	there											EX	expl	2
2	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBZ	advcl	13
3	temporal	temporal	attr+npremod	jj	attr								JJ	amod	4
4	transition	transition		nn		nom							NN	attr	2
5	to	to	in+npostmod	in	nmod								IN	prep	4
6	failure	failure		nn		nom							NN	pobj	5
7	from	from	in+npostmod	in	nmod								IN	prep	4
8	the	the		dt	art								DT	det	9
9	state	state		nn		nom							NN	pobj	7
10	,	,											,	punct	13
11	then	then		rb	link								RB	advmod	13
12	you	you		pro	2nd	sg							PRP	nsubj	13
13	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	13
14	to	to		to									TO	aux	15
15	select	select		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	13
16	some	some		dt									DT	det	17
17	action	action		nn		nom							NN	dobj	15
18	or	or		cc	cls								CC	cc	13
19	else	else	rb+advl	rb	advl								RB	advmod	21
20	you	you		pro	2nd	sg							PRP	nsubj	21
21	have	have		vbmain	vblex	pres	simple	active					VBP	conj	13
22	to	to		to									TO	aux	23
23	show	show		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	21
24	that	that		comp	comp_that								IN	mark	26
25	there	there											EX	expl	26
26	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	23
27	a	a		dt	art								DT	det	30
28	reliable	reliable	attr+npremod	jj	attr								JJ	amod	30
29	temporal	temporal	attr+npremod	jj	attr								JJ	amod	30
30	transition	transition		nn		nom							NN	attr	26
31	.	.											.	punct	21

#sentid = 332
0	um	um											UH	intj	16
1	otherwise	otherwise	rb+advl	rb	advl								RB	advmod	16
2	,	,											,	punct	16
3	um	um											UH	intj	16
4	,	,											,	punct	16
5	so	so	rb+jjrbmod	rb	othr								RB	advmod	6
6	so	so		rb	link								RB	advmod	16
7	,	,											,	punct	16
8	before	before		cs	cs_othr								IN	mark	11
9	you	you		pro	2nd	sg							PRP	nsubj	11
10	ever	ever	rb+advl	rb	advl								RB	advmod	11
11	calculate	calculate	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	16
12	the	the		dt	art								DT	det	13
13	probabilities	probability		nn	pl	nom							NNS	dobj	11
14	you	you		pro	2nd	sg							PRP	nsubj	16
15	either	either	rb+advl	rb	advl								CC	advmod	16
16	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	16
17	one	one											CD	nummod	18
18	action	action		nn		nom							NN	dobj	16
19	or	or		cc	phrs								CC	cc	18
20	no	no		dt									DT	det	21
21	actions	action		nn	pl	nom							NNS	conj	18
22	.	.											.	punct	16

#sentid = 333
0													_SP	dep	8
1	okay	okay											UH	intj	8
2													_SP	dep	8
3	um	um											UH	intj	8
4	at	at	in+advl	in	advl								IN	prep	8
5	that	that		dt	dt_dem								DT	det	6
6	point	point		nn									NN	pobj	4
7	you	you		pro	2nd	sg							PRP	nsubj	8
8	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	8
9	,	,											,	punct	8
10	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	11
11	rate	rate	nn+npremod	nn		nom	npremod						NN	compound	12
12	functions	function		nn	pl	nom							NNS	dobj	8
13	for	for	in+npostmod	in	nmod								IN	prep	12
14	all	all											PDT	predet	17
15	the	the		dt	art								DT	det	17
16	temporal	temporal	attr+npremod	jj	attr								JJ	amod	17
17	transitions	transition		nn	pl	nom							NNS	pobj	13
18	as	as		rb	othr								RB	advmod	20
19	well	well		rb	othr								RB	advmod	20
20	as	as		cc	phrs								IN	cc	17
21	,	,											,	punct	17
22	any	any		dt									DT	det	23
23	action	action		nn		nom							NN	conj	17
24	that	that		pro	dem	sg							WDT	dobj	27
25	you	you		pro	2nd	sg							PRP	nsubj	27
26	've	've		vbaux									VBP	aux	27
27	chosen	choose	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBN	relcl	23
28	.	.											.	punct	8

#sentid = 334
0	and	and		cc	cls								CC	cc	3
1	that	that		pro	dem	sg							DT	nsubj	3
2	would	would		vbaux	mod	prd							MD	aux	3
3	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	3
4	_	_											:	punct	3
5	so	so		cc	phrs								CC	cc	3
6	let	let		vbmain	vblex	nonfinite	simple	active					VB	conj	3
7	let	let		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	6
8	me	i		pro	1st	sg							PRP	nsubj	9
9	go	go		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	7
10	into	into	in+advl	in	advl								IN	prep	9
11	the	the		dt	art								DT	det	12
12	example	example		nn									NN	pobj	10
13	and	and		cc	phrs								CC	cc	9
14													_SP	dep	3
15	then	then		rb	othr								RB	advmod	18
16	i	i		pro	1st	sg							PRP	nsubj	18
17	'll	will		vbaux	mod								MD	aux	18
18	_	_											XX	nmod	14
19	okay	okay											UH	intj	3
20	,	,											,	punct	19
21	no	no											UH	intj	19
22	.	.											.	punct	3

#sentid = 335
0	okay	okay											UH	ROOT	0
1	,	,											,	punct	0
2	no	no											UH	intj	0
3	.	.											.	punct	0

#sentid = 336
0													_SP	dep	0
1	oh	oh											UH	intj	0
2	no	no											UH	intj	1
3	no	no											UH	intj	1
4	no	no											UH	intj	1
5	no	no											UH	intj	1
6	no	no											UH	intj	1

#sentid = 337
0													_SP	dep	13
1	no	no											UH	intj	4
2	i	i		pro	1st	sg							PRP	nsubj	4
3	really	really	rb+advl	rb	advl	ly							RB	advmod	4
4	want	want		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	13
5	to	to		to									TO	aux	6
6	understand	understand		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	4
7	,	,											,	punct	9
8	you	you		pro	2nd	sg							PRP	nsubj	9
9	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	6
10	,	,											,	punct	9
11	i	i		pro	1st	sg							PRP	dep	13
12	i	i		pro	1st	sg							PRP	nsubj	13
13	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	13
14	i	i		pro	1st	sg							PRP	nsubj	18
15	've	've		vbaux									VBP	aux	18
16	,	,											,	punct	18
17	been	be		vbaux									VBN	aux	18
18	getting	get	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	13
19	part	part		nn									NN	dobj	18
20	of	of	of+npostmod	in	nmod								IN	prep	19
21	it	it		pro	3rd	sg							PRP	pobj	20
22	i	i		pro	1st	sg							PRP	nsubj	23
23	want	want	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	13
24	to	to		to									TO	aux	25
25	get	get		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	23
26	all	all		dt									DT	det	27
27													_SP	dep	25
28	of	of		in	in_othr								IN	prep	27
29	it	it		pro	3rd	sg							PRP	pobj	28
30	.	.											.	punct	13

#sentid = 338
0													_SP	dep	0
1	alright	alright											UH	intj	0
2	.	.											.	punct	0

#sentid = 339
0	okay	okay											UH	ROOT	0
1	.	.											.	punct	0

#sentid = 340
0													_SP	dep	0
1	so	so		rb	link								RB	advmod	14
2	,	,											,	punct	14
3	uh	uh											UH	intj	6
4	you	you		pro	2nd	sg							PRP	nsubj	6
5	're	be		vbaux									VBP	aux	6
6	gon	go		vbaux									VBG	aux	7
7	na	to		vbaux									VBG	aux	8
8	choo-	choo-		vbmain	vblex	nonfinite	simple	active					VB	dep	14
9	given	give	edcls+advl	vbmain	advl	nonfinite	simple	active		edcls			VBN	prep	14
10	a	a		dt	art								DT	det	11
11	state	state		nn		nom							NN	pobj	9
12	you	you		pro	2nd	sg							PRP	nsubj	14
13	've	've		vbaux									VBP	aux	14
14	got	get		vbmain	in_othr	pres	simple	active					VBD	prep	0
15	a	a		dt	art								DT	det	17
16	black	black	attr+npremod	jj	attr								JJ	amod	17
17	box	box		nn									NN	dobj	14
18	that	that		relpro	relpro_that	sg							WDT	nsubj	19
19	gives	give	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	17
20	you	you		pro	2nd	sg							PRP	dative	19
21	the	the		dt	art								DT	det	22
22	action	action		nn		nom							NN	dobj	19
23	for	for	in+npostmod	in	nmod								IN	prep	22
24	that	that		dt	dt_dem								DT	det	25
25	state	state		nn		nom							NN	pobj	23
26	,	,											,	punct	14
27													_SP	dep	14
28	yeah	yeah											UH	intj	14
29													_SP	dep	28
30	based	base	edcls+advl	vbmain	advl	nonfinite	simple	active		edcls			VBN	prep	14
31	on	on	in+advl	in	advl								IN	prep	30
32	,	,											,	punct	31
33	just	just		rb	othr								RB	advmod	36
34	the	the		dt	art								DT	det	36
35	local	local	attr+npremod	jj	attr								JJ	amod	36
36	information	information		nn		nom							NN	pobj	31
37	at	at	in+npostmod	in	nmod								IN	prep	36
38	that	that											DT	dep	30
39													_SP	dep	38
40	right	right											UH	intj	30
41													_SP	dep	44
42	state	state	nn+npremod	nn		nom	npremod						NN	nmod	44
43	temporal	temporal	attr+npremod	jj	attr								JJ	amod	44
44	transitions	transition		nn	pl	nom							NNS	dobj	14
45	to	to	in+npostmod	in	nmod								IN	prep	44
46	failure	failure		nn		nom							NN	pobj	45
47	or	or		cc	phrs								CC	cc	44
48	whatever	whatever											WDT	conj	44
49	okay	okay		dt									JJ	det	0
50	?	?											.	punct	49

#sentid = 341
0													_SP	dep	3
1	mhm	mhm											UH	intj	3
2	,	,											,	punct	3
3	mhm	mhm											UH	ROOT	3
4	.	.											.	punct	3

#sentid = 342
0													_SP	dep	4
1	so	so		rb	link								RB	advmod	4
2	you	you		pro	2nd	sg							PRP	nsubj	4
3	can	can		vbaux	mod	pos							MD	aux	4
4	assume	assume		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	4
5	that	that											IN	mark	16
6	,	,											,	punct	16
7	if	if		cs	cnd								IN	mark	10
8	you	you		pro	2nd	sg							PRP	nsubj	10
9	're	be		vbaux									VBP	aux	10
10	executing	execute	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		conditional		VBG	advcl	16
11	the	the		dt	art								DT	det	12
12	plan	plan		nn									NN	dobj	10
13	,	,											,	punct	16
14	you	you		pro	2nd	sg							PRP	nsubj	16
15	're	be		vbaux									VBP	aux	16
16	gon	go		vbaux									TO	aux	18
17	na	to		vbaux									TO	aux	18
18	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	4
19	that	that		dt	dt_dem								DT	det	20
20	action	action		nn		nom							NN	dobj	18
21	.	.											.	punct	4

#sentid = 343
0	and	and		cc	cls								CC	cc	5
1	you	you		pro	2nd	sg							PRP	nsubj	2
2	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	5
3	there	there											EX	expl	5
4	may	may		vbaux	mod	pos							MD	aux	5
5	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	5
6	some	some		dt									DT	det	7
7	uncertainty	uncertainty		nn									NN	attr	5
8	about	about	in+npostmod	in	nmod								IN	prep	7
9	,	,											,	punct	8
10	time	time		nn									NN	pobj	8
11	.	.											.	punct	5

#sentid = 344
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2	.	.											.	punct	1

#sentid = 345
0													_SP	dep	6
1	of	of	rb+jjrbmod	rb	othr								RB	advmod	2
2	course	course	rb+advl	rb	advl								RB	advmod	6
3	there	there											EX	expl	6
4	may	may		vbaux	mod	pos							MD	aux	6
5	also	also	rb+advl	rb	advl		splaux						RB	advmod	6
6	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	6
7	some	some		dt									DT	det	8
8	uncertainty	uncertainty		nn									NN	attr	6
9	about	about	in+npostmod	in	nmod								IN	prep	8
10	,	,											,	punct	9
11													_SP	dep	9
12	right	right											UH	intj	9
13	.	.											.	punct	6

#sentid = 346
0													_SP	dep	2
1	also	also	rb+advl	rb	advl								RB	advmod	2
2	making	make		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	ROOT	2
3	transition	transition		nn		nom							NN	dobj	2
4	out	out	in+npostmod	in	nmod								IN	prep	3
5	of	of		in	in_othr								IN	prep	4
6	that	that		dt	dt_dem								DT	det	7
7	state	state		nn		nom							NN	pobj	5
8	before	before		cs	cs_othr								IN	mark	10
9	you	you		pro	2nd	sg							PRP	nsubj	10
10													_SP	dep	11
11	get	get	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	2
12	to	to	in+advl	in	advl								IN	prep	11
13	that	that		pro	dem	sg							DT	pobj	12
14													_SP	dep	2
15	yes	yes											UH	intj	21
16	that	that		comp	comp_that								DT	mark	21
17	,	,											,	punct	21
18	we	we		pro	1st								PRP	nsubj	21
19	do	do		vbaux									VBP	aux	21
20	n't	not											RB	neg	21
21	talk	talk		vbmain	prepv	pres	simple	active	compcls	thatcls	vcomp		VB	ccomp	32
22	about	about	in+advl	in	advl								IN	prep	21
23	that	that		pro	dem	sg							DT	pobj	22
24	in	in	in+advl	in	advl								IN	prep	32
25	this	this		dt	dt_dem								DT	det	27
26	particular	particular	attr+npremod	jj	attr								JJ	amod	27
27	work	work		nn									NN	pobj	24
28	it	it		pro	3rd	sg							PRP	nsubjpass	32
29	was	be		vbaux									VBD	auxpass	32
30	,	,											,	punct	32
31	briefly	briefly	rb+advl	rb	advl	ly							RB	advmod	32
32	referenced	reference	thatcls+vcomp	vbmain	vblex	past	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	2
33	in	in	in+advl	in	advl								IN	prep	32
34	,	,											,	punct	33
35	uh	uh											UH	intj	33
36	the	the		dt	art								DT	det	38
37	original	original	attr+npremod	jj	attr								JJ	amod	38
38	CIRCA	circa		nn		proper							NNP	pobj	33
39	but	but		cc	phrs								CC	cc	38
40	,	,											,	punct	33
41	the	the		dt	art								DT	det	42
42	challenges	challenge		nn	pl								NNS	pobj	33
43	_	_											:	punct	2
44	so	so		cc	cls								CC	cc	2
45	so	so		rb	link								RB	advmod	71
46	in	in	in+advl	in	advl								IN	prep	71
47	this	this		dt	dt_dem								DT	det	49
48	particular	particular	attr+npremod	jj	attr								JJ	amod	49
49	work	work		nn									NN	pobj	46
50	when	when		rb	advl								WRB	advmod	52
51	you	you		pro	2nd	sg							PRP	nsubj	52
52	get	get	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	71
53	feature	feature	nn+npremod	nn		nom	npremod						NN	compound	54
54	tests	test		nn	pl								NNS	dobj	52
55	for	for	in+advl	in	advl								IN	prep	52
56	free	free		jj	attr								JJ	amod	55
57	,	,											,	punct	71
58	uh	uh											UH	intj	71
59	most	most	rb+jjrbmod	rb	othr								RBS	advmod	60
60	likely	likely	rb+advl	rb	advl	ly							RB	advmod	71
61	i-	i-											XX	dep	71
62	if	if		cs	cnd								IN	mark	64
63	you	you		pro	2nd	sg							PRP	nsubj	64
64	start	start	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	71
65	doing	do	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	64
66	the	the		dt	art								DT	det	68
67	feature	feature	nn+npremod	nn		nom	npremod						NN	compound	68
68	tests	test		nn	pl								NNS	dobj	65
69	you	you		pro	2nd	sg							PRP	nsubj	71
70	will	will		vbaux	mod	prd							MD	aux	71
71	end	end		vbmain	phrsv	vp_w_modal	simple	active					VB	conj	2
72	up	up		rb	prtcle								RP	prt	71
73	doing	do	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	71
74	the	the		dt	art								DT	det	75
75	action	action		nn		nom							NN	dobj	73
76	and	and		cc	cls								CC	cc	71
77	everything	everything		nn	other	nom							NN	nsubj	79
78	will	will		vbaux	mod	prd							MD	aux	79
79	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	71
80	fine	fine		jj	pred								JJ	acomp	79
81	.	.											.	punct	2

#sentid = 347
0	however	however		rb	link								RB	advmod	19
1	if	if		cs	cnd								IN	mark	2
2	you	you		pro	2nd	sg							PRP	nsubj	19
3	never	never											RB	advcl	19
4	,	,											,	punct	19
5	if	if		cs	cnd								IN	mark	7
6	it	it		pro	3rd	sg							PRP	nsubj	7
7	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBZ	advcl	19
8	a	a		dt	art								DT	det	12
9	best	good	attr+npremod	jj	attr								JJS	amod	11
10	-	-											HYPH	punct	11
11	effort	effort	nn+npremod	nn			npremod						NN	compound	12
12	action	action		nn		nom							NN	attr	7
13	in	in	in+npostmod	in	nmod								IN	prep	12
14	particular	particular		jj	attr								JJ	amod	13
15	,	,											,	punct	19
16	yes	yes											UH	intj	19
17	you	you		pro	2nd	sg							PRP	nsubj	19
18	might	might		vbaux	mod	pos							MD	aux	19
19	transition	transition		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	19
20	out	out	in+advl	in	advl								IN	prep	19
21	of	of		in	in_othr								IN	prep	20
22	that	that		dt	dt_dem								DT	det	23
23	state	state		nn		nom							NN	pobj	21
24	without	without	in+advl	in	advl								IN	prep	19
25	doing	do	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	24
26	that	that		dt	dt_dem								DT	det	27
27	action	action		nn		nom							NN	dobj	25
28	first	first	rb+advl	rb	advl								RB	advmod	25
29	,	,											,	punct	19
30	which	which											WDT	nsubjpass	32
31	is	be		vbaux									VBZ	auxpass	32
32	represented	represent	finitecls+advl	vbmain	vblex	pres	simple	pasv_by	advlcls	whcls			VBN	advcl	19
33	by	by											IN	agent	32
34	the	the		dt	art								DT	det	37
35	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	36
36	rate	rate	nn+npremod	nn		nom	npremod						NN	compound	37
37	function	function		nn		nom							NN	pobj	33
38	,	,											,	punct	19
39	in	in	in+advl	in	advl								IN	prep	19
40	terms	term		nn	pl								NNS	pobj	39
41	of	of	of+npostmod	in	nmod								IN	prep	40
42	,	,											,	punct	41
43	you	you		pro	2nd	sg							PRP	nsubj	46
44	do	do		vbaux									VBP	aux	46
45	n't	not											RB	neg	46
46	know	know		vbmain	vblex	pres	simple	active	compcls		incomp	compdel	VB	pcomp	41
47	exactly	exactly		rb	othr	ly							RB	advmod	50
48	what	what		dt									WP	det	50
49	time	time	nn+npremod	nn			npremod						NN	compound	50
50	step	step		nn									NN	dobj	53
51	you	you		pro	2nd	sg							PRP	nsubj	53
52	're	be		vbaux									VBP	aux	53
53	gon	go											TO	parataxis	46
54	na	to		vbaux									TO	aux	55
55	do	do		vbmain	vblex	nonfinite	simple	active	advlcls				VB	advcl	19
56	a	a		dt	art								DT	det	58
57	particular	particular	attr+npremod	jj	attr								JJ	amod	58
58	action	action		nn		nom							NN	dobj	55
59	so	so		cc	cls								CC	cc	19
60	if	if		cs	cnd								IN	mark	64
61	you	you		pro	2nd	sg							PRP	nsubj	64
62	do	do		vbaux									VBP	aux	64
63	n't	not											RB	neg	64
64	do	do	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VB	advcl	73
65	it	it		pro	3rd	sg							PRP	dobj	64
66	then	then		rb	link								RB	advmod	73
67	one	one		pro	other	pl							CD	nsubj	73
68	of	of		in	in_othr								IN	prep	67
69	the	the		dt	art								DT	det	71
70	other	other	attr+npremod	jj	attr								JJ	amod	71
71	transitions	transition		nn	pl	nom							NNS	pobj	68
72	will	will		vbaux	mod	prd							MD	aux	73
73	occur	occur		vbmain	vblex	vp_w_modal	simple	active					VB	conj	19
74	.	.											.	punct	19

#sentid = 348
0													_SP	dep	30
1	okay	okay											UH	intj	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	's	be		vbmain	in_othr	pres	simple	active					VBZ	prep	0
4	in	in	in+advl	in	advl								IN	prep	3
5	this	this		pro	dem	sg							DT	pobj	4
6	,	,											,	punct	3
7													_SP	dep	3
8	model	model		nn									NN	dep	3
9	too	too	rb+jjrbmod	rb	othr								RB	advmod	10
10	so	so		rb	othr								RB	advmod	8
11	,	,											,	punct	3
12													_SP	dep	3
13	that	that		pro	dem	sg							DT	nsubj	14
14	's	be		vbmain	be	pres	simple	active					VBZ	meta	3
15	,	,											,	punct	14
16	yes	yes											UH	intj	14
17	that	that		pro	dem	sg							DT	nsubj	18
18	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	14
19	in	in	in+advl	in	advl								IN	prep	18
20	this	this		dt	dt_dem								DT	det	21
21	model	model		nn									NN	pobj	19
22													_SP	dep	0
23	so	so		rb	link								RB	advmod	30
24	in	in	in+advl	in	advl								IN	prep	30
25	this	this		dt	dt_dem								DT	det	26
26	model	model		nn									NN	pobj	24
27	you	you		pro	2nd	sg							PRP	nsubj	30
28	've	've		vbaux									VBP	aux	30
29	basically	basically	rb+advl	rb	advl	ly	splaux						RB	advmod	30
30	got	get		vbmain	vblex	pres	simple	active					VBN	ROOT	30
31	the	the		dt	art								DT	det	34
32	,	,											,	punct	34
33	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	34
34	distribution	distribution		nn		nom							NN	dobj	30
35	,	,											,	punct	34
36	over	over	in+npostmod	in	nmod								IN	prep	34
37	the	the		dt	art								DT	det	40
38	possible	possible	attr+npremod	jj	attr								JJ	amod	40
39	next	next	attr+npremod	jj	attr								JJ	amod	40
40	states	state		nn	pl	nom							NNS	pobj	36
41	,	,											,	punct	40
42	uh	uh											UH	intj	40
43	and	and		cc	phrs								CC	cc	40
44	their	their		dt	poss								PRP$	poss	45
45	ti-	ti-											XX	conj	40
46	and	and		cc	phrs								CC	cc	40
47	the	the		dt	art								DT	det	48
48	time	time		nn									NN	npadvmod	30
49	of	of		in	nmod								IN	prep	48
50	the	the		dt	art								DT	det	51
51	transition	transition		nn		nom							NN	pobj	49
52	,	,											,	punct	48
53													_SP	dep	48
54	yes	yes											UH	intj	48
55													_SP	dep	48
56	given	give		vbmain	vblex	nonfinite	simple	active		edcls			VBN	nmod	48
57	that	that											IN	mark	61
58	you	you		pro	2nd	sg							PRP	nsubj	61
59	,	,											,	punct	61
60	will	will		vbaux	mod	prd							MD	aux	61
61	have	have	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	pcomp	56
62	sche-	sche-											XX	dobj	61
63	you	you		pro	2nd	sg							PRP	nsubj	66
64	will	will		vbaux	mod	prd							MD	aux	66
65	have	have		vbaux									VB	aux	66
66	planned	plan		vbmain	vblex	vp_w_modal	perf	active					VBN	dep	61
67	to	to		to									TO	aux	68
68	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	66
69	this	this		dt	dt_dem								DT	det	71
70	particular	particular	attr+npremod	jj	attr								JJ	amod	71
71	action	action		nn		nom							NN	dobj	68
72	,	,											,	punct	68
73													_SP	dep	56
74	yes	yes											UH	pobj	56
75													_SP	dep	56
76	and	and											CC	pobj	56
77	,	,											,	punct	79
78	that	that		pro	dem	sg							DT	nsubj	79
79	has	have		vbmain	vblex	pres	simple	active					VBZ	conj	56
80	some	some		dt									DT	det	81
81	probability	probability		nn		nom							NN	dobj	79
82	of	of	of+npostmod	in	nmod								IN	prep	81
83	happening	happen	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	82
84	,	,											,	punct	83
85													_SP	dep	83
86	right	right											UH	intj	83
87													_SP	dep	83
88	various	various	attr+npremod	jj	attr								JJ	amod	89
89	times	time		nn	pl								NNS	npadvmod	83
90	.	.											.	punct	79

#sentid = 349
0	um	um											UH	intj	2
1	,	,											,	punct	2
2	okay	okay											UH	ROOT	2
3	.	.											.	punct	2

#sentid = 350
0													_SP	dep	9
1	okay	okay											UH	intj	9
2	and	and		cc	phrs								CC	cc	9
3	the	the		dt	art								DT	det	4
4	probability	probability		nn		nom							NN	nsubj	9
5	that	that		pro	dem	sg							WDT	dobj	8
6	we	we		pro	1st								PRP	nsubj	8
7	're	be		vbaux									VBP	aux	8
8	computing	compute	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel		VBG	relcl	4
9	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	9
10	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	11
11	dependent	dependent		jj	pred								JJ	acomp	9
12	on	on	in+jcomp	in	jcomp								IN	prep	11
13	,	,											,	punct	12
14	for	for	in+advl	in	advl								IN	prep	9
15	the	the		dt	art								DT	det	17
16	guaranteed	guarantee	attr+npremod	jj	attr	ed							VBN	amod	17
17	actions	action		nn	pl	nom							NNS	pobj	14
18	what	what											WP	pobj	23
19	we	we		pro	1st								PRP	nsubj	20
20	set	set		vbmain	vblex	pres	simple	active	nmod_cls		ncomp	reldel	VBP	acl	4
21	that	that		dt	dt_dem								DT	det	22
22	deadline	deadline		nn									NN	dobj	20
23	to	to	in+advl	in	advl								TO	prep	20
24	because	because		cs	cos								IN	mark	26
25	that	that		pro	dem	sg							DT	nsubj	26
26	affects	affect	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBZ	advcl	20
27	,	,											,	punct	26
28	where	where		rb	advl								WRB	advmod	41
29	that	that		dt	dt_dem								DT	det	33
30	,	,											,	punct	33
31	max	max	nn+npremod	nn			npremod						NN	compound	33
32	-	-											HYPH	punct	33
33	delta	delta		nn									NN	nsubj	39
34	on	on	in+npostmod	in	nmod								IN	prep	33
35	that	that		dt	dt_dem								DT	det	37
36	rate	rate	nn+npremod	nn		nom	npremod						NN	compound	37
37	curve	curve		nn									NN	pobj	34
38	is	be		vbaux									VBZ	aux	39
39	going	go	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	26
40	to	to		to									TO	aux	41
41	end	end	tocls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	39
42	up	up		rb	prtcle								RP	prt	41
43	being	be	ingcls+vcomp	vbmain	be	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	41
44	,	,											,	punct	43
45	so	so	rb+advl	rb	advl								RB	advmod	43
46	.	.											.	punct	9

#sentid = 351
0													_SP	dep	0
1	the-	the-											DT	punct	0
2	um	um											UH	intj	0
3	,	,											,	punct	2
4	if	if		cs	cnd								IN	mark	9
5	i	i		pro	1st	sg							PRP	nsubj	9
6	i	i		pro	1st	sg							PRP	nsubj	9
7	did	do		vbaux									VBD	aux	9
8	n't	not											RB	neg	9
9	understand	understand	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VB	advcl	27
10	but	but		cc	phrs								CC	cc	9
11	i	i		pro	1st	sg							PRP	dep	12
12	i	i		pro	1st	sg							PRP	conj	9
13	when	when		rb	advl								WRB	advmod	15
14	i	i		pro	1st	sg							PRP	nsubj	15
15	pretended	pretend	finitecls+advl	vbmain	vblex	past	simple	active	advlcls	whcls			VBD	advcl	12
16	that	that		comp	comp_that								IN	mark	18
17	i	i		pro	1st	sg							PRP	nsubj	18
18	understood	understand	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls	thatcls	vcomp		VBD	ccomp	15
19													_SP	dep	12
20	okay	okay											UH	intj	27
21													_SP	dep	27
22	what	what		comp	comp_wh								WP	dobj	24
23	i	i		pro	1st	sg							PRP	nsubj	24
24	said	say		vbmain	vblex	past	simple	active	compcls	whcls	vcomp		VBD	csubj	27
25	to	to	in+advl	in	advl								IN	prep	24
26	myself	myself		pro	1st	sg							PRP	pobj	25
27	was	be		dt	be	past	simple	active					VBD	det	0
28	this	this		dt	dt_dem								DT	det	29
29	noisy	noisy											JJ	attr	27
30	-	-											HYPH	punct	29
31	or	or		cc	phrs								CC	cc	29
32	,	,											,	punct	36
33													_SP	dep	36
34	yes	yes											UH	intj	33
35													_SP	dep	33
36	was	be		vbmain	be	past	simple	active					VBD	conj	29
37	a	a		dt	art								DT	det	38
38	way	way		nn									NN	attr	36
39	of	of	of+npostmod	in	nmod								IN	prep	38
40	sh-	sh-											XX	pcomp	39
41	short	short		rb	othr								RB	advmod	43
42	-	-											HYPH	punct	43
43	circuiting	circuiting		nn		nom							NN	pobj	39
44	if	if		cs	cnd								IN	mark	48
45	if	if		cs	cnd								IN	mark	48
46	you	you		pro	2nd	sg							PRP	nsubj	48
47	were	be		vbaux									VBD	aux	48
48	gon	go		vbaux									TO	aux	50
49	na	to		vbaux									TO	aux	50
50	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	27
51	a	a		dt	art								DT	det	53
52	Markov	markov	nn+npremod	nn		proper	npremod						NNP	compound	53
53	chain	chain		nn									NN	dobj	50
54	,	,											,	punct	50
55													_SP	dep	50
56	right	right											UH	intj	50
57	.	.											.	punct	27

#sentid = 352
0													_SP	dep	4
1	then	then		rb	link								RB	advmod	4
2	you	you		pro	2nd	sg							PRP	nsubj	4
3	've	've		vbaux									VBP	aux	4
4	got	get		vbmain	vblex	pres	simple	active					VBN	ROOT	4
5	a	a		dt	art								DT	det	8
6	,	,											,	punct	8
7	transition	transition	nn+npremod	nn		nom	npremod						NN	compound	8
8	matrix	matrix		nn									NN	dobj	4
9	,	,											,	punct	4
10													_SP	dep	4
11	yes	yes											UH	intj	4
12													_SP	dep	4
13	and	and		cc	phrs								CC	cc	24
14	in	in	in+advl	in	advl								IN	prep	24
15	some	some		dt									DT	det	16
16	sense	sense		nn									NN	pobj	14
17	what	what		comp	comp_wh								WP	dobj	23
18	this	this		dt	dt_dem								DT	det	21
19	noisy	noisy	attr+npremod	jj	attr								JJ	amod	21
20	-	-											HYPH	punct	21
21	or	or		nn									NN	nsubj	23
22	is	be		vbaux									VBZ	aux	23
23	doing	do		vbmain	vblex	pres	prog	active	compcls	whcls	vcomp		VBG	csubj	24
24	is	be		vbmain	be	pres	simple	active					VBZ	conj	4
25	it	it		pro	3rd	sg							PRP	nsubj	27
26	's	be		vbaux									VBZ	aux	27
27	picking	pick	thatcls+vcomp	vbmain	phrsv	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	24
28	up	up		rb	prtcle								RP	prt	27
29	,	,											,	punct	27
30	some	some											DT	dobj	27
31	of	of		in	in_othr								IN	prep	30
32	the	the		dt	art								DT	det	33
33	numbers	number		nn	pl	nom							NNS	pobj	31
34	in	in	in+npostmod	in	nmod								IN	prep	33
35	the	the		dt	art								DT	det	37
36	particular	particular	attr+npremod	jj	attr								JJ	amod	37
37	row	row		nn									NN	pobj	34
38	of	of	of+npostmod	in	nmod								IN	prep	37
39	that	that		dt	dt_dem								DT	det	44
40	Markov	markov	nn+npremod	nn		proper	npremod						NNP	nmod	44
41	,	,											,	punct	44
42													_SP	dep	44
43	transition	transition	nn+npremod	nn		nom	npremod						NN	compound	44
44	matrix	matrix		nn									NN	pobj	38
45	.	.											.	punct	4

#sentid = 353
0													_SP	dep	6
1	well	well											UH	intj	6
2	it	it		pro	3rd	sg							PRP	nsubj	6
3	may	may		vbaux	mod	pos							MD	aux	6
4	not	not											RB	neg	6
5	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	6
6	pick	pick		vbmain	phrsv	vp_w_modal	simple	active					VB	ROOT	6
7	up	up		rb	prtcle								RP	prt	6
8	any	any											DT	dobj	6
9	of	of		in	in_othr								IN	prep	8
10	them	they		pro	pl								PRP	pobj	9
11	.	.											.	punct	6

#sentid = 354
0													_SP	dep	4
1	it	it		pro	3rd	sg							PRP	nsubj	4
2	may	may		vbaux	mod	pos							MD	aux	4
3	not	not											RB	neg	4
4	pick	pick		vbmain	phrsv	vp_w_modal	simple	active					VB	ROOT	4
5	up	up		rb	prtcle								RP	prt	4
6	any	any											DT	dobj	4
7	of	of		in	in_othr								IN	prep	6
8	them	they		pro	pl								PRP	pobj	7
9	,	,											,	punct	4
10	i	i		pro	1st	sg							PRP	nsubj	11
11	understand	understand		vbmain	vblex	pres	simple	active					VBP	parataxis	4
12													_SP	dep	4
13	yes	yes											UH	intj	18
14	,	,											,	punct	13
15	but	but		cc	phrs								CC	cc	18
16	it	it		pro	3rd	sg							PRP	nsubj	18
17	could	could		vbaux	mod	pos							MD	aux	18
18	pick	pick		vbmain	phrsv	vp_w_modal	simple	active					VB	meta	4
19	up	up		rb	prtcle								RP	prt	18
20													_SP	dep	18
21	i	i		pro	1st	sg							PRP	nsubj	22
22	understand	understand		vbmain	vblex	pres	simple	active					VBP	parataxis	18
23	but	but		cc	cls								CC	cc	22
24	it	it		pro	3rd	sg							PRP	nsubj	25
25	's	be		vbmain	be	pres	simple	active					VBZ	parataxis	33
26	it	it		pro	3rd	sg							PRP	nsubj	28
27	's	be		vbaux									VBZ	aux	28
28	picking	pick		vbmain	phrsv	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	33
29	them	they		pro	pl								PRP	dobj	28
30	off	off		rb	prtcle								RP	prt	28
31	,	,											,	punct	33
32	it	it		pro	3rd	sg							PRP	nsubj	33
33	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	41
34													_SP	dep	33
35	it	it		pro	3rd	sg							PRP	dep	37
36	it	it		pro	3rd	sg							PRP	nsubj	37
37	would	would		vbaux	mod	prd							MD	aux	38
38													_SP	dep	41
39	it	it		pro	3rd	sg							PRP	nsubj	41
40	's	be		vbaux									VBZ	aux	41
41	pruning	prune		vbmain	phrsv	pres	prog	active					VBG	conj	22
42	off	off		rb	prtcle								RP	prt	41
43	,	,											,	punct	41
44													_SP	dep	41
45	yeah	yeah											UH	intj	41
46	.	.											.	punct	41

#sentid = 355
0													_SP	dep	0
1	for	for		in	in_othr								IN	prep	0
2	the	the		dt	art								DT	det	4
3	particular	particular		jj	attr								JJ	amod	4
4	s-	s-											XX	pobj	1
5	for	for		in	in_othr								IN	prep	1
6	the	the		dt	art								DT	det	7
7	particular	particular											JJ	pobj	5
8	uh	uh											UH	intj	1
9	,	,											,	punct	8
10													_SP	dep	1
11	right	right											UH	intj	1
12	.	.											.	punct	1

#sentid = 356
0													_SP	dep	5
1	uh	uh											UH	intj	5
2	expansion	expansion		nn									NN	dep	5
3	it	it		pro	3rd	sg							PRP	nsubj	5
4	's	be		vbaux									VBZ	aux	5
5	pruning	prune		vbmain	phrsv	pres	prog	active					VBG	ROOT	5
6	off	off		rb	prtcle								RP	prt	5
7	some	some											DT	dobj	5
8	of	of		in	in_othr								IN	prep	7
9	the	the		dt	art								DT	det	14
10	,	,											,	punct	14
11													_SP	dep	14
12	mhm	mhm											UH	intj	14
13													_SP	dep	14
14	columns	column		nn	pl								NNS	pobj	8
15	for	for	in+npostmod	in	nmod								IN	prep	14
16	that	that		dt	dt_dem								DT	det	17
17	row	row		nn									NN	pobj	15
18													_SP	dep	5
19	right	right											UH	intj	5
20													_SP	dep	5
21	some	some											DT	dobj	5
22	of	of		in	in_othr								IN	prep	21
23	the	the		dt	art								DT	det	24
24	entries	entry		nn	pl	nom							NNS	pobj	22
25	in	in	in+npostmod	in	nmod								IN	prep	24
26	the	the		dt	art								DT	det	27
27	column	column		nn									NN	pobj	25
28	of	of	of+npostmod	in	nmod								IN	prep	27
29	that	that		dt	dt_dem								DT	det	30
30	row	row		nn									NN	pobj	28
31	,	,											,	punct	21
32													_SP	dep	21
33	mhm	mhm											UH	intj	32
34													_SP	dep	5
35	maybe	maybe		rb	othr								RB	advmod	36
36	all	all											DT	dobj	5
37	of	of		in	in_othr								IN	prep	36
38	them	they		pro	pl								PRP	pobj	37
39	.	.											.	punct	5

#sentid = 357
0													_SP	dep	0
1	yes	yes											UH	intj	0
2	.	.											.	punct	1

#sentid = 358
0													_SP	dep	1
1	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	that	that		pro	dem	sg							DT	nsubj	1
3	roughly	roughly		rb	othr	ly							RB	advmod	4
4	what	what											WP	attr	1
5	what	what											WP	nsubj	7
6	's	be		vbaux									VBZ	aux	7
7	going	go	whcls+vcomp	vbmain	prepv	pres	prog	active	compcls	whcls	vcomp		VBG	ccomp	1
8	on	on		rb	prtcle								RP	prt	7
9	?	?											.	punct	1

#sentid = 359
0													_SP	dep	0
1	yes	yes											UH	intj	0
2	,	,											,	punct	1
3													_SP	dep	1
4	yes	yes											UH	intj	1
5													_SP	dep	0

#sentid = 360
0	so	so		rb	link								RB	advmod	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	2
5	a	a		dt	art								DT	det	7
6	heuristic	heuristic	nn+npremod	nn			npremod						NN	compound	7
7	way	way		nn									NN	attr	4
8	of	of	of+npostmod	in	nmod								IN	prep	7
9	collapsing	collapse	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	8
10	at	at	in+advl	in	advl								IN	prep	9
11	the	the		dt	art								DT	det	13
12	,	,											,	punct	13
13													_SP	dep	10
14	yes	yes											UH	intj	4
15	and	and		cc	phrs								CC	cc	4
16	n-	n-											XX	dep	4
17	so	so		cc	phrs								CC	cc	2
18	it	it		pro	3rd	sg							PRP	nsubj	19
19	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	2
20	a	a											DT	attr	19
21	it	it		pro	3rd	sg							PRP	nsubj	22
22	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	19
23	a	a		dt	art								DT	det	25
24	heuristic	heuristic	attr+npremod	jj	attr								JJ	amod	25
25	way	way		nn									NN	attr	22
26	of	of	of+npostmod	in	nmod								IN	prep	25
27	,	,											,	punct	28
28	approximating	approximate	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	26
29	both	both											CC	predet	33
30	the	the		dt	art								DT	det	33
31	state	state	nn+npremod	nn		nom	npremod						NN	compound	32
32	history	history	nn+npremod	nn		nom	npremod						NN	compound	33
33	effects	effect		nn	pl								NNS	dobj	28
34													_SP	dep	28
35	uhuh	uhuh											UH	intj	28
36													_SP	dep	28
37	and	and		cc	phrs								CC	cc	28
38	,	,											,	punct	28
39	looking	look		vbmain	prepv	nonfinite	simple	active		ingcls			VBG	conj	28
40	at	at	in+advl	in	advl								IN	prep	39
41	the	the		dt	art								DT	det	42
42	deadlines	deadline		nn	pl								NNS	pobj	40
43	dif-	dif-	in+npostmod	in	nmod								XX	prep	42
44	for	for	in+npostmod	in	nmod								IN	prep	42
45	the	the		dt	art								DT	det	47
46	different	different	attr+npremod	jj	attr								JJ	amod	47
47	actions	action		nn	pl	nom							NNS	pobj	44
48	,	,											,	punct	39
49	and	and		cc	phrs								CC	cc	39
50	um	um											UH	intj	39
51	,	,											,	punct	39
52	combining	combine		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	39
53	that	that		pro	dem	sg							DT	dobj	52
54	so	so		cs	cs_othr								IN	mark	60
55	that	that		cs	cs_othr								IN	mark	60
56	you	you		pro	2nd	sg							PRP	nsubj	60
57	,	,											,	punct	60
58	do	do		vbaux									VBP	aux	60
59	n't	not											RB	neg	60
60	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VB	advcl	52
61	to	to		to									TO	aux	62
62	specify	specify		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	60
63	this	this		dt	dt_dem								DT	det	66
64	large	large		jj	attr								JJ	amod	65
65													_SP	dep	66
66	matrix	matrix		nn									NN	dobj	62
67	.	.											.	punct	2

#sentid = 361
0													_SP	dep	0
1	so	so		rb	link								RB	advmod	5
2	you	you		pro	2nd	sg							PRP	dep	5
3	you	you		pro	2nd	sg							PRP	nsubj	5
4	could	could		vbaux	mod	pos							MD	aux	5
5	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	appos	0
6	but	but		cc	phrs								CC	cc	5
7	,	,											,	punct	5
8	chose	choose		vbmain	vblex	past	simple	active					VBD	conj	5
9	not	not											RB	neg	10
10	to	to											TO	xcomp	8
11	,	,											,	punct	8
12													_SP	dep	8
13	right	right											UH	intj	8
14	.	.											.	punct	0

#sentid = 362
0													_SP	dep	1
1	look	look		vbmain	prepv	nonfinite	simple	active					VB	ROOT	1
2	at	at	in+advl	in	advl								IN	prep	1
3	a	a		dt	art								DT	det	5
4	cartoon	cartoon	nn+npremod	nn			npremod						NN	compound	5
5	version	version		nn									NN	pobj	2
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	this	this		pro	dem	sg							DT	pobj	6
8	in	in	in+advl	in	advl								IN	prep	1
9	a	a		dt	art								DT	det	10
10	make	make		vbmain	vblex	nonfinite	simple	active					VB	pobj	8
11	_	_											XX	punct	10
12	completely	completely	rb+advl	rb	advl	ly							RB	advmod	13
13	made	make		vbmain	phrsv	nonfinite	simple	active		edcls			VBN	dep	10
14	up	up		rb	prtcle								RP	prt	13
15	,	,											,	punct	13
16													_SP	dep	10
17	right	right											UH	intj	1
18	.	.											.	punct	1

#sentid = 363
0													_SP	dep	1
1	problem	problem		nn									NN	ROOT	1
2													_SP	dep	1
3	yeah	yeah											UH	intj	1
4	.	.											.	punct	1

#sentid = 364
0													_SP	dep	0
1	s-	s-											:	punct	0
2	to	to		to									TO	aux	3
3	understand	understand	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls			VB	xcomp	0
4	situations	situation		nn	pl	nom							NNS	dobj	3
5	where	where		rb	advl								WRB	advmod	7
6	this	this		pro	dem	sg							DT	nsubj	7
7	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	4
8	a	a		dt	art								DT	det	14
9	very	very		rb	othr								RB	advmod	14
10	very	very		rb	othr								RB	advmod	14
11	,	,											,	punct	14
12	poor	poor		jj	attr								JJ	amod	14
13	,	,											,	punct	14
14	we-	we-											PRP	attr	7
15	well	well											UH	intj	18
16	you	you		pro	2nd	sg							PRP	nsubj	18
17	really	really	rb+advl	rb	advl	ly							RB	advmod	18
18	lose	lose		vbmain	vblex	pres	simple	active	compcls			compdel	VBP	ccomp	0
19	badly	badly	rb+advl	rb	advl	ly							RB	advmod	18
20	that	that		dt	dt_dem								DT	det	21
21	way	way		nn									NN	npadvmod	18
22	,	,											,	punct	18
23	that	that		relpro	relpro_that								IN	mark	27
24	you	you		pro	2nd	sg							PRP	nsubj	27
25	would	would		vbaux	mod	prd							MD	aux	27
26	have	have		vbaux									VB	aux	27
27	been	be	thatcls+ncomp	vbmain	be	vp_w_modal	perf	active	nmod_cls	thatcls	ncomp		VBN	acl	18
28	better	well		jj	pred								JJR	acomp	27
29	off	off		rb	prtcle								RP	prt	28
30													_SP	dep	0

#sentid = 365
0	actually	actually	rb+advl	rb	advl	ly							RB	advmod	9
1													_SP	dep	9
2	right	right											UH	intj	9
3	well	well											UH	intj	9
4	,	,											,	punct	9
5	you	you		pro	2nd	sg							PRP	nsubj	9
6	would	would		vbaux	mod	prd							MD	aux	9
7	n't	not											RB	neg	9
8	necessarily	necessarily	rb+advl	rb	advl	ly	splaux						RB	advmod	9
9	lose	lose		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	9
10	this	this		dt	dt_dem								DT	det	11
11	way	way		nn									NN	dobj	9
12	because	because		cs	cos								IN	mark	14
13	it	it		pro	3rd	sg							PRP	nsubj	14
14	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		causative		VBZ	advcl	9
15	up	up	in+advl	in	advl								IN	prep	14
16	to	to		in	in_othr								IN	prep	15
17	the	the		dt	art								DT	det	18
18	user	user		nn		nom							NN	pobj	16
19	whether	whether		cs	cs_othr								IN	mark	38
20	they	they		pro	pl								PRP	nsubj	23
21	,	,											,	punct	23
22	uh	uh											UH	intj	23
23	want	want		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	38
24	to	to											TO	xcomp	23
25	pr-	pr-											XX	dep	26
26	want	want		vbmain	vblex	pres	simple	active					VBP	dep	23
27	to	to		to									TO	aux	28
28	fake	fake		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	26
29	conditional	conditional	attr+npremod	jj	attr								JJ	amod	30
30	probabilities	probability		nn	pl	nom							NNS	dobj	28
31	,	,											,	punct	38
32	into	into	in+advl	in	advl								IN	prep	38
33	this	this		dt	dt_dem								DT	det	35
34	knowledge	knowledge	nn+npremod	nn			npremod						NN	compound	35
35	base	base		nn									NN	pobj	32
36	they	they		pro	pl								PRP	nsubj	38
37	can	can		vbaux	mod	pos							MD	aux	38
38	pretend	pretend	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	9
39	they	they		pro	pl								PRP	nsubj	40
40	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	38
41	unconditional	unconditional		jj	pred								JJ	acomp	40
42	but	but		cc	cls								CC	cc	38
43	they	they		pro	pl								PRP	nsubj	45
44	can	can		vbaux	mod	pos							MD	aux	45
45	specify	specify		vbmain	vblex	vp_w_modal	simple	active					VB	conj	38
46	extra	extra	attr+npremod	jj	attr								JJ	amod	48
47	state	state	nn+npremod	nn		nom	npremod						NN	compound	48
48	features	feature		nn	pl								NNS	dobj	45
49	effectively	effectively	rb+advl	rb	advl	ly							RB	advmod	45
50	,	,											,	punct	45
51	that	that		relpro	relpro_that	sg							WDT	nsubj	52
52	make	make	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	48
53	them	they		pro	pl								PRP	nsubj	54
54	allow	allow		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	52
55	,	,											,	punct	54
56	uh	uh											UH	intj	54
57	uh	uh											UH	intj	54
58	uh	uh											UH	intj	54
59	that	that		pro	dem	sg							DT	nsubj	60
60	allow	allow	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	54
61	them	they		pro	pl								PRP	nsubj	63
62	to	to		to									TO	aux	63
63	have	have		vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	60
64	,	,											,	punct	63
65	effectively	effectively	rb+advl	rb	advl	ly							RB	advmod	63
66	,	,											,	punct	63
67	more	more		jj	attr								JJR	amod	69
68	than	than											IN	quantmod	69
69	one	one											CD	nummod	70
70	row	row		nn									NN	dobj	63
71	or	or		cc	phrs								CC	cc	70
72	column	column		nn									NN	conj	70
73	of	of	of+npostmod	in	nmod								IN	prep	70
74	a	a		dt	art								DT	det	75
75	Mar-	mar-	nn+npremod	nn		proper	npremod						NNP	nmod	80
76	of	of	of+npostmod	in	nmod								IN	prep	75
77	a	a		dt	art								DT	det	78
78	Markov	markov		nn		proper							NNP	pobj	76
79	,	,											,	punct	80
80	matrix	matrix		nn									NN	pobj	73
81	.	.											.	punct	9

#sentid = 366
0													_SP	dep	6
1	you	you		pro	2nd	sg							PRP	nsubj	3
2	're	be		vbaux									VBP	aux	3
3	colle-	colle-		vbmain	in_othr	pres	prog	active					VBG	prep	0
4	you	you		pro	2nd	sg							PRP	nsubj	6
5	're	be		vbaux									VBP	aux	6
6	aggregating	aggregate		vbmain	vblex	pres	prog	active					VBG	ROOT	6
7	states	state		nn	pl	nom							NNS	dobj	6
8	,	,											,	punct	6
9	essentially	essentially	rb+advl	rb	advl	ly							RB	advmod	6
10	.	.											.	punct	6

#sentid = 367
0													_SP	dep	3
1	yeah	yeah											UH	intj	3
2	,	,											,	punct	3
3	mhm	mhm											UH	ROOT	3
4													_SP	dep	3

#sentid = 368
0	and	and		cc	cls								CC	cc	11
1	,	,											,	punct	11
2													_SP	dep	11
3	well	well											UH	intj	11
4	it	it		pro	3rd	sg							PRP	nsubj	7
5	's	be		vbaux									VBZ	aux	7
6	not	not											RB	neg	7
7	aggregating	aggregate		vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	11
8	states	state		nn	pl	nom							NNS	dobj	7
9	it	it		pro	3rd	sg							PRP	nsubj	11
10	's	be		vbaux									VBZ	aux	11
11	aggregating	aggregate		vbmain	vblex	pres	prog	active					VBG	ROOT	11
12	,	,											,	punct	11
13	uh	uh											UH	intj	11
14	,	,											,	punct	11
15	conditional	conditional	attr+npremod	jj	attr								JJ	amod	16
16	probabilities	probability		nn	pl	nom							NNS	dobj	11
17	,	,											,	punct	11
18	and	and		cc	phrs								CC	cc	11
19	then	then		rb	link								RB	advmod	20
20	trying	try		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	11
21	to	to		to									TO	aux	22
22	get	get	tocls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	20
23	them	they		pro	pl								PRP	dobj	22
24	out	out		rb	prtcle								RP	prt	22
25	.	.											.	punct	11

#sentid = 369
0													_SP	dep	4
1	okay	okay											UH	intj	4
2	you	you		pro	2nd	sg							PRP	nsubj	4
3	're	be		vbaux									VBP	aux	4
4	aggregating	aggregate		vbmain	vblex	pres	prog	active	compcls		jcomp	compdel	VBG	ccomp	13
5	transitions	transition		nn	pl	nom							NNS	dobj	4
6	from	from	in+npostmod	in	nmod								IN	prep	5
7	and	and		cc									CC	cc	6
8	to	to											IN	conj	6
9													_SP	dep	8
10	states	state		nn	pl	nom							NNS	pobj	8
11	essentially	essentially	rb+advl	rb	advl	ly							RB	advmod	4
12	,	,											,	punct	13
13	right	right											JJ	ROOT	13
14	?	?											.	punct	13

#sentid = 370
0													_SP	dep	5
1	yes	yes											UH	intj	5
2	,	,											,	punct	5
3	mhm	mhm											UH	intj	5
4	,	,											,	punct	5
5	right	right											UH	ROOT	5
6	.	.											.	punct	5

#sentid = 371
0	which	which											WDT	intj	18
1	,	,											,	punct	18
2	the	the		dt	art								DT	det	3
3	motivation	motivation		nn		nom							NN	nsubj	6
4	for	for	in+npostmod	in	nmod								IN	prep	3
5	that	that		pro	dem	sg							DT	pobj	4
6	being	be	ingcls+advl	vbmain	be	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	18
7	that	that		comp	comp_that								IN	mark	13
8	it	it		pro	3rd	sg							PRP	nsubj	9
9	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	13
10	,	,											,	punct	13
11	it	it		pro	3rd	sg							PRP	nsubj	13
12	would	would		vbaux	mod	prd							MD	aux	13
13	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	6
14	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	15
15	difficult-	difficult-		jj	attr								JJ	amod	6
16	i-	i-											XX	dep	6
17	it	it		pro	3rd	sg							PRP	nsubj	18
18	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	18
19	more	more	rb+jjrbmod	rb	adjmod								RBR	advmod	20
20	easy	easy		jj	pred								JJ	acomp	18
21	to	to		to									TO	aux	22
22	think	think	xtrapos+tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	18
23	in	in	in+advl	in	advl								IN	prep	22
24	terms	term		nn	pl								NNS	pobj	23
25	of	of	of+npostmod	in	nmod								IN	prep	24
26	,	,											,	punct	25
27	state	state	nn+npremod	nn		nom	npremod						NN	compound	28
28	transitions	transition		nn	pl	nom							NNS	pobj	25
29	where	where		rb	advl								WRB	advmod	31
30	you	you		pro	2nd	sg							PRP	nsubj	31
31	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	28
32	preconditions	precondition		nn	pl	nom							NNS	dobj	31
33	and	and		cc	phrs								CC	cc	32
34													_SP	dep	32
35	postconditions	postcondition		nn	pl	nom							NNS	conj	32
36	,	,											,	punct	18
37													_SP	dep	18
38	w-	w-											XX	dep	41
39	th-	th-											XX	dep	41
40	i	i		pro	1st	sg							PRP	nsubj	41
41	guess	guess	xtrapos+thatcls+jcomp	vbmain	vblex	pres	simple	active	compcls		jcomp	compdel	VBP	ccomp	18
42	what	what											WP	dobj	46
43	i	i		pro	1st	sg							PRP	nsubj	45
44	'm	be		vbaux									VBP	aux	45
45	trying	try	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	41
46	to	to											TO	xcomp	45
47	,	,											,	punct	41
48	the-	the-		in	in_othr								DT	prep	47
49	there	there											EX	expl	50
50	's	be		vbmain	be	pres	simple	active					VBZ	dep	41
51	a	a		dt	art								DT	det	52
52	lar-	lar-											XX	attr	50
53	there	there											EX	expl	54
54	's	be		vbmain	be	pres	simple	active					VBZ	dep	50
55	a	a		dt	art								DT	det	57
56	growing	grow	attr+npremod	jj	attr	ing							VBG	amod	57
57	literature	literature		nn		nom							NN	attr	54
58													_SP	dep	50
59	mhm	mhm											UH	intj	18
60													_SP	dep	18
61	on	on	in+advl	in	advl								IN	prep	18
62	factoring	factoring		nn		nom							NN	pobj	61
63	,	,											,	punct	18
64													_SP	dep	18
65	mhm	mhm											UH	intj	76
66	,	,											,	punct	65
67	mhm	mhm											UH	intj	65
68	,	,											,	punct	67
69	right	right											UH	intj	67
70	,	,											,	punct	76
71	yes	yes											UH	intj	70
72	,	,											,	punct	70
73	mhm	mhm											UH	intj	70
74													_SP	dep	70
75	you	you		pro	2nd	sg							PRP	nsubj	76
76	know	know		vbmain	vblex	pres	simple	active					VBP	meta	18
77	on	on	in+advl	in	advl								IN	prep	18
78	aggregating	aggregate	attr+npremod	jj	attr	ing							VBG	amod	79
79	factoring	factoring		nn		nom							NN	pobj	77
80	,	,											,	punct	77
81	Markov	markov	nn+npremod	nn		proper	npremod						NNP	compound	82
82	chains	chain		nn	pl								NNS	dep	77
83													_SP	dep	18
84	yes	yes											UH	intj	18
85	.	.											.	punct	18

#sentid = 372
0													_SP	dep	2
1	you	you		pro	2nd	sg							PRP	nsubj	2
2	turned	turn		vbmain	vblex	past	simple	active					VBD	ROOT	2
3	a	a		dt	art								DT	det	5
4	blind	blind	attr+npremod	jj	attr								JJ	amod	5
5	eye	eye		nn									NN	dobj	2
6	to	to	in+advl	in	advl								IN	prep	2
7	that	that		dt	dt_dem								DT	det	8
8	literature	literature		nn		nom							NN	pobj	6
9	.	.											.	punct	2

#sentid = 373
0													_SP	dep	3
1	i	i		pro	1st	sg							PRP	nsubj	3
2	,	,											,	punct	3
3	referenced	reference		vbmain	vblex	past	simple	active					VBD	ROOT	3
4	a	a		dt	art								DT	det	5
5	couple	couple		nn									NN	dobj	3
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	papers	paper		nn	pl	nom							NNS	pobj	6
8	but	but		cc	cls								CC	cc	3
9	then	then		rb	link								RB	advmod	13
10	i	i		pro	1st	sg							PRP	nsubj	13
11	did	do		vbaux									VBD	aux	13
12	n't	not											RB	neg	13
13	go	go		vbmain	vblex	past	simple	active					VB	conj	3
14	into	into	in+advl	in	advl								IN	prep	13
15	details	detail		nn	pl								NNS	pobj	14
16	of	of	of+npostmod	in	nmod								IN	prep	15
17	what	what		comp	comp_wh								WP	dobj	20
18	they	they		pro	pl								PRP	nsubj	20
19	're	be		vbaux									VBP	aux	20
20	doing	do	whcls+incomp	vbmain	vblex	pres	prog	active	compcls	whcls	incomp		VBG	pcomp	16
21	.	.											.	punct	13

#sentid = 374
0													_SP	dep	6
1	w-	w-											XX	dep	6
2	wh-	wh-											XX	dep	6
3	why	why		rb	advl								WRB	advmod	6
4	were	be		vbaux									VBD	auxpass	6
5	you	you		pro	2nd	sg							PRP	nsubjpass	6
6	convinced	convince		vbmain	vblex	past	simple	pasv_agls					VBN	ROOT	6
7	that	that		comp	comp_that								IN	mark	9
8	that	that		pro	dem	sg							DT	nsubj	9
9	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls	thatcls	vcomp		VBD	ccomp	6
10	the	the		dt	art								DT	det	12
11	wrong	wrong	attr+npremod	jj	attr								JJ	amod	12
12	way	way		nn									NN	attr	9
13	to	to		to									TO	aux	14
14	go	go	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	12
15	?	?											.	punct	6

#sentid = 375
0													_SP	dep	0
1	well	well											UH	preconj	0
2	,	,											,	punct	1

#sentid = 376
0	for	for											IN	ROOT	0
1	several	several	attr+npremod	jj	attr								JJ	amod	2
2	reasons	reason		nn	pl								NNS	pobj	0
3	one	one											CD	appos	2
4	because	because		cs	cos								IN	mark	6
5	they	they		pro	pl								PRP	nsubj	6
6	talk	talk	finitecls+advl	vbmain	prepv	pres	simple	active	advlcls		causative		VBP	advcl	3
7	about	about	in+advl	in	advl								IN	prep	6
8	aggregating	aggregate		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	pobj	7
9	,	,											,	punct	8
10	states	state	appos+npostmod	nn	pl	nom	nappos						NNS	appos	8
11	in	in	in+advl	in	advl								IN	prep	8
12	terms	term		nn	pl								NNS	pobj	11
13	of	of	of+npostmod	in	nmod								IN	prep	12
14	,	,											,	punct	13
15	abstraction	abstraction		nn		nom							NN	pobj	13
16	and	and		cc	phrs								CC	cc	15
17	feature	feature	nn+npremod	nn		nom	npremod						NN	compound	18
18	extraction	extraction		nn		nom							NN	conj	15
19	things	thing		nn	pl	nom							NNS	pobj	7
20	like	like	in+npostmod	in	nmod								IN	prep	19
21	that	that		pro	dem	sg							DT	pobj	20
22	but	but		cc	phrs								CC	cc	2
23	they	they		pro	pl								PRP	dep	28
24	they	they		pro	pl								PRP	nsubj	28
25	do	do		vbaux									VBP	aux	28
26	n't	not											RB	neg	28
27	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	28
28	consider	consider		vbmain	vblex	pres	simple	active					VB	conj	2
29	plan	plan	nn+npremod	nn			npremod						NN	compound	30
30	execution	execution		nn		nom							NN	dobj	28
31	and	and		cc	phrs								CC	cc	30
32	making	make		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	30
33	that	that		pro	dem	sg							DT	dobj	32
34	real	real	attr+npremod	jj	attr								JJ	amod	36
35	-	-											HYPH	punct	36
36	time	time		nn									NN	npadvmod	32
37	at	at	rb+jjrbmod	rb	othr								RB	advmod	38
38	all	all	rb+advl	rb	advl								RB	advmod	32
39	.	.											.	punct	28

#sentid = 377
0	so	so		rb	link								RB	advmod	19
1	they	they		pro	pl								PRP	nsubj	2
2	do	do		vbaux									VBP	aux	19
3	n't	not											RB	neg	2
4	they	they		pro	pl								PRP	nsubj	7
5	do	do		vbaux									VBP	aux	7
6	n't	not											RB	neg	7
7	produce	produce		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	19
8	step	step		nn									NN	dobj	7
9	,	,											,	punct	8
10	part	part	appos+npostmod	nn			nappos						NN	appos	8
11	two	two											CD	nummod	10
12	of	of	of+npostmod	in	nmod								IN	prep	10
13	the	the		dt	art								DT	det	14
14	plan	plan		nn									NN	pobj	12
15	,	,											,	punct	19
16	they	they		pro	pl								PRP	nsubj	19
17	do	do		vbaux									VBP	aux	19
18	n't	not											RB	neg	19
19	think	think		vbmain	prepv	pres	simple	active					VB	ROOT	19
20	about	about	in+advl	in	advl								IN	prep	19
21	deadlines	deadline		nn	pl								NNS	pobj	20
22	,	,											,	punct	19
23	so	so		cc	cls								CC	cc	19
24	in	in	in+advl	in	advl								IN	prep	32
25	order	order		nn		nom							NN	pobj	24
26	to	to		to									TO	aux	27
27	think	think		vbmain	prepv	nonfinite	simple	active	nmod_cls		ncomp		VB	acl	25
28	about	about	in+advl	in	advl								IN	prep	27
29	deadlines	deadline		nn	pl								NNS	pobj	28
30	you	you		pro	2nd	sg							PRP	nsubj	32
31	first	first		rb	link								RB	advmod	32
32	have	have		vbmain	vblex	pres	simple	active					VBP	conj	19
33	to	to		to									TO	aux	34
34	guess	guess		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	32
35	at	at	in+advl	in	advl								IN	prep	34
36	which	which		dt									WDT	det	37
37	deadlines	deadline		nn	pl								NNS	dobj	39
38	you	you		pro	2nd	sg							PRP	nsubj	39
39	needed	need		vbmain	vblex	past	simple	active	compcls		incomp	compdel	VBD	pcomp	35
40	,	,											,	punct	32
41	and	and		cc	cls								CC	cc	32
42	then	then		rb	link								RB	advmod	45
43	you	you		pro	2nd	sg							PRP	nsubj	45
44	'd	would		vbaux	mod								MD	aux	45
45	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	conj	32
46	to	to		to									TO	aux	47
47	consider	consider		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	45
48	those	those		pro	dem	pl							DT	dobj	47
49	as	as	in+advl	in	advl								IN	prep	47
50	separate	separate	attr+npremod	jj	attr								JJ	amod	51
51	actions	action		nn	pl	nom							NNS	pobj	49
52	.	.											.	punct	32

#sentid = 378
0	for	for											IN	ROOT	0
1	your	your		dt	poss								PRP$	poss	3
2	transition	transition	nn+npremod	nn		nom	npremod						NN	compound	3
3	matrix	matrix		nn									NN	pobj	0
4	.	.											.	punct	0

#sentid = 379
0													_SP	dep	9
1	well	well											UH	intj	9
2	,	,											,	punct	9
3	i	i		pro	1st	sg							PRP	dep	9
4	i	i		pro	1st	sg							PRP	dep	9
5	actually	actually	rb+advl	rb	advl	ly							RB	advmod	9
6	i	i		pro	1st	sg							PRP	nsubj	9
7	do	do		vbaux									VBP	aux	9
8	n't	not											RB	neg	9
9	understand	understand		vbmain	vblex	pres	simple	active					VB	ROOT	9
10	that	that		dt	dt_dem								DT	det	11
11	answer	answer		nn		nom							NN	dobj	9
12	cuz	cuz		cs	cs_othr								IN	mark	37
13	,	,											,	punct	37
14	this	this		dt	dt_dem								DT	det	16
15	particular	particular	attr+npremod	jj	attr								JJ	amod	16
16	question	question		nn		nom							NN	dep	26
17	,	,											,	punct	26
18	this	this		pro	dem	sg							DT	nsubj	19
19	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	26
20	a	a		dt	art								DT	det	21
21	subproblem	subproblem		nn									NN	attr	19
22	you	you		pro	2nd	sg							PRP	nsubj	24
23	've	've		vbaux									VBP	aux	24
24	got	get	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBN	relcl	21
25	it	it		pro	3rd	sg							PRP	nsubj	26
26	has	have		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	37
27	nothing	nothing		nn	other	nom							NN	dobj	26
28	to	to		to									TO	aux	29
29	do	do	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	27
30	with	with	in+advl	in	advl								IN	prep	29
31	the	the		dt	art								DT	det	32
32	actions	action		nn	pl	nom							NNS	pobj	30
33	,	,											,	punct	37
34	right	right											UH	intj	37
35	,	,											,	punct	37
36	it	it		pro	3rd	sg							PRP	nsubj	37
37	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	9
38	just	just	rb+advl	rb	advl								RB	advmod	37
39	,	,											,	punct	37
40													_SP	dep	37
41	what	what		dt									WP	det	42
42	question	question		nn		nom							NN	attr	43
43	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	37
44	that	that		pro	dem	sg							DT	nsubj	43
45	?	?											.	punct	43
46													_SP	dep	9
47	the	the		dt	art								DT	det	48
48	question	question		nn		nom							NN	dobj	9
49	of	of	of+npostmod	in	nmod								IN	prep	48
50	what	what											WP	attr	51
51	is	be	whcls+incomp	vbmain	be	pres	simple	active	compcls	whcls	incomp		VBZ	pcomp	49
52	the	the		dt	art								DT	det	56
53	,	,											,	punct	56
54	uh	uh											UH	intj	56
55	relative	relative	attr+npremod	jj	attr								JJ	amod	56
56	probability	probability		nn		nom							NN	nsubj	51
57	of	of	of+npostmod	in	nmod								IN	prep	56
58	achieving	achieve	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	57
59	these	these		dt	dt_dem								DT	det	61
60	certain	certain	attr+npremod	jj	attr								JJ	amod	61
61	states	state		nn	pl	nom							NNS	dobj	58
62	conditional	conditional		jj	attr								JJ	amod	56
63	on	on	in+jcomp	in	jcomp								IN	prep	62
64	some	some		dt									DT	det	66
65	particular	particular	attr+npremod	jj	attr								JJ	amod	66
66	plan	plan		nn									NN	pobj	63
67	.	.											.	punct	9

#sentid = 380
0													_SP	dep	9
1	well	well											UH	intj	4
2	uh	uh											UH	intj	4
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	's	be		vbmain	be	pres	simple	active					VBZ	parataxis	9
5	,	,											,	punct	4
6													_SP	dep	4
7	it	it		pro	3rd	sg							PRP	nsubj	9
8	does	do		vbaux									VBZ	aux	9
9	have	have		vbmain	vblex	pres	simple	active					VB	ROOT	9
10	to	to		to									TO	aux	11
11	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	9
12	with	with	in+advl	in	advl								IN	prep	11
13	deadlines	deadline		nn	pl								NNS	pobj	12
14	.	.											.	punct	9

#sentid = 381
0													_SP	dep	2
1	which	which											WDT	nsubj	2
2	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	,	,											,	punct	2
4	essentially	essentially	rb+advl	rb	advl	ly							RB	advmod	2
5	,	,											,	punct	2
6	you	you		pro	2nd	sg							PRP	nsubj	9
7	're	be		vbaux									VBP	aux	9
8	essentially	essentially	rb+advl	rb	advl	ly	splaux						RB	advmod	9
9	fixing	fix	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	2
10	your	your		dt	poss								PRP$	poss	13
11	ch-	ch-	nn+npremod	nn			npremod						NN	compound	13
12	action	action	nn+npremod	nn		nom	npremod						NN	compound	13
13	choice	choice		nn									NN	dobj	9
14	,	,											,	punct	9
15	and	and		cc	phrs								CC	cc	9
16	then	then		rb	link								RB	advmod	17
17	saying	say		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	9
18	what	what											WP	attr	19
19	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	17
20	the	the		dt	art								DT	det	21
21	likelihood	likelihood		nn		nom							NN	nsubj	19
22	of	of	of+npostmod	in	nmod								IN	prep	21
23	various	various	attr+npremod	jj	attr								JJ	amod	24
24	trajectories	trajectory		nn	pl	nom							NNS	pobj	22
25	through	through	in+npostmod	in	nmod								IN	prep	24
26	state	state	nn+npremod	nn		nom	npremod						NN	compound	28
27	-	-											HYPH	punct	28
28	space	space		nn									NN	pobj	25
29	.	.											.	punct	2

#sentid = 382
0													_SP	dep	0
1	mhm	mhm											UH	intj	0

#sentid = 383
0													_SP	dep	18
1	okay	okay											UH	intj	14
2	,	,											,	punct	14
3	so	so		rb	link								RB	advmod	14
4	,	,											,	punct	14
5	the	the		dt	art								DT	det	6
6	fact	fact		nn									NN	nsubj	14
7	that	that		relpro	relpro_that								IN	mark	12
8	those	those		dt	dt_dem								DT	det	9
9	people	people		nn	pl								NNS	nsubj	12
10	do	do		vbaux									VBP	aux	12
11	n't	not											RB	neg	12
12	consider	consider	thatcls+ncomp	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	ncomp		VB	acl	6
13	planning	plan		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	dobj	12
14	is	be		vbmain	be	pres	simple	active	compcls		jcomp	compdel	VBZ	ccomp	18
15	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	16
16	of	of	rb+jjrbmod	rb	adjmod								RB	advmod	17
17	irrelevant	irrelevant		jj	pred								JJ	acomp	14
18	right	right											JJ	ROOT	18
19	?	?											.	punct	18

#sentid = 384
0	because	because		cs	cos								IN	mark	3
1	they	they		pro	pl								PRP	nsubj	3
2	just	just	rb+advl	rb	advl								RB	advmod	3
3	have	have		vbmain	vblex	pres	simple	active			causative		VBP	ROOT	3
4	machinery	machinery		nn		nom							NN	dobj	3
5	,	,											,	punct	4
6													_SP	dep	3
7	for	for	in+advl	in	advl								IN	prep	16
8	talking	talk	ingcls+incomp	vbmain	prepv	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	7
9	about	about	in+advl	in	advl								IN	prep	8
10	,	,											,	punct	7
11													_SP	dep	7
12	those	those		dt	dt_dem								DT	det	13
13	people	people		nn	pl								NNS	nsubj	16
14	do	do		vbaux									VBP	aux	16
15	n't	not											RB	neg	16
16	consider	consider	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VB	advcl	3
17	planning	plan		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	dobj	16
18	?	?											.	punct	16

#sentid = 385
0													_SP	dep	15
1	aggregation	aggregation		nn		nom							NN	dobj	0
2	,	,											,	punct	1
3	aggregation	aggregation	appos+npostmod	nn		nom	nappos						NN	appos	1
4													_SP	dep	1
5	the	the		dt	art								DT	det	6
6	people	people	appos+npostmod	nn	pl		nappos						NNS	appos	1
7	who	who		relpro	relpro_wh								WP	nsubj	8
8	look	look	finitecls+rel	vbmain	prepv	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	6
9	at	at	in+advl	in	advl								IN	prep	8
10	,	,											,	punct	9
11	aggregation	aggregation	appos+npostmod	nn		nom	nappos						NN	appos	6
12	and	and		cc	phrs								CC	cc	11
13	whatever	whatever											WDT	conj	11
14													_SP	dep	0
15	oh	oh											UH	ROOT	15
16	okay	okay											UH	intj	15
17	.	.											.	punct	15

#sentid = 386
0													_SP	dep	3
1	Markov	markov	nn+npremod	nn		proper	npremod						NNP	compound	2
2	chains	chain		nn	pl								NNS	nsubj	3
3	are	be		vbmain	be	pres	simple	active					VBP	ROOT	3
4													_SP	dep	3
5	mhm	mhm											UH	intj	3
6													_SP	dep	3
7	because	because		cs	cos								IN	mark	12
8	they	they		pro	pl								PRP	nsubj	12
9	're	be		vbaux									VBP	aux	12
10	just	just	rb+advl	rb	advl		splaux						RB	advmod	12
11	answer	answer		nn		nom							NN	dep	12
12	asking	ask		vbmain	vblex	pres	prog	active			causative		VBG	dep	3
13	questions	question		nn	pl	nom							NNS	dobj	12
14	about	about	in+npostmod	in	nmod								IN	prep	13
15	,	,											,	punct	14
16	how	how		comp	comp_wh								WRB	advmod	20
17	do	do		vbaux									VBP	aux	20
18	you	you		pro	2nd	sg							PRP	nsubj	20
19	effectively	effectively	rb+advl	rb	advl	ly	splaux						RB	advmod	20
20	compute	compute	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VB	pcomp	14
21	,	,											,	punct	20
22	trajectories	trajectory		nn	pl	nom							NNS	dobj	20
23	and	and		cc	phrs								CC	cc	22
24	state	state	nn+npremod	nn		nom	npremod						NN	compound	26
25	-	-											HYPH	punct	26
26	space	space		nn									NN	conj	22
27	with	with	in+npostmod	in	nmod								IN	prep	22
28	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	29
29	large	large	attr+npremod	jj	attr								JJ	amod	32
30	state	state	nn+npremod	nn		nom	npremod						NN	compound	32
31	-	-											HYPH	punct	32
32	spaces	space		nn	pl								NNS	pobj	27
33	by	by	in+advl	in	advl								IN	prep	20
34	,	,											,	punct	33
35	you	you		pro	2nd	sg							PRP	nsubj	36
36	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	33
37	,	,											,	punct	36
38	factoring	factor	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	33
39	into	into	in+advl	in	advl								IN	prep	38
40	events	event		nn	pl	nom							NNS	pobj	39
41	and	and		cc	phrs								CC	cc	40
42	(	(											-LRB-	punct	43
43	propositions	proposition		nn	pl	nom							NNS	conj	40
44	)	)											-RRB-	punct	43
45	and	and		cc	phrs								CC	cc	40
46	so	so	rb+jjrbmod	rb	othr								RB	advmod	47
47	on	on											RB	conj	40
48	.	.											.	punct	3

#sentid = 387
0													_SP	dep	34
1	mhm	mhm											UH	intj	34
2													_SP	dep	34
3	um	um											UH	intj	34
4	,	,											,	punct	34
5	so	so		rb	link								RB	advmod	34
6	you	you		pro	2nd	sg							PRP	nsubj	7
7	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	34
8	might	might		vbaux	mod	pos							MD	aux	34
9	uh	uh											UH	intj	34
10	you	you		pro	2nd	sg							PRP	nsubj	11
11	know	know		vbmain	vblex	nonfinite	simple	active					VB	parataxis	34
12	if	if		cs	cnd								IN	mark	14
13	someone	someone		nn	other	sg							NN	nsubj	14
14	handed	hand	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	34
15	you	you		pro	2nd	sg							PRP	dative	14
16	a	a		dt	art								DT	det	18
17	black	black	attr+npremod	jj	attr								JJ	amod	18
18	box	box		nn									NN	dobj	14
19	that	that		relpro	relpro_that	sg							WDT	nsubj	20
20	was	be	finitecls+rel	vbmain	be	past	simple	active	nmod_cls	thatcls	rel		VBD	relcl	18
21	good	good		jj	pred								JJ	acomp	20
22	at	at	in+jcomp	in	jcomp								IN	prep	21
23	that	that		dt	dt_dem								DT	det	24
24	kind	kind		nn									NN	pobj	22
25	of	of	of+npostmod	in	nmod								IN	prep	24
26	thing	thing		nn		nom							NN	pobj	25
27	you	you		pro	2nd	sg							PRP	nsubj	28
28	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	14
29	,	,											,	punct	34
30	w-	w-											XX	dep	34
31	would	would		vbaux	mod	prd							MD	aux	34
32	n't	not											RB	neg	34
33	it	it		pro	3rd	sg							PRP	nsubj	34
34	address	address		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	34
35	your	your		dt	poss								PRP$	poss	36
36	problem	problem		nn									NN	dobj	34
37	?	?											.	punct	34

#sentid = 388
0													_SP	dep	20
1	i	i		pro	1st	sg							PRP	nsubj	4
2	,	,											,	punct	4
3	would	would		vbaux	mod	prd							MD	aux	4
4	need	need		vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	20
5	to	to		to									TO	aux	6
6	see	see		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	4
7	the	the		dt	art								DT	det	9
8	black	black	attr+npremod	jj	attr								JJ	amod	9
9	box	box		nn									NN	dobj	6
10	to	to		to									TO	aux	11
11	be	be	tocls+advl	vbmain	be	nonfinite	simple	active	advlcls	tocls			VB	advcl	4
12	able	able		jj	pred								JJ	acomp	11
13	to	to		to									TO	aux	14
14	answer	answer	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	12
15	that	that		pro	dem	sg							DT	dobj	14
16	,	,											,	punct	20
17	um	um											UH	intj	20
18	i	i		pro	1st	sg							PRP	nsubj	20
19	have	have		vbaux									VBP	aux	20
20	looked	look		vbmain	prepv	pres	perf	active					VBN	ROOT	20
21	at	at	in+advl	in	advl								IN	prep	20
22	this	this		pro	dem	sg							DT	pobj	21
23	mostly	mostly	rb+advl	rb	advl	ly							RB	advmod	20
24	from	from	in+advl	in	advl								IN	prep	20
25	the	the		dt	art								DT	det	28
26	Markov	markov	nn+npremod	nn		proper	npremod						NNP	compound	27
27	process	process	nn+npremod	nn		nom	npremod						NN	compound	28
28	literature	literature		nn		nom							NN	pobj	24
29	in	in	in+advl	in	advl								IN	prep	20
30	terms	term		nn	pl								NNS	pobj	29
31	of	of	of+npostmod	in	nmod								IN	prep	30
32	,	,											,	punct	31
33	using	use	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	31
34	it	it		pro	3rd	sg							PRP	dobj	33
35	for	for	in+advl	in	advl								IN	prep	33
36	planning	planning		nn		nom							NN	pobj	35
37	,	,											,	punct	31
38	not	not											RB	neg	31
39	in	in		in	in_othr								IN	prep	29
40	terms	term		nn	pl								NNS	pobj	39
41	of	of	of+npostmod	in	nmod								IN	prep	40
42	using	use	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	41
43	it	it		pro	3rd	sg							PRP	dobj	42
44	for	for	in+advl	in	advl								IN	prep	42
45	,	,											,	punct	44
46	a	a		dt	art								DT	det	48
47	particular	particular	attr+npremod	jj	attr								JJ	amod	48
48	domain	domain		nn									NN	pobj	44
49	as	as	in+npostmod	in	nmod								IN	prep	48
50	a	a		dt	art								DT	det	52
51	black	black	attr+npremod	jj	attr								JJ	amod	52
52	box	box		nn									NN	pobj	49
53	.	.											.	punct	20

#sentid = 389
0	so	so		rb	othr								RB	advmod	3
1	,	,											,	punct	3
2	i-	i-											PRP	dep	3
3	thi-	thi-											XX	ROOT	3
4	the	the		dt	art								DT	det	6
5	the	the		dt	art								DT	det	6
6	stuff	stuff		nn									NN	dobj	3
7	that	that		pro	dem	sg							WDT	dobj	10
8	i	i		pro	1st	sg							PRP	nsubj	10
9	've	've		vbaux									VBP	aux	10
10	read	read	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBN	relcl	6
11	about	about	in+advl	in	advl								IN	prep	10
12	Markov	markov	nn+npremod	nn		proper	npremod						NNP	compound	14
13	decision	decision	nn+npremod	nn			npremod						NN	compound	14
14	processes	process		nn	pl	nom							NNS	pobj	11
15	and	and		cc									CC	cc	3
16	,	,											,	punct	3
17	using	use	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	22
18	them	they		pro	pl								PRP	dobj	17
19	for	for	in+advl	in	advl								IN	prep	17
20	planning	planning		nn		nom							NN	pobj	19
21	,	,											,	punct	22
22	made	make		vbmain	vblex	past	simple	active					VBD	conj	3
23	it	it		pro	3rd	sg							PRP	nsubj	24
24	clear	clear											JJ	ccomp	22
25	that	that		cs	cs_othr								IN	mark	27
26	you	you		pro	2nd	sg							PRP	nsubj	27
27	had	have	finitecls+advl	vbmain	vblex	past	simple	active	advlcls				VBD	advcl	24
28	to	to		to									TO	aux	29
29	think	think		vbmain	prepv	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	27
30	about	about	in+advl	in	advl								IN	prep	29
31	,	,											,	punct	30
32	the	the		dt	art								DT	det	33
33	deadlines	deadline		nn	pl								NNS	pobj	30
34	separately	separately	rb+advl	rb	advl	ly							RB	advmod	29
35	in	in		cs	cs_othr								IN	mark	38
36	order	order		nn		nom							NN	dep	38
37	to	to		to									TO	aux	38
38	generate	generate		vbmain	vblex	nonfinite	simple	active	advlcls		other_advl		VB	advcl	27
39	this	this		dt	dt_dem								DT	det	40
40	type	type		nn									NN	dobj	38
41	of	of	of+npostmod	in	nmod								IN	prep	40
42	real	real	attr+npremod	jj	attr								JJ	amod	44
43	-	-											HYPH	punct	44
44	time	time	nn+npremod	nn			npremod						NN	compound	45
45	plan	plan		nn									NN	pobj	41
46	and	and		cc	cls								CC	cc	27
47	that	that											IN	mark	50
48	it	it		pro	3rd	sg							PRP	nsubj	50
49	would	would		vbaux	mod	prd							MD	aux	50
50	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	27
51	a	a		dt	art								DT	det	52
52	problem	problem		nn									NN	attr	50
53	if	if		cs	cnd								IN	mark	57
54	you	you		pro	2nd	sg							PRP	nsubj	57
55	did	do		vbaux									VBD	aux	57
56	n't	not											RB	neg	57
57	know	know	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VB	advcl	50
58	what	what											WP	attr	60
59	those	those		pro	dem	pl							DT	nsubj	60
60	were	be	whcls+vcomp	vbmain	be	past	simple	active	compcls	whcls	vcomp		VBD	ccomp	57
61	in	in	in+advl	in	advl								IN	prep	57
62	advance	advance		nn		nom							NN	pobj	61
63	.	.											.	punct	3

#sentid = 390
0	not	not											RB	neg	2
1	to	to											TO	dep	2
2	mention	mention		cc	phrs	nonfinite	simple	active		tocls			VB	cc	4
3	the	the		dt	art								DT	det	4
4	fact	fact		nn									NN	ROOT	4
5	that	that		relpro	relpro_that								IN	mark	18
6	if	if		cs	cnd								IN	mark	8
7	you	you		pro	2nd	sg							PRP	nsubj	8
8	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	18
9	to	to		to									TO	aux	10
10	think	think		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	8
11	in	in	in+advl	in	advl								IN	prep	10
12	terms	term		nn	pl								NNS	pobj	11
13	of	of	of+npostmod	in	nmod								IN	prep	12
14	state	state	nn+npremod	nn		nom	npremod						NN	compound	15
15	history	history		nn		nom							NN	pobj	13
16	then	then		rb	link								RB	advmod	18
17	you	you		pro	2nd	sg							PRP	nsubj	18
18	have	have	thatcls+ncomp	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	ncomp		VBP	acl	4
19	to	to		to									TO	aux	20
20	add	add		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	18
21	a	a		dt	art								DT	det	22
22	lot	lot		nn									NN	dobj	20
23	of	of	of+npostmod	in	nmod								IN	prep	22
24	extra	extra	attr+npremod	jj	attr								JJ	amod	25
25	features	feature		nn	pl								NNS	pobj	23
26	in	in		cs	cs_othr								IN	mark	31
27	order	order		nn		nom							NN	dep	31
28	to	to		to									TO	aux	31
29	,	,											,	punct	31
30	uniquely	uniquely	rb+advl	rb	advl	ly	splaux						RB	advmod	31
31	specify	specify		vbmain	vblex	nonfinite	simple	active	advlcls		other_advl		VB	advcl	18
32	the	the		dt	art								DT	det	34
33	conditional	conditional	attr+npremod	jj	attr								JJ	amod	34
34	probabilities	probability		nn	pl	nom							NNS	dobj	31
35	.	.											.	punct	4

#sentid = 391
0	so	so		rb	link								RB	advmod	28
1	,	,											,	punct	28
2	if	if		cs	cnd								IN	mark	4
3	there	there											EX	expl	4
4	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBZ	advcl	28
5	some	some		dt									DT	det	6
6	way	way		nn									NN	attr	4
7	that	that		rb	advl								WRB	advmod	9
8	they	they		pro	pl								PRP	nsubj	9
9	get	get	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	6
10	around	around	in+advl	in	advl								IN	prep	9
11	all	all											DT	pobj	10
12	of	of		in	in_othr								IN	prep	11
13	this	this		pro	dem	sg							DT	pobj	12
14	and	and		cc	phrs								CC	cc	9
15	still	still	rb+advl	rb	advl								RB	advmod	16
16	end	end		vbmain	phrsv	nonfinite	simple	active					VB	conj	9
17	up	up		rb	prtcle								RP	prt	16
18	with	with	in+advl	in	advl								IN	prep	16
19	real	real	attr+npremod	jj	attr								JJ	amod	21
20	-	-											HYPH	punct	21
21	time	time	nn+npremod	nn			npremod						NN	compound	23
22	control	control	nn+npremod	nn			npremod						NN	compound	23
23	plans	plan		nn	pl								NNS	pobj	18
24	then	then		rb	link								RB	advmod	28
25	i	i		pro	1st	sg							PRP	nsubj	28
26	'd	would		vbaux	mod								MD	aux	28
27	certainly	certainly	rb+advl	rb	advl	ly	splaux						RB	advmod	28
28	like	like		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	28
29	to	to		to									TO	aux	32
30	,	,											,	punct	32
31	be	be		vbaux									VB	auxpass	32
32	pointed	point	tocls+vcomp	vbmain	prepv	nonfinite	simple	pasv_agls	compcls	tocls	vcomp		VBN	xcomp	28
33	to	to	in+advl	in	advl								IN	prep	32
34	that	that		pro	dem	sg							DT	pobj	33
35	.	.											.	punct	28

#sentid = 392
0													_SP	dep	6
1	well	well											UH	intj	6
2	,	,											,	punct	6
3	i	i		pro	1st	sg							PRP	nsubj	6
4	do	do		vbaux									VBP	aux	6
5	n't	not											RB	neg	6
6	think	think		vbmain	vblex	pres	simple	active					VB	ROOT	6
7	anyone	anyone		nn	other	sg							NN	nsubj	9
8	would	would		vbaux	mod	prd							MD	aux	9
9	suggest	suggest	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	6
10	that	that		comp	comp_that								IN	mark	12
11	they	they		pro	pl								PRP	nsubj	12
12	solve	solve	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	9
13	your	your		dt	poss								PRP$	poss	15
14	whole	whole	attr+npremod	jj	attr								JJ	amod	15
15	problem	problem		nn									NN	dobj	12
16	for	for	in+advl	in	advl								IN	prep	12
17	you	you		pro	2nd	sg							PRP	pobj	16
18	,	,											,	punct	6
19													_SP	dep	6
20	right	right											UH	intj	6
21													_SP	dep	6
22	okay	okay											UH	intj	26
23	,	,											,	punct	26
24	the	the		dt	art								DT	det	25
25	question	question		nn		nom							NN	nsubj	26
26	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	6
27	whether	whether		cs	cs_othr								IN	mark	46
28	s-	s-											XX	punct	46
29	you	you		pro	2nd	sg							PRP	nsubj	30
30	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	46
31	,	,											,	punct	46
32	some	some											DT	nsubj	46
33	of	of		in	in_othr								IN	prep	32
34	the	the		dt	art								DT	det	35
35	technique	technique		nn									NN	pobj	33
36	,	,											,	punct	35
37	that	that		relpro	relpro_that	sg							WDT	nsubj	38
38	comes	come	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	35
39	out	out	in+advl	in	advl								IN	prep	38
40	of	of		in	in_othr								IN	prep	39
41	that	that		dt	dt_dem								DT	det	42
42	literature	literature		nn		nom							NN	pobj	40
43	,	,											,	punct	46
44	uh	uh											UH	intj	46
45	,	,											,	punct	46
46	is	be		vbmain	be	pres	simple	active	compcls		other_advl	compdel	VBZ	ccomp	26
47	,	,											,	punct	46
48	related	related		jj	pred								JJ	acomp	46
49	enough	enough	rb+jjrbmod	rb	adjmod								RB	advmod	48
50													_SP	dep	26
51	that	that											IN	mark	53
52	,	,											,	punct	53
53													_SP	dep	26
54	right	right											UH	intj	53
55	.	.											.	punct	26
56													_SP	dep	6
57	that	that		comp	comp_that								IN	mark	60
58	you	you		pro	2nd	sg							PRP	dep	60
59	you	you		pro	2nd	sg							PRP	nsubj	60
60	steal	steal		vbmain	vblex	pres	simple	active	compcls	thatcls			VBP	ccomp	56
61	ideas	idea		nn	pl								NNS	dobj	60
62	from	from	in+advl	in	advl								IN	prep	60
63	them	they		pro	pl								PRP	pobj	62
64	.	.											.	punct	6

#sentid = 393
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	1

#sentid = 394
0	yeah	yeah											UH	ROOT	0
1	,	,											,	punct	0
2	no	no											UH	intj	0
3	,	,											,	punct	0
4	n-	n-											XX	punct	0
5	i	i		pro	1st	sg							PRP	nsubj	6
6	feel	feel		vbmain	prepv	pres	simple	active					VBP	conj	0
7	like	like		cs	cs_othr								IN	mark	11
8	this	this		pro	dem	sg							DT	nsubjpass	11
9	is	be		vbaux									VBZ	auxpass	11
10	not	not											RB	neg	11
11	done	do	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls		other_advl		VBN	advcl	6
12	i	i		pro	1st	sg							PRP	nsubj	13
13	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	0
14	if	if		cs	cnd								IN	mark	18
15	,	,											,	punct	18
16	you	you		pro	2nd	sg							PRP	nsubj	18
17	can	can		vbaux	mod	pos							MD	aux	18
18	ask	ask	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		conditional		VB	advcl	0
19	my	my		dt	poss								PRP$	poss	20
20	advisors	advisor		nn	pl	nom							NNS	dobj	18
21	that	that		comp	comp_that								IN	mark	26
22	every	every		dt									DT	det	24
23	other	other	attr+npremod	jj	attr								JJ	amod	24
24	week	week		nn									NN	npadvmod	26
25	i	i		pro	1st	sg							PRP	nsubj	26
26	come	come	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	18
27	into	into	in+advl	in	advl								IN	prep	26
28	a	a		dt	art								DT	det	29
29	meeting	meeting		nn		nom							NN	pobj	27
30	and	and		cc	phrs								CC	cc	26
31	say	say		vbmain	vblex	nonfinite	simple	active					VB	conj	26
32	well	well											UH	intj	36
33	,	,											,	punct	36
34	we	we		pro	1st								PRP	nsubj	36
35	can	can		vbaux	mod	pos							MD	aux	36
36	do	do	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	31
37	this	this		pro	dem	sg							DT	dobj	36
38	with	with	in+advl	in	advl								IN	prep	36
39	a	a		dt	art								DT	det	42
40	Markov	markov	nn+npremod	nn		proper	npremod						NNP	compound	42
41	decision	decision	nn+npremod	nn			npremod						NN	compound	42
42	process	process		nn		nom							NN	pobj	38
43	and	and		cc									CC	cc	0
44	the	the		dt	art								DT	det	45
45	fact	fact		nn									NN	nsubj	46
46	is	be		vbmain	be	pres	simple	active					VBZ	conj	0
47	we	we		pro	1st								PRP	nsubj	48
48	had	have	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	46
49	to	to		to									TO	aux	50
50	choose	choose		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	48
51	one	one											CD	nummod	53
52	particular	particular	attr+npremod	jj	attr								JJ	amod	53
53	route	route		nn									NN	dobj	50
54	for	for	in+npostmod	in	nmod								IN	prep	53
55	this	this		pro	dem	sg							DT	pobj	54
56	,	,											,	punct	55
57	work	work	appos+npostmod	nn			nappos						NN	appos	55
58	and	and		cc	cls								CC	cc	48
59	i	i		pro	1st	sg							PRP	nsubj	62
60	do	do		vbaux									VBP	aux	62
61	n't	not											RB	neg	62
62	feel	feel		vbmain	prepv	pres	simple	active					VB	conj	48
63	like	like		cs	cs_othr								IN	mark	66
64	it	it		pro	3rd	sg							PRP	nsubjpass	66
65	's	be		vbaux									VBZ	auxpass	66
66	done	do	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls		other_advl		VBN	advcl	62
67	yet	yet	rb+advl	rb	advl								RB	advmod	66
68	so	so		cc	cls								CC	cc	62
69	i	i		pro	1st	sg							PRP	nsubj	71
70	personally	personally	rb+advl	rb	advl	ly							RB	advmod	71
71	plan	plan		vbmain	vblex	pres	simple	active					VBP	conj	62
72	to	to		to									TO	aux	73
73	continue	continue	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	71
74	to	to		to									TO	aux	75
75	look	look	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	73
76	,	,											,	punct	75
77	at	at	in+advl	in	advl								IN	prep	75
78													_SP	dep	77
79	this	this		dt	dt_dem								DT	det	80
80	literature	literature		nn		nom							NN	pobj	77
81	and	and		cc	phrs								CC	cc	75
82	see	see		vbmain	vblex	nonfinite	simple	active					VB	conj	75
83	what	what											WP	nsubj	84
84	happens	happen	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	82
85	.	.											.	punct	46

#sentid = 395
0													_SP	dep	3
1	were	be		vbaux									VBD	auxpass	3
2	you	you		pro	2nd	sg							PRP	nsubjpass	3
3	driven	drive		vbmain	vblex	past	simple	pasv_agls					VBN	ROOT	3
4	to	to		to									TO	aux	5
5	make	make	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	3
6	these	these		dt	dt_dem								DT	det	7
7	decisions	decision		nn	pl								NNS	dobj	5
8	because	because		cs	cos								IN	mark	10
9	you	you		pro	2nd	sg							PRP	nsubj	10
10	had	have	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		causative		VBD	advcl	3
11	an	an		dt									DT	det	12
12	application	application		nn		nom							NN	dobj	10
13	,	,											,	punct	3
14	or	or		cc	phrs								CC	cc	3
15	were	be		vbaux									VBD	auxpass	17
16	you	you		pro	2nd	sg							PRP	nsubjpass	17
17	driven	drive		vbmain	vblex	past	simple	pasv_agls					VBN	conj	3
18	,	,											,	punct	17
19	i	i		pro	1st	sg							PRP	nsubj	20
20	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	22
21	w-	w-											XX	dep	22
22	w-	w-											XX	dep	26
23	why	why		rb	othr								WRB	advmod	26
24	would	would		vbaux	mod	prd							MD	aux	26
25	n't	not											RB	neg	26
26	you	you		pro	2nd	sg							PRP	dep	17
27													_SP	dep	17

#sentid = 396
0	well	well											UH	intj	2
1	,	,											,	punct	2
2	one	one											CD	ROOT	2
3	of	of		in	in_othr								IN	prep	2
4	the	the		dt	art								DT	det	5
5	reasons	reason		nn	pl								NNS	pobj	3
6													_SP	dep	7
7	wonder	wonder											XX	dep	12
8	over	over	in+advl	in	advl								IN	prep	12
9	this	this		pro	dem	sg							DT	pobj	8
10	,	,											,	punct	12
11	this	this		pro	dem	sg							DT	nsubj	12
12	seems	seem		vbmain	vblex	pres	simple	active	nmod_cls		ncomp	reldel	VBZ	acl	2
13	like	like	in+advl	in	advl								IN	prep	12
14	a	a		dt	art								DT	det	18
15	pretty	pretty	rb+jjrbmod	rb	adjmod								RB	advmod	16
16	central	central	attr+npremod	jj	attr								JJ	amod	18
17	,	,											,	punct	18
18	issue	issue		nn									NN	pobj	13
19	.	.											.	punct	2

#sentid = 397
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	1

#sentid = 398
0	the	the											DT	intj	12
1	,	,											,	punct	12
2	but	but		cc	phrs								CC	cc	12
3	one	one		pro	other	pl							CD	nsubj	12
4	of	of		in	in_othr								IN	prep	3
5	the	the		dt	art								DT	det	6
6	reasons	reason		nn	pl								NNS	pobj	4
7	that	that	rb+advl	rb	advl								WDT	advmod	9
8	we	we		pro	1st								PRP	nsubj	9
9	made	make	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel		VBD	relcl	6
10	this	this		dt	dt_dem								DT	det	11
11	decision	decision		nn									NN	dobj	9
12	was	be		vbmain	be	past	simple	active					VBD	ROOT	12
13	because	because		cs	cos								IN	mark	16
14	,	,											,	punct	16
15	we	we		pro	1st								PRP	nsubj	16
16	were	be		vbmain	be	past	simple	active	compcls		causative	compdel	VBD	ccomp	26
17	not	not											RB	neg	16
18	,	,											,	punct	16
19	out	out	rb+advl	rb	advl								RB	advmod	16
20	to	to		to									TO	aux	21
21	get	get	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls			VB	xcomp	19
22	the	the		dt	art								DT	det	24
23	optimal	optimal	attr+npremod	jj	attr								JJ	amod	24
24	plan	plan		nn									NN	dobj	21
25	we	we		pro	1st								PRP	nsubj	26
26	were	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	12
27	out	out	rb+advl	rb	advl								RB	advmod	29
28	to	to		to									TO	aux	29
29	get	get	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	26
30	something	something		nn	other	nom							NN	dobj	29
31	that	that		relpro	relpro_that	sg							WDT	nsubj	33
32	,	,											,	punct	33
33	was	be	finitecls+rel	vbmain	be	past	simple	active	nmod_cls	thatcls	rel		VBD	relcl	30
34	sufficient	sufficient		jj	pred								JJ	acomp	33
35	for	for	in+jcomp	in	jcomp								IN	prep	34
36	our	our											PRP$	nmod	39
37	_	_											XX	punct	36
38	the	the		dt	art								DT	det	39
39	guarantees	guarantee		nn	pl	nom							NNS	pobj	35
40	that	that		pro	dem	sg							WDT	dobj	42
41	we	we		pro	1st								PRP	nsubj	42
42	wanted	want	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel		VBD	relcl	39
43	that	that		relpro	relpro_that	sg							WDT	nsubj	44
44	was	be	finitecls+rel	vbmain	be	past	simple	active	nmod_cls	thatcls	rel		VBD	relcl	39
45	able	able		jj	pred								JJ	acomp	44
46	to	to		to									TO	aux	47
47	reach	reach	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	45
48	the	the		dt	art								DT	det	49
49	goals	goal		nn	pl	nom							NNS	dobj	47
50	.	.											.	punct	12

#sentid = 399
0													_SP	dep	8
1	and	and		cc	phrs								CC	cc	8
2	so	so		rb	link								RB	advmod	8
3													_SP	dep	2
4	but	but		cc	phrs								CC	cc	8
5	would	would		vbaux	mod	prd							MD	aux	8
6	n't	not											RB	neg	8
7	that	that		pro	dem	sg							DT	nsubj	8
8	vary	vary		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	8
9	with	with	in+advl	in	advl								IN	prep	8
10	that	that		dt	dt_dem								DT	det	11
11	domain	domain		nn									NN	pobj	9
12	,	,											,	punct	8
13	from	from	in+advl	in	advl								IN	prep	8
14	domain	domain		nn									NN	pobj	13
15	to	to		in	in_othr								IN	prep	13
16													_SP	dep	15
17	domain	domain		nn									NN	pobj	15
18	?	?											.	punct	8

#sentid = 400
0													_SP	dep	6
1	what	what											WP	dep	6
2	's	be		vbmain	be	pres	simple	active					VBZ	dep	6
3	,	,											,	punct	6
4	what	what											WP	nsubj	6
5	would	would		vbaux	mod	prd							MD	aux	6
6	vary	vary		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	6
7	?	?											.	punct	6

#sentid = 401
0													_SP	dep	2
1	your	your		dt	poss								PRP$	poss	2
2	decision	decision		nn									NN	ROOT	2
3	about	about	in+npostmod	in	nmod								IN	prep	2
4	what	what											WP	dep	9
5	,	,											,	punct	9
6	which	which		dt									WDT	det	7
7	way	way		nn									NN	npadvmod	9
8	to	to		to									TO	aux	9
9	go	go		vbmain	vblex	nonfinite	simple	active	compcls	tocls	incomp		VB	pcomp	3
10	.	.											.	punct	2

#sentid = 402
0	i	i		pro	1st	sg							PRP	nsubj	1
1	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	16
2	if	if		cs	cnd								IN	mark	6
3	you	you		pro	2nd	sg							PRP	nsubj	6
4	're	be		vbaux									VBP	aux	6
5	not	not											RB	neg	6
6	going	go	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		conditional		VBG	advcl	16
7	to	to		to									TO	aux	8
8	take	take	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	6
9	a	a		dt	art								DT	det	11
10	fundamental	fundamental	attr+npremod	jj	attr								JJ	amod	11
11	view	view		nn									NN	dobj	8
12	would	would		vbaux	mod	prd							MD	aux	16
13	n't	not											RB	neg	16
14	your	your		dt	poss								PRP$	poss	15
15	decision	decision		nn									NN	nsubj	16
16	vary	vary		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	16
17	from	from	in+advl	in	advl								IN	prep	16
18	application	application	nn+npremod	nn		nom	npremod						NN	compound	19
19	domain	domain		nn									NN	pobj	17
20	to	to	in+advl	in	advl								IN	prep	16
21													_SP	dep	20
22	(	(											-LRB-	pobj	20
23	xx	xx											XX	pobj	20
24	)	)											-RRB-	punct	16
25													_SP	dep	16

#sentid = 403
0	right	right											UH	intj	11
1	so	so		rb	othr								RB	advmod	11
2	,	,											,	punct	11
3	yeah	yeah											UH	intj	11
4	so	so		cc									RB	cc	11
5	so	so		rb	othr								RB	advmod	11
6	one	one											CD	intj	11
7	,	,											,	punct	11
8	future	future											JJ	nmod	11
9	,	,											,	punct	11
10	um	um											UH	intj	11
11	un-	un-											XX	ROOT	11
12	when	when		rb	advl								WRB	advmod	14
13	i	i		pro	1st	sg							PRP	nsubj	14
14	talk	talk	finitecls+advl	vbmain	prepv	pres	simple	active	advlcls	whcls			VBP	advcl	11
15	about	about	in+advl	in	advl								IN	prep	14
16	unhandled	unhandle	attr+npremod	jj	attr	ed							VBN	amod	17
17	states	state		nn	pl	nom							NNS	pobj	15
18	which	which											WDT	pobj	24
19	hopefully	hopefully	rb+advl	rb	advl	ly							RB	advmod	22
20	i	i		pro	1st	sg							PRP	nsubj	22
21	'll	will		vbaux	mod								MD	aux	22
22	get	get	finitecls+rel	vbmain	phrsv	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	17
23	around	around		rb	prtcle								RP	prt	22
24	to	to	in+advl	in	advl								IN	prep	22
25	eventually	eventually	rb+advl	rb	advl	ly							RB	advmod	22
26	,	,											,	punct	11
27	um	um											UH	meta	11
28	,	,											,	punct	27
29	i-	i-											PRP	meta	11

#sentid = 404
0	one	one		pro	other	pl							CD	nsubj	12
1	of	of		in	in_othr								IN	prep	0
2	the	the		dt	art								DT	det	3
3	things	thing		nn	pl	nom							NNS	pobj	1
4	that	that		pro	dem	sg							WDT	pobj	7
5	it	it		pro	3rd	sg							PRP	nsubj	6
6	talks	talk	finitecls+rel	vbmain	prepv	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	3
7	about	about	in+advl	in	advl								IN	prep	6
8	from	from	in+advl	in	advl								IN	prep	6
9	a	a		dt	art								DT	det	11
10	general	general	attr+npremod	jj	attr								JJ	amod	11
11	perspective	perspective		nn									NN	pobj	8
12	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	12
13	how	how		comp	comp_wh								WRB	advmod	16
14	do	do		vbaux									VBP	aux	16
15	you	you		pro	2nd	sg							PRP	nsubj	16
16	plug	plug	whcls+vcomp	vbmain	phrsv	pres	simple	active	compcls	whcls	vcomp		VB	ccomp	12
17	in	in		rb	prtcle								RP	prt	16
18	different	different	attr+npremod	jj	attr								JJ	amod	20
19	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	20
20	models	model		nn	pl								NNS	dobj	16
21	,	,											,	punct	16
22	depending	depend		vbmain	advl	nonfinite	simple	active		ingcls			VBG	prep	16
23	on	on	in+advl	in	advl								IN	prep	22
24	how	how		rb	othr								WRB	advmod	26
25	much	much	attr+npremod	jj	attr								JJ	amod	26
26	time	time		nn									NN	dobj	28
27	you	you		pro	2nd	sg							PRP	nsubj	28
28	have	have		vbmain	vblex	pres	simple	active	compcls		incomp	compdel	VBP	pcomp	23
29	.	.											.	punct	12

#sentid = 405
0	so	so		rb	link								RB	advmod	11
1	the	the		dt	art								DT	det	2
2	way	way		nn									NN	npadvmod	11
3	i	i		pro	1st	sg							PRP	nsubj	5
4	would	would		vbaux	mod	prd							MD	aux	5
5	see	see	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	2
6	it	it		pro	3rd	sg							PRP	dobj	5
7	,	,											,	punct	11
8	this	this		pro	dem	sg							DT	nsubj	11
9	would	would		vbaux	mod	prd							MD	aux	11
10	probably	probably	rb+advl	rb	advl	ly	splaux						RB	advmod	11
11	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	11
12	the	the		dt	art								DT	det	15
13	slowest	slow	attr+npremod	jj	attr								JJS	amod	15
14	,	,											,	punct	15
15	version	version		nn									NN	attr	11
16	that	that		pro	dem	sg							WDT	dobj	19
17	we	we		pro	1st								PRP	nsubj	19
18	would	would		vbaux	mod	prd							MD	aux	19
19	have	have	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel		VB	relcl	15
20	.	.											.	punct	11

#sentid = 406
0	in	in	in+advl	in	advl								IN	prep	19
1	terms	term		nn	pl								NNS	pobj	0
2	of	of	of+npostmod	in	nmod								IN	prep	1
3	uh	uh											UH	intj	2
4	,	,											,	punct	2
5	when	when		rb	advl								WRB	advmod	7
6	we	we		pro	1st								PRP	nsubj	7
7	start	start	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	2
8	talking	talk	ingcls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	7
9	about	about	in+advl	in	advl								IN	prep	8
10	real	real	attr+npremod	jj	attr								JJ	amod	12
11	-	-											HYPH	punct	12
12	time	time	nn+npremod	nn			npremod						NN	compound	13
13	bounds	bound		nn	pl								NNS	pobj	9
14	so	so		rb	link								RB	advmod	19
15	one	one		pro	other	pl							CD	nsubj	19
16	of	of		in	in_othr								IN	prep	15
17	our	our		dt	poss								PRP$	poss	18
18	motivations	motivation		nn	pl	nom							NNS	pobj	16
19	was	be		vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	42
20	to	to		to									TO	aux	21
21	think	think	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	19
22	in	in	in+advl	in	advl								IN	prep	21
23	terms	term		nn	pl								NNS	pobj	22
24	of	of	of+npostmod	in	nmod								IN	prep	23
25	something	something		nn	other	nom							NN	pobj	24
26	that	that		pro	dem	sg							WDT	dobj	31
27	,	,											,	punct	31
28	we	we		pro	1st								PRP	nsubj	31
29	could	could		vbaux	mod	pos							MD	aux	31
30	later	later	rb+advl	rb	advl		splaux						RB	advmod	31
31	say	say	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel		VB	relcl	25
32	okay	okay											UH	intj	35
33	we	we		pro	1st								PRP	nsubj	35
34	're	be		vbaux									VBP	aux	35
35	gon	go		vbaux									TO	aux	37
36	na	to		vbaux									TO	aux	37
37	stop	stop		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	31
38	here	here	rb+advl	rb	advl								RB	advmod	37
39	now	now	rb+advl	rb	advl								RB	advmod	37
40	the-	the-											DT	appos	25
41	i	i		pro	1st	sg							PRP	nsubj	42
42	know	know		vbmain	vblex	pres	simple	active					VBP	ROOT	42
43	there	there											EX	expl	44
44	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	42
45	,	,											,	punct	44
46	um	um											UH	intj	44
47	,	,											,	punct	44
48	ways	way		nn	pl								NNS	attr	44
49	to	to		to									TO	aux	50
50	impose	impose	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	48
51	time	time	nn+npremod	nn			npremod						NN	compound	52
52	limits	limit		nn	pl								NNS	dobj	50
53	on	on	in+advl	in	advl								IN	prep	50
54	,	,											,	punct	50
55	Markov	markov	nn+npremod	nn		proper	npremod						NNP	compound	57
56	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	57
57	models	model		nn	pl								NNS	dobj	50
58	but	but		cc	cls								CC	cc	42
59	,	,											,	punct	42
60	it	it		pro	3rd	sg							PRP	nsubj	61
61	's	be		vbmain	be	pres	simple	active					VBZ	conj	42
62	difficult	difficult		jj	pred								JJ	acomp	61
63	when	when		rb	advl								WRB	advmod	65
64	you	you		pro	2nd	sg							PRP	nsubj	65
65	start	start	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	61
66	exploding	explode	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	65
67	the	the		dt	art								DT	det	68
68	size	size		nn									NN	dobj	66
69	of	of	of+npostmod	in	nmod								IN	prep	68
70	things	thing		nn	pl	nom							NNS	pobj	69
71	in	in	in+advl	in	advl								IN	prep	66
72	this	this		dt	dt_dem								DT	det	73
73	type	type		nn									NN	pobj	71
74	of	of	of+npostmod	in	nmod								IN	prep	73
75	way	way		nn									NN	pobj	74
76	to	to		to									TO	aux	77
77	think	think	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	65
78	that	that		comp	comp_that								IN	mark	83
79	it	it		pro	3rd	sg							PRP	nsubj	83
80	would	would		vbaux	mod	prd							MD	aux	83
81	,	,											,	punct	83
82	also	also	rb+advl	rb	advl		splaux						RB	advmod	83
83	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	77
84	able	able		jj	pred								JJ	acomp	83
85	to	to		to									TO	aux	86
86	come	come	tocls+jcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	84
87	up	up		rb	prtcle								RP	prt	86
88	with	with	in+advl	in	advl								IN	prep	86
89	any	any		dt									DT	det	90
90	sort	sort		nn									NN	pobj	88
91	of	of	of+npostmod	in	nmod								IN	prep	90
92	accurate	accurate	attr+npremod	jj	attr								JJ	amod	93
93	plan	plan		nn									NN	pobj	91
94	.	.											.	punct	61

#sentid = 407
0	so	so											RB	ROOT	0
1	...	...											:	punct	0

#sentid = 408
0													_SP	dep	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	a	a		dt	art								DT	det	4
4	question	question		nn		nom							NN	dobj	2
5	of	of	of+npostmod	in	nmod								IN	prep	4
6	a	a		dt	art								DT	det	9
7	quite	quite	rb+jjrbmod	rb	adjmod								RB	advmod	8
8	different	different	attr+npremod	jj	attr								JJ	amod	9
9	sort	sort		nn									NN	pobj	5
10	,	,											,	punct	4
11	uh	uh											UH	intj	4
12													_SP	dep	4
13	yes	yes											UH	intj	4
14													_SP	dep	2
15	relating	relate	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	2
16	to	to	in+advl	in	advl								IN	prep	15
17	the	the		dt	art								DT	det	18
18	way	way		nn									NN	pobj	16
19	you	you		pro	2nd	sg							PRP	nsubj	20
20	bring	bring	finitecls+rel	vbmain	phrsv	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	18
21	in	in		rb	prtcle								RP	prt	20
22	the	the		dt	art								DT	det	24
23	world	world	nn+npremod	nn			npremod						NN	compound	24
24	model	model		nn									NN	dobj	20
25	,	,											,	punct	24
26	the	the		dt	art								DT	det	27
27	environment	environment		nn		nom							NN	conj	24
28	and	and		cc	phrs								CC	cc	27
29	and	and		cc	phrs								CC	cc	27
30	the	the		dt	art								DT	det	31
31	probabilities	probability		nn	pl	nom							NNS	conj	27
32	that	that		relpro	relpro_that	sg							WDT	nsubjpass	35
33	are	be		vbaux									VBP	auxpass	35
34	somehow	somehow	rb+advl	rb	advl								RB	advmod	35
35	associated	associate	finitecls+rel	vbmain	vblex	pres	simple	pasv_agls	nmod_cls	thatcls	rel		VBN	relcl	31
36	with	with	in+advl	in	advl								IN	prep	35
37	your	your		dt	poss								PRP$	poss	42
38	,	,											,	punct	39
39													_SP	dep	42
40	right	right											UH	intj	42
41													_SP	dep	42
42	operation	operation		nn		nom							NN	pobj	36
43	within	within	in+npostmod	in	nmod								IN	prep	42
44	that	that		pro	dem	sg							DT	pobj	43
45													_SP	dep	18
46	mhm	mhm											UH	intj	2
47													_SP	dep	2
48	and	and		cc	phrs								CC	cc	2
49	thinking	think		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	2
50	in	in	in+advl	in	advl								IN	prep	49
51	terms	term		nn	pl								NNS	pobj	50
52	of	of	of+npostmod	in	nmod								IN	prep	51
53	for	for		in	in_othr								IN	prep	52
54	example	example		nn									NN	pobj	53
55	the	the		dt	art								DT	det	57
56	icing	icing	nn+npremod	nn		nom	npremod						NN	compound	57
57	context	context		nn									NN	pobj	52
58	.	.											.	punct	2

#sentid = 409
0	uh	uh											UH	intj	7
1	i	i		pro	1st	sg							PRP	nsubj	2
2	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	7
3	,	,											,	punct	7
4	um	um											UH	intj	7
5	do	do		vbaux									VBP	aux	7
6	you	you		pro	2nd	sg							PRP	nsubj	7
7	envision	envision		vbmain	vblex	pres	simple	active					VB	ROOT	7
8	that	that		cs	cs_othr								IN	mark	12
9	you	you		pro	2nd	sg							PRP	nsubj	12
10	would	would		vbaux	mod	prd							MD	aux	12
11	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	12
12	have	have	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls				VB	advcl	7
13	information	information		nn		nom							NN	dobj	12
14	about	about	in+npostmod	in	nmod								IN	prep	13
15	weather	weather	nn+npremod	nn		nom	npremod						NN	compound	16
16	patterns	pattern		nn	pl								NNS	pobj	14
17	and	and		cc	phrs								CC	cc	16
18	,	,											,	punct	16
19	spatially	spatially	rb+jjrbmod	rb	othr	ly							RB	advmod	21
20	and	and		cc	phrs								CC	cc	19
21	temporal	temporal											JJ	conj	16
22	distributions	distribution		nn	pl	nom							NNS	pobj	14
23	and	and		cc	cls								CC	cc	12
24	that	that		pro	dem	sg							IN	nsubj	28
25	that	that		pro	dem	sg							DT	nsubj	28
26	would	would		vbaux	mod	prd							MD	aux	28
27	,	,											,	punct	28
28	provide	provide		vbmain	vblex	vp_w_modal	simple	active					VB	conj	12
29	you	you		pro	2nd	sg							PRP	dative	28
30	some	some		dt									DT	det	31
31	information	information		nn		nom							NN	dobj	28
32	about	about	in+npostmod	in	nmod								IN	prep	31
33	the	the		dt	art								DT	det	37
34	,	,											,	punct	37
35	a	a		rb	othr								FW	advmod	36
36	priori	priori											FW	nmod	37
37	probabilities	probability		nn	pl	nom							NNS	pobj	32
38	that	that		relpro	relpro_that	sg							WDT	nsubj	39
39	go	go	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	37
40	into	into	in+advl	in	advl								IN	prep	39
41	the	the		dt	art								DT	det	45
42	Markov	markov	nn+npremod	nn		proper	npremod						NNP	nmod	45
43													_SP	dep	45
44	decision	decision	nn+npremod	nn			npremod						NN	compound	45
45	model	model		nn									NN	pobj	40
46	?	?											.	punct	28

#sentid = 410
0													_SP	dep	3
1	right	right											UH	intj	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	,	,											,	punct	3
5	well	well											UH	intj	3
6	,	,											,	punct	3
7	regardless	regardless	rb+advl	rb	advl								RB	advmod	3
8	of	of		in	in_othr								IN	prep	7
9	what	what		dt									WP	det	10
10	kind	kind		nn									NN	dobj	15
11	of	of	of+npostmod	in	nmod								IN	prep	10
12	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	13
13	model	model		nn									NN	pobj	11
14	we	we		pro	1st								PRP	nsubj	15
15	have	have		vbmain	vblex	pres	simple	active	compcls		incomp	compdel	VBP	pcomp	8
16	,	,											,	punct	15
17													_SP	dep	3
18	the	the		dt	art								DT	det	19
19	original	original											JJ	npadvmod	3
20	,	,											,	punct	3
21	but	but		cc	cls								CC	cc	3
22	so	so		rb	link								RB	advmod	32
23													_SP	dep	32
24	that	that		pro	dem	sg							DT	nsubj	25
25	's	be		vbmain	be	pres	simple	active					VBZ	meta	32
26	right	right		jj	pred								JJ	acomp	25
27	this	this		dt	dt_dem								DT	det	28
28	this	this											DT	meta	25
29	,	,											,	punct	32
30	i	i		pro	1st	sg							PRP	nsubj	32
31	'm	be		vbaux									VBP	aux	32
32	talking	talk		vbmain	prepv	pres	prog	active					VBG	conj	3
33	about	about	in+advl	in	advl								IN	prep	32
34	the	the		dt	art								DT	det	36
35	the	the		dt	art								DT	det	36
36	way	way		nn									NN	pobj	33
37	you	you		pro	2nd	sg							PRP	nsubj	38
38	find	find	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	36
39	these	these		dt	dt_dem								DT	det	40
40	probabilities	probability		nn	pl	nom							NNS	dobj	38
41	that	that		relpro	relpro_that	sg							WDT	nsubj	42
42	set	set	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	40
43	the	the		dt	art								DT	det	44
44	_	_		nn	pl								NNS	dobj	42
45	that	that		relpro	relpro_that	sg							WDT	nsubj	47
46													_SP	dep	47
47	provide	provide	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	44
48	the	the		dt	art								DT	det	49
49	data	datum		nn	pl								NNS	dobj	47
50	for	for	in+npostmod	in	nmod								IN	prep	49
51	the	the		dt	art								DT	det	52
52	problem	problem		nn									NN	pobj	50
53	.	.											.	punct	32

#sentid = 411
0													_SP	dep	29
1	well	well											UH	intj	29
2	the	the		dt	art								DT	det	4
3	the	the		dt	art								DT	det	4
4	motivation	motivation		nn		nom							NN	nsubj	29
5	,	,											,	punct	4
6	for	for	in+npostmod	in	nmod								IN	prep	4
7	originally	originally	rb+advl	rb	advl	ly							RB	advmod	8
8	developing	develop	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	6
9	this	this		dt	dt_dem								DT	det	10
10	kind	kind		nn									NN	dobj	8
11	of	of	of+npostmod	in	nmod								IN	prep	10
12	,	,											,	punct	11
13	um	um											UH	intj	11
14	,	,											,	punct	11
15	where	where		comp	comp_wh								WRB	advmod	18
16	you	you		pro	2nd	sg							PRP	nsubj	18
17	'd	would		vbaux	mod								MD	aux	18
18	have	have	whcls+incomp	vbmain	vblex	vp_w_modal	simple	active	compcls	whcls	incomp		VB	pcomp	11
19	time	time	nn+npremod	nn			npremod						NN	compound	20
20	intervals	interval		nn	pl	nom							NNS	dobj	18
21	and	and		cc	phrs								CC	cc	20
22	probabilities	probability		nn	pl	nom							NNS	conj	20
23	within	within	in+npostmod	in	nmod								IN	prep	22
24	that	that		pro	dem	sg							DT	pobj	23
25	,	,											,	punct	22
26	those	those		dt	dt_dem								DT	det	28
27	time	time	nn+npremod	nn			npremod						NN	compound	28
28	intervals	interval		nn	pl	nom							NNS	dobj	18
29	was	be		vbmain	be	past	simple	active					VBD	ROOT	29
30	me	i		pro	1st	sg							PRP	nsubj	31
31	going	go		vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	ccomp	29
32	out	out	rb+advl	rb	advl								RB	advmod	31
33	and	and		cc	phrs								CC	cc	31
34	trying	try		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	31
35	to	to		to									TO	aux	36
36	find	find	tocls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	34
37	out	out		rb	prtcle								RP	prt	36
38	the	the		dt	art								DT	det	39
39	probability	probability		nn		nom							NN	dobj	36
40	of	of	of+npostmod	in	nmod								IN	prep	39
41	engine	engine	nn+npremod	nn			npremod						NN	compound	42
42	failure	failure		nn		nom							NN	pobj	40
43	for	for	in+npostmod	in	nmod								IN	prep	39
44	c-	c-											XX	pcomp	43
45	a	a		dt	art								DT	det	49
46	Cessna	cessna	nn+npremod	nn		proper	npremod						NNP	nmod	49
47	,	,											,	punct	46
48	propeller	propeller	nn+npremod	nn		nom	npremod						NN	compound	49
49	engine	engine		nn									NN	pobj	43
50	tha-	tha-											XX	appos	49
51	that	that		relpro	relpro_that	sg							DT	nsubj	52
52	's	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	49
53	,	,											,	punct	52
54	o-	o-											XX	dep	52
55	over	over		in	in_othr								IN	prep	43
56	its	its		dt	poss								PRP$	poss	58
57	life	life	nn+npremod	nn			npremod						NN	compound	58
58	span	span		nn									NN	pobj	55
59	cuz	cuz		cs	cs_othr								IN	mark	61
60	there	there											EX	expl	61
61	has	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	36
62	a	a		dt	art								DT	det	63
63	break	break	nn+npremod	nn			npremod						NN	nmod	70
64	-	-											:	punct	63
65	i-	i-											:	punct	70
66	a	a		dt	art								DT	det	70
67	break	break	attr+npremod	jj	attr								VB	amod	70
68	-	-											HYPH	punct	67
69	in	in		rb	prtcle								RP	prt	67
70	period	period		nn									NN	dobj	61
71	and	and		cc	phrs								CC	cc	70
72	then	then		rb	othr								RB	advmod	77
73	a	a		dt	art								DT	det	74
74	b-	b-											LS	punct	77
75	some	some		dt									DT	det	77
76	long	long	attr+npremod	jj	attr								JJ	amod	77
77	period	period		nn									NN	conj	70
78	of	of	of+npostmod	in	nmod								IN	prep	77
79	time	time		nn									NN	pobj	78
80	where	where		rb	advl								WRB	advmod	82
81	it	it		pro	3rd	sg							PRP	nsubj	82
82	has	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	77
83	about	about	rb+jjrbmod	rb	othr								RB	advmod	85
84	the	the		dt	art								DT	det	85
85	same	same											JJ	dobj	82
86	and	and		cc	cls								CC	cc	82
87	then	then		rb	link								RB	advmod	95
88	,	,											,	punct	87
89	as	as		cs	cs_othr								IN	mark	91
90	it	it		pro	3rd	sg							PRP	nsubj	91
91	approaches	approach	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	95
92	overhaul	overhaul		nn									NN	dobj	91
93	the	the		dt	art								DT	det	94
94	probability	probability		nn		nom							NN	nsubj	95
95	increases	increase		vbmain	vblex	pres	simple	active					VBZ	conj	82
96	again	again	rb+advl	rb	advl								RB	advmod	95
97	.	.											.	punct	29

#sentid = 412
0	so	so		rb	link								RB	advmod	5
1	,	,											,	punct	5
2	the	the		dt	art								DT	det	3
3	same	same											JJ	nsubj	5
4	would	would		vbaux	mod	prd							MD	aux	5
5	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	5
6	the	the		dt	art								DT	det	7
7	case	case		nn									NN	attr	5
8	with	with	in+npostmod	in	nmod								IN	prep	7
9	other	other	attr+npremod	jj	attr								JJ	amod	10
10	transitions	transition		nn	pl	nom							NNS	pobj	8
11	but	but		cc	cls								CC	cc	5
12	,	,											,	punct	5
13	uh	uh											UH	intj	19
14	i	i		pro	1st	sg							PRP	nsubj	15
15	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	19
16	i	i		pro	1st	sg							PRP	nsubj	19
17	have	have		vbaux									VBP	aux	19
18	n't	not											RB	neg	19
19	studied	study		vbmain	vblex	pres	perf	active					VBN	conj	5
20	meterologi-	meterologi-	nn+npremod	nn			npremod						NN	compound	21
21	meteorology	meteorology		nn									NN	dobj	19
22	enough	enough	rb+advl	rb	advl								RB	advmod	19
23	to	to		to									TO	aux	24
24	know	know	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	19
25	what	what											WP	attr	28
26	they	they		pro	pl								PRP	nsubj	28
27	would	would		vbaux	mod	prd							MD	aux	28
28	be	be	whcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls	whcls	vcomp		VB	ccomp	24
29	but	but		cc	cls								CC	cc	19
30	that	that		pro	dem	sg							DT	nsubj	32
31	would	would		vbaux	mod	prd							MD	aux	32
32	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	19
33	the	the		dt	art								DT	det	34
34	idea	idea		nn									NN	nsubj	35
35	is	be		vbmain	be	pres	simple	active					VBZ	conj	19
36	that	that		comp	comp_that								IN	mark	44
37	,	,											,	punct	44
38	based	base	edcls+advl	vbmain	advl	nonfinite	simple	active		edcls			VBN	prep	44
39	on	on	in+advl	in	advl								IN	prep	38
40	those	those		dt	dt_dem								DT	det	41
41	reports	report		nn	pl								NNS	pobj	39
42	you	you		pro	2nd	sg							PRP	nsubj	44
43	would	would		vbaux	mod	prd							MD	aux	44
44	have	have	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	35
45	different	different	attr+npremod	jj	attr								JJ	amod	48
46	,	,											,	punct	48
47	transition	transition	nn+npremod	nn		nom	npremod						NN	compound	48
48	models	model		nn	pl								NNS	dobj	44
49	.	.											.	punct	35

#sentid = 413
0													_SP	dep	0
1	there	there											EX	expl	2
2	's	be		vbmain	in_othr	pres	simple	active					VBZ	prep	0
3	a	a		dt	art								DT	det	5
4	particular	particular	attr+npremod	jj	attr								JJ	amod	5
5	issue	issue		nn									NN	attr	2
6	here	here		rb	othr								RB	advmod	5
7	too	too	rb+advl	rb	advl								RB	advmod	2
8	cuz	cuz		cs	cs_othr								IN	mark	23
9	you	you		pro	2nd	sg							PRP	nsubj	10
10	're	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	15
11	,	,											,	punct	10
12	i	i		pro	1st	sg							XX	nsubj	15
13	thi-	thi-											XX	dep	15
14	weather	weather		nn		nom							NN	nsubj	15
15	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	23
16	something	something		nn		nom							NN	attr	15
17	that	that		pro	dem	sg							WDT	dobj	20
18	you	you		pro	2nd	sg							PRP	nsubj	20
19	would	would		vbaux	mod	prd							MD	aux	20
20	get	get	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel		VB	relcl	16
21	,	,											,	punct	23
22	you	you		pro	2nd	sg							PRP	nsubj	23
23	get	get		vbmain	vblex	pres	simple	active			other_advl		VBP	dep	2
24	,	,											,	punct	23
25	uh	uh											UH	intj	23
26	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	28
27	-	-											HYPH	punct	28
28	time	time	nn+npremod	nn			npremod						NN	compound	29
29	information	information		nn		nom							NN	dobj	23
30	.	.											.	punct	2

#sentid = 414
0													_SP	dep	9
1	mhm	mhm											UH	intj	3
2													_SP	dep	1
3	about	about											IN	dep	9
4	,	,											,	punct	9
5	and	and		cc	phrs								CC	cc	9
6	you	you		pro	2nd	sg							PRP	nsubj	9
7	're	be		vbaux									VBP	aux	9
8	all	all											DT	dep	9
9	talking	talk		vbmain	prepv	pres	prog	active					VBG	ROOT	9
10	about	about	in+advl	in	advl								IN	prep	9
11	using	use	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	10
12	plan	plan	nn+npremod	nn			npremod						NN	compound	14
13	-	-											HYPH	punct	14
14	time	time		nn									NN	dobj	11
15	,	,											,	punct	11
16	probabilistic	probabilistic	rb+advl	rb	advl								JJ	advmod	11
17	.	.											.	punct	9

#sentid = 415
0	all	all											PDT	predet	2
1	this	this		dt	dt_dem								DT	det	2
2	information	information		nn		nom							NN	nsubj	6
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	2
5	here	here	rb+advl	rb	advl								RB	advmod	4
6	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	6
7	plan	plan	nn+npremod	nn			npremod						NN	compound	9
8	-	-											HYPH	punct	9
9	time	time	nn+npremod	nn			npremod						NN	compound	10
10	probabilities	probability		nn	pl	nom							NNS	attr	6
11	.	.											.	punct	6

#sentid = 416
0													_SP	dep	0
1	plan	plan		vbmain	in_othr	nonfinite	simple	active					VB	prep	0
2	time	time		nn									NN	dobj	1
3	?	?											.	punct	2

#sentid = 417
0	what	what											WP	dep	2
1	do	do		vbaux									VBP	aux	2
2	y-	y-											PRP	ROOT	2

#sentid = 418
0	what	what											WP	dobj	3
1	do	do		vbaux									VBP	aux	3
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	mean	mean		vbmain	vblex	pres	simple	active					VB	ROOT	3
4	by	by	in+advl	in	advl								IN	prep	3
5	plan	plan	nn+npremod	nn			npremod						NN	compound	7
6	-	-											HYPH	punct	7
7	time	time		nn									NN	pobj	4
8	?	?											.	punct	3

#sentid = 419
0													_SP	dep	0
1	in	in	in+advl	in	advl								IN	prep	5
2	other	other	attr+npremod	jj	attr								JJ	amod	3
3	words	word		nn	pl								NNS	pobj	1
4	you	you		pro	2nd	sg							PRP	nsubj	5
5	have	have		vbmain	in_othr	pres	simple	active					VBP	prep	0
6	these	these		dt	dt_dem								DT	det	7
7	models	model		nn	pl								NNS	dobj	5
8	that	that		relpro	relpro_that	sg							WDT	nsubj	9
9	use	use	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	7
10	,	,											,	punct	9
11													_SP	dep	9
12	mhm	mhm											UH	intj	9
13													_SP	dep	9
14	alright	alright											UH	intj	9
15	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	16
16	time	time		nn									NN	dobj	9
17	,	,											,	punct	16
18													_SP	dep	16
19	okay	okay											UH	intj	9
20	?	?											.	punct	19

#sentid = 420
0													_SP	dep	7
1	this	this		pro	dem	sg							DT	nsubj	2
2	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	7
3	not	not											RB	neg	2
4	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	5
5	time	time		nn									NN	attr	2
6	this	this		pro	dem	sg							DT	nsubj	7
7	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	28
8	the	the		dt	art								DT	det	9
9	amount	amount		nn									NN	attr	7
10	of	of	of+npostmod	in	nmod								IN	prep	9
11	time	time		nn									NN	pobj	10
12	that	that		pro	dem	sg							WDT	dobj	19
13													_SP	dep	16
14	y-	y-											HYPH	punct	16
15	y-	y-		nn									NN	punct	16
16	y-	y-		nn									NN	dobj	19
17	you	you		pro	2nd	sg							PRP	nsubj	19
18	're	be		vbaux									VBP	aux	19
19	using	use	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel		VBG	relcl	9
20													_SP	dep	7
21	you	you		pro	2nd	sg							PRP	dep	28
22	you	you		pro	2nd	sg							PRP	dep	25
23	you	you		pro	2nd	sg							PRP	nsubj	25
24	're	be		vbaux									VBP	aux	25
25	using	use		vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	28
26	you	you		pro	2nd	sg							PRP	nsubj	28
27	're	be		vbaux									VBP	aux	28
28	using	use		vbmain	vblex	pres	prog	active					VBG	ROOT	28
29	this	this		dt	dt_dem								DT	det	31
30	probabilistic	probabilistic	attr+npremod	jj	attr								JJ	amod	31
31	information	information		nn		nom							NN	dobj	28
32	to	to		to									TO	aux	33
33	make	make	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	28
34	decisions	decision		nn	pl								NNS	dobj	33
35	on	on	in+npostmod	in	nmod								IN	prep	34
36	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	37
37	time	time		nn									NN	pobj	35
38	.	.											.	punct	28

#sentid = 421
0													_SP	dep	0
1	at	at											IN	dep	0
2	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	3
3	time	time		nn									NN	pobj	1
4	,	,											,	punct	1
5	yes	yes											UH	intj	1
6	.	.											.	punct	1

#sentid = 422
0													_SP	dep	1
1	at	at											IN	ROOT	1
2	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	3
3	time	time		nn									NN	pobj	1
4	.	.											.	punct	1

#sentid = 423
0													_SP	dep	0
1	uhuh	uhuh											UH	intj	0

#sentid = 424
0													_SP	dep	15
1	but	but		cc	phrs								CC	cc	15
2	whereas	whereas	rb+advl	rb	advl								IN	advmod	15
3	,	,											,	punct	15
4	weather	weather		nn		nom							NN	dep	15
5	informa-	informa-	nn+npremod	nn			npremod						NN	nmod	4
6	you	you		pro	2nd	sg							PRP	nsubj	7
7	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	5
8	,	,											,	punct	7
9	weather	weather	appos+npostmod	nn		nom	nappos						NN	appos	4
10													_SP	dep	4
11	well	well											UH	intj	15
12	,	,											,	punct	15
13	you	you		pro	2nd	sg							PRP	nsubj	15
14	'd	would		vbaux	mod								MD	aux	15
15	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	15
16	both	both											DT	dobj	15
17	,	,											,	punct	16
18	probably	probably		rb	othr	ly							RB	advmod	16
19													_SP	dep	15
20	information	information		nn		nom							NN	dobj	15
21	that	that		pro	dem	sg							WDT	dobj	24
22	you	you		pro	2nd	sg							PRP	nsubj	24
23	would	would		vbaux	mod	prd							MD	aux	24
24	use	use	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel		VB	relcl	20
25	,	,											,	punct	15
26	maybe	maybe	rb+advl	rb	advl								RB	advmod	27
27	have	have		vbmain	vblex	nonfinite	simple	active					VB	dep	15
28	a	a		dt	art								DT	det	30
29	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	30
30	time	time		nn									NN	dobj	27
31	but	but		cc	phrs								CC	cc	15
32													_SP	dep	15
33	right	right											UH	intj	32
34	.	.											.	punct	15

#sentid = 425
0													_SP	dep	0
1	also	also		rb	othr								RB	advmod	3
2	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	3
3	time	time	appos+npostmod	nn			nappos						NN	appos	0

#sentid = 426
0													_SP	dep	5
1	mhm	mhm											UH	intj	5
2													_SP	dep	1
3	you	you		pro	2nd	sg							PRP	nsubj	5
4	'd	would		vbaux	mod								MD	aux	5
5	find	find		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	5
6	things	thing		nn	pl	nom							NNS	dobj	5
7	that	that		relpro	relpro_that	sg							WDT	nsubj	9
8	would	would		vbaux	mod	prd							MD	aux	9
9	change	change	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	6
10	the	the		dt	art								DT	det	12
11	,	,											,	punct	12
12	probabilities	probability		nn	pl	nom							NNS	dobj	9
13	of	of	of+npostmod	in	nmod								IN	prep	12
14	different	different		jj	attr								JJ	amod	15
15													_SP	dep	13
16	right	right											UH	intj	13
17	.	.											.	punct	5

#sentid = 427
0													_SP	dep	2
1	temporal	temporal	attr+npremod	jj	attr								JJ	amod	2
2	transitions	transition		nn	pl	nom							NNS	ROOT	2
3	which	which		relpro	relpro_wh								WDT	nsubj	5
4	would	would		vbaux	mod	prd							MD	aux	5
5	change	change	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	whcls	rel		VB	relcl	2
6	the	the		dt	art								DT	det	7
7	actions	action		nn	pl	nom							NNS	dobj	5
8	you	you		pro	2nd	sg							PRP	nsubj	10
9	'd	would		vbaux	mod								MD	aux	10
10	want	want	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	7
11													_SP	dep	10
12	right	right											UH	intj	5
13	.	.											.	punct	2

#sentid = 428
0	so	so		rb	link								RB	advmod	8
1	so	so		rb	link								RB	advmod	8
2	right	right	rb+jjrbmod	rb	othr								RB	advmod	3
3	now	now	rb+advl	rb	advl								RB	advmod	8
4	what	what		comp	comp_wh								WP	dobj	7
5	we	we		pro	1st								PRP	nsubj	7
6	would	would		vbaux	mod	prd							MD	aux	7
7	assume	assume		vbmain	vblex	vp_w_modal	simple	active	compcls	whcls	vcomp		VB	csubj	8
8	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	8
9	that	that		comp	comp_that								IN	mark	12
10	we	we		pro	1st								PRP	nsubj	12
11	would	would		vbaux	mod	prd							MD	aux	12
12	take	take	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	8
13	a	a		dt	art								DT	det	15
14	current	current	attr+npremod	jj	attr								JJ	amod	15
15	forecast	forecast		nn									NN	dobj	12
16	before	before		cs	cs_othr								IN	mark	20
17	you	you		pro	2nd	sg							PRP	nsubj	20
18	would	would		vbaux	mod	prd							MD	aux	20
19	ever	ever	rb+advl	rb	advl		splaux						RB	advmod	20
20	take	take	finitecls+advl	vbmain	phrsv	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	12
21	off	off		rb	prtcle								RP	prt	20
22	and	and		cc	phrs								CC	cc	12
23	use	use		vbmain	vblex	nonfinite	simple	active					VB	conj	12
24	all	all											DT	dobj	23
25	of	of		in	in_othr								IN	prep	24
26	the	the		dt	art								DT	det	28
27	the	the		dt	art								DT	det	28
28	transitions	transition		nn	pl	nom							NNS	pobj	25
29	associated	associate	edcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	edcls	ncomp		VBN	acl	28
30	with	with	in+advl	in	advl								IN	prep	29
31	that	that		pro	dem	sg							DT	pobj	30
32	to	to		to									TO	aux	33
33	develop	develop	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	23
34	your	your		dt	poss								PRP$	poss	35
35	plans	plan		nn	pl								NNS	dobj	33
36	,	,											,	punct	8
37	and	and		cc	cls								CC	cc	8
38	then	then		rb	link								RB	advmod	69
39	during	during	in+advl	in	advl								IN	prep	69
40	flight	flight		nn									NN	pobj	39
41	,	,											,	punct	69
42	um	um											UH	intj	69
43	,	,											,	punct	69
44	this	this		pro	dem	sg							DT	nsubj	45
45	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	69
46	something	something		nn		nom							NN	attr	45
47	for	for	in+npostmod	in	nmod								IN	prep	46
48	future	future	attr+npremod	jj	attr								JJ	amod	49
49	work	work		nn									NN	pobj	47
50	,	,											,	punct	69
51	if	if		cs	cnd								IN	mark	58
52	any	any											DT	nsubj	58
53	of	of		in	in_othr								IN	prep	52
54	those	those		dt	dt_dem								DT	det	57
55	meteorol-	meteorol-	attr+npremod	jj	attr								JJ	amod	57
56	meteorological	meteorological	attr+npremod	jj	attr								JJ	amod	57
57	events	event		nn	pl	nom							NNS	pobj	53
58	change	change	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	69
59	substantially	substantially	rb+jjrbmod	rb	othr	ly							RB	advmod	60
60	enough	enough	rb+advl	rb	advl								RB	advmod	58
61	,	,											,	punct	58
62	that	that		comp	comp_that								IN	mark	64
63	it	it		pro	3rd	sg							PRP	nsubj	64
64	invalidates	invalidate	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	58
65	your	your		dt	poss								PRP$	poss	66
66	plan	plan		nn									NN	dobj	64
67	then	then		rb	link								RB	advmod	69
68	that	that		pro	dem	sg							DT	nsubj	69
69	's	be		vbmain	be	pres	simple	active					VBZ	conj	8
70	when	when		rb	advl								WRB	advmod	77
71	this	this		dt	dt_dem								DT	det	75
72	real	real	attr+npremod	jj	attr								JJ	amod	74
73	-	-											HYPH	punct	74
74	time	time	nn+npremod	nn			npremod						NN	compound	75
75	planning	planning		nn		nom							NN	nsubj	77
76	would	would		vbaux	mod	prd							MD	aux	77
77	be	be	finitecls+advl	vbmain	be	vp_w_modal	simple	active	advlcls	whcls			VB	advcl	69
78	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	79
79	important	important		jj	pred								JJ	acomp	77
80	.	.											.	punct	69

#sentid = 429
0	to	to		to									TO	aux	1
1	bring	bring		vbmain	vblex	nonfinite	simple	active		tocls			VB	ROOT	1
2	back	back	rb+jjrbmod	rb	othr								RB	advmod	3
3	in	in	rb+advl	rb	advl								RB	advmod	1
4	.	.											.	punct	1

#sentid = 430
0	but	but		cc	cls								CC	cc	15
1	since	since		cs	cs_othr								IN	mark	5
2	we	we		pro	1st								PRP	nsubj	5
3	did	do		vbaux									VBD	aux	5
4	n't	not											RB	neg	5
5	do	do	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		other_advl		VB	advcl	15
6	the	the		dt	art								DT	det	10
7	real	real	attr+npremod	jj	attr								JJ	amod	9
8	-	-											HYPH	punct	9
9	time	time	nn+npremod	nn			npremod						NN	compound	10
10	planning	planning		nn		nom							NN	dobj	5
11	we	we		pro	1st								PRP	nsubj	15
12	also	also	rb+advl	rb	advl								RB	advmod	15
13	did	do		vbaux									VBD	aux	15
14	n't	not											RB	neg	15
15	focus	focus		vbmain	vblex	past	simple	active					VB	ROOT	15
16	on	on	in+advl	in	advl								IN	prep	15
17	,	,											,	punct	16
18	what	what											WP	nsubj	19
19	happens	happen	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VBZ	pcomp	16
20	if	if		cs	cnd								IN	mark	22
21	these	these		pro	dem	pl							DT	nsubj	22
22	change	change	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	19
23	during	during	in+advl	in	advl								IN	prep	22
24	dynamic	dynamic	attr+npremod	jj	attr								JJ	amod	26
25	,	,											,	punct	26
26	execution	execution		nn		nom							NN	pobj	23
27	.	.											.	punct	15

#sentid = 431
0	because	because		cs	cos								IN	mark	2
1	we	we		pro	1st								PRP	nsubj	2
2	were	be		vbmain	be	past	simple	active			causative		VBD	ROOT	2
3	n't	not											RB	neg	2
4	ready	ready		jj	pred								JJ	acomp	2
5	to	to		to									TO	aux	6
6	approach	approach	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	4
7	the	the		dt	art								DT	det	12
8	real	real	attr+npremod	jj	attr								JJ	amod	10
9	-	-											HYPH	punct	10
10	time	time	nn+npremod	nn			npremod						NN	compound	11
11	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	12
12	problem	problem		nn									NN	dobj	6
13	either	either	rb+advl	rb	advl								RB	advmod	6
14	.	.											.	punct	2

#sentid = 432
0													_SP	dep	3
1	but	but		cc	phrs								CC	cc	3
2	there	there											EX	expl	3
3	are	be		vbmain	be	pres	simple	active					VBP	ROOT	3
4	a	a		dt	art								DT	det	5
5	lot	lot		nn									NN	attr	3
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	interesting	interesting	attr+npremod	jj	attr								JJ	amod	8
8	issues	issue		nn	pl								NNS	pobj	6
9	,	,											,	punct	8
10	uh	uh											UH	intj	8
11	that	that		relpro	relpro_that	sg							WDT	nsubj	12
12	relate	relate	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	8
13	to	to	in+advl	in	advl								IN	prep	12
14	what	what											WP	dep	21
15	,	,											,	punct	21
16	for	for		in	nmod								IN	prep	21
17	example	example		nn									NN	pobj	16
18	flight	flight	nn+npremod	nn			npremod						NN	compound	20
19	-	-											HYPH	punct	20
20	management	management	nn+npremod	nn		nom	npremod						NN	compound	21
21	systems	system		nn	pl								NNS	dep	27
22	,	,											,	punct	27
23	mostly	mostly	rb+advl	rb	advl	ly							RB	advmod	27
24	now	now	rb+advl	rb	advl								RB	advmod	27
25	they	they		pro	pl								PRP	nsubj	27
26	just	just	rb+advl	rb	advl								RB	advmod	27
27	store	store		vbmain	vblex	pres	simple	active	compcls		incomp	compdel	VBP	pcomp	13
28	data	datum		nn	pl								NNS	dobj	27
29													_SP	dep	27
30	yes	yes											UH	intj	27
31													_SP	dep	27
32	so	so		cs	cs_othr								IN	mark	35
33	they	they		pro	pl								PRP	nsubj	35
34	can	can		vbaux	mod	pos							MD	aux	35
35	record	record	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	27
36	it	it		pro	3rd	sg							PRP	dobj	35
37	.	.											.	punct	3

#sentid = 433
0													_SP	dep	0
1	right	right											UH	intj	0

#sentid = 434
0													_SP	dep	7
1	and	and		cc	phrs								CC	cc	7
2	and	and		cc	phrs								CC	cc	7
3	and	and		cc	phrs								CC	cc	7
4	what	what											WP	dep	7
5	,	,											,	punct	7
6	i	i		pro	1st	sg							PRP	nsubj	7
7	guess	guess		vbmain	vblex	pres	simple	active					VBP	ROOT	7
8	one	one		pro	other	pl							CD	nsubj	17
9	of	of		in	in_othr								IN	prep	8
10	the	the		dt	art								DT	det	11
11	issues	issue		nn	pl								NNS	pobj	9
12	that	that		pro	dem	sg							WDT	pobj	16
13	i	i		pro	1st	sg							PRP	nsubj	14
14	'm	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	11
15	interested	interested		jj	pred								JJ	acomp	14
16	in	in	in+jcomp	in	jcomp								IN	prep	15
17	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	7
18	how	how		comp	comp_wh								WRB	advmod	24
19	,	,											,	punct	24
20	w-	w-											XX	dep	24
21	how	how		comp	comp_wh								WRB	advmod	24
22	your	your		dt	poss								PRP$	poss	24
23	,	,											,	punct	24
24	attempt	attempt	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	17
25	to	to		to									TO	aux	26
26	incorporate	incorporate	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	24
27	some	some											DT	dobj	26
28	of	of		in	in_othr								IN	prep	27
29	this	this		dt	dt_dem								DT	det	30
30	information	information		nn		nom							NN	pobj	28
31	in	in	in+advl	in	advl								IN	prep	26
32	terms	term		nn	pl								NNS	pobj	31
33	of	of	of+npostmod	in	nmod								IN	prep	32
34	planning	planning		nn		nom							NN	pobj	33
35	,	,											,	punct	26
36	what	what		comp	comp_wh								WP	dobj	38
37	that	that		pro	dem	sg							DT	nsubj	38
38	says	say	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	17
39	about	about	in+advl	in	advl								IN	prep	56
40	the	the		dt	art								DT	det	41
41	kind	kind		nn									NN	pobj	39
42	of	of	of+npostmod	in	nmod								IN	prep	41
43	information	information		nn		nom							NN	pobj	42
44	that	that		relpro	relpro_that	sg							WDT	nsubjpass	47
45	should	should		vbaux	mod	nec							MD	aux	47
46	be	be		vbaux									VB	auxpass	47
47	made	make	finitecls+rel	vbmain	vblex	vp_w_modal	simple	pasv_agls	nmod_cls	thatcls	rel		VBN	relcl	41
48	available	available											JJ	oprd	47
49	what	what		dt									WP	det	50
50	kind	kind		nn									NN	dobj	56
51	of	of	of+npostmod	in	nmod								IN	prep	50
52	information	information		nn		nom							NN	pobj	51
53	do	do		vbaux									VBP	aux	56
54	you	you		pro	2nd	sg							PRP	nsubj	56
55	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	56
56	need	need		vbmain	vblex	pres	simple	active	compcls		vcomp		VB	ccomp	38
57	about	about	in+advl	in	advl								IN	prep	56
58	the	the		dt	art								DT	det	62
59													_SP	dep	62
60	right	right											UH	intj	62
61													_SP	dep	62
62	environment	environment		nn		nom							NN	pobj	57
63	about	about	in+npostmod	in	nmod								IN	prep	62
64	the	the		dt	art								DT	det	65
65	world	world		nn									NN	pobj	63
66	,	,											,	punct	56

#sentid = 435
0													_SP	dep	49
1	mhm	mhm											UH	intj	0
2													_SP	dep	1
3	uh	uh											UH	intj	0
4	because	because		cs	cos								IN	mark	8
5	i	i		pro	1st	sg							PRP	nsubj	8
6	do	do		vbaux									VBP	aux	8
7	n't	not											RB	neg	8
8	think	think	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VB	advcl	0
9	people	people		nn	pl								NNS	nsubj	10
10	understand	understand	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	8
11	that	that		pro	dem	sg							DT	dobj	10
12	very	very	rb+jjrbmod	rb	othr								RB	advmod	13
13	well	well	rb+advl	rb	advl								RB	advmod	10
14	at	at	in+advl	in	advl								IN	prep	10
15	this	this		dt	dt_dem								DT	det	16
16	point	point		nn									NN	pobj	14
17													_SP	dep	8
18	and	and											CC	ccomp	8
19	,	,											,	punct	18
20	probably	probably		rb	othr	ly							RB	advmod	18
21													_SP	dep	0
22	no	no											UH	intj	0
23	actually	actually		rb	othr	ly							RB	advmod	22
24	when	when		rb	advl								WRB	advmod	32
25	when	when		rb	advl								WRB	advmod	32
26	uh	uh											UH	intj	29
27	,	,											,	punct	29
28	i	i		pro	1st	sg							PRP	nsubj	29
29	went	go	finitecls+advl	vbmain	vblex	past	simple	active	advlcls				VBD	advcl	22
30	off	off	rb+advl	rb	advl								RB	advmod	29
31	and	and		cc	phrs								CC	cc	29
32	tried	try		vbmain	vblex	past	simple	active					VBD	conj	29
33	to	to		to									TO	aux	34
34	find	find	tocls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	32
35	out	out		rb	prtcle								RP	prt	34
36	what	what											WP	attr	39
37	the	the		dt	art								DT	det	38
38	probabilities	probability		nn	pl	nom							NNS	nsubj	39
39	were	be	whcls+vcomp	vbmain	be	past	simple	active	compcls	whcls	vcomp		VBD	ccomp	34
40	for	for	in+npostmod	in	nmod								IN	prep	38
41	engine	engine	nn+npremod	nn			npremod						NN	compound	42
42	failure	failure		nn		nom							NN	pobj	40
43	we	we		pro	1st								PRP	nsubj	44
44	called	call		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	49
45	everybody	everybody		nn									NN	oprd	44
46	no	no		dt									DT	det	47
47	one	one		nn	other	pl							NN	nsubj	49
48	would	would		vbaux	mod	prd							MD	aux	49
49	tell	tell		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	49
50	us	we		pro	pl								PRP	dobj	49
51	.	.											.	punct	49

#sentid = 436
0													_SP	dep	2
1	that	that		pro	dem	sg							DT	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	because	because		cs	cos								IN	mark	7
4	they	they		pro	pl								PRP	nsubj	7
5	do	do		vbaux									VBP	aux	7
6	n't	not											RB	neg	7
7	think	think	finitecls+advl	vbmain	prepv	pres	simple	active	advlcls		causative		VB	advcl	2
8	about	about	in+advl	in	advl								IN	prep	7
9													_SP	dep	8
10	right	right											UH	intj	8
11													_SP	dep	8
12	this	this		dt	dt_dem								DT	det	14
13	higher	high	attr+npremod	jj	attr								JJR	amod	14
14	level	level		nn									NN	pobj	8
15	of	of	of+npostmod	in	nmod								IN	prep	14
16	planning	planning		nn		nom							NN	pobj	15
17	that	that		pro	dem	sg							WDT	dobj	22
18	you	you		pro	2nd	sg							PRP	nsubj	22
19	're	be		vbaux									VBP	aux	22
20													_SP	dep	22
21	yes	yes											UH	intj	22
22													_SP	dep	14
23	addressing	address		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	14
24	here	here		rb	othr								RB	advmod	14
25	and	and		cc	phrs								CC	cc	14
26	so	so											RB	conj	14
27	and	and		cc	phrs								CC	cc	26
28	so	so											RB	conj	26
29	,	,											,	punct	26
30	uh	uh											UH	intj	26
31	,	,											,	punct	26
32	these	these		dt	dt_dem								DT	det	33
33	issues	issue		nn	pl								NNS	dep	40
34	,	,											,	punct	40
35	well	well											UH	intj	40
36	they	they		pro	pl								PRP	nsubjpass	40
37	just	just	rb+advl	rb	advl								RB	advmod	40
38	are	be		vbaux									VBP	auxpass	40
39	n't	not											RB	neg	40
40	thought	think		vbmain	prepv	pres	simple	pasv_agls					VBN	conj	14
41	about	about	in+advl	in	advl								IN	prep	40
42	.	.											.	punct	2

#sentid = 437
0													_SP	dep	0
1	right	right											UH	intj	3
2	,	,											,	punct	3
3	mhm	mhm											UH	intj	0
4	.	.											.	punct	3

#sentid = 438
0	right	right											UH	ROOT	0
1	.	.											.	punct	0

#sentid = 439
0	so	so		rb	link								RB	advmod	4
1	so	so		rb	link								RB	advmod	4
2	,	,											,	punct	4
3	i	i		pro	1st	sg							PRP	nsubj	4
4	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	4
5	to	to		to									TO	aux	6
6	summarize	summarize	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	4
7	and	and		cc	phrs								CC	cc	6
8	then	then		rb	link								RB	advmod	9
9	move	move		vbmain	phrsv	nonfinite	simple	active					VB	conj	6
10	on	on		rb	prtcle								RP	prt	9
11	because	because		cs	cos								IN	mark	15
12	i	i		pro	1st	sg							PRP	nsubj	15
13	'm	be		vbaux									VBP	aux	15
14	not	not											RB	neg	15
15	going	go	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		causative		VBG	advcl	4
16	to	to		to									TO	aux	17
17	finish	finish	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	15
18	otherwise	otherwise	rb+advl	rb	advl								RB	advmod	17
19	,	,											,	punct	51
20	um	um											UH	intj	51
21	,	,											,	punct	51
22	the	the											DT	dep	51
23	,	,											,	punct	51
24	regardless	regardless	rb+advl	rb	advl								RB	advmod	51
25	of	of		in	in_othr								IN	prep	24
26	what	what		dt									WP	det	28
27	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	28
28	model	model		nn									NN	dobj	30
29	we	we		pro	1st								PRP	nsubj	30
30	have	have		vbmain	vblex	pres	simple	active	compcls		incomp	compdel	VBP	pcomp	25
31	,	,											,	punct	51
32	i	i		pro	1st	sg							PRP	nsubj	33
33	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	51
34	this	this		pro	dem	sg							DT	nsubj	35
35	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	51
36	our	our		dt	poss								PRP$	poss	38
37	current	current	attr+npremod	jj	attr								JJ	amod	38
38	model	model		nn									NN	attr	35
39	,	,											,	punct	51
40	we	we		pro	1st								PRP	nsubj	43
41	have	have		vbaux									VBP	aux	43
42	n't	not											RB	neg	43
43	discarded	discard		vbmain	vblex	pres	perf	active	compcls		vcomp	compdel	VBN	ccomp	51
44	Markov	markov	nn+npremod	nn		proper	npremod						NNP	compound	46
45	decision	decision	nn+npremod	nn			npremod						NN	compound	46
46	processes	process		nn	pl	nom							NNS	dobj	43
47	as	as	in+advl	in	advl								IN	prep	43
48	a	a		dt	art								DT	det	49
49	possibility	possibility		nn		nom							NN	pobj	47
50	i	i		pro	1st	sg							PRP	nsubj	51
51	think	think	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	4
52	that	that		pro	dem	sg							DT	nsubj	53
53	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	51
54	obvious	obvious		jj	pred								JJ	acomp	53
55	from	from	in+advl	in	advl								IN	prep	53
56	the	the		dt	art								DT	det	57
57	pages	page		nn	pl	nom							NNS	pobj	55
58	and	and		cc	phrs								CC	cc	57
59	pages	page		nn	pl	nom							NNS	conj	57
60	i	i		pro	1st	sg							PRP	nsubj	61
61	had	have	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel	reldel	VBD	relcl	57
62	at	at		rb	othr								IN	advmod	63
63	least	least	rb+advl	rb	advl								JJS	advmod	64
64	talking	talk	ingcls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	61
65	about	about	in+advl	in	advl								IN	prep	64
66	it	it		pro	3rd	sg							PRP	pobj	65
67	in	in	in+advl	in	advl								IN	prep	64
68	the	the		dt	art								DT	det	69
69	thesis	thesis		nn									NN	pobj	67
70	,	,											,	punct	51
71	and	and		cc	cls								CC	cc	51
72	,	,											,	punct	51
73	we	we		pro	1st								PRP	nsubj	74
74	think	think		vbmain	vblex	pres	simple	active					VBP	conj	51
75	this	this		dt	dt_dem								DT	det	76
76	sort	sort		nn									NN	nsubj	79
77	of	of	of+npostmod	in	nmod								IN	prep	76
78	representation	representation		nn		nom							NN	pobj	77
79	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	74
80	appropriate	appropriate		jj	pred								JJ	acomp	79
81	because	because		cs	cos								IN	mark	85
82	,	,											,	punct	85
83	the	the		dt	art								DT	det	84
84	alternative	alternative		nn									NN	nsubj	85
85	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		causative		VBZ	advcl	79
86	that	that		comp	comp_that								IN	mark	89
87	you	you		pro	2nd	sg							PRP	nsubj	89
88	somehow	somehow	rb+advl	rb	advl								RB	advmod	89
89	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	85
90	to	to		to									TO	aux	92
91	,	,											,	punct	92
92	relate	relate		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	89
93	all	all											DT	dobj	92
94	of	of		in	in_othr								IN	prep	93
95	the	the		dt	art								DT	det	97
96	different	different	attr+npremod	jj	attr								JJ	amod	97
97	events	event		nn	pl	nom							NNS	pobj	94
98	that	that		relpro	relpro_that	sg							WDT	nsubj	100
99	could	could		vbaux	mod	pos							MD	aux	100
100	happen	happen	finitecls+rel	vbmain	prepv	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	97
101	to	to	in+advl	in	advl								IN	prep	100
102	you	you		pro	2nd	sg							PRP	pobj	101
103	,	,											,	punct	92
104	in	in	in+advl	in	advl								IN	prep	92
105	order	order		nn		nom							NN	pobj	104
106	to	to		to									TO	aux	107
107	build	build		vbmain	phrsv	nonfinite	simple	active	nmod_cls		ncomp		VB	acl	105
108	up	up		rb	prtcle								RP	prt	107
109	,	,											,	punct	107
110	the	the		dt	art								DT	det	114
111	conditional	conditional	attr+npremod	jj	attr								JJ	amod	114
112	,	,											,	punct	114
113	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	114
114	representation	representation		nn		nom							NN	dobj	107
115	before	before		cs	cs_othr								IN	mark	118
116	you	you		pro	2nd	sg							PRP	nsubj	118
117	ever	ever	rb+advl	rb	advl								RB	advmod	118
118	start	start	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	107
119	.	.											.	punct	74

#sentid = 440
0	so	so		rb	link								RB	advmod	3
1	,	,											,	punct	3
2	this	this		pro	dem	sg							DT	nsubj	3
3	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	our	our		dt	poss								PRP$	poss	6
5	current	current	attr+npremod	jj	attr								JJ	amod	6
6	model	model		nn									NN	attr	3
7	and	and		cc	cls								CC	cc	3
8	,	,											,	punct	3
9	i	i		pro	1st	sg							PRP	nsubj	10
10	'm	be		vbmain	be	pres	simple	active					VBP	conj	3
11	certainly	certainly	rb+advl	rb	advl	ly							RB	advmod	10
12	open	open		jj	pred								JJ	acomp	10
13	to	to	in+jcomp	in	jcomp								IN	prep	12
14	suggestions	suggestion		nn	pl	nom							NNS	pobj	13
15	on	on	in+npostmod	in	nmod								IN	prep	14
16	what	what											WP	dep	21
17	,	,											,	punct	21
18													_SP	dep	21
19	(	(											-LRB-	punct	21
20	should	should		vbaux	mod	nec							MD	aux	21
21	happen	happen		vbmain	prepv	vp_w_modal	simple	active	compcls		incomp	compdel	VB	pcomp	15
22	to	to	in+advl	in	advl								IN	prep	21
23	)	)											-RRB-	punct	22
24													_SP	dep	15

#sentid = 441
0	uh	uh											UH	intj	1
1	uh	uh											UH	intj	6
2	Lisa	lisa		nn		proper							NNP	dep	6
3	c-	c-											XX	nmod	2
4	can	can		vbaux	mod	pos							MD	aux	6
5	we	we		pro	1st								PRP	nsubj	6
6	do	do		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	6
7	something	something		nn	other	nom							NN	dobj	6
8	in	in	in+advl	in	advl								IN	prep	6
9	the	the		dt	art								DT	det	10
10	middle	middle		nn									NN	pobj	8
11	like	like											UH	intj	6
12	if	if		cs	cnd								IN	mark	14
13	you	you		pro	2nd	sg							PRP	nsubj	14
14	look	look	finitecls+advl	vbmain	prepv	pres	simple	active	advlcls		conditional		VBP	advcl	6
15	at	at	in+advl	in	advl								IN	prep	14
16	the	the		dt	art								DT	det	20
17	cruise	cruise	nn+npremod	nn			npremod						NN	compound	18
18	missile	missile	nn+npremod	nn			npremod						NN	compound	19
19	type	type	nn+npremod	nn			npremod						NN	compound	20
20	thing	thing		nn		nom							NN	pobj	15
21	where	where		rb	advl								WRB	advmod	24
22	you	you		pro	2nd	sg							PRP	nsubj	24
23	,	,											,	punct	24
24	store	store	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	20
25	some	some		dt									DT	det	27
26	static	static	attr+npremod	jj	attr								JJ	amod	27
27	information	information		nn		nom							NN	dobj	24
28	of	of	of+npostmod	in	nmod								IN	prep	27
29	terrain	terrain	nn+npremod	nn			npremod						NN	compound	30
30	data	datum		nn	pl								NNS	pobj	28
31	right	right	rb+advl	rb	advl								JJ	advmod	24
32	?	?											.	punct	24

#sentid = 442
0													_SP	dep	0
1	of	of		in	in_othr								IN	prep	0
2	train	train	nn+npremod	nn			npremod						NN	compound	3
3	data	datum		nn	pl								NNS	pobj	1
4	?	?											.	punct	1

#sentid = 443
0													_SP	dep	0
1	of	of		in	in_othr								IN	prep	0
2	terrain	terrain	nn+npremod	nn			npremod						NN	compound	3
3	terrain	terrain		nn									NN	pobj	1
4	.	.											.	punct	1

#sentid = 444
0													_SP	dep	1
1	maps	map		nn	pl								NNS	ROOT	1
2	of	of	of+npostmod	in	nmod								IN	prep	1
3	the	the		dt	art								DT	det	5
4													_SP	dep	5
5	terrain	terrain		nn									NN	pobj	2
6	.	.											.	punct	1

#sentid = 445
0													_SP	dep	1
1	maps	map		nn	pl								NNS	ROOT	1
2	of	of	of+npostmod	in	nmod								IN	prep	1
3	the	the		dt	art								DT	det	4
4	terrain	terrain		nn									NN	pobj	2
5	.	.											.	punct	1

#sentid = 446
0													_SP	dep	2
1	oh	oh											UH	intj	2
2	terrain	terrain		nn									NN	ROOT	2
3	,	,											,	punct	2
4	okay	okay											UH	intj	2
5	.	.											.	punct	2

#sentid = 447
0													_SP	dep	3
1	oh	oh											UH	intj	3
2	i	i		pro	1st	sg							PRP	nsubj	3
3	'm	be		vbmain	be	pres	simple	active					VBP	ROOT	3
4	sorry	sorry		jj	pred								JJ	acomp	3
5	.	.											.	punct	3

#sentid = 448
0													_SP	dep	0
1	whereas	whereas	rb+advl	rb	advl								IN	advmod	4
2	you	you		pro	2nd	sg							PRP	nsubj	4
3	're	be		vbaux									VBP	aux	4
4	dealing	deal	finitecls+advl	vbmain	prepv	pres	prog	active	advlcls				VBG	advcl	0
5	with	with	in+advl	in	advl								IN	prep	4
6	a	a		dt	art								DT	det	13
7	highly	highly	rb+jjrbmod	rb	adjmod	ly							RB	advmod	8
8	dynamic	dynamic	attr+npremod	jj	attr								JJ	amod	13
9	,	,											,	punct	13
10	you	you		pro	2nd	sg							PRP	nsubj	11
11	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	13
12	unpredictable	unpredictable	attr+npremod	jj	attr								JJ	amod	13
13	environment	environment		nn		nom							NN	pobj	5
14	.	.											.	punct	4

#sentid = 449
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	0

#sentid = 450
0													_SP	dep	7
1	and	and		cc	phrs								CC	cc	7
2	,	,											,	punct	7
3	there	there	rb+advl	rb	advl								RB	advmod	7
4	,	,											,	punct	7
5	can	can		vbaux	mod	pos							MD	aux	7
6	we	we		pro	1st								PRP	nsubj	7
7	conceive	conceive		vbmain	prepv	vp_w_modal	simple	active					VB	ROOT	7
8	of	of	in+advl	in	advl								IN	prep	7
9	something	something		nn	other	nom							NN	pobj	8
10	in	in	in+npostmod	in	nmod								IN	prep	9
11	the	the		dt	art								DT	det	12
12	middle	middle		nn									NN	pobj	10
13	...	...											.	punct	7
14	?	?											.	punct	7

#sentid = 451
0													_SP	dep	5
1	i	i		nn	1st	proper							NNP	dep	5
2	,	,											,	punct	5
3	can	can		vbaux	mod	pos							MD	aux	5
4	you	you		pro	2nd	sg							PRP	nsubj	5
5	define	define		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	5
6	what	what											WP	pobj	9
7	you	you		pro	2nd	sg							PRP	nsubj	8
8	mean	mean	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	5
9	by	by	in+advl	in	advl								IN	prep	8
10	in	in	in+advl	in	advl								IN	prep	8
11	the	the		dt	art								DT	det	12
12	middle	middle		nn									NN	pobj	10
13	?	?											.	punct	5

#sentid = 452
0	what	what											WP	pobj	4
1													_SP	dep	2
2	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	it	it		pro	3rd	sg							PRP	nsubj	2
4	in	in	in+advl	in	advl								IN	prep	2
5	the	the		dt	art								DT	det	6
6	middle	middle		nn									NN	pobj	4
7	of	of	of+npostmod	in	nmod								IN	prep	6
8	?	?											.	punct	2

#sentid = 453
0													_SP	dep	3
1	it	it		pro	3rd	sg							PRP	nsubj	3
2	would	would		vbaux	mod	prd							MD	aux	3
3	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	3
4	the	the		dt	art								DT	det	5
5	meaning	meaning		nn		nom							NN	dobj	3
6	that	that		relpro	relpro_that	sg							WDT	nsubj	10
7	uh	uh											UH	intj	10
8	,	,											,	punct	10
9	would	would		vbaux	mod	prd							MD	aux	10
10	try	try	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	5
11	to	to		to									TO	aux	12
12	use	use	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	10
13	,	,											,	punct	12
14	uh	uh											UH	intj	12
15	static	static	attr+npremod	jj	attr								JJ	amod	16
16	information	information		nn		nom							NN	dobj	12
17	as	as		rb	othr								RB	advmod	18
18	much	much	rb+advl	rb	advl								RB	advmod	12
19	as	as		cs	cs_othr								IN	mark	21
20	we	we		pro	1st								PRP	nsubj	21
21	can	can	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		MD	advcl	18
22	,	,											,	punct	12
23	but	but		cc	phrs								CC	cc	12
24	provide	provide		vbmain	vblex	nonfinite	simple	active					VB	conj	12
25	the	the		dt	art								DT	det	26
26	provisions	provision		nn	pl								NNS	dobj	24
27	,	,											,	punct	26
28	for	for	in+npostmod	in	nmod								IN	prep	26
29	,	,											,	punct	28
30	these	these		dt	dt_dem								DT	det	43
31	unanticipated	unanticipated		jj	attr								JJ	amod	43
32													_SP	dep	43
33	well	well											UH	intj	43
34	,	,											,	punct	43
35	right	right	rb+jjrbmod	rb	othr								RB	advmod	36
36	now	now	rb+advl	rb	advl								RB	advmod	43
37	,	,											,	punct	43
38	what	what		dt									WDT	det	39
39	hel-	hel-											XX	dep	43
40	the	the		dt	art								DT	det	41
41	events	event		nn	pl	nom							NNS	nsubj	43
42	would	would		vbaux	mod	prd							MD	aux	43
43	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	pobj	28
44	to	to		to									TO	aux	46
45	be	be		vbaux									VB	auxpass	46
46	modelled	model		vbmain	vblex	nonfinite	simple	pasv_agls	compcls		vcomp	compdel	VBN	xcomp	43
47	as	as	in+advl	in	advl								IN	prep	46
48	state	state	nn+npremod	nn		nom	npremod						NN	compound	49
49	features	feature		nn	pl								NNS	pobj	47
50	which	which											WDT	nsubj	51
51	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	43
52	not	not											RB	neg	53
53	unreasonable	unreasonable		jj	pred								JJ	acomp	51
54	to	to		to									TO	aux	55
55	think	think	tocls+jcomp	vbmain	prepv	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	53
56	of	of	in+advl	in	advl								IN	prep	55
57	,	,											,	punct	10
58	so	so		cc	cls								CC	cc	10
59	to	to		to									TO	aux	60
60	handle	handle	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	68
61	it	it		pro	3rd	sg							PRP	dobj	60
62	with	with	in+advl	in	advl								IN	prep	60
63	our	our		dt	poss								PRP$	poss	65
64	current	current	attr+npremod	jj	attr								JJ	amod	65
65	architecture	architecture		nn		nom							NN	pobj	62
66	we	we		pro	1st								PRP	nsubj	68
67	could	could		vbaux	mod	pos							MD	aux	68
68	model	model		vbmain	vblex	vp_w_modal	simple	active					VB	conj	10
69	,	,											,	punct	68
70	uh	uh											UH	intj	68
71	one	one		pro	other	pl							CD	dobj	68
72	of	of		in	in_othr								IN	prep	71
73	these	these		dt	dt_dem								DT	det	74
74	events	event		nn	pl	nom							NNS	pobj	72
75	occurring	occur	ingcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	71
76	as	as	in+advl	in	advl								IN	prep	75
77	a	a		dt	art								DT	det	79
78	state	state	nn+npremod	nn		nom	npremod						NN	compound	79
79	feature	feature		nn		nom							NN	pobj	76
80	and	and		cc	phrs								CC	cc	68
81	have	have		vbmain	vblex	nonfinite	simple	active					VB	conj	68
82	that	that		pro	dem	sg							DT	nsubj	84
83	,	,											,	punct	84
84	be	be		vbmain	be	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	81
85	something	something		nn		nom							NN	attr	84
86	we	we		pro	1st								PRP	nsubj	88
87	would	would		vbaux	mod	prd							MD	aux	88
88	react	react	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	85
89	to	to	in+advl	in	advl								IN	prep	88
90	dynamically	dynamically	rb+advl	rb	advl	ly							RB	advmod	88
91	.	.											.	punct	68

#sentid = 454
0	so	so		rb	link								RB	advmod	2
1	that	that		pro	dem	sg							DT	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	4
4	of	of		rb	othr								RB	advmod	8
5	the	the		dt	art								DT	det	8
6	next	next	attr+npremod	jj	attr								JJ	amod	8
7	,	,											,	punct	8
8	part	part		nn									NN	attr	2
9	that	that		pro	dem	sg							WDT	dobj	12
10	i	i		pro	1st	sg							PRP	nsubj	12
11	'm	be		vbaux									VBP	aux	12
12	gon	go		vbaux									TO	aux	14
13	na	to		vbaux									TO	aux	14
14	get	get		vbmain	vblex	nonfinite	simple	active	nmod_cls		rel		VB	relcl	8
15	to	to	in+advl	in	advl								IN	prep	14
16	here	here	rb+advl	rb	advl								RB	advmod	14
17	.	.											.	punct	2

#sentid = 455
0	so	so		rb	othr								RB	advmod	4
1	,	,											,	punct	4
2	i	i		pro	1st	sg							PRP	nsubj	4
3	was	be		vbaux									VBD	aux	4
4	gon	go											TO	ccomp	29
5	na	to		vbaux									TO	aux	6
6	go	go		vbmain	prepv	nonfinite	simple	active	compcls			compdel	VB	xcomp	4
7	through	through	in+advl	in	advl								IN	prep	6
8	an	an		dt									DT	det	9
9	example	example		nn									NN	pobj	7
10	that	that		relpro	relpro_that	sg							WDT	nsubj	11
11	talked	talk	finitecls+rel	vbmain	prepv	past	simple	active	nmod_cls	thatcls	rel		VBD	relcl	9
12	about	about	in+advl	in	advl								IN	prep	11
13	the	the		dt	art								DT	det	14
14	computations	computation		nn	pl	nom							NNS	pobj	12
15	of	of	of+npostmod	in	nmod								IN	prep	14
16	these	these		dt	dt_dem								DT	det	17
17	probabilities	probability		nn	pl	nom							NNS	pobj	15
18	,	,											,	punct	29
19	um	um											UH	intj	29
20	,	,											,	punct	29
21	basically	basically	rb+advl	rb	advl	ly							RB	advmod	29
22	,	,											,	punct	29
23	in	in	in+advl	in	advl								IN	prep	29
24	this	this		dt	dt_dem								DT	det	26
25	simple	simple	attr+npremod	jj	attr								JJ	amod	26
26	example	example		nn									NN	pobj	23
27	,	,											,	punct	29
28	i	i		pro	1st	sg							PRP	nsubj	29
29	start	start		vbmain	phrsv	pres	simple	active					VBP	ROOT	29
30	out	out		rb	prtcle								RP	prt	29
31	,	,											,	punct	29
32	um	um											UH	intj	29
33	,	,											,	punct	29
34	having	have	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	29
35	two	two											CD	nummod	37
36	temporal	temporal	attr+npremod	jj	attr								JJ	amod	37
37	transitions	transition		nn	pl	nom							NNS	dobj	34
38	,	,											,	punct	29
39	the	the		dt	art								DT	det	41
40	blue	blue	attr+npremod	jj	attr								JJ	amod	41
41	lines	line		nn	pl								NNS	nsubj	42
42	talk	talk		vbmain	prepv	pres	simple	active					VBP	conj	29
43	about	about	in+advl	in	advl								IN	prep	42
44	their	their		dt	poss								PRP$	poss	45
45	probabilities	probability		nn	pl	nom							NNS	pobj	43
46	,	,											,	punct	45
47	um	um											UH	intj	45
48	unconditional	unconditional		jj	attr								JJ	amod	45
49	,	,											,	punct	42
50	and	and		cc	cls								CC	cc	42
51	the	the		dt	art								DT	det	53
52	red	red	attr+npremod	jj	attr								JJ	amod	53
53	lines	line		nn	pl								NNS	nsubj	54
54	talk	talk		vbmain	prepv	pres	simple	active					VBP	conj	42
55	about	about	in+advl	in	advl								IN	prep	54
56	the	the		dt	art								DT	det	58
57	conditional	conditional	attr+npremod	jj	attr								JJ	amod	58
58	probabilities	probability		nn	pl	nom							NNS	pobj	55
59	when	when		rb	advl								WRB	advmod	61
60	you	you		pro	2nd	sg							PRP	nsubj	61
61	consider	consider	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	54
62	the	the		dt	art								DT	det	63
63	probability	probability		nn		nom							NN	dobj	61
64	of	of	of+npostmod	in	nmod								IN	prep	63
65	both	both											DT	nsubj	68
66	of	of		in	in_othr								IN	prep	65
67	them	they		pro	pl								PRP	pobj	66
68	occurring	occur	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	64
69	,	,											,	punct	68
70	um	um											UH	intj	68
71	in	in	in+advl	in	advl								IN	prep	68
72	the	the		dt	art								DT	det	74
73	same	same	attr+npremod	jj	attr								JJ	amod	74
74	state	state		nn		nom							NN	pobj	71
75	.	.											.	punct	54

#sentid = 456
0	at	at	in+advl	in	advl								IN	prep	8
1	that	that		dt	dt_dem								DT	det	2
2	point	point		nn									NN	pobj	0
3	,	,											,	punct	8
4	um	um											UH	intj	8
5	,	,											,	punct	8
6	we	we		pro	1st								PRP	nsubj	8
7	can	can		vbaux	mod	pos							MD	aux	8
8	calculate	calculate		vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	46
9	the	the		dt	art								DT	det	11
10	cumulative	cumulative	attr+npremod	jj	attr								JJ	amod	11
11	probabilities	probability		nn	pl	nom							NNS	dobj	8
12	which	which		relpro	relpro_wh								WDT	nsubj	13
13	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	11
14	that	that		comp	comp_that								DT	mark	15
15	summed	sum		vbmain	vblex	nonfinite	simple	active	compcls	edcls	vcomp	compdel	VBN	ccomp	13
16	,	,											,	punct	15
17	from	from	in+advl	in	advl								IN	prep	15
18	the	the		dt	art								DT	det	20
19	time	time	nn+npremod	nn			npremod						NN	compound	20
20	step	step		nn									NN	pobj	17
21	zero	zero											CD	nummod	20
22	to	to		to									TO	aux	23
23	see	see	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	15
24	what	what											WP	nsubj	25
25	happens	happen	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	23
26	,	,											,	punct	25
27	um	um											UH	intj	25
28	over	over	in+advl	in	advl								IN	prep	25
29	time	time		nn									NN	pobj	28
30	until	until		cs	cs_othr								IN	mark	32
31	they	they		pro	pl								PRP	nsubj	32
32	converge	converge	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	40
33	,	,											,	punct	40
34	basically	basically	rb+advl	rb	advl	ly							RB	advmod	40
35	until	until		cs	cs_othr								IN	mark	40
36	the	the		dt	art								DT	det	37
37	sum	sum		nn									NN	nsubj	40
38	of	of	of+npostmod	in	nmod								IN	prep	37
39	them	they		pro	pl								PRP	pobj	38
40	approaches	approach	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	25
41	one	one		pro	other	pl							CD	dobj	40
42	or	or		cc	phrs								CC	cc	40
43	else	else											RB	conj	40
44	,	,											,	punct	46
45	there	there											EX	expl	46
46	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	46
47	no	no		dt									DT	det	48
48	probability	probability		nn		nom							NN	attr	46
49	that	that		relpro	relpro_that								IN	mark	51
50	anything'll	anything'll		nn									NN	nsubj	51
51	happen	happen		vbmain	vblex	nonfinite	simple	active	nmod_cls	thatcls	ncomp		VB	acl	48
52	later	later	rb+advl	rb	advl								RB	advmod	51
53	,	,											,	punct	46
54	um	um											UH	intj	46
55	which	which											WDT	nsubj	56
56	gives	give	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	46
57	us	we		pro	pl								PRP	dative	56
58	these	these		dt	dt_dem								DT	det	60
59	cumulative	cumulative	attr+npremod	jj	attr								JJ	amod	60
60	probabilities	probability		nn	pl	nom							NNS	dobj	56
61	of	of	of+npostmod	in	nmod								IN	prep	60
62	sixty	sixty											CD	compound	64
63	-	-											HYPH	punct	64
64	five	five											CD	nummod	65
65	percent	percent		nn		nom							NN	pobj	61
66	and	and		cc	phrs								CC	cc	65
67	thirty	thirty											CD	compound	69
68	-	-											HYPH	punct	69
69	five	five											CD	nummod	70
70	percent	percent		nn		nom							NN	conj	65
71	.	.											.	punct	46

#sentid = 457
0	and	and		cc	cls								CC	cc	17
1	,	,											,	punct	17
2	um	um											UH	intj	17
3	that	that		pro	dem	sg							DT	nsubj	17
4	also	also	rb+advl	rb	advl								RB	advmod	17
5	for	for	in+advl	in	advl								IN	prep	17
6	this	this		dt	dt_dem								DT	det	9
7	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	8
8	simple	simple	attr+npremod	jj	attr								JJ	amod	9
9	example	example		nn									NN	pobj	5
10	since	since		cs	cs_othr								IN	mark	12
11	it	it		pro	3rd	sg							PRP	nsubj	12
12	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	17
13	a	a		dt	art								DT	det	15
14	tree	tree	nn+npremod	nn		nom	npremod						NN	compound	15
15	structure	structure		nn		nom							NN	attr	12
16	,	,											,	punct	17
17	gives	give		vbmain	vblex	pres	simple	active					VBZ	ROOT	17
18	us	we		pro	pl								PRP	dative	17
19	the	the		dt	art								DT	det	21
20	state	state	nn+npremod	nn		nom	npremod						NN	compound	21
21	probabilities	probability		nn	pl	nom							NNS	dobj	17
22	for	for	in+npostmod	in	nmod								IN	prep	21
23	S	s		nn									NN	pobj	22
24	-	-											HYPH	punct	23
25	one	one											CD	nummod	23
26	and	and		cc	phrs								CC	cc	23
27	S	s		nn									NN	conj	23
28	-	-											HYPH	punct	27
29	two	two											CD	nummod	27
30	...	...											:	punct	17
31	so	so		rb	link								RB	advmod	45
32	at	at	in+advl	in	advl								IN	prep	45
33	that	that		dt	dt_dem								DT	det	34
34	point	point		nn									NN	pobj	32
35	since	since		cs	cs_othr								IN	mark	37
36	it	it		pro	3rd	sg							PRP	nsubj	37
37	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	45
38	a	a		dt	art								DT	det	42
39	best	good	rb+jjrbmod	rb	adjmod								JJS	advmod	41
40	-	-											HYPH	punct	41
41	first	first	attr+npremod	jj	attr								JJ	amod	42
42	search	search		nn									NN	attr	37
43	we	we		pro	1st								PRP	nsubj	45
44	would	would		vbaux	mod	prd							MD	aux	45
45	go	go		vbmain	vblex	vp_w_modal	simple	active					VB	conj	17
46	to	to	in+advl	in	advl								IN	prep	45
47	S	s		nn									NN	pobj	46
48	-	-											HYPH	punct	47
49	one	one											CD	nummod	47
50	and	and		cc	phrs								CC	cc	45
51	try	try		vbmain	vblex	nonfinite	simple	active					VB	conj	45
52	to	to		to									TO	aux	53
53	expand	expand	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	51
54	it	it		pro	3rd	sg							PRP	dobj	53
55	but	but		cc	phrs								CC	cc	45
56	in	in	in+advl	in	advl								IN	prep	64
57	this	this		dt	dt_dem								DT	det	61
58	,	,											,	punct	61
59	extremely	extremely	rb+jjrbmod	rb	adjmod	ly							RB	advmod	60
60	simple	simple	attr+npremod	jj	attr								JJ	amod	61
61	example	example		nn									NN	pobj	56
62	we	we		pro	1st								PRP	nsubj	64
63	'll	will		vbaux	mod								MD	aux	64
64	pretend	pretend		vbmain	vblex	vp_w_modal	simple	active					VB	conj	45
65	there	there											EX	expl	66
66	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	64
67	no	no		dt									DT	det	68
68	transitions	transition		nn	pl	nom							NNS	attr	66
69	out	out	in+npostmod	in	nmod								IN	prep	68
70	of	of		in	in_othr								IN	prep	69
71	S	s		nn									NN	pobj	70
72	-	-											HYPH	punct	71
73	one	one											CD	nummod	71
74	.	.											.	punct	64

#sentid = 458
0	in	in	in+advl	in	advl								IN	prep	5
1	which	which		dt									WDT	det	2
2	case	case		nn									NN	pcomp	0
3	then	then		rb	link								RB	advmod	5
4	we	we		pro	1st								PRP	nsubj	5
5	expand	expand		vbmain	vblex	pres	simple	active					VBP	ROOT	5
6	to	to	in+advl	in	advl								IN	prep	5
7	S	s		nn		proper							NNP	pobj	6
8	-	-											HYPH	punct	7
9	two	two											CD	nummod	7
10	.	.											.	punct	5

#sentid = 459
0	so	so		rb	link								RB	advmod	7
1	,	,											,	punct	7
2	in	in	in+advl	in	advl								IN	prep	7
3	S	s		nn									NN	pobj	2
4	-	-											HYPH	punct	3
5	two	two											CD	nummod	3
6	there	there											EX	expl	7
7	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	7
8	a	a		dt	art								DT	det	9
9	probability	probability		nn		nom							NN	attr	7
10	of	of	of+npostmod	in	nmod								IN	prep	9
11	failure	failure		nn		nom							NN	pobj	10
12	,	,											,	punct	7
13	so	so		cc	cls								CC	cc	7
14	,	,											,	punct	16
15	we	we		pro	1st								PRP	nsubj	16
16	have	have		vbmain	vblex	pres	simple	active					VBP	conj	7
17	to	to		to									TO	aux	18
18	select	select		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	16
19	an	an		dt									DT	det	20
20	action	action		nn		nom							NN	dobj	18
21	which	which		relpro	relpro_wh								WDT	nsubj	22
22	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	20
23	the	the		dt	art								DT	det	25
24	climb	climb	nn+npremod	nn			npremod						NN	compound	25
25	action	action		nn		nom							NN	attr	22
26	,	,											,	punct	20
27	that	that		relpro	relpro_that	sg							WDT	nsubj	28
28	preempts	preempt	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	20
29	this	this		dt	dt_dem								DT	det	30
30	failure	failure		nn		nom							NN	dobj	28
31	and	and		cc	cls								CC	cc	16
32	then	then		rb	link								RB	advmod	34
33	we	we		pro	1st								PRP	nsubj	34
34	have	have		vbmain	vblex	pres	simple	active					VBP	conj	16
35	to	to		to									TO	aux	36
36	calculate	calculate		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	34
37	the	the		dt	art								DT	det	38
38	deadline	deadline		nn									NN	dobj	36
39	,	,											,	punct	38
40	or	or		cc	phrs								CC	cc	38
41	max	max	nn+npremod	nn			npremod						NN	compound	43
42	-	-											HYPH	punct	43
43	delta	delta		nn									NN	conj	38
44	to	to		to									TO	aux	45
45	avoid	avoid	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	34
46	that	that		dt	dt_dem								DT	det	47
47	failure	failure		nn		nom							NN	dobj	45
48	.	.											.	punct	34

#sentid = 460
0	initially	initially	rb+advl	rb	advl	ly							RB	advmod	2
1	we	we		pro	1st								PRP	nsubj	2
2	set	set		vbmain	vblex	past	simple	active					VBD	ROOT	2
3	that	that		pro	dem	sg							DT	dobj	2
4	to	to	in+advl	in	advl								IN	prep	2
5	infinity	infinity		nn		nom							NN	pobj	4
6	because	because		cs	cos								IN	mark	10
7	we	we		pro	1st								PRP	nsubj	10
8	do	do		vbaux									VBP	aux	10
9	n't	not											RB	neg	10
10	know	know	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VB	advcl	2
11	what	what											WP	dobj	16
12	it	it		pro	3rd	sg							PRP	nsubjpass	14
13	's	be		vbaux									VBZ	auxpass	14
14	supposed	suppose	thatcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	10
15	to	to		to									TO	aux	16
16	be	be	tocls+vcomp	vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	14
17	,	,											,	punct	10
18	in	in	in+advl	in	advl								IN	prep	22
19	which	which		dt									WDT	det	20
20	case	case		nn									NN	pcomp	18
21	we	we		pro	1st								PRP	nsubj	22
22	determine	determine	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBP	advcl	10
23	that	that		comp	comp_that								IN	mark	28
24	it	it		pro	3rd	sg							PRP	nsubj	28
25	w-	w-											XX	dep	28
26	it	it		pro	3rd	sg							PRP	nsubj	28
27	will	will		vbaux	mod	prd							MD	aux	28
28	fail	fail	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	22
29	.	.											.	punct	2

#sentid = 461
0	so	so		rb	link								RB	advmod	4
1	,	,											,	punct	4
2	then	then		rb	link								RB	advmod	4
3	we	we		pro	1st								PRP	nsubj	4
4	identified	identify		vbmain	vblex	past	simple	active					VBD	ROOT	4
5	,	,											,	punct	4
6	what	what											WP	attr	10
7	the	the		dt	art								DT	det	9
8	minimum	minimum	attr+npremod	jj	attr								JJ	amod	9
9	delay	delay		nn									NN	nsubj	10
10	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	4
11	,	,											,	punct	10
12	for	for	in+advl	in	advl								IN	prep	10
13	,	,											,	punct	12
14	T	t	nn+npremod	nn		proper	npremod						NNP	compound	18
15	-	-											HYPH	punct	18
16	T	t	nn+npremod	nn			npremod						NN	compound	18
17	-	-											HYPH	punct	18
18	F	f		nn			npremod						NN	compound	20
19	-	-											HYPH	punct	20
20	zero	zero											CD	pobj	12
21	,	,											,	punct	12
22	um	um											UH	intj	12
23	which	which		relpro	relpro_wh								WDT	nsubj	24
24	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	9
25	five	five											CD	attr	24
26	as	as		cs	cs_othr								IN	mark	29
27	you	you		pro	2nd	sg							PRP	nsubj	29
28	can	can		vbaux	mod	pos							MD	aux	29
29	see	see	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	24
30	from	from	in+advl	in	advl								IN	prep	29
31	the	the		dt	art								DT	det	36
32	,	,											,	punct	36
33	um	um											UH	intj	36
34	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	35
35	rate	rate	nn+npremod	nn		nom	npremod						NN	compound	36
36	function	function		nn		nom							NN	pobj	30
37	,	,											,	punct	10
38	at	at	in+advl	in	advl								IN	prep	43
39	which	which		dt									WDT	det	40
40	case	case		nn									NN	pcomp	38
41	we	we		pro	1st								PRP	nsubj	43
42	can	can		vbaux	mod	pos							MD	aux	43
43	calculate	calculate	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	9
44	,	,											,	punct	43
45	um	um											UH	intj	43
46	that	that		comp	comp_that								IN	mark	56
47	the	the		dt	art								DT	det	50
48	max	max	attr+npremod	nn	attr								NN	amod	50
49	-	-											HYPH	punct	50
50	delta	delta		nn									NN	nsubj	56
51	or	or		cc	phrs								CC	cc	50
52	deadline	deadline		nn									NN	conj	50
53	for	for	in+npostmod	in	nmod								IN	prep	52
54	the	the		dt	art								DT	det	55
55	action	action		nn		nom							NN	pobj	53
56	has	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	43
57	to	to		to									TO	aux	58
58	be	be		vbmain	be	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	56
59	five	five											CD	attr	58
60	also	also	rb+advl	rb	advl								RB	advmod	58
61	.	.											.	punct	4

#sentid = 462
0	that	that		pro	dem	sg							DT	nsubj	1
1	gives	give		vbmain	vblex	pres	simple	active					VBZ	ROOT	1
2	us	we		pro	pl								PRP	dative	1
3	these	these		dt	dt_dem								DT	det	5
4	state	state	nn+npremod	nn		nom	npremod						NN	compound	5
5	probabilities	probability		nn	pl	nom							NNS	dobj	1
6	for	for	in+npostmod	in	nmod								IN	prep	5
7	the	the		dt	art								DT	det	11
8	entire	entire	attr+npremod	jj	attr								JJ	amod	11
9	state	state	nn+npremod	nn		nom	npremod						NN	compound	11
10	-	-											HYPH	punct	11
11	space	space		nn									NN	pobj	6
12	.	.											.	punct	1

#sentid = 463
0	um	um											UH	intj	9
1	one	one											CD	meta	9
2	interesting	interesting		jj	attr								JJ	amod	1
3	,	,											,	punct	9
4	the	the		dt	art								DT	det	5
5	table	table		nn									NN	nsubj	9
6	on	on	in+npostmod	in	nmod								IN	prep	5
7	the	the		dt	art								DT	det	8
8	center	center		nn		nom							NN	pobj	6
9	shows	show		vbmain	vblex	pres	simple	active					VBZ	ROOT	9
10	well	well											UH	intj	11
11	what	what											WP	meta	9
12	if	if		cs	cnd								IN	mark	16
13	you	you		pro	2nd	sg							PRP	nsubj	16
14	could	could		vbaux	mod	pos							MD	aux	16
15	n't	not											RB	neg	16
16	meet	meet	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		conditional		VB	advcl	11
17	that	that		dt	dt_dem								DT	det	18
18	deadline	deadline		nn									NN	dobj	16
19	at	at	in+advl	in	advl								IN	prep	16
20	five	five											CD	pobj	19
21	?	?											.	punct	11

#sentid = 464
0	um	um											UH	intj	16
1	what	what											WP	dep	16
2	if	if		cs	cnd								IN	mark	16
3	you	you		pro	2nd	sg							PRP	nsubj	16
4	,	,											,	punct	16
5	fail	fail	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBP	advcl	16
6	during	during	in+advl	in	advl								IN	prep	5
7	scheduling	scheduling		nn		nom							NN	pobj	6
8	then	then		rb	link								RB	advmod	16
9	,	,											,	punct	16
10	um	um											UH	intj	16
11	at	at	in+advl	in	advl								IN	prep	16
12	that	that		dt	dt_dem								DT	det	13
13	point	point		nn									NN	pobj	11
14	you	you		pro	2nd	sg							PRP	nsubj	16
15	would	would		vbaux	mod	prd							MD	aux	16
16	have	have		vbmain	vblex	vp_w_modal	simple	active			conditional		VB	ROOT	16
17	to	to		to									TO	aux	18
18	relax	relax		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	16
19	that	that		dt	dt_dem								DT	det	20
20	deadline	deadline		nn									NN	dobj	18
21	perhaps	perhaps	rb+advl	rb	advl								RB	advmod	18
22	,	,											,	punct	18
23	or	or		cc	phrs								CC	cc	18
24	get	get		vbmain	vblex	nonfinite	simple	active					VB	conj	18
25	a	a		dt	art								DT	det	27
26	new	new	attr+npremod	jj	attr								JJ	amod	27
27	action	action		nn		nom							NN	dobj	24
28	.	.											.	punct	16

#sentid = 465
0	this	this		pro	dem	sg							DT	nsubj	1
1	shows	show		vbmain	vblex	pres	simple	active					VBZ	ROOT	1
2	how	how		comp	comp_wh								WRB	advmod	10
3	,	,											,	punct	10
4	computing	compute		vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	csubj	10
5	these	these		dt	dt_dem								DT	det	7
6	state	state	nn+npremod	nn		nom	npremod						NN	compound	7
7	probabilities	probability		nn	pl	nom							NNS	dobj	4
8	would	would		vbaux	mod	prd							MD	aux	10
9	,	,											,	punct	10
10	allow	allow	whcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	whcls	vcomp		VB	ccomp	1
11	you	you		pro	2nd	sg							PRP	nsubj	15
12	to	to		to									TO	aux	15
13	at	at		rb	othr								IN	advmod	14
14	least	least	rb+advl	rb	advl		splaux						JJS	advmod	15
15	get	get		vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	10
16	a	a		dt	art								DT	det	17
17	sense	sense		nn									NN	dobj	15
18	of	of	of+npostmod	in	nmod								IN	prep	17
19	what	what											WP	attr	24
20	your	your		dt	poss								PRP$	poss	21
21	probability	probability		nn		nom							NN	nsubj	24
22	of	of	of+npostmod	in	nmod								IN	prep	21
23	failure	failure		nn		nom							NN	pobj	22
24	is	be	whcls+incomp	vbmain	be	pres	simple	active	compcls	whcls	incomp		VBZ	pcomp	18
25	so	so		cs	cs_othr								IN	mark	39
26	,	,											,	punct	39
27	at	at	in+advl	in	advl								IN	prep	39
28	this	this		dt	dt_dem								DT	det	29
29	point	point		nn									NN	pobj	27
30	if	if		cs	cnd								IN	mark	32
31	you	you		pro	2nd	sg							PRP	nsubj	32
32	chose	choose	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	39
33	a	a		dt	art								DT	det	34
34	deadline	deadline		nn									NN	dobj	32
35	of	of	of+npostmod	in	nmod								IN	prep	34
36	six	six											CD	pobj	35
37	you	you		pro	2nd	sg							PRP	nsubj	39
38	would	would		vbaux	mod	prd							MD	aux	39
39	have	have	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	10
40	a	a		dt	art								DT	det	43
41	one	one											CD	nummod	42
42	percent	percent	nn+npremod	nn		nom	npremod						NN	compound	43
43	chance	chance		nn		nom							NN	dobj	39
44	of	of	of+npostmod	in	nmod								IN	prep	43
45	failing	fail		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	pobj	44
46	from	from	in+advl	in	advl								IN	prep	45
47	that	that		dt	dt_dem								DT	det	48
48	state	state		nn		nom							NN	pobj	46
49	,	,											,	punct	39
50	and	and		cc	cls								CC	cc	39
51	if	if		cs	cnd								IN	mark	53
52	you	you		pro	2nd	sg							PRP	nsubj	53
53	chose	choose	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	60
54	a	a		dt	art								DT	det	55
55	deadline	deadline		nn									NN	dobj	53
56	of	of	of+npostmod	in	nmod								IN	prep	55
57	ten	ten											CD	pobj	56
58	you	you		pro	2nd	sg							PRP	nsubj	60
59	'd	would		vbaux	mod								MD	aux	60
60	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	conj	39
61	an	an		dt									DT	det	68
62	eighteen	eighteen											CD	compound	66
63	-	-											HYPH	punct	66
64	point	point		nn									NN	quantmod	66
65	-	-											HYPH	punct	66
66	seven	seven											CD	nummod	67
67	percent	percent	nn+npremod	nn		nom	npremod						NN	compound	68
68	chance	chance		nn		nom							NN	dobj	60
69	of	of	of+npostmod	in	nmod								IN	prep	68
70	failure	failure		nn		nom							NN	pobj	69
71	.	.											.	punct	1

#sentid = 466
0													_SP	dep	3
1	so	so		rb	link								RB	advmod	3
2	this	this		pro	dem	sg							DT	nsubj	3
3	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	all	all											DT	dep	3
5	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	6
6	qualitative	qualitative		jj	pred								JJ	acomp	3
7	because	because		cs	cos								IN	mark	11
8	i	i		pro	1st	sg							PRP	nsubj	11
9	did	do		vbaux									VBD	aux	11
10	n't	not											RB	neg	11
11	want	want	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		causative		VB	advcl	3
12	to	to		to									TO	aux	13
13	run	run		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	11
14	one	one											CD	nummod	15
15	example	example		nn									NN	dobj	13
16	and	and		cc	phrs								CC	cc	13
17	say	say		vbmain	vblex	nonfinite	simple	active					VB	conj	13
18	oh	oh											UH	intj	20
19	this	this		pro	dem	sg							DT	nsubj	20
20	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	17
21	absolutely	absolutely	rb+advl	rb	advl	ly							RB	advmod	20
22	the	the		dt	art								DT	det	23
23	way	way		nn									NN	attr	20
24	this	this		dt	dt_dem								DT	det	25
25	curve	curve		nn									NN	nsubj	26
26	looks	look	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	23
27	,	,											,	punct	20
28	but	but		cc	cls								CC	cc	11
29	looking	look	ingcls+advl	vbmain	prepv	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	54
30	at	at	in+advl	in	advl								IN	prep	29
31	how	how		comp	comp_wh								WRB	advmod	36
32	this	this		dt	dt_dem								DT	det	35
33	um	um											UH	intj	35
34	stochastic	stochastic	attr+npremod	jj	attr								JJ	amod	35
35	model	model		nn									NN	nsubj	36
36	improves	improve	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VBZ	pcomp	30
37	,	,											,	punct	36
38	um	um											UH	intj	36
39	CIRCA	circa	s+gen	dt	poss	proper	sgen						NNP	poss	41
40	's	's											POS	case	39
41	ability	ability		nn		nom							NN	dobj	36
42	to	to		to									TO	aux	43
43	succeed	succeed	tocls+ncomp	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	ncomp		VB	acl	41
44	um	um											UH	intj	43
45	when	when		rb	advl								WRB	advmod	49
46	resources	resource		nn	pl								NNS	nsubjpass	49
47	are	be		vbaux									VBP	auxpass	49
48	potentially	potentially	rb+advl	rb	advl	ly							RB	advmod	49
49	overutilized	overutilize	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls	whcls			VBN	advcl	43
50	,	,											,	punct	54
51	for	for	in+advl	in	advl								IN	prep	54
52	CIRCA	circa		nn		proper							NNP	pobj	51
53	it	it		pro	3rd	sg							PRP	nsubj	54
54	has	have		vbmain	vblex	pres	simple	active					VBZ	conj	11
55	a	a		dt	art								DT	det	58
56	hundred	hundred											CD	nummod	57
57	percent	percent	nn+npremod	nn		nom	npremod						NN	compound	58
58	chance	chance		nn		nom							NN	dobj	54
59	of	of	of+npostmod	in	nmod								IN	prep	58
60	success	success		nn		nom							NN	pobj	59
61	and	and		cc	cls								CC	cc	54
62	then	then		rb	link								RB	advmod	67
63	,	,											,	punct	67
64	it	it		pro	3rd	sg							PRP	nsubj	67
65	ca	can		vbaux	mod								MD	aux	67
66	n't	not											RB	neg	67
67	schedule	schedule		vbmain	vblex	vp_w_modal	simple	active					VB	conj	54
68	,	,											,	punct	67
69	things	thing		nn	pl	nom							NNS	dobj	67
70	to	to		to									TO	aux	71
71	preempt	preempt	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	69
72	all	all		dt									DT	det	73
73	variance	variance		nn		nom							NN	dobj	71
74	in	in	in+advl	in	advl								IN	prep	82
75	which	which		dt									WDT	det	76
76	case	case		nn									NN	pcomp	74
77	,	,											,	punct	82
78	it	it		pro	3rd	sg							PRP	nsubj	82
79	does	do		vbaux									VBZ	aux	82
80	n't	not											RB	neg	82
81	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	82
82	know	know	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VB	relcl	64
83	what	what											WP	dobj	85
84	to	to		to									TO	aux	85
85	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	82
86	next	next	rb+advl	rb	advl								RB	advmod	85
87	.	.											.	punct	54

#sentid = 467
0	um	um											UH	intj	6
1	in	in	in+advl	in	advl								IN	prep	6
2	CIRCA	circa		nn		proper							NNP	pobj	1
3	-	-											HYPH	punct	2
4	two	two											CD	nummod	2
5	it	it		pro	3rd	sg							PRP	nsubj	6
6	has	have		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	73
7	this	this		dt	dt_dem								DT	det	8
8	ability	ability		nn		nom							NN	dobj	6
9	to	to		to									TO	aux	10
10	make	make	tocls+ncomp	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	ncomp		VB	acl	8
11	these	these		dt	dt_dem								DT	det	14
12	trade	trade	nn+npremod	nn			npremod						NN	compound	14
13	-	-											HYPH	punct	14
14	offs	off		nn	pl								NNS	dobj	10
15	which	which											WDT	nsubj	16
16	means	mean	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	6
17	that	that		comp	comp_that								IN	mark	22
18	,	,											,	punct	22
19	its	its		dt	poss								PRP$	poss	20
20	guarantees	guarantee		nn	pl	nom							NNS	nsubj	22
21	do	do		vbaux									VBP	aux	22
22	reduce	reduce	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VB	ccomp	16
23	,	,											,	punct	22
24	from	from	in+advl	in	advl								IN	prep	22
25	a	a											DT	quantmod	26
26	hundred	hundred											CD	nummod	27
27	percent	percent		nn		nom							NN	pobj	24
28	to	to	in+advl	in	advl								IN	prep	22
29	some	some		dt									DT	det	31
30	smaller	small	attr+npremod	jj	attr								JJR	amod	31
31	number	number		nn		nom							NN	pobj	28
32	,	,											,	punct	22
33	but	but		cc	cls								CC	cc	22
34	um	um											UH	intj	38
35	,	,											,	punct	38
36	it	it		pro	3rd	sg							PRP	nsubj	38
37	still	still	rb+advl	rb	advl								RB	advmod	38
38	is	be		vbmain	be	pres	simple	active					VBZ	conj	22
39	able	able		jj	pred								JJ	acomp	38
40	to	to		to									TO	aux	41
41	have	have	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	39
42	some	some		dt									DT	det	44
43	,	,											,	punct	44
44	ability	ability		nn		nom							NN	dobj	41
45	to	to		to									TO	aux	46
46	continue	continue	tocls+ncomp	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	ncomp		VB	acl	44
47	and	and		cc	phrs								CC	cc	46
48	to	to		to									TO	aux	49
49	develop	develop		vbmain	vblex	nonfinite	simple	active		tocls			VB	conj	46
50	a	a		dt	art								DT	det	51
51	plan	plan		nn									NN	dobj	49
52	,	,											,	punct	73
53	however	however		rb	link								RB	advmod	73
54	if	if		cs	cnd								IN	mark	60
55	the	the		dt	art								DT	det	57
56	resource	resource	nn+npremod	nn			npremod						NN	compound	57
57	capacity	capacity		nn		nom							NN	nsubj	60
58	really	really	rb+advl	rb	advl	ly							RB	advmod	60
59	,	,											,	punct	60
60	gets	get	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBZ	advcl	73
61	restrictive	restrictive		jj	pred								JJ	acomp	60
62	till	till		cs	cs_othr								IN	mark	67
63	that	that		cs	cs_othr								IN	mark	67
64	it	it		pro	3rd	sg							PRP	nsubj	67
65	ca	can		vbaux	mod								MD	aux	67
66	n't	not											RB	neg	67
67	schedule	schedule	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	60
68	anything	anything		nn	other	nom							NN	dobj	67
69	then	then		rb	link								RB	advmod	73
70	it	it		pro	3rd	sg							PRP	nsubj	73
71	will	will		vbaux	mod	prd							MD	aux	73
72	eventually	eventually	rb+advl	rb	advl	ly	splaux						RB	advmod	73
73	fail	fail		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	73
74	too	too	rb+advl	rb	advl								RB	advmod	73
75	.	.											.	punct	73

#sentid = 468
0	so	so		rb	link								RB	advmod	6
1	,	,											,	punct	6
2	so	so		rb	link								RB	advmod	6
3	i	i		pro	1st	sg							PRP	nsubj	4
4	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	6
5	it	it		pro	3rd	sg							PRP	nsubj	6
6	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	6
7	,	,											,	punct	11
8	this	this		pro	dem	sg							DT	nsubj	11
9	is	be		vbaux									VBZ	aux	11
10	just	just	rb+advl	rb	advl		splaux						RB	advmod	11
11	acknowledging	acknowledge	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	6
12	that	that		comp	comp_that								IN	mark	25
13	if	if		cs	cnd								IN	mark	17
14	you	you		pro	2nd	sg							PRP	nsubj	17
15	do	do		vbaux									VBP	aux	17
16	n't	not											RB	neg	17
17	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VB	advcl	25
18	any	any		dt									DT	det	19
19	resources	resource		nn	pl								NNS	dobj	17
20	then	then		rb	link								RB	advmod	25
21	you	you		pro	2nd	sg							PRP	nsubj	25
22	obviously	obviously	rb+advl	rb	advl	ly							RB	advmod	25
23	ca	can		vbaux	mod								MD	aux	25
24	n't	not											RB	neg	25
25	succeed	succeed	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	11
26	...	...											:	punct	6

#sentid = 469
0													_SP	dep	9
1	o-	o-											XX	dep	9
2	one	one											CD	nummod	4
3	more	more		jj	attr								JJR	amod	2
4	thing	thing		nn		nom							NN	dep	9
5	c-	c-											XX	dep	9
6	ca	can		vbaux	mod								MD	aux	9
7	n't	not											RB	neg	9
8	you	you		pro	2nd	sg							PRP	nsubj	9
9	handle	handle		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	9
10	more	more	attr+npremod	jj	attr								JJR	amod	11
11	TAPs	taps		nn	pl	proper							NNPS	dobj	9
12	by	by	in+advl	in	advl								IN	prep	9
13	using	use	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	12
14	uh	uh											UH	intj	13
15	CIRCA	circa	nn+npremod	nn		proper	npremod						NNP	nmod	18
16	-	-											HYPH	punct	15
17	two	two											CD	nummod	15
18	architecture	architecture		nn		nom							NN	dobj	13
19	as	as											IN	dep	20
20	opposed	oppose	edcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	edcls	ncomp		VBN	acl	18
21	to	to	in+advl	in	advl								IN	prep	20
22	original	original	attr+npremod	jj	attr								JJ	amod	23
23	CIRCA	circa		nn		proper							NNP	pobj	21
24	?	?											.	punct	9

#sentid = 470
0													_SP	dep	2
1	more	more	attr+npremod	jj	attr								JJR	amod	2
2	TAPs	tap		nn	pl								NNS	ROOT	2
3	?	?											.	punct	2

#sentid = 471
0													_SP	dep	0
1	yeah	yeah											UH	intj	3
2	more	more	attr+npremod	jj	attr								JJR	amod	3
3	TAPs	tap		nn	pl								NNS	dobj	0
4	.	.											.	punct	0

#sentid = 472
0													_SP	dep	16
1	well	well											UH	intj	4
2	,	,											,	punct	4
3													_SP	dep	4
4	probabilistic	probabilistic		jj	attr								JJ	amod	0
5	i	i		pro	1st	sg							PRP	nsubj	6
6	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	4
7	...	...											:	punct	4
8													_SP	dep	16
9	if	if		cs	cnd								IN	mark	11
10	you	you		pro	2nd	sg							PRP	nsubj	11
11	relax	relax	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	16
12	their	their		dt	poss								PRP$	poss	13
13	deadlines	deadline		nn	pl								NNS	dobj	11
14	substantially	substantially	rb+advl	rb	advl	ly							RB	advmod	11
15	you	you		pro	2nd	sg							PRP	nsubj	16
16	could	could		vbmain	vblex	vp_w_modal	simple	active					MD	ROOT	16
17	.	.											.	punct	16

#sentid = 473
0	um	um											UH	intj	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	hard	hard		jj	pred								JJ	acomp	2
4	to	to		to									TO	aux	5
5	predict	predict	xtrapos+tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	2
6	for	for	in+advl	in	advl								IN	prep	5
7	any	any		dt									DT	det	9
8	particular	particular	attr+npremod	jj	attr								JJ	amod	9
9	domain	domain		nn									NN	pobj	6
10	whether	whether		cs	cs_othr								IN	mark	13
11	you	you		pro	2nd	sg							PRP	nsubj	13
12	'll	will		vbaux	mod								MD	aux	13
13	end	end	finitecls+advl	vbmain	phrsv	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	5
14	up	up		rb	prtcle								RP	prt	13
15	with	with	in+advl	in	advl								IN	prep	13
16	more	more	attr+npremod	jj	attr								JJR	amod	17
17	TAPs	tap		nn	pl								NNS	pobj	15
18	with	with		in	in_othr								IN	prep	15
19	longer	long	attr+npremod	jj	attr								JJR	amod	20
20	deadlines	deadline		nn	pl								NNS	pobj	18
21	,	,											,	punct	13
22	or	or		cc	cls								CC	cc	13
23	whether	whether		cs	cs_othr								IN	mark	26
24	you	you		pro	2nd	sg							PRP	nsubj	26
25	'll	will		vbaux	mod								MD	aux	26
26	end	end		vbmain	phrsv	vp_w_modal	simple	active			other_advl		VB	conj	13
27	up	up		rb	prtcle								RP	prt	26
28	with	with	in+advl	in	advl								IN	prep	26
29	the	the		dt	art								DT	det	31
30	same	same	attr+npremod	jj	attr								JJ	amod	31
31	number	number		nn		nom							NN	pobj	28
32	of	of	of+npostmod	in	nmod								IN	prep	31
33	TAPs	tap		nn	pl								NNS	pobj	32
34	that	that		relpro	relpro_that	sg							WDT	nsubj	36
35	just	just	rb+advl	rb	advl								RB	advmod	36
36	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	31
37	,	,											,	punct	31
38	smaller	small	attr+npremod	jj	attr								JJR	amod	43
39	worst	bad	attr+npremod	jj	attr								JJS	amod	41
40	-	-											HYPH	punct	41
41	case	case	nn+npremod	nn			npremod						NN	compound	43
42	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	43
43	times	time	appos+npostmod	nn	pl		nappos						NNS	appos	31
44	.	.											.	punct	2

#sentid = 474
0													_SP	dep	4
1	well	well											UH	intj	4
2	you	you		pro	2nd	sg							PRP	nsubj	4
3	do	do		vbaux									VBP	aux	4
4	have	have		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	15
5	,	,											,	punct	4
6													_SP	dep	4
7	and	and		cc	phrs								CC	cc	4
8	have	have		vbmain	vblex	pres	simple	active					VBP	conj	4
9	smaller	small	attr+npremod	jj	attr								JJR	amod	10
10	deadlines	deadline		nn	pl								NNS	dobj	8
11													_SP	dep	15
12	at	at	in+advl	in	advl								IN	prep	15
13	times	time		nn	pl								NNS	pobj	12
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	15
16	the	the		dt	art								DT	det	19
17	,	,											,	punct	19
18	alternative	alternative	attr+npremod	jj	attr								JJ	amod	19
19	way	way		nn									NN	dobj	15
20	of	of	of+npostmod	in	nmod								IN	prep	19
21	getting	get	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	20
22	out	out	in+advl	in	advl								IN	prep	21
23	of	of		in	in_othr								IN	prep	22
24	a	a											DT	pobj	23
25	of	of		in	in_othr								IN	prep	23
26	a	a		dt	art								DT	det	28
27	tight	tight	attr+npremod	jj	attr								JJ	amod	28
28	situation	situation		nn		nom							NN	pobj	25
29	,	,											,	punct	15
30													_SP	dep	15
31	right	right											UH	intj	15
32	.	.											.	punct	15

#sentid = 475
0													_SP	dep	0
1	of	of		in	in_othr								IN	prep	0
2	letting	let	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	1
3	the	the		dt	art								DT	det	5
4	other	other	attr+npremod	jj	attr								JJ	amod	5
5	transitions	transition		nn	pl	nom							NNS	nsubj	7
6	,	,											,	punct	7
7	take	take		vbmain	phrsv	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	2
8	you	you		pro	2nd	sg							PRP	dobj	7
9	out	out		rb	prtcle								RP	prt	7
10	,	,											,	punct	2
11													_SP	dep	2
12	right	right											UH	intj	2
13	.	.											.	punct	1

#sentid = 476
0													_SP	dep	0
1	and	and		cc									CC	cc	0
2	the	the		dt	art								DT	det	4
3	old	old	attr+npremod	jj	attr								JJ	amod	4
4	stuff	stuff		nn									NN	conj	0
5	if	if		cs	cnd								IN	mark	11
6	none	none		nn	other	sg							NN	nsubj	11
7	of	of	of+npostmod	in	nmod								IN	prep	6
8	those	those		pro	dem	pl							DT	pobj	7
9	was	be		vbaux									VBD	aux	11
10	reliably	reliably	rb+advl	rb	advl	ly	splaux						RB	advmod	11
11	going	go	finitecls+advl	vbmain	vblex	past	prog	active	advlcls		conditional		VBG	advcl	20
12	to	to		to									TO	aux	13
13	be	be	tocls+vcomp	vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	11
14	able	able		jj	pred								JJ	acomp	13
15	to	to		to									TO	aux	16
16	do	do	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	14
17	it	it		pro	3rd	sg							PRP	dobj	16
18	then	then		rb	link								RB	advmod	20
19	you	you		pro	2nd	sg							PRP	nsubj	20
20	were	be	finitecls+rel	vbmain	be	past	simple	active	nmod_cls		rel	reldel	VBD	relcl	4
21	stuck	stick		jj	pred	ed							VBN	acomp	20
22	but	but		cc									CC	cc	25
23	if	if		cs	cnd								IN	mark	25
24	the	the											DT	dep	25
25													_SP	dep	20
26	right	right											UH	intj	25
27	.	.											.	punct	20

#sentid = 477
0													_SP	dep	8
1	combination	combination		nn		nom							NN	nsubj	8
2	of	of	of+npostmod	in	nmod								IN	prep	1
3	a	a		dt	art								DT	det	4
4	bunch	bunch		nn									NN	pobj	2
5	of	of	of+npostmod	in	nmod								IN	prep	4
6	those	those		pro	dem	pl							DT	pobj	5
7	now	now		rb	othr								RB	advmod	8
8	will	will		vbmain	vblex	vp_w_modal	simple	active					MD	ROOT	8
9	,	,											,	punct	10
10													_SP	dep	8
11	right	right											UH	intj	10
12	.	.											.	punct	8

#sentid = 478
0													_SP	dep	2
1	probabilistically	probabilistically	rb+advl	rb	advl	ly							RB	advmod	2
2	take	take		vbmain	vblex	nonfinite	simple	active					VB	ROOT	2
3	you	you		pro	2nd	sg							PRP	dobj	2
4	out	out	rb+advl	rb	advl								RB	advmod	2
5	,	,											,	punct	2
6													_SP	dep	2
7	right	right											UH	intj	2
8	.	.											.	punct	2

#sentid = 479
0													_SP	dep	1
1	avoid	avoid		vbmain	vblex	nonfinite	simple	active					VB	ROOT	1
2	having	have	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	1
3	to	to		to									TO	aux	4
4	schedule	schedule		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	2
5	some	some											DT	dobj	4
6	.	.											.	punct	1

#sentid = 480
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	1

#sentid = 481
0	we	we		pro	1st								PRP	nsubj	3
1	we	we		pro	1st								PRP	nsubj	3
2	certainly	certainly	rb+advl	rb	advl	ly							RB	advmod	3
3	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	3
4	that	that		pro	dem	sg							DT	dobj	3
5	but	but		cc	cls								CC	cc	3
6	,	,											,	punct	3
7	i	i		pro	1st	sg							PRP	dep	10
8	,	,											,	punct	10
9	it	it		pro	3rd	sg							PRP	nsubj	10
10	's	be		vbmain	be	pres	simple	active					VBZ	parataxis	13
11	,	,											,	punct	10
12	that	that		pro	dem	sg							DT	nsubj	13
13	gets	get		vbmain	vblex	pres	simple	active					VBZ	conj	3
14	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	15
15	of	of	rb+jjrbmod	rb	adjmod								RB	advmod	16
16	fuzzy	fuzzy		jj	pred								JJ	acomp	13
17	because	because		cs	cos								IN	mark	25
18	now	now	rb+advl	rb	advl								RB	advmod	25
19	at	at		rb	othr								IN	advmod	20
20	least	least	rb+advl	rb	advl								JJS	advmod	25
21	the	the		dt	art								DT	det	22
22	people	people		nn	pl								NNS	nsubj	25
23	at	at	in+npostmod	in	nmod								IN	prep	22
24	Honeywell	honeywell		nn		proper							NNP	pobj	23
25	claim	claim	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBP	advcl	13
26	they	they		pro	pl								PRP	nsubj	27
27	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	25
28	this	this		dt	dt_dem								DT	det	30
29	reliable	reliable	attr+npremod	jj	attr								JJ	amod	30
30	notion	notion		nn		nom							NN	dobj	27
31	of	of	of+npostmod	in	nmod								IN	prep	30
32	a	a		dt	art								DT	det	35
33	temporal	temporal	attr+npremod	jj	attr								JJ	amod	35
34													_SP	dep	35
35	transition	transition		nn		nom							NN	pobj	31
36	so	so		cc	cls								CC	cc	25
37	that	that		pro	dem	sg							DT	nsubj	38
38	's	be		vbmain	be	pres	simple	active					VBZ	conj	25
39	.	.											.	punct	13

#sentid = 482
0													_SP	dep	3
1	well	well											UH	intj	3
2	i	i		pro	1st	sg							PRP	nsubj	3
3	was	be		vbmain	be	past	simple	active					VBD	ROOT	3
4	i	i		pro	1st	sg							PRP	nsubj	6
5	was	be		vbaux									VBD	aux	6
6	thinking	think	thatcls+vcomp	vbmain	prepv	past	prog	active	compcls		vcomp	compdel	VBG	ccomp	3
7	of	of	in+advl	in	advl								IN	prep	6
8	the	the		dt	art								DT	det	9
9	schedulability	schedulability		nn		nom							NN	pobj	7
10	of	of	of+npostmod	in	nmod								IN	prep	9
11	,	,											,	punct	10
12	uh	uh											UH	intj	10
13	deterministic	deterministic	attr+npremod	jj	attr								JJ	amod	14
14	TAPs	tap		nn	pl								NNS	pobj	10
15	versus	versus	in+npostmod	in	nmod								IN	prep	14
16	probabilistic	probabilistic	attr+npremod	jj	attr								JJ	amod	17
17	TAPs	tap		nn	pl								NNS	pobj	15
18	,	,											,	punct	14
19	or	or		cc	phrs								CC	cc	14
20	the	the		dt	art								DT	det	22
21	uh	uh											UH	intj	22
22	like	like											UH	intj	30
23	the	the		dt	art								DT	det	30
24	uh	uh											UH	intj	30
25	you	you		pro	2nd	sg							PRP	nsubj	26
26	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	30
27	real	real	attr+npremod	jj	attr								JJ	amod	29
28	-	-											HYPH	punct	29
29	time	time	nn+npremod	nn			npremod						NN	compound	30
30	tasks	task		nn	pl								NNS	conj	14
31	hard	hard	attr+npremod	jj	attr								JJ	amod	34
32	real	real	attr+npremod	jj	attr								JJ	amod	34
33	-	-											HYPH	punct	34
34	time	time	appos+npostmod	nn			nappos						NN	appos	30
35	and	and		cc	phrs								CC	cc	34
36	soft	soft	attr+npremod	jj	attr								JJ	amod	39
37	real	real	attr+npremod	jj	attr								JJ	amod	39
38	-	-											HYPH	punct	39
39	time	time		nn									NN	conj	34
40	.	.											.	punct	3

#sentid = 483
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	1

#sentid = 484
0													_SP	dep	0
1	if	if		cs	cnd								IN	mark	3
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	allow	allow	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	26
4	some	some											DT	dobj	3
5	of	of		in	in_othr								IN	prep	4
6	the	the		dt	art								DT	det	13
7	uh	uh											UH	intj	13
8	probabilistic	probabilistic	attr+npremod	jj	attr								JJ	amod	13
9	,	,											,	punct	13
10													_SP	dep	13
11	well	well											UH	intj	13
12	so	so		rb	othr								RB	advmod	13
13	part	part		nn									NN	pobj	5
14	of	of	of+npostmod	in	nmod								IN	prep	13
15	the	the		dt	art								DT	det	17
16	future	future	attr+npremod	jj	attr								JJ	amod	17
17	work	work		nn									NN	pobj	14
18	that	that		pro	dem	sg							WDT	dobj	22
19	we	we		pro	1st								PRP	nsubj	20
20	want	want	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	17
21	to	to		to									TO	aux	22
22	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	20
23	um	um											UH	intj	26
24	i	i		pro	1st	sg							PRP	dep	26
25	i	i		pro	1st	sg							PRP	nsubj	26
26	did	do		vbmain	vblex	past	simple	active					VBD	dep	0
27	some	some		dt									DT	det	29
28	separate	separate	attr+npremod	jj	attr								JJ	amod	29
29	work	work		nn									NN	dobj	26
30	on	on	in+npostmod	in	nmod								IN	prep	29
31	quality	quality	nn+npremod	nn		nom	npremod						NN	nmod	36
32	-	-											HYPH	punct	31
33	of	of	of+npostmod	in	nmod								IN	prep	31
34	-	-											HYPH	punct	33
35	service	service		nn									NN	pobj	33
36	negotiation	negotiation		nn		nom							NN	pobj	30
37	,	,											,	punct	26
38	that	that		relpro	relpro_that	sg							WDT	nsubjpass	43
39	has	have		vbaux									VBZ	aux	43
40	n't	not											RB	neg	43
41	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	43
42	been	be		vbaux									VBN	auxpass	43
43	put	put	finitecls+rel	vbmain	vblex	pres	perf	pasv_agls	nmod_cls	thatcls	rel		VBN	relcl	29
44	into	into	in+advl	in	advl								IN	prep	43
45	CIRCA	circa		nn		proper							NNP	pobj	44
46	but	but		cc	cls								CC	cc	26
47	the	the		dt	art								DT	det	48
48	idea	idea		nn									NN	nsubj	51
49	with	with	in+npostmod	in	nmod								IN	prep	48
50	that	that		pro	dem	sg							DT	pobj	49
51	is	be		vbmain	be	pres	simple	active					VBZ	conj	26
52	that	that		comp	comp_that								IN	mark	56
53	you	you		pro	2nd	sg							PRP	nsubj	56
54	would	would		vbaux	mod	prd							MD	aux	56
55	,	,											,	punct	56
56	degrade	degrade	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	51
57	the	the		dt	art								DT	det	58
58	sched-	sched-		nn									NN	dobj	56
59	the	the											DT	dep	56
60	the	the											DT	dep	63
61	the	the											DT	dep	63
62	the	the		dt	art								DT	det	63
63	plan	plan		nn									NN	dep	56
64	not	not											RB	preconj	66
65	only	only		rb	othr	ly							RB	advmod	66
66	with	with	in+advl	in	advl								IN	prep	56
67	the	the		dt	art								DT	det	68
68	planner	planner		nn		nom							NN	pobj	66
69	but	but		cc									CC	cc	66
70	also	also		rb	othr								RB	advmod	69
71	with	with											IN	conj	66
72	the	the		dt	art								DT	det	73
73	scheduler	scheduler		nn		nom							NN	pobj	71
74	.	.											.	punct	51

#sentid = 485
0	um	um											UH	intj	5
1	that	that		pro	dem	sg							DT	nsubjpass	5
2	has	have		vbaux									VBZ	aux	5
3	n't	not											RB	neg	5
4	been	be		vbaux									VBN	auxpass	5
5	connected	connect		vbmain	vblex	pres	perf	pasv_agls					VBN	ROOT	5
6	because	because		cs	cos								IN	mark	10
7	we	we		pro	1st								PRP	nsubj	10
8	have	have		vbaux									VBP	aux	10
9	n't	not											RB	neg	10
10	drawn	draw	finitecls+advl	vbmain	vblex	pres	perf	active	advlcls		causative		VBN	advcl	5
11	the	the		dt	art								DT	det	12
12	line	line		nn									NN	dobj	10
13	at	at	in+npostmod	in	nmod								IN	prep	12
14	,	,											,	punct	13
15	when	when		comp	comp_wh								WRB	advmod	18
16	do	do		vbaux									VBP	aux	18
17	you	you		pro	2nd	sg							PRP	nsubj	18
18	let	let	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VB	pcomp	13
19	the	the		dt	art								DT	det	20
20	scheduler	scheduler		nn		nom							NN	nsubj	21
21	trade	trade		vbmain	phrsv	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	18
22	things	thing		nn	pl	nom							NNS	dobj	21
23	off	off		rb	prtcle								RP	prt	21
24	versus	versus	in+advl	in	advl								IN	prep	18
25	when	when		comp	comp_wh								WRB	advmod	28
26	do	do		vbaux									VBP	aux	28
27	you	you		pro	2nd	sg							PRP	nsubj	28
28	make	make	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VB	pcomp	24
29	the	the		dt	art								DT	det	30
30	planner	planner		nn		nom							NN	nsubj	31
31	trade	trade		vbmain	phrsv	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	28
32	things	thing		nn	pl	nom							NNS	dobj	31
33	off	off		rb	prtcle								RP	prt	31
34	?	?											.	punct	5

#sentid = 486
0	when	when		rb	advl								WRB	advmod	5
1	the	the		dt	art								DT	det	2
2	planner	planner		nn		nom							NN	nsubj	5
3	alone	alone		rb	othr								RB	advmod	2
4	is	be		vbaux									VBZ	aux	5
5	trading	trade	finitecls+advl	vbmain	phrsv	pres	prog	active	advlcls	whcls			VBG	advcl	12
6	things	thing		nn	pl	nom							NNS	dobj	5
7	off	off		rb	prtcle								RP	prt	5
8	it	it		pro	3rd	sg							PRP	nsubj	12
9	really	really	rb+advl	rb	advl	ly							RB	advmod	12
10	does	do		vbaux									VBZ	aux	12
11	n't	not											RB	neg	12
12	have	have		vbmain	vblex	pres	simple	active					VB	ROOT	12
13	any	any		dt									DT	det	15
14	,	,											,	punct	15
15	mechanism	mechanism		nn		nom							NN	dobj	12
16	to	to		to									TO	aux	18
17	automatically	automatically	rb+advl	rb	advl	ly	splaux						RB	advmod	18
18	say	say	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	15
19	i	i		pro	1st	sg							PRP	nsubj	20
20	want	want	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	18
21	to	to		to									TO	aux	22
22	make	make		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	20
23	this	this		pro	dem	sg							DT	nsubj	29
24	a	a		dt	art								DT	det	29
25	soft	soft	attr+npremod	jj	attr								JJ	amod	29
26	real	real	attr+npremod	jj	attr								JJ	amod	28
27	-	-											HYPH	punct	28
28	time	time	nn+npremod	nn			npremod						NN	compound	29
29	task	task		nn									NN	ccomp	22
30	.	.											.	punct	12

#sentid = 487
0	um	um											UH	intj	8
1	,	,											,	punct	8
2	however	however		rb	link								RB	advmod	8
3	,	,											,	punct	8
4	in	in	in+advl	in	advl								IN	prep	8
5	future	future	attr+npremod	jj	attr								JJ	amod	6
6	work	work		nn									NN	pobj	4
7	we	we		pro	1st								PRP	nsubj	8
8	hope	hope		vbmain	vblex	pres	simple	active					VBP	ROOT	8
9	to	to		to									TO	aux	10
10	allow	allow	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	8
11	the	the		dt	art								DT	det	12
12	scheduler	scheduler		nn		nom							NN	nsubj	14
13	to	to		to									TO	aux	14
14	look	look		vbmain	prepv	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	10
15	at	at	in+advl	in	advl								IN	prep	14
16	how	how		comp	comp_wh								WRB	advmod	19
17	it	it		pro	3rd	sg							PRP	nsubj	19
18	can	can		vbaux	mod	pos							MD	aux	19
19	degrade	degrade	whcls+incomp	vbmain	vblex	vp_w_modal	simple	active	compcls	whcls	incomp		VB	pcomp	15
20	task	task	nn+npremod	nn			npremod						NN	compound	21
21	execution	execution		nn		nom							NN	dobj	19
22	to	to		to									TO	aux	23
23	help	help	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	19
24	it	it		pro	3rd	sg							PRP	nsubj	25
25	schedule	schedule		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	23
26	things	thing		nn	pl	nom							NNS	dobj	25
27	.	.											.	punct	8

#sentid = 488
0													_SP	dep	0
1	okay	okay											UH	intj	0
2	.	.											.	punct	1

#sentid = 489
0													_SP	dep	26
1	let	let		vbmain	in_othr	nonfinite	simple	active					VB	prep	0
2	's	us											PRP	nsubj	3
3	see	see		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	1
4	um	um											UH	intj	3
5	in	in	in+advl	in	advl								IN	prep	11
6	your	your		dt	poss								PRP$	poss	7
7	domain	domain		nn									NN	pobj	5
8	,	,											,	punct	11
9	i	i		pro	1st	sg							PRP	nsubj	11
10	'm	be		vbaux									VBP	aux	11
11	wondering	wonder		vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	26
12	how	how		comp	comp_wh								WRB	advmod	15
13	you	you		pro	2nd	sg							PRP	nsubj	15
14	actually	actually	rb+advl	rb	advl	ly							RB	advmod	15
15	get	get		vbmain	vblex	nonfinite	simple	active	compcls	whcls	vcomp		VB	ccomp	11
16	down	down	in+advl	in	advl								IN	prep	15
17	that	that		dt	dt_dem								DT	det	18
18	curve	curve		nn									NN	pobj	16
19	,	,											,	punct	11
20	um	um											UH	intj	11
21	you	you		pro	2nd	sg							PRP	nsubj	26
22	've	've		vbaux									VBP	aux	26
23	uh	uh											UH	intj	26
24	,	,											,	punct	26
25	you	you		pro	2nd	sg							PRP	nsubj	26
26	stated	state		vbmain	vblex	pres	simple	active					VBD	ROOT	26
27	very	very	rb+jjrbmod	rb	othr								RB	advmod	28
28	clearly	clearly	rb+advl	rb	advl	ly							RB	advmod	26
29	in	in	in+advl	in	advl								IN	prep	26
30	your	your		dt	poss								PRP$	poss	31
31	thesis	thesis		nn									NN	pobj	29
32	that	that											IN	mark	34
33	,	,											,	punct	34
34	safety	safety		nn									NN	npadvmod	26
35	above	above		in	nmod								IN	prep	34
36	all	all											DT	pobj	35
37	,	,											,	punct	34
38	mkay	mkay											UH	intj	34
39													_SP	dep	38
40	right	right											UH	intj	39
41	.	.											.	meta	34
42													_SP	dep	26
43	that	that		comp	comp_that								IN	mark	47
44	you	you		pro	2nd	sg							PRP	nsubj	45
45	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	47
46	you	you		pro	2nd	sg							PRP	nsubj	47
47	guarantee	guarantee		vbmain	vblex	pres	simple	active	compcls	thatcls			VBP	ccomp	42
48	safety	safety		nn									NN	dobj	47
49	and	and		cc	cls								CC	cc	47
50	only	only		rb	othr	ly							RB	advmod	51
51	when	when		rb	advl								WRB	advmod	62
52	you	you		pro	2nd	sg							PRP	nsubj	54
53	actually	actually		rb	othr	ly							RB	advmod	54
54	ca	can		vbaux	mod								MD	aux	51
55	n't	not											RB	neg	54
56	then	then		rb	link								RB	advmod	62
57	you	you		pro	2nd	sg							PRP	nsubj	62
58	,	,											,	punct	62
59													_SP	dep	62
60	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	61
61	of	of	rb+advl	rb	advl								RB	advmod	62
62	relax	relax		vbmain	vblex	pres	simple	active					VBP	conj	47
63													_SP	dep	62
64	then	then		rb	othr								RB	advmod	65
65	you	you		pro	2nd	sg							PRP	nsubj	67
66	re--	re--											:	punct	65
67	relax	relax		vbmain	vblex	pres	simple	active					VBP	dep	62
68	,	,											,	punct	67
69	yes	yes											UH	intj	67
70	.	.											.	punct	26

#sentid = 490
0													_SP	dep	8
1	so	so		rb	link								RB	advmod	8
2	you	you		pro	2nd	sg							PRP	dep	8
3	,	,											,	punct	8
4	one	one		pro	other	pl							CD	nsubj	8
5	of	of		in	in_othr								IN	prep	4
6	your	your		dt	poss								PRP$	poss	7
7	states	state		nn	pl	nom							NNS	pobj	5
8	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	8
9	i	i		pro	1st	sg							PRP	nsubj	10
10	'm	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	8
11	on	on	in+advl	in	advl								IN	prep	10
12	the	the		dt	art								DT	det	13
13	ground	ground		nn									NN	pobj	11
14	,	,											,	punct	8
15													_SP	dep	8
16	mhm	mhm											UH	intj	8
17	.	.											.	punct	8

#sentid = 491
0													_SP	dep	25
1	uh	uh											UH	intj	25
2	and	and		cc	phrs								CC	cc	25
3	if	if		cs	cnd								IN	mark	4
4	you	you		pro	2nd	sg							PRP	nsubj	9
5	reali-	reali-											XX	punct	4
6	if	if		cs	cnd								IN	mark	9
7	you	you		pro	2nd	sg							PRP	nsubj	9
8	ever	ever	rb+advl	rb	advl								RB	advmod	9
9	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	25
10	to	to		to									TO	aux	11
11	adopt	adopt		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	9
12	a	a		dt	art								DT	det	14
13	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	14
14	threshold	threshold		nn									NN	dobj	11
15	,	,											,	punct	14
16													_SP	dep	14
17	less	less		jj	attr								JJR	amod	16
18	than	than	in+comparative	in	jcomp								IN	prep	17
19	one	one		pro	other	pl							CD	pobj	18
20	why	why		rb	advl								WRB	advmod	25
21	do	do		vbaux									VBP	aux	25
22	you	you		pro	2nd	sg							PRP	nsubj	24
23	ever	ever		rb	othr								RB	advmod	24
24													_SP	dep	25
25	choose	choose		vbmain	vblex	pres	simple	active					VB	ROOT	25
26	to	to		to									TO	aux	27
27	take	take	tocls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	25
28	off	off		rb	prtcle								RP	prt	27
29	,	,											,	punct	25
30	yeah	yeah											UH	intj	25
31	.	.											.	punct	25

#sentid = 492
0													_SP	dep	5
1	why	why		rb	advl								WRB	advmod	5
2	do	do		vbaux									VBP	aux	5
3	you	you		pro	2nd	sg							PRP	nsubj	5
4	ever	ever	rb+advl	rb	advl		splaux						RB	advmod	5
5	take	take		vbmain	vblex	pres	simple	active					VB	ROOT	5
6	off	off	rb+advl	rb	advl								RB	advmod	5
7	?	?											.	punct	5

#sentid = 493
0	and	and		cc	cls								CC	cc	20
1	actually	actually	rb+advl	rb	advl	ly							RB	advmod	20
2	that	that		pro	dem	sg							DT	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	parataxis	20
4	one	one		pro	other	pl							CD	nsubj	20
5	of	of		in	in_othr								IN	prep	4
6	the	the		dt	art								DT	det	7
7	things	thing		nn	pl	nom							NNS	pobj	5
8	i	i		pro	1st	sg							PRP	nsubj	9
9	had	have	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel	reldel	VBD	relcl	7
10	trouble	trouble		nn									NN	dobj	9
11	with	with	in+npostmod	in	nmod								IN	prep	10
12	when	when		rb	advl								WRB	advmod	15
13	i	i		pro	1st	sg							PRP	nsubj	15
14	first	first		rb	link								RB	advmod	15
15	started	start	finitecls+advl	vbmain	vblex	past	simple	active	advlcls	whcls			VBD	advcl	9
16	working	work	ingcls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	15
17	with	with	in+advl	in	advl								IN	prep	16
18	the	the		dt	art								DT	det	19
19	simulator	simulator		nn		nom							NN	pobj	17
20	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	20
21	it	it		pro	3rd	sg							PRP	nsubj	22
22	said	say	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	20
23	no	no											UH	intj	27
24	i	i		pro	1st	sg							PRP	nsubj	27
25	do	do		vbaux									VBP	aux	27
26	n't	not											RB	neg	27
27	wanna	wanna	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	22
28	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	27
29	it	it		pro	3rd	sg							PRP	dobj	28
30	.	.											.	punct	20

#sentid = 494
0	so	so		rb	link								RB	advmod	14
1	i	i		pro	1st	sg							PRP	nsubj	2
2	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	14
3	,	,											,	punct	14
4	uh	uh											UH	intj	14
5	eventually	eventually	rb+advl	rb	advl	ly							RB	advmod	14
6	what	what		comp	comp_wh								WP	dobj	8
7	i	i		pro	1st	sg							PRP	nsubj	8
8	ended	end		vbmain	phrsv	past	simple	active	compcls	whcls	vcomp		VBD	csubj	14
9	up	up		rb	prtcle								RP	prt	8
10	putting	put		vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	csubj	14
11	into	into	in+advl	in	advl								IN	prep	10
12	the	the		dt	art								DT	det	13
13	system	system		nn									NN	pobj	11
14	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	14
15	it	it		pro	3rd	sg							PRP	nsubj	16
16	said	say	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	14
17	well	well											UH	intj	20
18	i	i		pro	1st	sg							PRP	nsubj	20
19	'm	be		vbaux									VBP	aux	20
20	gon	go		vbaux									TO	aux	22
21	na	to		vbaux									NN	aux	22
22	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	16
23	what	what											WP	dep	25
24	i	i		pro	1st	sg							PRP	nsubj	25
25	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	22
26	to	to											TO	xcomp	25
27	but	but		cc	cls								CC	cc	22
28	i	i		pro	1st	sg							PRP	nsubj	30
29	'm	be		vbaux									VBP	aux	30
30	going	go		vbmain	vblex	pres	prog	active					VBG	conj	22
31	to	to		to									TO	aux	32
32	fly	fly	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	30
33	,	,											,	punct	30
34	so	so		cs	cs_othr								IN	mark	38
35	it	it		pro	3rd	sg							PRP	nsubj	38
36	does	do		vbaux									VBZ	aux	38
37	n't	not											RB	neg	38
38	have	have		vbmain	vblex	pres	simple	active			other_advl		VB	conj	30
39	this	this		dt	dt_dem								DT	det	40
40	notion	notion		nn		nom							NN	dobj	38
41	that	that		relpro	relpro_that								IN	mark	44
42	,	,											,	punct	44
43	it	it		pro	3rd	sg							PRP	nsubj	44
44	gets	get	thatcls+ncomp	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	ncomp		VBZ	acl	40
45	scared	scared		jj	pred								JJ	acomp	44
46	when	when		rb	advl								WRB	advmod	49
47													_SP	dep	49
48	you	you		pro	2nd	sg							PRP	nsubj	49
49	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	44
50	to	to		to									TO	aux	51
51	relax	relax		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	49
52													_SP	dep	44
53	so	so		rb	link								CC	advmod	61
54	in	in	in+advl	in	advl								IN	prep	61
55	other	other	attr+npremod	jj	attr								JJ	amod	56
56	words	word		nn	pl								NNS	pobj	54
57	it	it		pro	3rd	sg							PRP	nsubj	61
58	does	do		vbaux									VBZ	aux	61
59	n't	not											RB	neg	61
60	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	61
61	believe	believe		vbmain	vblex	pres	simple	active	nmod_cls		ncomp	reldel	VB	acl	40
62	you	you		pro	2nd	sg							PRP	nsubj	64
63	were	be		vbaux									VBD	aux	64
64	lying	lie	thatcls+vcomp	vbmain	vblex	past	prog	active	compcls		vcomp	compdel	VBG	ccomp	61
65	about	about	in+advl	in	advl								IN	prep	64
66	that	that		dt	dt_dem								DT	det	69
67													_SP	dep	69
68	safety	safety	nn+npremod	nn			npremod						NN	compound	69
69	deadline	deadline		nn									NN	pobj	65
70													_SP	dep	14
71	there	there											EX	expl	72
72	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	14
73	some	some		dt									DT	det	74
74	people	people		nn	pl								NNS	attr	72
75	who	who		relpro	relpro_wh								WP	nsubj	76
76	operate	operate	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	74
77	,	,											,	punct	76
78	exactly	exactly		rb	othr	ly							RB	advmod	79
79	in	in	in+advl	in	advl								IN	prep	76
80	this	this		dt	dt_dem								DT	det	81
81	way	way		nn									NN	pobj	79
82	,	,											,	punct	76
83	because	because		cs	cos								IN	mark	88
84	this	this		dt	dt_dem								DT	det	86
85													_SP	dep	86
86	pe-	pe-	nn+npremod	nn			npremod						NN	nmod	87
87	people	people		nn	pl								NNS	nsubj	88
88	operate	operate	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBP	advcl	76
89	in	in	in+advl	in	advl								IN	prep	88
90	this	this		dt	dt_dem								DT	det	91
91	way	way		nn									NN	pobj	89
92	they	they		pro	pl								PRP	nsubj	93
93	never	never											RB	parataxis	98
94	,	,											,	punct	98
95													_SP	dep	94
96	they	they		pro	pl								PRP	nsubj	98
97	never	never											RB	neg	98
98	fly	fly		vbmain	vblex	pres	simple	active					VBP	dep	72
99	i	i		pro	1st	sg							PRP	nsubj	100
100	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	98
101	,	,											,	punct	98
102													_SP	dep	98
103	right	right											UH	intj	98
104	.	.											.	punct	72

#sentid = 495
0													_SP	dep	6
1	you	you		pro	2nd	sg							PRP	nsubj	2
2	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	6
3	,	,											,	punct	2
4													_SP	dep	2
5	there	there											EX	expl	6
6	are	be		vbmain	be	pres	simple	active					VBP	ROOT	6
7	probabilities	probability		nn	pl	nom							NNS	attr	6
8	but	but		cc	phrs								CC	cc	6
9	they	they		pro	pl								PRP	nsubj	10
10													_SP	dep	6
11	i	i		pro	1st	sg							PRP	nsubj	13
12	'll	will		vbaux	mod								MD	aux	13
13	give	give		vbmain	vblex	vp_w_modal	simple	active					VB	parataxis	10
14	you	you		pro	2nd	sg							PRP	dobj	13
15	i	i		pro	1st	sg							PRP	nsubj	17
16	'll	will		vbaux	mod								MD	aux	17
17	give	give		vbmain	vblex	vp_w_modal	simple	active					VB	parataxis	13
18	you	you		pro	2nd	sg							PRP	dobj	17
19													_SP	dep	13
20	no	no											UH	intj	13
21	no	no											UH	intj	20
22	no	no											UH	intj	20
23	but	but		cc	phrs								CC	cc	13
24	there	there											EX	expl	25
25	's	be		vbmain	be	pres	simple	active					VBZ	dep	6
26	also	also	rb+advl	rb	advl								RB	advmod	25
27	this	this											DT	attr	25
28	,	,											,	punct	27
29	this	this		dt	dt_dem								DT	det	30
30	class	class	appos+npostmod	nn			nappos						NN	appos	27
31	of	of	of+npostmod	in	nmod								IN	prep	30
32	people	people		nn	pl								NNS	pobj	31
33	that	that		relpro	relpro_that	sg							WDT	nsubj	34
34	go	go	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	30
35	around	around	rb+advl	rb	advl								RB	advmod	34
36	saying	say	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	34
37	,	,											,	punct	36
38	safety	safety		nn									NN	nsubj	39
39	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	36
40	,	,											,	punct	39
41	of	of	in+advl	in	advl								IN	prep	39
42													_SP	dep	41
43	is	be		vbmain	be	pres	simple	active					VBZ	pobj	41
44	gon	go											TO	dep	25
45	na	to											TO	punct	25
46	defy	defy		vbmain	vblex	nonfinite	simple	active					VB	dep	25
47	the	the		dt	art								DT	det	48
48	opposition	opposition		nn		nom							NN	dobj	46
49													_SP	dep	25
50	uh	uh											UH	intj	53
51	you	you		pro	2nd	sg							PRP	nsubj	52
52	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	53
53	is	be		vbmain	be	pres	simple	active					VBZ	meta	49
54	is	be		vbmain	be	pres	simple	active					VBZ	dep	55
55	is	be		vbmain	be	pres	simple	active					VBZ	meta	53
56	is	be		vbmain	be	pres	simple	active					VBZ	meta	53
57	n't	not											RB	neg	56
58	really	really	rb+jjrbmod	rb	adjmod	ly							RB	advmod	59
59	important	important		jj	pred								JJ	acomp	53
60	and	and		cc	cls								CC	cc	25
61	then	then		rb	link								RB	advmod	65
62	they	they		pro	pl								PRP	nsubj	65
63	still	still	rb+advl	rb	advl								RB	advmod	65
64	,	,											,	punct	65
65	get	get		vbmain	vblex	pres	simple	active					VBP	conj	25
66	on	on	in+advl	in	advl								IN	prep	65
67	airplanes	airplane		nn	pl								NNS	pobj	66
68	so	so		cc	cls								CC	cc	65
69													_SP	dep	74
70	i	i		pro	1st	sg							PRP	nsubj	74
71	'll	will											XX	dep	74
72	i	i		pro	1st	sg							PRP	nsubj	74
73	'll	will		vbaux	mod								MD	aux	74
74	give	give		vbmain	vblex	vp_w_modal	simple	active					VB	conj	65
75	you	you		pro	2nd	sg							PRP	dative	74
76	an	an		dt									DT	det	77
77													_SP	dep	78
78	example	example		nn									NN	dobj	74
79	F	f		nn		proper	npremod						NNP	compound	83
80	-	-											HYPH	punct	83
81	A	a		nn		proper	npremod						NNP	compound	83
82	-	-											HYPH	punct	83
83	A	a		nn		proper							NNP	nsubj	84
84	gave	give		vbmain	vblex	past	simple	active					VBD	meta	74
85													_SP	dep	84
86	yeah	yeah											UH	intj	84
87	.	.											.	punct	25

#sentid = 496
0													_SP	dep	0
1	uh	uh											UH	intj	12
2	what	what											WP	dep	12
3	the	the		dt	art								DT	det	12
4	uh	uh											UH	intj	12
5	,	,											,	punct	12
6	the	the		dt	art								DT	det	12
7	three	three											CD	compound	9
8	-	-											HYPH	punct	9
9	billion	billion											CD	nummod	11
10	-	-											HYPH	punct	11
11	dollar	dollar	nn+npremod	nn			npremod						NN	compound	12
12	contract	contract		nn									NN	dobj	0
13	to	to	in+npostmod	in	nmod								IN	prep	12
14	I	i		nn	1st	proper	npremod						NNP	compound	18
15	-	-											HYPH	punct	18
16	B	b		nn		proper	npremod						NNP	compound	18
17	-	-											HYPH	punct	18
18	M	m		nn		proper							NNP	pobj	13
19	to	to		to									TO	aux	20
20	build	build	tocls+ncomp	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	ncomp		VB	acl	12
21	uh	uh											UH	intj	20
22	the	the		dt	art								DT	det	25
23	uh	uh											UH	intj	25
24	next	next	attr+npremod	jj	attr								JJ	amod	25
25	generation	generation		nn		nom							NN	dobj	20
26	the	the		dt	art								DT	det	29
27	uh	uh											UH	intj	29
28	automatic	automatic	attr+npremod	jj	attr								JJ	amod	29
29	traffic	traffic		nn									NN	dobj	20
30	,	,											,	punct	20
31													_SP	dep	20
32	yeah	yeah											UH	intj	20
33	.	.											.	punct	0

#sentid = 497
0													_SP	dep	4
1	air	air	nn+npremod	nn			npremod						NN	compound	3
2	-	-											HYPH	punct	3
3	traffic	traffic	nn+npremod	nn			npremod						NN	compound	4
4	control	control		nn									NN	ROOT	4
5	,	,											,	punct	4
6													_SP	dep	4
7	yeah	yeah											UH	intj	4
8	.	.											.	punct	4

#sentid = 498
0													_SP	dep	2
1	control	control	nn+npremod	nn			npremod						NN	compound	2
2	system	system		nn									NN	ROOT	2
3	?	?											.	punct	2

#sentid = 499
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	1

#sentid = 500
0													_SP	dep	0
1	and	and		cc									CC	cc	0
2	then	then		rb	link								RB	advmod	4
3	they	they		pro	pl								PRP	nsubj	4
4	get	get		vbmain	vblex	pres	simple	active					VBP	conj	0
5	the	the		dt	art								DT	det	8
6	uh	uh											UH	intj	8
7	,	,											,	punct	6
8	halfway	halfway		nn									NN	dep	15
9	of	of	of+npostmod	in	nmod								IN	prep	8
10	the	the		dt	art								DT	det	11
11	project	project		nn									NN	pobj	9
12	,	,											,	punct	15
13	uh	uh											UH	intj	15
14	they	they		pro	pl								PRP	nsubj	15
15	cancelled	cancel	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	4
16	it	it		pro	3rd	sg							PRP	dobj	15
17	but	but		cc	phrs								CC	cc	15
18	legally	legally	rb+advl	rb	advl	ly							RB	advmod	19
19	stated	state		vbmain	vblex	past	simple	active					VBD	conj	15
20	restructured	restructure		vbmain	vblex	past	simple	active					VBD	dep	19
21	.	.											.	punct	15

#sentid = 501
0	the	the		dt	art								DT	det	1
1	reason	reason		nn									NN	nsubj	2
2	was	be		vbmain	be	past	simple	active					VBD	ROOT	2
3	the	the		dt	art								DT	det	4
4	requirement	requirement		nn		nom							NN	nsubj	5
5	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	2
6	,	,											,	punct	5
7	probabilistic	probabilistic	attr+npremod	jj	attr								JJ	amod	8
8	guarantee	guarantee		nn		nom							NN	attr	5
9	of	of	of+npostmod	in	nmod								IN	prep	8
10	safety	safety		nn									NN	pobj	9
11	,	,											,	punct	8
12	with	with	in+npostmod	in	nmod								IN	prep	8
13	uh	uh											UH	intj	12
14	seven	seven											CD	nummod	15
15	nines	nine		nn	pl								NNS	pobj	12
16	.	.											.	punct	2

#sentid = 502
0	okay	okay											UH	intj	2
1	,	,											,	punct	2
2	point	point		nn									NN	ROOT	2
3	-	-											HYPH	punct	2
4	nine	nine											CD	nummod	9
5	-	-											HYPH	punct	9
6	nine	nine											CD	nummod	9
7	uh	uh											UH	intj	9
8	seven	seven											CD	nummod	9
9	nines	nine	appos+npostmod	nn	pl		nappos						NNS	appos	2
10	.	.											.	punct	2

#sentid = 503
0	and	and		cc	cls								CC	cc	5
1	they	they		pro	pl								PRP	nsubj	5
2	could	could		vbaux	mod	pos							MD	aux	5
3	n't	not											RB	neg	5
4	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	5
5	verify	verify		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	5
6	there	there											EX	expl	8
7	would	would		vbaux	mod	prd							MD	aux	8
8	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	5
9	this	this		dt	dt_dem								DT	det	13
10	seven	seven											CD	compound	12
11	-	-											HYPH	punct	12
12	nine	nine											CD	nummod	13
13	requirement	requirement		nn		nom							NN	attr	8
14	.	.											.	punct	5

#sentid = 504
0	they	they		pro	pl								PRP	nsubj	1
1	could	could		vbmain	vblex	vp_w_modal	simple	active					MD	ROOT	1
2	n't	not											RB	neg	1
3	.	.											.	punct	1

#sentid = 505
0	and	and		cc	cls								CC	cc	4
1	so	so		rb	link								RB	advmod	4
2	they	they		pro	pl								PRP	nsubj	4
3	uh	uh											UH	intj	4
4	devised	devise		vbmain	vblex	past	simple	active					VBD	ROOT	4
5	the	the		dt	art								DT	det	6
6	requirement	requirement		nn		nom							NN	dobj	4
7	to	to	in+advl	in	advl								IN	prep	4
8	six	six											CD	nummod	9
9	nines	nine		nn	pl								NNS	pobj	7
10	and	and		cc	phrs								CC	cc	9
11	five	five											CD	nummod	12
12	nines	nine		nn	pl								NNS	nsubj	14
13	eventually	eventually	rb+advl	rb	advl	ly							RB	advmod	14
14	said	say		vbmain	vblex	past	simple	active					VBD	conj	9
15	what	what		dt									WP	det	17
16	the	the		dt	art								DT	det	17
17	heck	heck		nn									NN	npadvmod	14
18	let	let		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	14
19	's	us											PRP	nsubj	20
20	give	give		vbmain	phrsv	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	18
21	up	up		rb	prtcle								RP	prt	20
22	.	.											.	punct	4

#sentid = 506
0													_SP	dep	0
1	okay	okay											UH	intj	0
2	.	.											.	punct	1

#sentid = 507
0													_SP	dep	8
1	so	so		rb	othr								RB	advmod	2
2													_SP	dep	0
3	so	so		rb	link								RB	advmod	8
4	you	you		pro	2nd	sg							PRP	nsubj	5
5	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	8
6	the	the		dt	art								DT	det	7
7	safety	safety		nn									NN	nsubj	8
8	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	8
9	not	not											RB	neg	8
10	really	really	rb+jjrbmod	rb	adjmod	ly							RB	advmod	11
11	determinable	determinable		jj	pred								JJ	acomp	8
12	.	.											.	punct	8

#sentid = 508
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2	.	.											.	punct	0

#sentid = 509
0	so	so		rb	link								RB	advmod	5
1	so	so		rb	link								RB	advmod	5
2	anyway	anyway											UH	intj	5
3	i	i		pro	1st	sg							PRP	nsubj	5
4	'm	be		vbaux									VBP	aux	5
5	getting	get		vbmain	vblex	pres	prog	active					VBG	ROOT	5
6	worried	worried		jj	pred								JJ	acomp	5
7	about	about	in+jcomp	in	jcomp								IN	prep	6
8	finishing	finish	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	7
9	here	here	rb+advl	rb	advl								RB	advmod	8
10	so	so		cc	cls								RB	cc	5
11	,	,											,	punct	17
12	real	real	attr+npremod	jj	attr								JJ	amod	14
13	-	-											HYPH	punct	14
14	time	time	nn+npremod	nn			npremod						NN	compound	15
15	deadlines	deadline		nn	pl								NNS	nsubj	17
16	are	be		vbaux									VBP	aux	17
17	requiring	require		vbmain	vblex	pres	prog	active					VBG	conj	5
18	that	that		comp	comp_that								IN	mark	20
19	i	i		pro	1st	sg							PRP	nsubj	20
20	move	move		vbmain	vblex	nonfinite	simple	active	compcls	thatcls	vcomp		VB	ccomp	17
21	on	on	rb+advl	rb	advl								RB	advmod	20
22	.	.											.	punct	17

#sentid = 510
0	so	so		rb	link								RB	advmod	21
1	um	um											UH	intj	21
2	,	,											,	punct	21
3	the	the		dt	art								DT	det	5
4	second	second	attr+npremod	jj	attr								JJ	amod	5
5	part	part		nn									NN	nsubj	21
6	,	,											,	punct	5
7	of	of	of+npostmod	in	nmod								IN	prep	5
8	the	the		dt	art								DT	det	10
9	three	three											CD	nummod	10
10	parts	part		nn	pl								NNS	pobj	7
11	that	that		relpro	relpro_that	sg							WDT	nsubj	12
12	were	be	finitecls+rel	vbmain	be	past	simple	active	nmod_cls	thatcls	rel		VBD	relcl	10
13	the	the		dt	art								DT	det	15
14	main	main	attr+npremod	jj	attr								JJ	amod	15
15	part	part		nn									NN	attr	12
16	of	of	of+npostmod	in	nmod								IN	prep	15
17	CIRCA	circa	nn+npremod	nn		proper	npremod						NNP	compound	18
18	architecture	architecture		nn		nom							NN	pobj	16
19	,	,											,	punct	5
20	is	be		vbaux									VBZ	aux	21
21	talking	talk		vbmain	prepv	pres	prog	active					VBG	ROOT	21
22	about	about	in+advl	in	advl								IN	prep	21
23	unhandled	unhandled	attr+npremod	jj	attr								JJ	amod	24
24	states	state		nn	pl	nom							NNS	pobj	22
25	.	.											.	punct	21

#sentid = 511
0	what	what											WP	nsubj	1
1	happens	happen		vbmain	vblex	pres	simple	active					VBZ	dep	32
2	when	when		rb	advl								WRB	advmod	4
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	ignore	ignore	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	32
5	things	thing		nn	pl	nom							NNS	dobj	4
6	or	or		cc	cls								CC	cc	4
7	when	when		rb	advl								WRB	advmod	9
8	you	you		pro	2nd	sg							PRP	nsubj	9
9	have	have		vbmain	vblex	pres	simple	active					VBP	conj	4
10	an	an		dt									DT	det	12
11	incorrect	incorrect	attr+npremod	jj	attr								JJ	amod	12
12	model	model		nn									NN	dobj	9
13	,	,											,	punct	32
14	um	um											UH	intj	32
15	well	well											UH	intj	32
16	first	first		rb	link								RB	advmod	32
17	of	of		in	in_othr								IN	prep	16
18	all	all											DT	pobj	17
19	as	as		cs	cs_othr								IN	mark	21
20	we	we		pro	1st								PRP	nsubj	21
21	said	say	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		other_advl		VBD	advcl	32
22	in	in	in+advl	in	advl								IN	prep	21
23	no	no											UH	intj	22
24	_	_											XX	pobj	22
25	in	in	in+advl	in	advl								IN	prep	32
26	great	great	attr+npremod	jj	attr								JJ	amod	27
27	detail	detail		nn									NN	pobj	25
28	,	,											,	punct	32
29	you	you		pro	2nd	sg							PRP	nsubj	32
30	may	may		vbaux	mod	pos							MD	aux	32
31	not	not											RB	neg	32
32	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	32
33	able	able		jj	pred								JJ	acomp	32
34	to	to		to									TO	aux	35
35	schedule	schedule	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	33
36	everything	everything		nn	other	nom							NN	dobj	35
37	in	in	in+advl	in	advl								IN	prep	35
38	one	one											CD	nummod	39
39	plan	plan		nn									NN	pobj	37
40	.	.											.	punct	32

#sentid = 512
0	in	in	in+advl	in	advl								IN	prep	6
1	which	which		dt									WDT	det	2
2	case	case		nn									NN	pcomp	0
3	,	,											,	punct	6
4	um	um											UH	intj	6
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	6
7	to	to		to									TO	aux	8
8	be	be		vbmain	be	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	6
9	able	able		jj	pred								JJ	acomp	8
10	to	to		to									TO	aux	11
11	detect	detect	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	9
12	and	and		cc	phrs								CC	cc	11
13	react	react		vbmain	vblex	nonfinite	simple	active					VB	conj	11
14	to	to	in+advl	in	advl								IN	prep	13
15	important	important		jj	attr								JJ	amod	18
16	unplanned	unplanned		jj	attr								JJ	amod	18
17	-	-											HYPH	punct	18
18	for	for											IN	pobj	14
19	states	state		nn	pl	nom							NNS	pobj	14
20	as	as		cs	cs_othr								IN	mark	22
21	they	they		pro	pl								PRP	nsubj	22
22	occur	occur	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	13
23	.	.											.	punct	6

#sentid = 513
0	so	so		rb	link								RB	advmod	6
1	,	,											,	punct	6
2	what	what		comp	comp_wh								WP	dobj	5
3	we	we		pro	1st								PRP	nsubj	5
4	basically	basically	rb+advl	rb	advl	ly							RB	advmod	5
5	did	do		vbmain	vblex	past	simple	active	compcls	whcls	vcomp		VBD	csubj	6
6	was	be		vbmain	be	past	simple	active					VBD	ROOT	6
7	to	to		to									TO	aux	8
8	look	look	tocls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	6
9	at	at	in+advl	in	advl								IN	prep	8
10	all	all											PDT	predet	13
11	the	the		dt	art								DT	det	13
12	state	state	nn+npremod	nn		nom	npremod						NN	compound	13
13	classes	class		nn	pl								NNS	pobj	9
14	that	that		pro	dem	sg							WDT	dobj	17
15	you	you		pro	2nd	sg							PRP	nsubj	17
16	could	could		vbaux	mod	pos							MD	aux	17
17	have	have	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel		VB	relcl	13
18	and	and		cc	phrs								CC	cc	8
19	uh	uh											UH	intj	20
20	selected	select		vbmain	vblex	nonfinite	simple	active		edcls			VBN	conj	8
21	subclasses	subclass		nn	pl								NNS	dobj	20
22	of	of	of+npostmod	in	nmod								IN	prep	21
23	those	those		pro	dem	pl							DT	pobj	22
24	that	that		pro	dem	sg							WDT	nsubj	27
25	we	we		pro	1st								PRP	nsubj	26
26	thought	think	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel	reldel	VBD	relcl	23
27	were	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	26
28	important	important		jj	pred								JJ	acomp	27
29	to	to		to									TO	aux	30
30	detect	detect	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	28
31	,	,											,	punct	6
32	and	and		cc	phrs								CC	cc	6
33	then	then		rb	link								RB	advmod	35
34	,	,											,	punct	35
35	implemented	implement		vbmain	vblex	past	simple	active					VBD	conj	6
36	algorithms	algorithm		nn	pl								NNS	dobj	35
37	to	to		to									TO	aux	38
38	do	do	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	36
39	that	that		pro	dem	sg							DT	dobj	38
40	.	.											.	punct	6

#sentid = 514
0	so	so		rb	othr								RB	advmod	1
1	...	...											:	punct	24
2	this	this		pro	dem	sg							DT	nsubj	3
3	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	24
4	this	this		dt	dt_dem								DT	det	5
5	picture	picture		nn		nom							NN	attr	3
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	world	world	nn+npremod	nn			npremod						NN	compound	9
8	state	state	nn+npremod	nn		nom	npremod						NN	compound	9
9	subclasses	subclass		nn	pl								NNS	pobj	6
10	that	that		relpro	relpro_that	sg							WDT	nsubjpass	13
11	's	be		vbaux									VBZ	auxpass	13
12	been	be		vbaux									VBN	aux	13
13	floating	float	finitecls+rel	vbmain	phrsv	pres	prog	pasv_agls	nmod_cls	thatcls	rel		VBG	relcl	5
14	around	around		rb	prtcle								RP	prt	13
15	for	for	in+advl	in	advl								IN	prep	13
16	a	a		dt	art								DT	det	17
17	while	while		nn									NN	pobj	15
18	um	um											UH	intj	3
19	at	at	in+advl	in	advl								IN	prep	24
20	the	the		dt	art								DT	det	22
21	very	very	attr+npremod	jj	attr								JJ	amod	22
22	outside	outside		nn									NN	pobj	19
23	we	we		pro	1st								PRP	nsubj	24
24	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	24
25	all	all											PDT	predet	28
26	the	the		dt	art								DT	det	28
27	world	world	nn+npremod	nn			npremod						NN	compound	28
28	states	state		nn	pl	nom							NNS	dobj	24
29	that	that		relpro	relpro_that	sg							WDT	nsubj	32
30	could	could		vbaux	mod	pos							MD	aux	32
31	possibly	possibly	rb+advl	rb	advl	ly	splaux						RB	advmod	32
32	occur	occur	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	28
33	but	but		cc	cls								CC	cc	24
34	then	then		rb	link								RB	advmod	36
35	we	we		pro	1st								PRP	nsubj	36
36	acknowledge	acknowledge		vbmain	vblex	pres	simple	active					VBP	conj	24
37	that	that		comp	comp_that								IN	mark	41
38	we	we		pro	1st								PRP	nsubj	41
39	might	might		vbaux	mod	pos							MD	aux	41
40	not	not											RB	neg	41
41	have	have	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	36
42	,	,											,	punct	41
43	the	the		dt	art								DT	det	44
44	model	model		nn									NN	dobj	41
45	for	for	in+npostmod	in	nmod								IN	prep	44
46	everything	everything		nn	other	nom							NN	pobj	45
47	,	,											,	punct	36
48	so	so		cc	cls								CC	cc	36
49	the	the		dt	art								DT	det	51
50	modelled	model	attr+npremod	jj	attr	ed							VBN	amod	51
51	set	set		nn									NN	nsubj	52
52	is	be		vbmain	be	pres	simple	active					VBZ	conj	36
53	within	within	in+advl	in	advl								IN	prep	52
54	that	that		pro	dem	sg							DT	pobj	53
55	,	,											,	punct	54
56	that	that		dt	dt_dem								DT	det	61
57	all	all		dt									DT	det	59
58	-	-											HYPH	punct	59
59	world	world	nn+npremod	nn			npremod						NN	compound	60
60	state	state	nn+npremod	nn		nom	npremod						NN	compound	61
61	set	set	appos+npostmod	nn			nappos						NN	appos	54
62	.	.											.	punct	24

#sentid = 515
0	um	um											UH	intj	20
1	if	if		cs	cnd								IN	mark	3
2	something	something		nn	other	nom							NN	nsubj	3
3	happens	happen	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBZ	advcl	20
4	that	that		relpro	relpro_that	sg							WDT	nsubj	5
5	's	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	2
6	outside	outside	in+advl	in	advl								IN	prep	5
7	our	our		dt	poss								PRP$	poss	9
8	modelled	model	attr+npremod	jj	attr	ed							VBN	amod	9
9	set	set		nn									NN	pobj	6
10	since	since		cs	cs_othr								IN	mark	15
11	we	we		pro	1st								PRP	nsubj	15
12	ca	can		vbaux	mod								MD	aux	15
13	n't	not											RB	neg	15
14	even	even	rb+advl	rb	advl		splaux						RB	advmod	15
15	represent	represent	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	20
16	it	it		pro	3rd	sg							PRP	dobj	15
17	we	we		pro	1st								PRP	nsubj	20
18	ca	can		vbaux	mod								MD	aux	20
19	n't	not											RB	neg	20
20	hope	hope		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	20
21	to	to		to									TO	aux	22
22	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	20
23	anything	anything		nn	other	nom							NN	dobj	22
24	about	about	in+advl	in	advl								IN	prep	22
25	that	that		pro	dem	sg							DT	pobj	24
26	.	.											.	punct	20

#sentid = 516
0	within	within	in+advl	in	advl								IN	prep	5
1	the	the		dt	art								DT	det	3
2	modelled	model	attr+npremod	jj	attr	ed							VBN	amod	3
3	set	set		nn									NN	pobj	0
4	we	we		pro	1st								PRP	nsubj	5
5	have	have		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	24
6	those	those		dt	dt_dem								DT	det	7
7	states	state		nn	pl	nom							NNS	dobj	5
8	which	which											WDT	dobj	11
9	we	we		pro	1st								PRP	nsubj	11
10	've	've		vbaux									VBP	aux	11
11	called	call	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBN	relcl	7
12	the	the		dt	art								DT	det	14
13	reachable	reachable	attr+npremod	jj	attr								JJ	amod	14
14	states	state		nn	pl	nom							NNS	oprd	11
15	,	,											,	punct	7
16	um	um											UH	intj	7
17	that	that		pro	dem	sg							WDT	pobj	21
18	we	we		pro	1st								PRP	nsubj	20
19	've	've		vbaux									VBP	aux	20
20	planned	plan	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBN	relcl	7
21	for	for	in+advl	in	advl								IN	prep	20
22	um	um											UH	intj	24
23	there	there											EX	expl	24
24	are	be		vbmain	be	pres	simple	active					VBP	ROOT	24
25	some	some											DT	attr	24
26	of	of		in	in_othr								IN	prep	25
27	them	they		pro	pl								PRP	pobj	26
28	that	that		relpro	relpro_that	sg							WDT	nsubj	30
29	can	can		vbaux	mod	pos							MD	aux	30
30	reach	reach	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	25
31	our	our		dt	poss								PRP$	poss	33
32	goal	goal	nn+npremod	nn		nom	npremod						NN	compound	33
33	states	state		nn	pl	nom							NNS	dobj	30
34	and	and		cc									CC	cc	25
35	some	some											DT	conj	25
36	of	of		in	in_othr								IN	prep	35
37	them	they		pro	pl								PRP	pobj	36
38	that	that		relpro	relpro_that	sg							WDT	nsubj	39
39	ca	can	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		MD	relcl	35
40	n't	not											RB	neg	39
41	.	.											.	punct	24

#sentid = 517
0	but	but		cc	cls								CC	cc	8
1	anything	anything		nn		nom							NN	dep	8
2	that	that		relpro	relpro_that	sg							WDT	nsubjpass	4
3	's	be		vbaux									VBZ	auxpass	4
4	planned	plan	finitecls+rel	vbmain	vblex	pres	simple	pasv_agls	nmod_cls	thatcls	rel		VBN	relcl	1
5	for	for	in+advl	in	advl								IN	prep	4
6	we	we		pro	1st								PRP	nsubj	8
7	've	've		vbaux									VBP	aux	8
8	thought	think		vbmain	prepv	pres	simple	active					VBN	ROOT	8
9	about	about	in+advl	in	advl								IN	prep	8
10	avoiding	avoid	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	9
11	failure	failure		nn		nom							NN	dobj	10
12	so	so		cc	cls								CC	cc	8
13	that	that		pro	dem	sg							DT	nsubj	14
14	's	be		vbmain	be	pres	simple	active					VBZ	conj	8
15	all	all											DT	attr	14
16	um	um											UH	intj	15
17	,	,											,	punct	22
18	that	that		pro	dem	sg							WDT	nsubjpass	22
19	's	be		vbaux									VBZ	auxpass	22
20	all	all											DT	dep	22
21	been	be		vbaux									VBN	auxpass	22
22	taken	take	thatcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	14
23	care	care		nn									NN	dobj	22
24	of	of	in+advl	in	advl								IN	prep	22
25	.	.											.	punct	8

#sentid = 518
0	the	the		dt	art								DT	det	3
1	other	other	attr+npremod	jj	attr								JJ	amod	3
2	two	two											CD	nummod	3
3	sets	set		nn	pl								NNS	nsubj	24
4	which	which		relpro	relpro_wh								WDT	nsubj	5
5	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	3
6	the	the		dt	art								DT	det	7
7	focus	focus		nn									NN	attr	5
8	of	of	of+npostmod	in	nmod								IN	prep	7
9	,	,											,	punct	7
10	really	really		rb	othr	ly							RB	advmod	7
11	the	the		dt	art								DT	det	12
12	focus	focus	appos+npostmod	nn			nappos						NN	appos	7
13	for	for	in+npostmod	in	nmod								IN	prep	12
14	,	,											,	punct	12
15	thinking	think	ingcls+rel	vbmain	prepv	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	12
16	about	about	in+advl	in	advl								IN	prep	15
17	real	real	attr+npremod	jj	attr								JJ	amod	19
18	-	-											HYPH	punct	19
19	time	time	nn+npremod	nn			npremod						NN	nmod	22
20	catastrophic	catastrophic	attr+npremod	jj	attr								JJ	amod	21
21	failure	failure	nn+npremod	nn		nom	npremod						NN	compound	22
22	avoidance	avoidance		nn		nom							NN	pobj	16
23	,	,											,	punct	3
24	are	be		vbmain	be	pres	simple	active					VBP	ROOT	24
25	removed	remove	attr+npremod	jj	attr	ed							VBN	amod	26
26	states	state		nn	pl	nom							NNS	attr	24
27	.	.											.	punct	24

#sentid = 519
0	those	those		pro	dem	pl							DT	nsubj	1
1	are	be		vbmain	be	pres	simple	active					VBP	ROOT	1
2	the	the		dt	art								DT	det	4
3	unlikely	unlikely	attr+npremod	jj	attr								JJ	amod	4
4	states	state		nn	pl	nom							NNS	attr	1
5	that	that		pro	dem	sg							WDT	pobj	9
6	we	we		pro	1st								PRP	nsubj	8
7	've	've		vbaux									VBP	aux	8
8	talked	talk	finitecls+rel	vbmain	prepv	pres	simple	active	nmod_cls		rel	reldel	VBN	relcl	4
9	about	about	in+advl	in	advl								IN	prep	8
10	,	,											,	punct	4
11	where	where		rb	advl								WRB	advmod	23
12	if	if		cs	cnd								IN	mark	14
13	you	you		pro	2nd	sg							PRP	nsubj	14
14	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	23
15	some	some		dt									DT	det	17
16	unlikely	unlikely	attr+npremod	jj	attr								JJ	amod	17
17	transition	transition		nn		nom							NN	dobj	14
18	then	then		rb	othr								RB	advmod	21
19	you	you		pro	2nd	sg							PRP	nsubj	21
20	're	be		vbaux									VBP	aux	21
21	gon	go		vbaux									TO	aux	23
22	na	to		vbaux									TO	aux	23
23	end	end		vbmain	phrsv	nonfinite	simple	active	nmod_cls	whcls	rel		VB	relcl	4
24	up	up		rb	prtcle								RP	prt	23
25	in	in	in+advl	in	advl								IN	prep	23
26	the	the		dt	art								DT	det	27
27	state	state		nn		nom							NN	pobj	25
28	that	that		relpro	relpro_that	sg							WDT	nsubj	29
29	's	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	27
30	not	not											RB	neg	29
31	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	32
32	likely	likely		jj	pred								JJ	acomp	29
33	in	in	in+advl	in	advl								IN	prep	49
34	which	which		dt									WDT	det	35
35	case	case		nn									NN	pcomp	33
36	,	,											,	punct	33
37	that	that		pro	dem	sg							DT	nsubj	43
38	plus	plus		in	in_othr								CC	prep	37
39	all	all											PDT	predet	42
40	the	the		dt	art								DT	det	42
41	downstream	downstream	attr+npremod	jj	attr								JJ	amod	42
42	states	state		nn	pl	nom							NNS	conj	37
43	are	be		vbaux									VBP	auxpass	49
44	not	not											RB	neg	43
45	,	,											,	punct	49
46	a-	a-											XX	punct	49
47	are	be		vbaux									VBP	auxpass	49
48	basically	basically	rb+advl	rb	advl	ly							RB	advmod	49
49	thrown	throw	finitecls+rel	vbmain	phrsv	pres	simple	pasv_agls	nmod_cls		rel		VBN	relcl	27
50	out	out		rb	prtcle								RP	prt	49
51	,	,											,	punct	49
52	of	of	in+advl	in	advl								IN	prep	49
53	consideration	consideration		nn		nom							NN	pobj	52
54	because	because		cs	cos								IN	mark	57
55	we	we		pro	1st								PRP	nsubj	57
56	're	be		vbaux									VBP	aux	57
57	ignoring	ignore	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		causative		VBG	advcl	49
58	unlikely	unlikely	attr+npremod	jj	attr								JJ	amod	59
59	states	state		nn	pl	nom							NNS	dobj	57
60	.	.											.	punct	1

#sentid = 520
0	however	however		rb	link								RB	advmod	9
1	since	since		cs	cs_othr								IN	mark	3
2	those	those		pro	dem	pl							DT	nsubj	3
3	are	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBP	advcl	9
4	something	something		nn		nom							NN	attr	3
5	that	that		relpro	relpro_that	sg							WDT	nsubj	7
6	could	could		vbaux	mod	pos							MD	aux	7
7	occur	occur	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	4
8	we	we		pro	1st								PRP	nsubj	9
9	find	find		vbmain	vblex	pres	simple	active					VBP	ROOT	9
10	them	they		pro	pl								PRP	nsubj	13
11	,	,											,	punct	10
12	certainly	certainly	rb+jjrbmod	rb	othr	ly							RB	advmod	13
13	important	important											JJ	ccomp	9
14	to	to		to									TO	aux	15
15	detect	detect	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	13
16	and	and		cc	phrs								CC	cc	15
17	react	react		vbmain	vblex	nonfinite	simple	active					VB	conj	15
18	to	to	in+advl	in	advl								IN	prep	17
19	.	.											.	punct	9

#sentid = 521
0	the	the		dt	art								DT	det	2
1	last	last	attr+npremod	jj	attr								JJ	amod	2
2	type	type		nn									NN	nsubj	7
3	the	the		dt	art								DT	det	6
4	imminent	imminent	attr+npremod	jj	attr								JJ	amod	5
5	failure	failure	nn+npremod	nn		nom	npremod						NN	compound	6
6	states	state	appos+npostmod	nn	pl	nom	nappos						NNS	appos	2
7	are	be		vbmain	be	pres	simple	active					VBP	ROOT	7
8	those	those											DT	attr	7
9	that	that		relpro	relpro_that	sg							WDT	nsubj	13
10	,	,											,	punct	13
11	um	um											UH	intj	13
12	we	we		pro	1st								PRP	nsubj	13
13	acknowledge	acknowledge	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	8
14	that	that		comp	comp_that								IN	mark	20
15	our	our		dt	poss								PRP$	poss	16
16	model	model		nn									NN	nsubj	20
17	,	,											,	punct	20
18	may	may		vbaux	mod	pos							MD	aux	20
19	not	not											RB	neg	20
20	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	13
21	completely	completely	rb+jjrbmod	rb	adjmod	ly							RB	advmod	22
22	precise	precise		jj	pred								JJ	acomp	20
23	,	,											,	punct	8
24	so	so		cc	cls								CC	cc	7
25	,	,											,	punct	7
26	basically	basically	rb+advl	rb	advl	ly							RB	advmod	54
27	,	,											,	punct	26
28	uh	uh											UH	intj	26
29	...	...											:	punct	28
30	if	if		cs	cnd								IN	mark	32
31	there	there											EX	expl	32
32	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBZ	advcl	54
33	a	a		dt	art								DT	det	34
34	transition	transition		nn		nom							NN	attr	32
35	that	that		relpro	relpro_that	sg							WDT	nsubjpass	39
36	has	have		vbaux									VBZ	aux	39
37	not	not											RB	neg	39
38	been	be		vbaux									VBN	auxpass	39
39	put	put	finitecls+rel	vbmain	vblex	pres	perf	pasv_agls	nmod_cls	thatcls	rel		VBN	relcl	34
40	into	into	in+advl	in	advl								IN	prep	39
41	your	your		dt	poss								PRP$	poss	42
42	model	model		nn									NN	pobj	40
43	and	and		cc	cls								CC	cc	32
44	you	you		pro	2nd	sg							PRP	nsubj	45
45	get	get		vbmain	vblex	pres	simple	active					VBP	conj	32
46	to	to	in+advl	in	advl								IN	prep	45
47	one	one		pro	other	pl							CD	pobj	46
48	of	of		in	in_othr								IN	prep	47
49	these	these		dt	dt_dem								DT	det	50
50	states	state		nn	pl	nom							NNS	pobj	48
51	,	,											,	punct	54
52	then	then		rb	link								RB	advmod	54
53	it	it		pro	3rd	sg							PRP	nsubj	54
54	's	be		vbmain	be	pres	simple	active					VBZ	conj	7
55	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	56
56	important	important		jj	pred								JJ	acomp	54
57	to	to		to									TO	aux	58
58	detect	detect	xtrapos+tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	54
59	because	because		cs	cos								IN	mark	63
60	otherwise	otherwise	rb+advl	rb	advl								RB	advmod	63
61	you	you		pro	2nd	sg							PRP	nsubj	63
62	'll	will		vbaux	mod								MD	aux	63
63	fail	fail	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		causative		VB	advcl	54
64	.	.											.	punct	54

#sentid = 522
0													_SP	dep	8
1	so	so		rb	link								RB	advmod	8
2	,	,											,	punct	8
3	to	to		to									TO	aux	4
4	detect	detect	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	8
5	these	these		dt	dt_dem								DT	det	6
6	states	state		nn	pl	nom							NNS	dobj	4
7	we	we		pro	1st								PRP	nsubj	8
8	use	use		vbmain	vblex	pres	simple	active					VBP	ROOT	8
9	the	the		dt	art								DT	det	17
10	same	same	attr+npremod	jj	attr								JJ	amod	17
11	,	,											,	punct	14
12	I	i		nn	1st	proper	npremod						NNP	compound	14
13	-	-											HYPH	punct	14
14	D	d	nn+npremod	nn		proper	npremod						NNP	nmod	17
15	-	-											HYPH	punct	14
16	three	three											CD	nummod	14
17	algorithm	algorithm		nn									NN	dobj	8
18	that	that		pro	dem	sg							WDT	dobj	20
19	we	we		pro	1st								PRP	nsubj	20
20	use	use	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	17
21	to	to		to									TO	aux	22
22	minimize	minimize	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	20
23	our	our		dt	poss								PRP$	poss	26
24	,	,											,	punct	26
25	TAP	tap	nn+npremod	nn		proper	npremod						NNP	compound	26
26	preconditions	precondition		nn	pl	nom							NNS	dobj	22
27	that	that		pro	dem	sg							WDT	pobj	30
28	i	i		pro	1st	sg							PRP	nsubj	29
29	talked	talk	finitecls+rel	vbmain	prepv	past	simple	active	nmod_cls		rel	reldel	VBD	relcl	26
30	about	about	in+advl	in	advl								IN	prep	29
31	earlier	early	rb+advl	rb	advl								RBR	advmod	29
32	,	,											,	punct	8
33	to	to		to									TO	aux	37
34	bui-	bui-											XX	dep	37
35	to	to											TO	dep	37
36	d-	d-											XX	dep	37
37	build	build	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	8
38	TAPs	tap		nn	pl								NNS	dobj	37
39	to	to		to									TO	aux	40
40	detect	detect	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	37
41	each	each											DT	dobj	40
42	of	of		in	in_othr								IN	prep	41
43	those	those		dt	dt_dem								DT	det	44
44	classes	class		nn	pl								NNS	pobj	42
45	of	of	of+npostmod	in	nmod								IN	prep	44
46	states	state		nn	pl	nom							NNS	pobj	45
47	.	.											.	punct	8

#sentid = 523
0	um	um											UH	intj	10
1	the	the		dt	art								DT	det	2
2	TAPs	tap		nn	pl								NNS	nsubjpass	10
3	for	for	in+npostmod	in	nmod								IN	prep	2
4	detecting	detect	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	3
5	removed	remove	attr+npremod	jj	attr	ed							VBN	amod	8
6	imminent	imminent	attr+npremod	jj	attr								JJ	amod	7
7	failure	failure	nn+npremod	nn		nom	npremod						NN	compound	8
8	states	state		nn	pl	nom							NNS	dobj	4
9	are	be		vbaux									VBP	auxpass	10
10	guaranteed	guarantee		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	10
11	because	because		cs	cos								IN	mark	14
12	,	,											,	punct	14
13	one	one		pro	other	pl							CD	nsubj	14
14	requires	require	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBZ	advcl	10
15	hard	hard	attr+npremod	jj	attr								JJ	amod	19
16	real	real	attr+npremod	jj	attr								JJ	amod	18
17	-	-											HYPH	punct	18
18	time	time	nn+npremod	nn			npremod						NN	compound	19
19	response	response		nn									NN	dobj	14
20	to	to	in+npostmod	in	nmod								IN	prep	19
21	those	those		pro	dem	pl							DT	pobj	20
22	and	and		cc	cls								CC	cc	14
23	the	the		dt	art								DT	det	24
24	TAP	tap		nn		proper							NNP	nsubj	32
25	for	for	in+npostmod	in	nmod								IN	prep	24
26	a	a		dt	art								DT	det	31
27	dead	dead	attr+npremod	jj	attr								JJ	amod	29
28	-	-											HYPH	punct	29
29	end	end	nn+npremod	nn			npremod						NN	compound	31
30	state	state	nn+npremod	nn		nom	npremod						NN	compound	31
31	detection	detection		nn		nom							NN	pobj	25
32	is	be		vbmain	be	pres	simple	active					VBZ	conj	14
33	best	good	attr+npremod	jj	attr								JJS	amod	35
34	-	-											HYPH	punct	35
35	effort	effort		nn									NN	attr	32
36	.	.											.	punct	10

#sentid = 524
0	so	so		rb	link								RB	advmod	11
1	reaction	reaction		nn		nom							NN	nsubj	11
2	to	to	in+npostmod	in	nmod								IN	prep	1
3	when	when		comp	comp_wh								WRB	advmod	9
4	one	one		pro	other	pl							CD	nsubjpass	9
5	of	of		in	in_othr								IN	prep	4
6	these	these		dt	dt_dem								DT	det	7
7	states	state		nn	pl	nom							NNS	pobj	5
8	is	be		vbaux									VBZ	auxpass	9
9	identified	identify	whcls+incomp	vbmain	vblex	pres	simple	pasv_agls	compcls	whcls	incomp		VBN	pcomp	2
10	,	,											,	punct	11
11	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	11
12	to	to		to									TO	aux	13
13	notify	notify	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	11
14	the	the		dt	art								DT	det	16
15	plan	plan	nn+npremod	nn			npremod						NN	compound	16
16	dispatcher	dispatcher		nn		nom							NN	dobj	13
17	,	,											,	punct	16
18	which	which		relpro	relpro_wh								WDT	nsubj	19
19	pulls	pull	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	16
20	a	a		dt	art								DT	det	22
21	contingency	contingency	nn+npremod	nn		nom	npremod						NN	compound	22
22	plan	plan		nn									NN	dobj	19
23	to	to		to									TO	aux	25
24	um	um											UH	intj	25
25	execute	execute	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	19
26	if	if		cs	cnd								IN	mark	28
27	it	it		pro	3rd	sg							PRP	nsubj	28
28	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBZ	advcl	34
29	available	available		jj	pred								JJ	acomp	28
30	otherwise	otherwise	rb+advl	rb	advl								RB	advmod	34
31	,	,											,	punct	34
32	dynamic	dynamic	attr+npremod	jj	attr								JJ	amod	33
33	planning	planning		nn		nom							NN	nsubj	34
34	happens	happen	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBZ	advcl	11
35	.	.											.	punct	11

#sentid = 525
0	so	so		rb	link								RB	advmod	9
1	,	,											,	punct	9
2	at	at	in+advl	in	advl								IN	prep	9
3	a	a		dt	art								DT	det	6
4	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	5
5	high	high	attr+npremod	jj	attr								JJ	amod	6
6	level	level		nn									NN	pobj	2
7	,	,											,	punct	9
8	this	this		pro	dem	sg							DT	nsubj	9
9	talks	talk		vbmain	prepv	pres	simple	active					VBZ	ROOT	9
10	about	about	in+advl	in	advl								IN	prep	9
11	the	the		dt	art								DT	det	12
12	transition	transition		nn		nom							NN	pobj	10
13	between	between	in+npostmod	in	nmod								IN	prep	12
14	different	different	attr+npremod	jj	attr								JJ	amod	15
15	plans	plan		nn	pl								NNS	pobj	13
16	.	.											.	punct	9

#sentid = 526
0	so	so		rb	link								RB	advmod	2
1	,	,											,	punct	2
2	say	say		vbmain	vblex	nonfinite	simple	active					VB	ROOT	2
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	start	start	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	2
5	in	in	in+advl	in	advl								IN	prep	4
6	this	this		dt	dt_dem								DT	det	14
7	,	,											,	punct	14
8	um	um											UH	intj	14
9	planned	plan	attr+npremod	jj	attr	ed							VBN	amod	14
10	-	-											HYPH	punct	9
11	for	for	in+advl	in	advl								IN	prep	9
12	-	-											HYPH	punct	11
13	states	state		nn	pl	nom							NNS	pobj	11
14	box	box		nn									NN	pobj	5
15	.	.											.	punct	2

#sentid = 527
0	then	then		rb	link								RB	advmod	2
1	something	something		nn	other	nom							NN	nsubj	2
2	happens	happen		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	36
3	that	that		relpro	relpro_that	sg							WDT	nsubj	4
4	takes	take	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	1
5	you	you		pro	2nd	sg							PRP	dobj	4
6	out	out	in+advl	in	advl								IN	prep	4
7	of	of		in	in_othr								IN	prep	6
8	that	that		dt	dt_dem								DT	det	9
9	set	set		nn									NN	pobj	7
10	of	of	of+npostmod	in	nmod								IN	prep	9
11	states	state		nn	pl	nom							NNS	pobj	10
12	,	,											,	punct	2
13	um	um											UH	intj	36
14	if	if		cs	cnd								IN	mark	16
15	it	it		pro	3rd	sg							PRP	nsubj	16
16	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBZ	advcl	36
17	something	something		nn		nom							NN	attr	16
18	we	we		pro	1st								PRP	nsubj	19
19	call	call	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	17
20	unstable	unstable											JJ	oprd	19
21	,	,											,	punct	19
22	meaning	mean	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	19
23	that	that		comp	comp_that								IN	mark	25
24	it	it		pro	3rd	sg							PRP	nsubj	25
25	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	22
26	uh	uh											UH	intj	25
27	something	something		nn		nom							NN	attr	25
28	that	that		relpro	relpro_that	sg							WDT	nsubj	30
29	can	can		vbaux	mod	pos							MD	aux	30
30	lead	lead	finitecls+rel	vbmain	prepv	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	27
31	to	to	in+advl	in	advl								IN	prep	30
32	failure	failure		nn		nom							NN	pobj	31
33	,	,											,	punct	36
34	then	then		rb	link								RB	advmod	36
35	we	we		pro	1st								PRP	nsubj	36
36	detect	detect		vbmain	vblex	pres	simple	active					VBP	ROOT	36
37	that	that		pro	dem	sg							DT	dobj	36
38	as	as	in+advl	in	advl								IN	prep	36
39	imminent	imminent	attr+npremod	jj	attr								JJ	amod	41
40	-	-											HYPH	punct	41
41	failure	failure		nn		nom							NN	npadvmod	42
42	removed	remove	attr+npremod	jj	attr	ed							VBN	amod	43
43	state	state		nn		nom							NN	pobj	38
44	,	,											,	punct	36
45	and	and		cc	cls								CC	cc	36
46	currently	currently	rb+advl	rb	advl	ly							RB	advmod	48
47	we	we		pro	1st								PRP	nsubj	48
48	require	require		vbmain	vblex	pres	simple	active					VBP	conj	36
49	there	there											EX	expl	51
50	to	to		to									TO	aux	51
51	be	be		vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	48
52	a	a		dt	art								DT	det	54
53	cached	cache	attr+npremod	jj	attr	ed							VBN	amod	54
54	plan	plan		nn									NN	attr	51
55	,	,											,	punct	54
56	um	um											UH	intj	54
57	that	that		pro	dem	sg							WDT	dobj	61
58	we	we		pro	1st								PRP	nsubj	61
59	c-	c-											XX	dep	61
60	can	can		vbaux	mod	pos							MD	aux	61
61	recall	recall	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel		VB	relcl	54
62	in	in	in+advl	in	advl								IN	prep	61
63	time	time		nn									NN	pobj	62
64	to	to		to									TO	aux	65
65	react	react	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	63
66	to	to	in+advl	in	advl								IN	prep	65
67	that	that		dt	dt_dem								DT	det	68
68	state	state		nn		nom							NN	pobj	66
69	.	.											.	punct	48

#sentid = 528
0	um	um											UH	intj	15
1	,	,											,	punct	15
2	alternatively	alternatively	rb+advl	rb	advl	ly							RB	advmod	15
3	,	,											,	punct	15
4	um	um											UH	intj	15
5	if	if		cs	cnd								IN	mark	15
6	the	the		dt	art								DT	det	7
7	departure	departure		nn		nom							NN	nsubj	15
8	from	from	in+npostmod	in	nmod								IN	prep	7
9	the	the		dt	art								DT	det	15
10	planned	plan		jj	attr	ed							VBN	amod	15
11	-	-											HYPH	punct	10
12	for	for	in+advl	in	advl								IN	prep	10
13	states	state		nn	pl	nom							NNS	pobj	12
14	,	,											,	punct	10
15	is	be		vbmain	be	pres	simple	active	compcls		conditional	compdel	VBZ	ccomp	38
16	something	something		nn		nom							NN	attr	15
17	that	that		relpro	relpro_that	sg							WDT	nsubj	18
18	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	16
19	stable	stable		jj	pred								JJ	acomp	18
20	meaning	mean	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	18
21	it	it		pro	3rd	sg							PRP	nsubj	24
22	wo	will		vbaux	mod								MD	aux	24
23	n't	not											RB	neg	24
24	fail	fail	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	20
25	but	but		cc	cls								CC	cc	18
26	you	you		pro	2nd	sg							PRP	nsubj	29
27	do	do		vbaux									VBP	aux	29
28	n't	not											RB	neg	29
29	know	know		vbmain	vblex	pres	simple	active					VB	conj	18
30	what	what											WP	dobj	32
31	to	to		to									TO	aux	32
32	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	29
33	about	about	in+advl	in	advl								IN	prep	32
34	it	it		pro	3rd	sg							PRP	pobj	33
35	then	then		rb	link								RB	advmod	38
36	,	,											,	punct	38
37	we	we		pro	1st								PRP	nsubj	38
38	do	do		vbmain	vblex	pres	simple	active					VBP	ROOT	38
39	dynamic	dynamic	attr+npremod	jj	attr								JJ	amod	40
40	replanning	replanning		nn		nom							NN	dobj	38
41	for	for	in+advl	in	advl								IN	prep	38
42	that	that		pro	dem	sg							DT	pobj	41
43	.	.											.	punct	38

#sentid = 529
0	so	so		rb	link								RB	advmod	16
1	,	,											,	punct	16
2	looking	look	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	16
3	again	again	rb+advl	rb	advl								RB	advmod	2
4	at	at	in+advl	in	advl								IN	prep	2
5	how	how		comp	comp_wh								WRB	advmod	12
6	this	this		dt	dt_dem								DT	det	12
7	,	,											,	punct	12
8	trade	trade	attr+npremod	jj	attr								VB	amod	11
9	-	-											HYPH	punct	8
10	off	off		rb	prtcle								RP	prt	8
11	curve	curve		nn									NN	nsubj	12
12	appears	appear	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VBZ	pcomp	4
13	,	,											,	punct	16
14	um	um											UH	intj	16
15	we	we		pro	1st								PRP	nsubj	16
16	had	have		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	84
17	the	the		dt	art								DT	det	19
18	original	original	attr+npremod	jj	attr								JJ	amod	19
19	CIRCA	circa		nn		proper							NNP	dobj	16
20	and	and		cc	cls								CC	cc	16
21	then	then		rb	link								RB	advmod	23
22	we	we		pro	1st								PRP	nsubj	23
23	had	have		vbmain	vblex	past	simple	active					VBD	conj	16
24	,	,											,	punct	23
25	the	the		dt	art								DT	det	26
26	CIRCA	circa		nn		proper							NNP	dobj	23
27	-	-											HYPH	punct	26
28	two	two											CD	nummod	26
29	was	be		vbmain	be	past	simple	active					VBD	conj	26
30	just	just		rb	othr								RB	advmod	33
31	the	the		dt	art								DT	det	33
32	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	33
33	model	model		nn									NN	dobj	23
34	but	but		cc	phrs								CC	cc	23
35	no	no											UH	intj	40
36	,	,											,	punct	40
37	um	um											UH	intj	40
38	no	no		dt									DT	det	40
39	plan	plan	nn+npremod	nn			npremod						NN	compound	40
40	cache	cache		nn									NN	conj	23
41	,	,											,	punct	40
42	um	um											UH	intj	40
43	which	which		relpro	relpro_wh								WDT	nsubj	44
44	was	be	finitecls+rel	vbmain	be	past	simple	active	nmod_cls	whcls	rel		VBD	relcl	40
45	,	,											,	punct	44
46	we	we		pro	1st								PRP	nsubj	47
47	talked	talk		vbmain	prepv	past	simple	active					VBD	parataxis	44
48	about	about	in+advl	in	advl								IN	prep	47
49	after	after	in+advl	in	advl								IN	prep	47
50	the	the		dt	art								DT	det	52
51	last	last	attr+npremod	jj	attr								JJ	amod	52
52	section	section		nn		nom							NN	pobj	49
53	,	,											,	punct	84
54	now	now	rb+advl	rb	advl								RB	advmod	60
55	with	with	in+advl	in	advl								IN	prep	60
56	the	the		dt	art								DT	det	58
57	plan	plan	nn+npremod	nn			npremod						NN	compound	58
58	cache	cache		nn									NN	pobj	55
59	we	we		pro	1st								PRP	nsubj	60
60	're	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	84
61	able	able		jj	pred								JJ	acomp	60
62	to	to		to									TO	aux	63
63	extend	extend	tocls+jcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	61
64	that	that		pro	dem	sg							DT	dobj	63
65	out	out		rb	prtcle								RP	prt	63
66	so	so		cs	cs_othr								IN	mark	72
67	that	that		cs	cs_othr								IN	mark	72
68	we	we		pro	1st								PRP	nsubj	72
69	um	um											UH	intj	72
70	can	can		vbaux	mod	pos							MD	aux	72
71	,	,											,	punct	72
72	have	have	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	63
73	fewer	few	attr+npremod	jj	attr								JJR	amod	74
74	resources	resource		nn	pl								NNS	dobj	72
75	and	and		cc	phrs								CC	cc	72
76	still	still	rb+advl	rb	advl								RB	advmod	77
77	succeed	succeed		vbmain	vblex	nonfinite	simple	active					VB	conj	72
78	however	however		rb	link								RB	advmod	84
79	,	,											,	punct	84
80	um	um											UH	intj	84
81	ultimately	ultimately	rb+advl	rb	advl	ly							RB	advmod	84
82	we	we		pro	1st								PRP	nsubj	84
83	'll	will		vbaux	mod								MD	aux	84
84	run	run		vbmain	phrsv	vp_w_modal	simple	active					VB	ROOT	84
85	out	out		rb	prtcle								RP	prt	84
86	of	of	in+advl	in	advl								IN	prep	84
87	resources	resource		nn	pl								NNS	pobj	86
88	anyway	anyway	rb+advl	rb	advl								RB	advmod	84
89	,	,											,	punct	84
90	even	even		rb	othr								RB	advmod	91
91	with	with	in+advl	in	advl								IN	prep	84
92	the	the		dt	art								DT	det	94
93	plan	plan	nn+npremod	nn			npremod						NN	compound	94
94	cache	cache		nn									NN	pobj	91
95	in	in	in+advl	in	advl								IN	prep	104
96	which	which		dt									WDT	det	97
97	case	case		nn									NN	pcomp	95
98	,	,											,	punct	104
99	um	um											UH	intj	104
100	,	,											,	punct	104
101	that	that		pro	dem	sg							DT	nsubjpass	104
102	,	,											,	punct	104
103	is	be		vbaux									VBZ	auxpass	104
104	represented	represent	finitecls+advl	vbmain	vblex	pres	simple	pasv_by	advlcls				VBN	advcl	84
105	by	by											IN	agent	104
106	,	,											,	punct	105
107	it	it		pro	3rd	sg							PRP	nsubj	109
108	eventually	eventually	rb+advl	rb	advl	ly							RB	advmod	109
109	degrading	degrade	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	105
110	also	also	rb+advl	rb	advl								RB	advmod	109
111	.	.											.	punct	84

#sentid = 530
0	and	and		cc	cls								CC	cc	14
1	this	this		dt	dt_dem								DT	det	3
2	this	this		dt	dt_dem								DT	det	3
3	region	region		nn									NN	nsubj	14
4	when	when		rb	advl								WRB	advmod	7
5	it	it		pro	3rd	sg							PRP	nsubj	7
6	first	first		rb	link								RB	advmod	7
7	starts	start	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	3
8	to	to		to									TO	aux	9
9	degrade	degrade	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	7
10	with	with	in+advl	in	advl								IN	prep	9
11	the	the		dt	art								DT	det	13
12	plan	plan	nn+npremod	nn			npremod						NN	compound	13
13	cache	cache		nn									NN	pobj	10
14	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	14
15	where	where		rb	advl								WRB	advmod	17
16	we	we		pro	1st								PRP	nsubj	17
17	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	14
18	the	the		dt	art								DT	det	19
19	motivation	motivation		nn		nom							NN	dobj	17
20	for	for	in+npostmod	in	nmod								IN	prep	19
21	real	real	attr+npremod	jj	attr								JJ	amod	23
22	-	-											HYPH	punct	23
23	time	time	nn+npremod	nn			npremod						NN	compound	24
24	planning	planning		nn		nom							NN	pobj	20
25	,	,											,	punct	17
26	because	because		cs	cos								IN	mark	39
27	one	one		pro	other	pl							CD	nsubj	39
28	of	of		in	in_othr								IN	prep	27
29	the	the		dt	art								DT	det	30
30	modes	mode		nn	pl								NNS	pobj	28
31	that	that		relpro	relpro_that	sg							WDT	nsubj	34
32	,	,											,	punct	34
33	could	could		vbaux	mod	pos							MD	aux	34
34	require	require	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	30
35	real	real	attr+npremod	jj	attr								JJ	amod	37
36	-	-											HYPH	punct	37
37	time	time	nn+npremod	nn			npremod						NN	compound	38
38	planning	planning		nn		nom							NN	dobj	34
39	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		causative		VBZ	advcl	17
40	if	if		cs	cnd								IN	mark	45
41	the	the		dt	art								DT	det	43
42	plan	plan	nn+npremod	nn			npremod						NN	compound	43
43	cache	cache		nn									NN	nsubjpass	45
44	is	be		vbaux									VBZ	auxpass	45
45	populated	populate	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls		conditional		VBN	advcl	39
46	enough	enough	rb+advl	rb	advl								RB	advmod	45
47	that	that		comp	comp_that								IN	mark	58
48	,	,											,	punct	58
49	just	just	rb+advl	rb	advl								RB	advmod	50
50	searching	search		vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	csubj	58
51	and	and		cc	phrs								CC	cc	50
52	retrieving	retrieve		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	50
53	a	a		dt	art								DT	det	55
54	a	a		dt	art								DT	det	55
55	plan	plan		nn									NN	dobj	52
56	,	,											,	punct	58
57	um	um											UH	intj	58
58	compromises	compromise	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	45
59	the	the		dt	art								DT	det	60
60	guarantees	guarantee		nn	pl	nom							NNS	dobj	58
61	...	...											:	punct	14

#sentid = 531
0	okay	okay											UH	intj	3
1	,	,											,	punct	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	was	be		vbmain	be	past	simple	active					VBD	ROOT	3
4	a	a		dt	art								DT	det	5
5	lot	lot		nn									NN	npadvmod	6
6	quicker	quick		jj	pred								JJR	acomp	3
7	.	.											.	punct	3

#sentid = 532
0	so	so		rb	link								RB	advmod	11
1	,	,											,	punct	11
2	the	the		dt	art								DT	det	6
3	third	third	attr+npremod	jj	attr								JJ	amod	6
4	,	,											,	punct	6
5	um	um											UH	intj	6
6	item	item		nn									NN	nsubj	11
7	that	that		pro	dem	sg							WDT	dobj	10
8	we	we		pro	1st								PRP	nsubj	10
9	really	really	rb+advl	rb	advl	ly							RB	advmod	10
10	addressed	address	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel		VBD	relcl	6
11	was	be		vbmain	be	past	simple	active					VBD	ROOT	11
12	how	how		comp	comp_wh								WRB	advmod	18
13	did	do		vbaux									VBD	aux	18
14	the	the		dt	art								DT	det	15
15	planner	planner		nn		nom							NN	nsubj	18
16	and	and		cc	phrs								CC	cc	15
17	scheduler	scheduler		nn		nom							NN	conj	15
18	talk	talk	whcls+vcomp	vbmain	prepv	past	simple	active	compcls	whcls	vcomp		VB	ccomp	11
19	to	to	in+advl	in	advl								IN	prep	18
20	each	each		dt									DT	det	21
21	other	other											JJ	pobj	19
22	,	,											,	punct	18
23	when	when		rb	advl								WRB	advmod	30
24	,	,											,	punct	30
25	a	a											XX	dep	30
26	p-	p-											XX	dep	30
27	the	the		dt	art								DT	det	29
28	proposed	propose	attr+npremod	jj	attr	ed							VBN	amod	29
29	plan	plan		nn									NN	nsubj	30
30	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	18
31	unschedulable	unschedulable		jj	pred								JJ	acomp	30
32	and	and		cc	cls								CC	cc	30
33	how	how		rb	advl								WRB	advmod	36
34	does	do		vbaux									VBZ	aux	36
35	that	that		pro	dem	sg							DT	nsubj	36
36	help	help		vbmain	vblex	pres	simple	active					VB	conj	30
37	um	um											UH	intj	36
38	make	make		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	36
39	the	the		dt	art								DT	det	42
40	trade	trade	nn+npremod	nn			npremod						NN	compound	42
41	-	-											HYPH	punct	42
42	offs	off		nn	pl								NNS	dobj	38
43	.	.											.	punct	11

#sentid = 533
0	so	so		rb	link								RB	advmod	6
1	the	the		dt	art								DT	det	2
2	approach	approach		nn									NN	nsubj	6
3	that	that		pro	dem	sg							WDT	dobj	5
4	we	we		pro	1st								PRP	nsubj	5
5	used	use	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel		VBD	relcl	2
6	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	6
7	to	to		to									TO	aux	8
8	guide	guide	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	6
9	the	the		dt	art								DT	det	10
10	planner	planner		nn		nom							NN	dobj	8
11	backtracking	backtrack	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	8
12	toward	toward	in+advl	in	advl								IN	prep	11
13	the	the		dt	art								DT	det	15
14	schedulable	schedulable	attr+npremod	jj	attr								JJ	amod	15
15	plan	plan		nn									NN	pobj	12
16	.	.											.	punct	6

#sentid = 534
0	so	so		rb	link								RB	advmod	4
1	,	,											,	punct	4
2	we	we		pro	1st								PRP	nsubj	4
3	actually	actually	rb+advl	rb	advl	ly							RB	advmod	4
4	did	do		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	15
5	two	two											CD	nummod	6
6	kind	kind		nn									NN	dobj	4
7	of	of	of+npostmod	in	nmod								IN	prep	6
8	separate	separate	attr+npremod	jj	attr								JJ	amod	9
9	projects	project		nn	pl								NNS	pobj	7
10	on	on	in+advl	in	advl								IN	prep	4
11	this	this		pro	dem	sg							DT	pobj	10
12	the	the		dt	art								DT	det	14
13	first	first	attr+npremod	jj	attr								JJ	amod	14
14	one	one		nn	other	pl							NN	nsubj	15
15	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	15
16	we	we		pro	1st								PRP	nsubj	17
17	presumed	presume	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	15
18	,	,											,	punct	17
19	the	the		dt	art								DT	det	20
20	existence	existence		nn		nom							NN	dobj	17
21	of	of	of+npostmod	in	nmod								IN	prep	20
22	a	a		dt	art								DT	det	29
23	single	single	attr+npremod	jj	attr								JJ	amod	25
24	-	-											HYPH	punct	25
25	processor	processor	nn+npremod	nn		nom	npremod						NN	compound	29
26	plan	plan	nn+npremod	nn			npremod						NN	compound	28
27	-	-											HYPH	punct	28
28	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	29
29	platform	platform		nn									NN	pobj	21
30	,	,											,	punct	29
31	um	um											UH	intj	29
32	which	which		relpro	relpro_wh								WDT	nsubj	33
33	meant	mean	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls	whcls	rel		VBD	relcl	29
34	that	that		comp	comp_that								IN	mark	43
35	the	the		dt	art								DT	det	37
36	only	only	attr+npremod	jj	attr								JJ	amod	37
37	resource	resource		nn									NN	nsubj	43
38	we	we		pro	1st								PRP	nsubj	40
39	were	be		vbaux									VBD	aux	40
40	trying	try	finitecls+rel	vbmain	vblex	past	prog	active	nmod_cls		rel	reldel	VBG	relcl	37
41	to	to		to									TO	aux	42
42	schedule	schedule	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	40
43	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls	thatcls	vcomp		VBD	ccomp	33
44	one	one											CD	nummod	45
45	processor	processor		nn		nom							NN	attr	43
46	.	.											.	punct	15

#sentid = 535
0	um	um											UH	intj	7
1	in	in	in+advl	in	advl								IN	prep	7
2	the	the		dt	art								DT	det	4
3	second	second	attr+npremod	jj	attr								JJ	amod	4
4	part	part		nn									NN	pobj	1
5	,	,											,	punct	7
6	we	we		pro	1st								PRP	nsubj	7
7	looked	look		vbmain	prepv	past	simple	active					VBD	ROOT	7
8	at	at	in+advl	in	advl								IN	prep	7
9	,	,											,	punct	8
10	what	what											WP	pobj	8
11	if	if		cs	cnd								IN	mark	13
12	you	you		pro	2nd	sg							PRP	nsubj	13
13	had	have	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	10
14	one	one											CD	nummod	18
15	more	more		jj	attr								JJR	amod	17
16	than	than											IN	quantmod	17
17	one	one											CD	nummod	18
18	resources	resource		nn	pl								NNS	dobj	13
19	,	,											,	punct	18
20	and	and		cc	phrs								CC	cc	18
21	uh	uh											UH	intj	8
22	,	,											,	punct	21
23	um	um											UH	intj	21
24	basically	basically		rb	othr	ly							RB	advmod	25
25	like	like											UH	intj	28
26	uh	uh											UH	intj	28
27	communication	communication	nn+npremod	nn		nom	npremod						NN	compound	28
28	channels	channel		nn	pl								NNS	pobj	8
29	or	or		cc	phrs								CC	cc	28
30	,	,											,	punct	28
31	um	um											UH	intj	35
32	more	more		jj	attr								JJR	amod	34
33	than	than											IN	quantmod	34
34	one	one											CD	nummod	35
35	processor	processor		nn		nom							NN	conj	28
36	or	or		cc	phrs								CC	cc	35
37	whatever	whatever											WDT	conj	35
38	,	,											,	punct	7
39	and	and		cc	cls								CC	cc	7
40	then	then		rb	link								RB	advmod	43
41	we	we		pro	1st								PRP	nsubj	43
42	also	also	rb+advl	rb	advl								RB	advmod	43
43	looked	look		vbmain	prepv	past	simple	active					VBD	conj	7
44	at	at	in+advl	in	advl								IN	prep	43
45	,	,											,	punct	44
46	well	well											UH	intj	58
47	now	now	rb+advl	rb	advl								RB	advmod	58
48	that	that		comp	comp_that								IN	mark	50
49	we	we		pro	1st								PRP	nsubj	50
50	have	have		vbmain	vblex	pres	simple	active	compcls	thatcls			VBP	ccomp	47
51	more	more		jj	attr								JJR	amod	53
52	than	than											IN	quantmod	53
53	one	one											CD	nummod	54
54	resource	resource		nn									NN	dobj	50
55	how	how		comp	comp_wh								WRB	advmod	58
56	can	can		vbaux	mod	pos							MD	aux	58
57	we	we		pro	1st								PRP	nsubj	58
58	think	think	whcls+incomp	vbmain	prepv	vp_w_modal	simple	active	compcls	whcls	incomp		VB	pcomp	44
59	of	of	in+advl	in	advl								IN	prep	58
60	fault	fault	nn+npremod	nn			npremod						NN	compound	61
61	tolerance	tolerance		nn		nom							NN	pobj	59
62	in	in	in+advl	in	advl								IN	prep	58
63	terms	term		nn	pl								NNS	pobj	62
64	of	of	of+npostmod	in	nmod								IN	prep	63
65	,	,											,	punct	64
66	computational	computational	attr+npremod	jj	attr								JJ	amod	67
67	system	system	nn+npremod	nn			npremod						NN	compound	68
68	failures	failure		nn	pl								NNS	pobj	64
69	.	.											.	punct	43

#sentid = 536
0	um	um											UH	intj	4
1	and	and		cc	phrs								CC	cc	4
2	we	we		pro	1st								PRP	nsubj	4
3	also	also	rb+advl	rb	advl								RB	advmod	4
4	talked	talk		vbmain	prepv	past	simple	active					VBD	ROOT	4
5	about	about	in+advl	in	advl								IN	prep	4
6	uh	uh											UH	intj	5
7	,	,											,	punct	5
8	in	in	in+advl	in	advl								IN	prep	21
9	the	the		dt	art								DT	det	10
10	future	future		nn		nom							NN	pobj	8
11	,	,											,	punct	21
12	maybe	maybe	rb+advl	rb	advl								RB	advmod	15
13	this	this		dt	dt_dem								DT	det	14
14	approach	approach		nn									NN	nsubj	15
15	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	21
16	not	not											RB	neg	15
17	enough	enough		jj	pred								JJ	acomp	15
18	maybe	maybe	rb+advl	rb	advl								RB	advmod	21
19	we	we		pro	1st								PRP	nsubj	21
20	should	should		vbaux	mod	nec							MD	aux	21
21	have	have		vbmain	vblex	vp_w_modal	simple	active	compcls		incomp	compdel	VB	pcomp	5
22	,	,											,	punct	21
23	the	the		dt	art								DT	det	32
24	,	,											,	punct	32
25	um	um											UH	intj	32
26	,	,											,	punct	32
27	uh	uh											UH	intj	32
28	,	,											,	punct	32
29	the	the		dt	art								DT	det	32
30	trade	trade	nn+npremod	nn			npremod						NN	compound	32
31	-	-											HYPH	punct	32
32	offs	off		nn	pl								NNS	dobj	21
33	divided	divide	edcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	edcls	ncomp		VBN	acl	32
34	between	between	in+advl	in	advl								IN	prep	33
35	planner	planner		nn		nom							NN	pobj	34
36	and	and		cc	phrs								CC	cc	35
37	scheduler	scheduler		nn		nom							NN	conj	35
38	at	at	in+advl	in	advl								IN	prep	43
39	which	which		dt									WDT	det	40
40	case	case		nn									NN	pcomp	38
41	,	,											,	punct	43
42	we	we		pro	1st								PRP	nsubj	43
43	look	look	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBP	advcl	21
44	separately	separately	rb+advl	rb	advl	ly							RB	advmod	43
45	at	at	in+advl	in	advl								IN	prep	43
46	,	,											,	punct	45
47	um	um											UH	intj	45
48	how	how		comp	comp_wh								WRB	advmod	53
49	do	do		vbaux									VBP	aux	53
50	you	you		pro	2nd	sg							PRP	nsubj	53
51	,	,											,	punct	53
52	um	um											UH	intj	53
53	allow	allow	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VB	pcomp	45
54	the	the		dt	art								DT	det	55
55	scheduler	scheduler		nn		nom							NN	nsubj	58
56	to	to		to									TO	aux	58
57	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	58
58	degrade	degrade		vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	53
59	the	the		dt	art								DT	det	60
60	quality	quality		nn		nom							NN	dobj	58
61	of	of	of+npostmod	in	nmod								IN	prep	60
62	service	service		nn									NN	pobj	61
63	of	of	of+npostmod	in	nmod								IN	prep	60
64	tests	test		nn	pl								NNS	pobj	63
65	,	,											,	punct	64
66	um	um											UH	intj	64
67	,	,											,	punct	64
68	this	this		dt	dt_dem								DT	det	69
69	work	work	appos+npostmod	nn			nappos						NN	appos	64
70	,	,											,	punct	64
71	i	i		pro	1st	sg							PRP	nsubj	74
72	'm	be		vbaux									VBP	aux	74
73	not	not											RB	neg	74
74	going	go	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls				VBG	advcl	43
75	to	to		to									TO	aux	76
76	discuss	discuss	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	74
77	during	during	in+advl	in	advl								IN	prep	76
78	this	this		dt	dt_dem								DT	det	79
79	presentation	presentation		nn		nom							NN	pobj	77
80	because	because		cs	cos								IN	mark	84
81	it	it		pro	3rd	sg							PRP	nsubj	84
82	does	do		vbaux									VBZ	aux	84
83	n't	not											RB	neg	84
84	fit	fit	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VB	advcl	74
85	into	into	in+advl	in	advl								IN	prep	84
86	the	the		dt	art								DT	det	90
87	CIRCA	circa	nn+npremod	nn		proper	npremod						NNP	nmod	90
88	-	-											HYPH	punct	87
89	two	two											CD	nummod	87
90	framework	framework		nn									NN	pobj	85
91	but	but		cc	phrs								CC	cc	74
92	uh	uh											UH	intj	96
93	,	,											,	punct	96
94	hopefully	hopefully		rb	othr	ly							RB	advmod	96
95	it	it		pro	3rd	sg							PRP	nsubj	96
96	will	will		vbaux	mod	prd							MD	aux	97
97	soon	soon	rb+advl	rb	advl								RB	advmod	74
98	.	.											.	punct	4

#sentid = 537
0	so	so		rb	link								RB	advmod	5
1	first	first		rb	link								RB	advmod	5
2	,	,											,	punct	5
3	um	um											UH	intj	5
4	we	we		pro	1st								PRP	nsubj	5
5	looked	look		vbmain	prepv	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	28
6	at	at	in+advl	in	advl								IN	prep	5
7	the	the		dt	art								DT	det	8
8	case	case		nn									NN	pobj	6
9	where	where		rb	advl								WRB	advmod	11
10	we	we		pro	1st								PRP	nsubj	11
11	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	8
12	one	one											CD	nummod	13
13	processor	processor		nn		nom							NN	dobj	11
14	and	and		cc	cls								CC	cc	11
15	when	when		rb	advl								WRB	advmod	18
16	the	the		dt	art								DT	det	17
17	scheduler	scheduler		nn		nom							NN	nsubj	18
18	fails	fail		vbmain	vblex	pres	simple	active					VBZ	conj	11
19	,	,											,	punct	18
20	on	on	in+advl	in	advl								IN	prep	28
21	the	the		dt	art								DT	det	24
22	uniprocessor	uniprocessor	attr+npremod	jj	attr								JJ	amod	24
23	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	24
24	platform	platform		nn									NN	pobj	20
25	,	,											,	punct	28
26	we	we		pro	1st								PRP	nsubj	28
27	first	first		rb	link								RB	advmod	28
28	use	use		vbmain	vblex	pres	simple	active					VBP	ROOT	28
29	the	the		dt	art								DT	det	33
30	overall	overall	attr+npremod	jj	attr								JJ	amod	33
31	,	,											,	punct	33
32	processor	processor	nn+npremod	nn		nom	npremod						NN	compound	33
33	utilization	utilization		nn		nom							NN	dobj	28
34	,	,											,	punct	33
35	which	which		relpro	relpro_wh								WDT	nsubj	36
36	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	33
37	basically	basically		rb	othr	ly							RB	advmod	39
38	the	the		dt	art								DT	det	39
39	sum	sum		nn									NN	attr	36
40	of	of	of+npostmod	in	nmod								IN	prep	39
41	the	the		dt	art								DT	det	46
42	worst	bad	attr+npremod	jj	attr								JJS	amod	44
43	-	-											HYPH	punct	44
44	case	case	nn+npremod	nn			npremod						NN	compound	46
45	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	46
46	times	time		nn	pl								NNS	pobj	40
47	for	for	in+npostmod	in	nmod								IN	prep	46
48	the	the		dt	art								DT	det	49
49	tasks	task		nn	pl								NNS	pobj	47
50	,	,											,	punct	39
51	which	which											WDT	dobj	53
52	we	we		pro	1st								PRP	nsubj	53
53	represent	represent	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	39
54	as	as	in+advl	in	advl								IN	prep	53
55	T	t	nn+npremod	nn			npremod						NN	compound	59
56	-	-											HYPH	punct	59
57	sub	sub	nn+npremod	nn			npremod						NN	compound	59
58	-	-											HYPH	punct	59
59	I	i		nn	1st	sg							NN	pobj	54
60	um	um											UH	intj	53
61	,	,											,	punct	53
62	this	this		pro	dem	sg							DT	nsubj	63
63	is	be		vbmain	be	pres	simple	active					VBZ	parataxis	53
64	the	the		dt	art								DT	det	65
65	same	same											JJ	attr	63
66	as	as	in+jcomp	in	jcomp								IN	prep	65
67	TAP	tap		nn		proper							NNP	pobj	66
68	,	,											,	punct	63
69	um	um											UH	intj	71
70	i	i		pro	1st	sg							PRP	nsubj	71
71	talked	talk		vbmain	prepv	past	simple	active					VBD	parataxis	63
72	about	about	in+advl	in	advl								IN	prep	71
73	TAPs	taps		nn	pl	proper							NNPS	pobj	72
74	earlier	early	rb+advl	rb	advl								RBR	advmod	71
75	,	,											,	punct	28
76	and	and		cc	phrs								CC	cc	28
77	divide	divide		vbmain	vblex	pres	simple	active					VBP	conj	28
78	that	that		pro	dem	sg							DT	dobj	77
79	by	by	in+advl	in	advl								IN	prep	77
80	the	the		dt	art								DT	det	83
81	,	,											,	punct	83
82	separation	separation	nn+npremod	nn		nom	npremod						NN	compound	83
83	time	time		nn									NN	pobj	79
84	which	which		relpro	relpro_wh								WDT	nsubj	85
85	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	83
86	really	really	rb+advl	rb	advl	ly							RB	advmod	85
87	,	,											,	punct	85
88	effecti-	effecti-											XX	dep	85
89	effectively	effectively	rb+advl	rb	advl	ly							RB	advmod	85
90	the	the		dt	art								DT	det	91
91	deadlines	deadline		nn	pl								NNS	nsubj	92
92	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	28
93	max	max											JJ	compound	95
94	-	-											HYPH	punct	95
95	deltas	delta		nn	pl								NNS	attr	92
96	that	that		pro	dem	sg							WDT	pobj	99
97	we	we		pro	1st								PRP	nsubj	98
98	talked	talk	finitecls+rel	vbmain	prepv	past	simple	active	nmod_cls		rel	reldel	VBD	relcl	95
99	about	about	in+advl	in	advl								IN	prep	98
100	earlier	early	rb+advl	rb	advl								RBR	advmod	98
101	.	.											.	punct	92

#sentid = 538
0	when	when		rb	advl								WRB	advmod	3
1	that	that		dt	dt_dem								DT	det	2
2	number	number		nn		nom							NN	nsubj	3
3	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	8
4	greater	great		jj	pred								JJR	acomp	3
5	than	than	in+comparative	in	jcomp								IN	prep	4
6	one	one		pro	other	pl							CD	pobj	5
7	you	you		pro	2nd	sg							PRP	nsubj	8
8	know	know		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	37
9	that	that		comp	comp_that								IN	mark	14
10	,	,											,	punct	14
11	you	you		pro	2nd	sg							PRP	nsubj	14
12	ca	can		vbaux	mod								MD	aux	14
13	n't	not											RB	neg	14
14	schedule	schedule	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	8
15	,	,											,	punct	14
16	um	um											UH	intj	14
17	all	all											DT	dobj	14
18	of	of		in	in_othr								IN	prep	17
19	the	the		dt	art								DT	det	20
20	TAPs	tap		nn	pl								NNS	pobj	18
21	on	on		in	in_othr								IN	prep	17
22	the	the		dt	art								DT	det	23
23	resources	resource		nn	pl								NNS	pobj	21
24	furthermore	furthermore		rb	link								RB	advmod	37
25	,	,											,	punct	37
26	since	since		cs	cs_othr								IN	mark	28
27	we	we		pro	1st								PRP	nsubj	28
28	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	37
29	non	non	attr+npremod	jj	attr								JJ	amod	32
30	-	-	attr+npremod	jj	attr								JJ	amod	32
31	preemptible	preemptible	attr+npremod	jj	attr								JJ	amod	32
32	tasks	task		nn	pl								NNS	dobj	28
33	,	,											,	punct	37
34	we	we		pro	1st								PRP	nsubj	37
35	also	also	rb+advl	rb	advl								RB	advmod	37
36	might	might		vbaux	mod	pos							MD	aux	37
37	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	37
38	task	task	nn+npremod	nn			npremod						NN	compound	39
39	pair	pair	nn+npremod	nn			npremod						NN	compound	40
40	conflicts	conflict		nn	pl								NNS	dobj	37
41	,	,											,	punct	40
42	which	which		relpro	relpro_wh								WDT	nsubj	43
43	occur	occur	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	40
44	when	when		rb	advl								WRB	advmod	55
45	um	um											UH	intj	55
46	basically	basically	rb+advl	rb	advl	ly							RB	advmod	55
47	the	the		dt	art								DT	det	51
48	worst	bad	attr+npremod	jj	attr								JJS	amod	50
49	-	-											HYPH	punct	50
50	case	case	nn+npremod	nn			npremod						NN	compound	51
51	execution	execution		nn		nom							NN	nsubj	55
52	for	for	in+npostmod	in	nmod								IN	prep	51
53	a	a		dt	art								DT	det	54
54	TAP	tap		nn		proper							NNP	pobj	52
55	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	43
56	so	so	rb+jjrbmod	rb	adjmod								RB	advmod	57
57	big	big		jj	pred								JJ	acomp	55
58	,	,											,	punct	57
59	that	that		comp	comp_that								IN	mark	71
60	another	another		dt									DT	det	61
61	TAP	tap		nn		proper							NNP	nsubj	71
62	with	with	in+npostmod	in	nmod								IN	prep	61
63	a	a		dt	art								DT	det	65
64	smaller	small	attr+npremod	jj	attr								JJR	amod	65
65	deadline	deadline	nn+npremod	nn			npremod						NN	nmod	68
66	or	or		cc	phrs								CC	cc	65
67	separation	separation		nn		nom							NN	conj	65
68	constraint	constraint		nn									NN	pobj	62
69	ca	can		vbaux	mod								MD	aux	71
70	n't	not											RB	neg	71
71	fit	fit	thatcls+jcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	jcomp		VB	ccomp	57
72	.	.											.	punct	37

#sentid = 539
0	with	with											IN	ROOT	0
1	both	both											DT	pobj	0
2	of	of		in	in_othr								IN	prep	1
3	them	they		pro	pl								PRP	pobj	2
4	at	at		in	in_othr								IN	prep	0
5	the	the		dt	art								DT	det	7
6	same	same	attr+npremod	jj	attr								JJ	amod	7
7	time	time		nn									NN	pobj	4
8	.	.											.	punct	0

#sentid = 540
0	so	so		rb	link								RB	advmod	13
1	based	base	edcls+advl	vbmain	advl	nonfinite	simple	active		edcls			VBN	prep	13
2	on	on	in+advl	in	advl								IN	prep	1
3	,	,											,	punct	2
4	the	the		dt	art								DT	det	5
5	probabilities	probability		nn	pl	nom							NNS	pobj	2
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	ever	ever	rb+advl	rb	advl								RB	advmod	8
8	executing	execute	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	6
9	each	each		dt									DT	det	10
10	TAP	tap		nn		proper							NNP	dobj	8
11	,	,											,	punct	13
12	we	we		pro	1st								PRP	nsubj	13
13	recommend	recommend		vbmain	vblex	pres	simple	active					VBP	ROOT	13
14	a	a		dt	art								DT	det	16
15	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	16
16	threshold	threshold		nn									NN	dobj	13
17	for	for	in+npostmod	in	nmod								IN	prep	16
18	removing	remove	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	17
19	,	,											,	punct	18
20	um	um											UH	intj	18
21	um	um											UH	intj	18
22	or	or		cc	phrs								CC	cc	18
23	ignoring	ignore		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	18
24	states	state		nn	pl	nom							NNS	dobj	23
25	(	(											-LRB-	punct	24
26	below	below	in+npostmod	in	nmod								IN	prep	24
27	it	it		pro	3rd	sg							PRP	pobj	26
28	.	.											.	punct	13
29	)	)											-RRB-	punct	13

#sentid = 541
0	so	so		rb	link								RB	advmod	2
1	this	this		pro	dem	sg							DT	nsubj	2
2	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	,	,											,	punct	2
4	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	5
5	of	of		rb	othr								RB	advmod	6
6	algorithm	algorithm		nn									NN	attr	2
7	one	one											CD	nummod	6
8	which	which											WDT	dobj	11
9	i	i		pro	1st	sg							PRP	nsubj	11
10	've	've		vbaux									VBP	aux	11
11	referenced	reference	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBN	relcl	6
12	before	before	rb+advl	rb	advl								RB	advmod	11
13	in	in	in+advl	in	advl								IN	prep	11
14	terms	term		nn	pl								NNS	pobj	13
15	of	of	of+npostmod	in	nmod								IN	prep	14
16	,	,											,	punct	15
17	ignoring	ignore	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	15
18	unlikely	unlikely	attr+npremod	jj	attr								JJ	amod	19
19	states	state		nn	pl	nom							NNS	dobj	17
20	.	.											.	punct	2

#sentid = 542
0	so	so		rb	link								RB	advmod	2
1	this	this		pro	dem	sg							DT	nsubj	2
2	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	also	also	rb+advl	rb	advl								RB	advmod	2
4	,	,											,	punct	2
5	so	so		cc	cls								CC	cc	2
6	,	,											,	punct	2
7	as	as		cs	cs_othr								IN	mark	9
8	we	we		pro	1st								PRP	nsubj	9
9	moved	move	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		other_advl		VBD	advcl	14
10	forward	forward	rb+advl	rb	advl								RB	advmod	9
11	in	in	in+advl	in	advl								IN	prep	9
12	this	this		pro	dem	sg							DT	pobj	11
13	we	we		pro	1st								PRP	nsubj	14
14	said	say		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	60
15	well	well											UH	intj	16
16	maybe	maybe	rb+advl	rb	advl								RB	advmod	14
17	,	,											,	punct	20
18	that	that		dt	dt_dem								DT	det	19
19	threshold	threshold		nn									NN	nsubj	20
20	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	14
21	n't	not											RB	neg	20
22	really	really	rb+advl	rb	advl	ly							RB	advmod	20
23	exactly	exactly	rb+advl	rb	advl	ly							RB	advmod	26
24	what	what											WP	dobj	27
25	we	we		pro	1st								PRP	nsubj	26
26	wanna	wanna		jj	pred								VBP	acomp	20
27	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	26
28	,	,											,	punct	60
29	so	so		rb	link								RB	advmod	36
30	especially	especially		rb	othr	ly							RB	advmod	31
31	when	when		rb	advl								WRB	advmod	36
32	we	we		pro	1st								PRP	nsubj	34
33	,	,											,	punct	34
34	generalize	generalize	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBP	advcl	60
35	and	and		cc	phrs								CC	cc	34
36	have	have		vbmain	vblex	pres	simple	active					VBP	conj	34
37	a	a		dt	art								DT	det	45
38	multi	multi	attr+npremod	jj	attr								JJ	amod	45
39	-	-	attr+npremod	jj	attr								JJ	amod	45
40	resource	resource	attr+npremod	jj	attr								JJ	amod	45
41	um	um											UH	intj	45
42	allocation	allocation	nn+npremod	nn		nom	npremod						NN	nmod	45
43	and	and		cc	phrs								CC	cc	42
44	scheduling	scheduling		nn		nom							NN	conj	42
45	platform	platform		nn									NN	dobj	36
46	where	where		rb	advl								WRB	advmod	48
47	we	we		pro	1st								PRP	nsubj	48
48	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	45
49	,	,											,	punct	48
50	multiple	multiple	attr+npremod	jj	attr								JJ	amod	51
51	classes	class		nn	pl								NNS	dobj	48
52	and	and		cc	phrs								CC	cc	51
53	instances	instance		nn	pl	nom							NNS	conj	51
54	of	of	of+npostmod	in	nmod								IN	prep	53
55	the	the		dt	art								DT	det	57
56	different	different	attr+npremod	jj	attr								JJ	amod	57
57	resources	resource		nn	pl								NNS	pobj	54
58	,	,											,	punct	60
59	it	it		pro	3rd	sg							PRP	nsubj	60
60	's	be		vbmain	be	pres	simple	active					VBZ	conj	2
61	not	not											RB	neg	60
62	so	so	rb+jjrbmod	rb	adjmod								RB	advmod	63
63	straightforward	straightforward		jj	pred								JJ	acomp	60
64	to	to		to									TO	aux	65
65	compute	compute	xtrapos+tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	60
66	one	one											CD	nummod	67
67	number	number		nn		nom							NN	dobj	65
68	and	and		cc	phrs								CC	cc	65
69	say	say		vbmain	vblex	nonfinite	simple	active					VB	conj	65
70	well	well											UH	intj	72
71	this	this		pro	dem	sg							DT	nsubj	72
72	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	69
73	the	the		dt	art								DT	det	74
74	number	number		nn		nom							NN	attr	72
75	,	,											,	punct	78
76	that	that		comp	comp_that								IN	mark	78
77	we	we		pro	1st								PRP	nsubj	78
78	want	want	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	72
79	to	to		to									TO	aux	82
80	somehow	somehow	rb+advl	rb	advl		splaux						RB	advmod	82
81	c-	c-											XX	dep	82
82	treat	treat		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	78
83	as	as	in+advl	in	advl								IN	prep	82
84	a	a		dt	art								DT	det	85
85	threshold	threshold		nn									NN	pobj	83
86	and	and		cc	phrs								CC	cc	82
87	ignore	ignore		vbmain	vblex	nonfinite	simple	active					VB	conj	82
88	everything	everything		nn	other	nom							NN	dobj	87
89	.	.											.	punct	60

#sentid = 543
0	so	so		rb	link								RB	advmod	16
1	,	,											,	punct	16
2	instead	instead	rb+advl	rb	advl								RB	advmod	16
3	,	,											,	punct	16
4	at	at	in+advl	in	advl								IN	prep	16
5	this	this		dt	dt_dem								DT	det	6
6	point	point		nn									NN	pobj	4
7	of	of	of+npostmod	in	nmod								IN	prep	6
8	course	course		nn									NN	pobj	7
9	if	if		cs	cnd								IN	mark	11
10	you	you		pro	2nd	sg							PRP	nsubj	11
11	succeed	succeed	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	16
12	then	then		rb	link								RB	advmod	16
13	the	the		dt	art								DT	det	14
14	schedule	schedule		nn									NN	nsubjpass	16
15	is	be		vbaux									VBZ	auxpass	16
16	sent	send		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	16
17	to	to											IN	dative	16
18	the	the		dt	art								DT	det	19
19	dispatcher	dispatcher		nn		nom							NN	pobj	17
20	and	and		cc	cls								CC	cc	16
21	everyone	everyone		nn	other	sg							NN	nsubj	22
22	's	be		vbmain	be	pres	simple	active					VBZ	conj	16
23	happy	happy		jj	pred								JJ	acomp	22
24	but	but		cc	cls								CC	cc	16
25	th-	th-											XX	dep	30
26	the	the		dt	art								DT	det	29
27	interesting	interesting	attr+npremod	jj	attr								JJ	amod	29
28	research	research	nn+npremod	nn			npremod						NN	compound	29
29	case	case		nn									NN	nsubj	30
30	is	be		vbmain	be	pres	simple	active					VBZ	conj	16
31	when	when		rb	advl								WRB	advmod	33
32	you	you		pro	2nd	sg							PRP	nsubj	33
33	fail	fail	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	30
34	.	.											.	punct	30

#sentid = 544
0	um	um											UH	intj	9
1	with	with	in+advl	in	advl								IN	prep	9
2	multiple	multiple	attr+npremod	jj	attr								JJ	amod	4
3	classes	class	nn+npremod	nn	pl		npremod						NNS	compound	4
4	instances	instance		nn	pl	nom							NNS	pobj	1
5	of	of	of+npostmod	in	nmod								IN	prep	4
6	resources	resource		nn	pl								NNS	pobj	5
7	,	,											,	punct	9
8	you	you		pro	2nd	sg							PRP	nsubj	9
9	end	end		vbmain	phrsv	pres	simple	active					VBP	ROOT	9
10	up	up		rb	prtcle								RP	prt	9
11	with	with	in+advl	in	advl								IN	prep	9
12	a	a		dt	art								DT	det	14
13	utilization	utilization	nn+npremod	nn		nom	npremod						NN	compound	14
14	matrix	matrix		nn									NN	pobj	11
15	,	,											,	punct	14
16	for	for	in+npostmod	in	nmod								IN	prep	14
17	each	each		dt									DT	det	18
18	class	class		nn									NN	pobj	16
19	of	of	of+npostmod	in	nmod								IN	prep	18
20	resource	resource		nn									NN	pobj	19
21	,	,											,	punct	16
22	and	and		cc									CC	cc	16
23	over	over											IN	conj	16
24	the	the		dt	art								DT	det	25
25	set	set		nn									NN	pobj	23
26	of	of	of+npostmod	in	nmod								IN	prep	25
27	tasks	task		nn	pl								NNS	pobj	26
28	.	.											.	punct	9

#sentid = 545
0	that	that		pro	dem	sg							WDT	dobj	4
1	the	the		dt	art								DT	det	2
2	scheduler	scheduler		nn		nom							NN	nsubj	4
3	can	can		vbaux	mod	pos							MD	aux	4
4	provide	provide		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	4
5	.	.											.	punct	4

#sentid = 546
0													_SP	dep	7
1	at	at	in+advl	in	advl								IN	prep	7
2	which	which		dt									WDT	det	3
3	time	time		nn									NN	pcomp	1
4	,	,											,	punct	7
5	um	um											UH	intj	7
6	we	we		pro	1st								PRP	nsubj	7
7	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	7
8	an	an		dt									DT	det	9
9	algorithm	algorithm		nn									NN	dobj	7
10	it	it		pro	3rd	sg							PRP	nsubj	11
11	's	be		vbmain	be	pres	simple	active					VBZ	parataxis	13
12	it	it		pro	3rd	sg							PRP	nsubj	13
13	's	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	9
14	,	,											,	punct	13
15	to	to		to									TO	aux	16
16	identify	identify	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	9
17	,	,											,	punct	16
18	the	the		dt	art								DT	det	20
19	bottleneck	bottleneck	nn+npremod	nn			npremod						NN	compound	20
20	resource	resource		nn									NN	dobj	16
21	,	,											,	punct	20
22	associated	associate	edcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	edcls	ncomp		VBN	acl	20
23	with	with	in+advl	in	advl								IN	prep	22
24	each	each		dt									DT	det	25
25	task	task		nn									NN	pobj	23
26	which	which		relpro	relpro_wh								WDT	nsubj	29
27	is	be		vbaux									VBZ	aux	29
28	basically	basically	rb+advl	rb	advl	ly	splaux						RB	advmod	29
29	saying	say	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls	whcls	rel		VBG	relcl	9
30	,	,											,	punct	29
31	if	if		cs	cnd								IN	mark	33
32	i	i		pro	1st	sg							PRP	nsubj	33
33	execute	execute	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	40
34	this	this		dt	dt_dem								DT	det	35
35	task	task		nn									NN	dobj	33
36	which	which		dt									WDT	det	37
37	resource	resource		nn									NN	pobj	43
38	does	do		vbaux									VBZ	aux	40
39	it	it		pro	3rd	sg							PRP	nsubj	40
40	use	use		vbmain	vblex	pres	simple	active	compcls		vcomp		VB	ccomp	29
41	the	the		dt	art								DT	det	42
42	most	most											JJS	dobj	40
43	of	of	in+jcomp	in	jcomp								IN	prep	42
44	?	?											.	punct	40
45	or	or		cc	cls								CC	cc	7
46	,	,											,	punct	7
47	and	and		cc	phrs								CC	cc	54
48	and	and		cc	phrs								CC	cc	54
49	at	at	in+advl	in	advl								IN	prep	54
50	that	that		dt	dt_dem								DT	det	51
51	point	point		nn									NN	pobj	49
52	,	,											,	punct	54
53	we	we		pro	1st								PRP	nsubj	54
54	have	have		vbmain	vblex	pres	simple	active					VBP	conj	7
55	an	an		dt									DT	det	56
56	algorithm	algorithm		nn									NN	dobj	54
57	to	to		to									TO	aux	58
58	combine	combine	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	56
59	,	,											,	punct	58
60	task	task	nn+npremod	nn			npremod						NN	compound	61
61	priorities	priority		nn	pl	nom							NNS	dobj	58
62	which	which		relpro	relpro_wh								WDT	nsubj	66
63	at	at	in+advl	in	advl								IN	prep	66
64	this	this		dt	dt_dem								DT	det	65
65	point	point		nn									NN	pobj	63
66	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	61
67	equal	equal		jj	pred								JJ	acomp	66
68	to	to	in+jcomp	in	jcomp								IN	prep	67
69	probabilities	probability		nn	pl	nom							NNS	pobj	68
70	but	but		cc	cls								CC	cc	66
71	we	we		pro	1st								PRP	nsubj	73
72	do	do		vbaux									VBP	aux	73
73	acknowledge	acknowledge		vbmain	vblex	pres	simple	active					VB	conj	66
74	that	that		comp	comp_that								IN	mark	79
75	,	,											,	punct	79
76	maybe	maybe	rb+advl	rb	advl								RB	advmod	79
77	it	it		pro	3rd	sg							PRP	nsubj	79
78	should	should		vbaux	mod	nec							MD	aux	79
79	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	73
80	more	more		jj	pred								JJR	acomp	79
81	than	than	in+comparative	in	jcomp								IN	prep	80
82	probabilities	probability		nn	pl	nom							NNS	pobj	81
83	when	when		rb	advl								WRB	advmod	85
84	we	we		pro	1st								PRP	nsubj	85
85	assess	assess	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	79
86	priority	priority		nn		nom							NN	dobj	85
87	,	,											,	punct	86
88	and	and		cc	phrs								CC	cc	86
89	also	also		rb	othr								RB	advmod	86
90	the	the		dt	art								DT	det	92
91	,	,											,	punct	92
92	utilization	utilization	appos+npostmod	nn		nom	nappos						NN	appos	86
93	for	for	in+npostmod	in	nmod								IN	prep	92
94	that	that		dt	dt_dem								DT	det	95
95	bottleneck	bottleneck		nn									NN	pobj	93
96	,	,											,	punct	92
97	resource	resource		nn									NN	dep	79
98	to	to		to									TO	aux	99
99	select	select	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	97
100	the	the		dt	art								DT	det	101
101	cost	cost		nn									NN	dobj	99
102	of	of	of+npostmod	in	nmod								IN	prep	101
103	the	the		dt	art								DT	det	104
104	task	task		nn									NN	pobj	102
105	,	,											,	punct	73
106	um	um											UH	intj	110
107	that	that											IN	mark	110
108	we	we		pro	1st								PRP	nsubj	110
109	then	then		rb	link								RB	advmod	110
110	recommend	recommend		vbmain	vblex	pres	simple	active					VBP	meta	54
111	that	that		comp	comp_that								IN	mark	118
112	the	the		dt	art								DT	det	113
113	planner	planner		nn		nom							NN	nsubj	118
114	,	,											,	punct	118
115	um	um											UH	intj	118
116	,	,											,	punct	118
117	somehow	somehow	rb+advl	rb	advl								RB	advmod	118
118	change	change		vbmain	vblex	nonfinite	simple	active	compcls	thatcls	vcomp		VB	ccomp	110
119	when	when		rb	advl								WRB	advmod	121
120	it	it		pro	3rd	sg							PRP	nsubj	121
121	backtracks	backtrack	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	118
122	the	the		dt	art								DT	det	124
123	next	next	attr+npremod	jj	attr								JJ	amod	124
124	time	time		nn									NN	npadvmod	121
125	so	so		cs	cs_othr								IN	mark	127
126	this	this		pro	dem	sg							DT	nsubj	127
127	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	110
128	an	an		dt									DT	det	129
129	alternative	alternative		nn									NN	attr	127
130	to	to	in+npostmod	in	nmod								IN	prep	129
131	just	just	rb+advl	rb	advl								RB	advmod	132
132	ignoring	ignore	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	130

#sentid = 547
0	,	,											,	punct	1
1	states	state		vbmain	vblex	pres	simple	active					VBZ	ROOT	1
2	instead	instead	rb+advl	rb	advl								RB	advmod	5
3	we	we		pro	1st								PRP	nsubj	5
4	now	now	rb+advl	rb	advl								RB	advmod	5
5	say	say	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	1
6	hey	hey											UH	intj	19
7	planner	planner		nn		nom							NN	npadvmod	19
8	if	if		cs	cnd								IN	mark	11
9	you	you		pro	2nd	sg							PRP	nsubj	11
10	can	can		vbaux	mod	pos							MD	aux	11
11	do	do	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		conditional		VB	advcl	19
12	something	something		nn	other	nom							NN	dobj	11
13	about	about	in+npostmod	in	nmod								IN	prep	12
14	this	this		dt	dt_dem								DT	det	15
15	task	task		nn									NN	pobj	13
16	,	,											,	punct	19
17	it	it		pro	3rd	sg							PRP	nsubj	19
18	will	will		vbaux	mod	prd							MD	aux	19
19	help	help	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	5
20	make	make		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	19
21	the	the		dt	art								DT	det	22
22	plan	plan		nn									NN	nsubj	23
23	schedulable	schedulable											JJ	ccomp	20
24	.	.											.	punct	1

#sentid = 548
0													_SP	dep	2
1	i-	i-											XX	meta	2
2	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	there	there											EX	expl	2
4	any	any		dt									DT	det	11
5	,	,											,	punct	11
6	um	um											UH	intj	11
7	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	8
8	of	of		rb	othr								RB	advmod	11
9	best	good	attr+npremod	jj	attr								JJS	amod	11
10	-	-											HYPH	punct	11
11	effort	effort		nn									NN	attr	2
12	,	,											,	punct	11
13	uh	uh											UH	intj	11
14	in	in	in+advl	in	advl								IN	prep	2
15	the	the		dt	art								DT	det	16
16	schedule	schedule		nn									NN	pobj	14
17	?	?											.	punct	2

#sentid = 549
0	i	i		pro	1st	sg							PRP	nsubj	1
1	mean	mean		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	,	,											,	punct	1
3	a-	a-											LS	punct	1
4	a-	a-											XX	punct	3
5	the	the		dt	art								DT	det	6
6	scheduler	scheduler		nn		nom							NN	nsubj	7
7	uses	use		vbmain	in_othr	pres	simple	active					VBZ	prep	3
8	the	the		dt	art								DT	det	16
9	worst	bad	attr+npremod	jj	attr								JJS	amod	11
10	-	-											HYPH	punct	11
11	case	case	nn+npremod	nn			npremod						NN	nmod	16
12	,	,											,	punct	16
13													_SP	dep	16
14	yes	yes											UH	intj	16
15													_SP	dep	16
16	times	time		nn	pl								NNS	dobj	7
17	for	for	in+advl	in	advl								IN	prep	7
18	everything	everything		nn	other	nom							NN	pobj	17
19	,	,											,	punct	7
20													_SP	dep	7
21	mhm	mhm											UH	intj	7
22													_SP	dep	7
23	so	so		rb	link								RB	advmod	27
24	,	,											,	punct	27
25	i	i		pro	1st	sg							PRP	nsubj	27
26	would	would		vbaux	mod	prd							MD	aux	27
27	think	think		vbmain	vblex	vp_w_modal	simple	active					VB	conj	7
28	that	that		pro	dem	sg							DT	dobj	27
29	more	more	rb+jjrbmod	rb	othr								RBR	advmod	30
30	often	often	rb+advl	rb	advl								RB	advmod	27
31	,	,											,	punct	38
32	that	that		comp	comp_that								IN	mark	38
33	that	that		comp	comp_that								IN	mark	38
34	that	that		comp	comp_that								IN	mark	38
35	quite	quite	rb+jjrbmod	rb	othr								RB	advmod	36
36	often	often	rb+advl	rb	advl								RB	advmod	38
37	there	there											EX	expl	38
38	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	27
39	a	a		dt	art								DT	det	40
40	lot	lot		nn									NN	attr	38
41	of	of	of+npostmod	in	nmod								IN	prep	40
42	slack	slack		nn									NN	pobj	41
43	in	in	in+advl	in	advl								IN	prep	38
44	the	the		dt	art								DT	det	45
45													_SP	dep	43
46	yes	yes											UH	pobj	43
47	.	.											.	punct	27

#sentid = 550
0													_SP	dep	2
1	actual	actual	attr+npremod	jj	attr								JJ	amod	2
2	schedule	schedule		nn									NN	ROOT	2
3													_SP	dep	2
4	mhm	mhm											UH	intj	2
5													_SP	dep	2
6	when	when		rb	advl								WRB	advmod	9
7	it	it		pro	3rd	sg							PRP	nsubjpass	9
8	's	be		vbaux									VBZ	auxpass	9
9	executed	execute		vbmain	vblex	pres	simple	pasv_agls	nmod_cls	whcls	ncomp		VBN	acl	2
10	.	.											.	punct	2

#sentid = 551
0													_SP	dep	0
1	mhm	mhm											UH	intj	0
2	.	.											.	punct	0

#sentid = 552
0													_SP	dep	6
1	uh	uh											UH	intj	6
2	,	,											,	punct	6
3	what	what											WP	dobj	6
4	does	do		vbaux									VBZ	aux	6
5	it	it		pro	3rd	sg							PRP	nsubj	6
6	do	do		vbmain	vblex	pres	simple	active					VB	ROOT	6
7	?	?											.	punct	6
8													_SP	dep	6
9	during	during	in+advl	in	advl								IN	prep	6
10	this	this		dt	dt_dem								DT	det	11
11	time	time		nn									NN	pobj	9
12	?	?											.	punct	6

#sentid = 553
0													_SP	dep	0
1	what	what											WP	dobj	5
2	what	what											WP	dep	5
3	do	do		vbaux									VBP	aux	5
4	you	you		pro	2nd	sg							PRP	nsubj	5
5	mean	mean		vbmain	vblex	pres	simple	active					VB	punct	0
6	what	what		comp	comp_wh								WP	dobj	10
7	does	do		vbaux									VBZ	aux	10
8	it	it		pro	3rd	sg							PRP	nsubj	9
9													_SP	dep	10
10	do	do	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VB	ccomp	5
11	?	?											.	punct	10

#sentid = 554
0													_SP	dep	7
1	what	what											WP	dobj	7
2	does	do		vbaux									VBZ	aux	7
3	the	the		dt	art								DT	det	6
4	actual	actual	attr+npremod	jj	attr								JJ	amod	6
5	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	6
6	system	system		nn									NN	nsubj	7
7	do	do		vbmain	vblex	pres	simple	active					VB	ROOT	7
8	,	,											,	punct	7
9													_SP	dep	7
10	during	during	in+advl	in	advl								IN	prep	7
11	the	the		dt	art								DT	det	13
12	slack	slack	attr+npremod	jj	attr								JJ	amod	13
13	time	time		nn									NN	pobj	10
14	?	?											.	punct	7

#sentid = 555
0													_SP	dep	16
1	well	well											UH	intj	16
2	so	so		rb	link								RB	advmod	16
3	,	,											,	punct	16
4	during	during	in+advl	in	advl								IN	prep	16
5	any	any											DT	pobj	4
6	of	of		in	in_othr								IN	prep	5
7	the	the		dt	art								DT	det	11
8	slack	slack	attr+npremod	jj	attr								JJ	amod	10
9	-	-											HYPH	punct	10
10	time	time	nn+npremod	nn			npremod						NN	compound	11
11	intervals	interval		nn	pl	nom							NNS	pobj	6
12	,	,											,	punct	16
13	it	it		pro	3rd	sg							PRP	nsubj	16
14	basically	basically	rb+advl	rb	advl	ly							RB	advmod	16
15	,	,											,	punct	16
16	inserts	insert		vbmain	vblex	pres	simple	active					VBZ	ROOT	16
17	best	good	attr+npremod	jj	attr								JJS	amod	19
18	-	-											HYPH	punct	19
19	effort	effort	nn+npremod	nn			npremod						NN	compound	20
20	TAPs	taps		nn	pl	proper							NNPS	dobj	16
21	.	.											.	punct	16

#sentid = 556
0	so	so		rb	link								RB	advmod	4
1	,	,											,	punct	4
2	there	there											EX	expl	4
3	could	could		vbaux	mod	pos							MD	aux	4
4	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	4
5	tw-	tw-											XX	attr	4
6	there	there											EX	expl	7
7	are	be		vbmain	be	pres	simple	active					VBP	dep	4
8	two	two											CD	nummod	9
9	types	type		nn	pl								NNS	attr	7
10	of	of	of+npostmod	in	nmod								IN	prep	9
11	slack	slack	attr+npremod	jj	attr								JJ	amod	13
12	-	-											HYPH	punct	13
13	time	time	nn+npremod	nn			npremod						NN	compound	14
14	intervals	interval		nn	pl	nom							NNS	pobj	10
15	some	some											DT	nsubj	16
16	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	9
17	,	,											,	punct	16
18	if	if		cs	cnd								IN	mark	21
19	,	,											,	punct	21
20	they	they		pro	pl								PRP	nsubj	21
21	're	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBP	advcl	16
22	actually	actually	rb+advl	rb	advl	ly							RB	advmod	21
23	just	just		rb	othr								RB	advmod	24
24	holes	hole		nn	pl								NNS	attr	21
25	,	,											,	punct	16
26	that	that		pro	dem	sg							WDT	nsubj	27
27	result	result		nn									NN	dep	16
28	after	after		cs	cs_othr								IN	mark	31
29	everything	everything		nn	other	nom							NN	nsubj	31
30	else	else		rb	othr								RB	advmod	29
31	meets	meet	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	37
32	its	its		dt	poss								PRP$	poss	33
33	deadline	deadline		nn									NN	dobj	31
34	,	,											,	punct	37
35	then	then		rb	link								RB	advmod	37
36	it	it		pro	3rd	sg							PRP	nsubj	37
37	executes	execute		vbmain	vblex	pres	simple	active					VBZ	dep	7
38	those	those		pro	dem	pl							DT	dobj	37
39	in	in	rb+jjrbmod	rb	othr								RB	advmod	40
40	there	there	rb+advl	rb	advl								RB	advmod	37
41	but	but		cc	phrs								CC	cc	37
42	then	then	rb+jjrbmod	rb	othr								RB	advmod	43
43	also	also	rb+advl	rb	advl								RB	advmod	51
44	,	,											,	punct	51
45	y-	y-											XX	dep	51
46	you	you		pro	2nd	sg							PRP	nsubj	47
47	see	see		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	51
48	here	here	rb+advl	rb	advl								RB	advmod	47
49	there	there											EX	expl	51
50	could	could		vbaux	mod	pos							MD	aux	51
51	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	37
52	a	a		dt	art								DT	det	53
53	difference	difference		nn		nom							NN	attr	51
54	between	between	in+npostmod	in	nmod								IN	prep	53
55	the	the		dt	art								DT	det	64
56	worst	bad	attr+npremod	jj	attr								JJS	amod	58
57	-	-											HYPH	punct	58
58	case	case	nn+npremod	nn			npremod						NN	nmod	64
59	and	and		cc	phrs								CC	cc	58
60	average	average	attr+npremod	jj	attr								JJ	amod	62
61	-	-											HYPH	punct	62
62	case	case		nn									NN	conj	58
63	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	64
64	times	time		nn	pl								NNS	pobj	54
65	and	and		cc	cls								CC	cc	51
66	it	it		pro	3rd	sg							PRP	nsubj	68
67	also	also	rb+advl	rb	advl								RB	advmod	68
68	fits	fit		vbmain	vblex	pres	simple	active					VBZ	conj	51
69	those	those		dt	dt_dem								DT	det	73
70	best	good	attr+npremod	jj	attr								JJS	amod	72
71	-	-											HYPH	punct	72
72	effort	effort	nn+npremod	nn			npremod						NN	compound	73
73	TAPs	tap		nn	pl								NNS	dobj	68
74													_SP	dep	68
75	the	the		dt	art								DT	det	77
76	actual	actual		jj	attr								JJ	amod	77
77													_SP	dep	68
78	into	into	in+advl	in	advl								IN	prep	68
79	there	there											RB	pcomp	78
80	but	but		cc	cls								CC	cc	68
81	it	it		pro	3rd	sg							PRP	nsubj	82
82	's	be		vbmain	be	pres	simple	active					VBZ	conj	68
83	not	not											RB	neg	82
84	,	,											,	punct	82
85	i-	i-											PRP	punct	82
86	i-	i-											XX	dep	82
87	yeah	yeah											UH	intj	90
88	so	so		rb	link								RB	advmod	90
89	this	this		pro	dem	sg							DT	nsubj	90
90	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	99
91	actual	actual		jj	pred								JJ	acomp	90
92	,	,											,	punct	90
93	that	that		pro	dem	sg							DT	nsubj	94
94	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	99
95	not	not											RB	neg	94
96	actual	actual		jj	pred								JJ	acomp	94
97	,	,											,	punct	99
98	i	i		pro	1st	sg							PRP	nsubj	99
99	keep	keep		vbmain	vblex	pres	simple	active					VBP	meta	82
100	saying	say	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	99
101													_SP	dep	100
102	that	that		pro	dem	sg							DT	dobj	100
103	.	.											.	punct	4

#sentid = 557
0													_SP	dep	18
1	so	so		rb	link								RB	advmod	18
2	,	,											,	punct	18
3	uh	uh											UH	intj	18
4	,	,											,	punct	18
5	whe-	whe-											XX	dep	18
6	in	in	in+advl	in	advl								IN	prep	18
7	this	this		dt	dt_dem								DT	det	8
8	case	case		nn									NN	pobj	6
9	when	when		rb	advl								WRB	advmod	12
10	you	you		pro	2nd	sg							PRP	nsubj	12
11	're	be		vbaux									VBP	aux	12
12	doing	do	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls	whcls			VBG	advcl	18
13	this	this		dt	dt_dem								DT	det	14
14	relaxation	relaxation		nn		nom							NN	dobj	12
15	,	,											,	punct	18
16	do	do		vbaux									VBP	aux	18
17	y-	y-											PRP	nsubj	18
18	do	do		vbmain	vblex	pres	simple	active					VB	ROOT	18
19	these	these		pro	dem	pl							DT	dobj	18
20	,	,											,	punct	19
21	what	what		relpro	relpro_wh								WP	nsubj	22
22	were	be	finitecls+rel	vbmain	be	past	simple	active	nmod_cls	whcls	rel		VBD	relcl	19
23	before	before	in+advl	in	advl								IN	prep	18
24	the	the		dt	art								DT	det	26
25	guaranteed	guarantee	attr+npremod	jj	attr	ed							VBN	amod	26
26	tasks	task		nn	pl								NNS	nsubj	27
27	become	become		vbmain	vblex	pres	simple	active	compcls		incomp	compdel	VBP	pcomp	23
28	best	good											JJS	attr	27
29	,	,											,	punct	18
30	treated	treat		vbmain	vblex	nonfinite	simple	active		edcls			VBN	dep	18
31	as	as	in+advl	in	advl								IN	prep	30
32	best	good	attr+npremod	jj	attr								JJS	amod	34
33	-	-											HYPH	punct	34
34	effort	effort		nn									NN	pobj	31
35	,	,											,	punct	30
36													_SP	dep	30
37	TAPs	tap		nn	pl								NNS	dobj	30
38	?	?											.	punct	30

#sentid = 558
0													_SP	dep	9
1	the	the		dt	art								DT	det	4
2	,	,											,	punct	4
3	what	what		dt									WDT	det	4
4	relaxation	relaxation		nn		nom							NN	dobj	0
5	?	?											.	punct	4
6													_SP	dep	0
7	when	when		rb	advl								WRB	advmod	9
8	you	you		pro	2nd	sg							PRP	nsubj	9
9	decide	decide		vbmain	vblex	pres	simple	active					VBP	ROOT	9
10	not	not											RB	neg	13
11	to	to		to									TO	aux	13
12	,	,											,	punct	13
13	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	9
14	all	all		dt									PDT	det	16
15	your	your		dt	poss								PRP$	poss	16
16	tasks	task		nn	pl								NNS	dobj	13
17	,	,											,	punct	13
18													_SP	dep	9
19	because	because		cs	cos								IN	mark	23
20	you	you		pro	2nd	sg							PRP	nsubj	23
21	ca	can		vbaux	mod								MD	aux	23
22	n't	not											RB	neg	23
23	fit	fit	finitecls+advl	vbmain	phrsv	vp_w_modal	simple	active	advlcls		causative		VB	advcl	9
24	'em	them											PRP	dobj	23
25	in	in		rb	prtcle								RP	prt	23
26	.	.											.	punct	9

#sentid = 559
0													_SP	dep	14
1	uh	uh											UH	intj	14
2	,	,											,	punct	14
3	so	so		rb	link								RB	advmod	14
4	right	right	rb+jjrbmod	rb	othr								RB	advmod	5
5	now	now	rb+advl	rb	advl								RB	advmod	14
6	the	the		dt	art								DT	det	7
7	planner	planner		nn		nom							NN	nsubj	14
8	all	all											DT	nsubj	14
9	it	it		pro	3rd	sg							PRP	nsubj	10
10	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	8
11	capable	capable		jj	pred								JJ	acomp	10
12	of	of	in+jcomp	in	jcomp								IN	prep	11
13	doing	do	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	12
14	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	14
15	,	,											,	punct	14
16	either	either											CC	preconj	17
17	selecting	select	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	14
18	a	a		dt	art								DT	det	20
19	different	different	attr+npremod	jj	attr								JJ	amod	20
20	task	task		nn									NN	dobj	17
21	which	which											WDT	nsubj	26
22	it	it		pro	3rd	sg							PRP	nsubj	23
23	hopes	hope	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	20
24	might	might		vbaux	mod	pos							MD	aux	26
25	,	,											,	punct	26
26	facilitate	facilitate	whcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	whcls	vcomp		VB	ccomp	23
27	scheduling	scheduling		nn		nom							NN	dobj	26
28	cuz	cuz		cs	cs_othr								IN	mark	34
29	in	in	in+advl	in	advl								IN	prep	34
30	many	many	attr+npremod	jj	attr								JJ	amod	31
31	cases	case		nn	pl								NNS	pobj	29
32	it	it		pro	3rd	sg							PRP	nsubj	34
33	'll	will		vbaux	mod								MD	aux	34
34	have	have	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	26
35	a	a		dt	art								DT	det	36
36	choice	choice		nn									NN	dobj	34
37	of	of	of+npostmod	in	nmod								IN	prep	36
38	actions	action		nn	pl	nom							NNS	pobj	37
39	that	that		pro	dem	sg							WDT	dobj	42
40	it	it		pro	3rd	sg							PRP	nsubj	42
41	can	can		vbaux	mod	pos							MD	aux	42
42	do	do	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel		VB	relcl	38
43	,	,											,	punct	17
44	or	or		cc	cls								CC	cc	17
45	else	else		rb	othr								RB	advmod	44
46	it	it		pro	3rd	sg							PRP	nsubj	48
47	,	,											,	punct	48
48	changes	change		vbmain	vblex	pres	simple	active					VBZ	conj	17
49	the	the		dt	art								DT	det	50
50	threshold	threshold		nn									NN	dobj	48
51	that	that		pro	dem	sg							WDT	pobj	55
52	it	it		pro	3rd	sg							PRP	nsubj	54
53	will	will		vbaux	mod	prd							MD	aux	54
54	look	look	finitecls+rel	vbmain	prepv	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	50
55	at	at	in+advl	in	advl								IN	prep	54
56	.	.											.	punct	14

#sentid = 560
0													_SP	dep	0
1	no	no											UH	intj	3
2	no	no											UH	intj	3
3	right	right											UH	intj	0
4	but	but											CC	nmod	3
5													_SP	dep	3
6	but	but											CC	meta	3
7													_SP	dep	3
8	that	that		pro	dem	sg							DT	nsubj	9
9	determines	determine		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	17
10	,	,											,	punct	9
11	so	so		rb	link								RB	advmod	17
12	at	at	in+advl	in	advl								IN	prep	17
13	the	the		dt	art								DT	det	14
14	end	end		nn									NN	pobj	12
15	you	you		pro	2nd	sg							PRP	nsubj	17
16	've	've		vbaux									VBP	aux	17
17	got	get		vbmain	vblex	pres	simple	active					VBN	conj	3
18	this	this		dt	dt_dem								DT	det	20
19	particular	particular	attr+npremod	jj	attr								JJ	amod	20
20	schedule	schedule		nn									NN	dobj	17
21	,	,											,	punct	17
22													_SP	dep	17
23	right	right											UH	intj	17
24	.	.											.	punct	17

#sentid = 561
0													_SP	dep	4
1	how	how		rb	advl								WRB	advmod	4
2	does	do		vbaux									VBZ	aux	4
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	decide	decide		vbmain	vblex	pres	simple	active					VB	ROOT	4
5	_	_											:	punct	4
6	there	there											EX	expl	7
7	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	20
8	lo-	lo-											XX	dep	7
9	there	there											EX	expl	10
10	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	20
11	lots	lot		nn	pl								NNS	attr	10
12	of	of	of+npostmod	in	nmod								IN	prep	11
13	best	good	attr+npremod	jj	attr								JJS	amod	15
14	-	-											HYPH	punct	15
15	effort	effort	nn+npremod	nn			npremod						NN	compound	16
16	TAPs	tap		nn	pl								NNS	pobj	12
17	how	how		comp	comp_wh								WRB	advmod	20
18	does	do		vbaux									VBZ	aux	20
19	it	it		pro	3rd	sg							PRP	nsubj	20
20	decide	decide	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VB	ccomp	4
21													_SP	dep	20
22	right	right											UH	intj	20
23	.	.											.	punct	20

#sentid = 562
0													_SP	dep	9
1	which	which		dt									WDT	det	2
2	ones	one		nn	pl								NNS	dep	9
3	,	,											,	punct	9
4	what	what		dt									WDT	det	5
5	priority	priority		nn		nom							NN	attr	6
6	to	to		to									TO	aux	9
7	,	,											,	punct	9
8	to	to		to									TO	aux	9
9	do	do		vbmain	vblex	nonfinite	simple	active		tocls			VB	ROOT	9
10	those	those		dt	dt_dem								DT	det	13
11	best	good	attr+npremod	jj	attr								JJS	amod	13
12	-	-											HYPH	punct	13
13	effort	effort		nn									NN	dobj	9
14	,	,											,	punct	13
15													_SP	dep	13
16	um	um											UH	intj	15
17													_SP	dep	15
18	oh	oh											UH	intj	23
19	the	the		dt	art								DT	det	23
20	the	the		dt	art								DT	det	23
21	best	good	attr+npremod	jj	attr								JJS	amod	23
22	-	-											HYPH	punct	23
23	effort	effort		nn									NN	dobj	9
24	?	?											.	punct	9

#sentid = 563
0	so	so		rb	link								RB	advmod	17
1	that	that		pro	dem	sg							DT	nsubj	5
2	has	have		vbaux									VBZ	aux	5
3	n't	not											RB	neg	5
4	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	5
5	been	be		vbmain	be	pres	perf	active	compcls		vcomp	compdel	VBN	ccomp	17
6	a	a		dt	art								DT	det	10
7	big	big	attr+npremod	jj	attr								JJ	amod	10
8	,	,											,	punct	10
9	research	research	nn+npremod	nn			npremod						NN	compound	10
10	issue	issue		nn									NN	attr	5
11	for	for	in+advl	in	advl								IN	prep	5
12	me	i		pro	1st	sg							PRP	pobj	11
13	i	i		pro	1st	sg							PRP	nsubj	17
14	've	've		vbaux									VBP	aux	17
15	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	16
16	of	of	rb+advl	rb	advl		splaux						RB	advmod	17
17	said	say		vbmain	vblex	pres	simple	active					VBD	ROOT	17
18	well	well											UH	intj	21
19	i	i		pro	1st	sg							PRP	nsubj	21
20	'm	be		vbaux									VBP	aux	21
21	looking	look		vbmain	prepv	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	29
22	at	at	in+advl	in	advl								IN	prep	21
23	failure	failure	nn+npremod	nn		nom	npremod						NN	compound	24
24	avoidance	avoidance		nn		nom							NN	pobj	22
25	,	,											,	punct	29
26	goal	goal	nn+npremod	nn		nom	npremod						NN	compound	27
27	achievement	achievement		nn		nom							NN	nsubjpass	29
28	is	be		vbaux									VBZ	auxpass	29
29	looked	look		vbmain	prepv	pres	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	36
30	at	at	in+advl	in	advl								IN	prep	29
31	,	,											,	punct	36
32	separately	separately	rb+advl	rb	advl	ly							RB	advmod	36
33	so	so		rb	link								RB	advmod	36
34	,	,											,	punct	36
35	we	we		pro	1st								PRP	nsubj	36
36	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	17
37													_SP	dep	36
38	this	this		dt	dt_dem								DT	det	39
39	thing	thing		nn		nom							NN	dobj	36
40	called	call	edcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	edcls	ncomp		VBN	acl	39
41													_SP	dep	36
42	no	no											UH	intj	43
43	but	but											CC	meta	36
44	once	once		cs	cs_othr								IN	mark	46
45	you	you		pro	2nd	sg							PRP	nsubj	46
46	're	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBP	advcl	52
47	in	in	in+advl	in	advl								IN	prep	46
48	the	the		dt	art								DT	det	49
49	r-	r-											XX	pobj	47
50	once	once	rb+advl	rb	advl								IN	advmod	52
51	you	you		pro	2nd	sg							PRP	nsubj	52
52	're	be		vbmain	be	pres	simple	active					VBP	meta	36
53	in	in	in+advl	in	advl								IN	prep	52
54	the	the		dt	art								DT	det	55
55	realm	realm		nn									NN	pobj	53
56	of	of	of+npostmod	in	nmod								IN	prep	55
57	doing	do	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	56
58	this	this		dt	dt_dem								DT	det	61
59	trade	trade	nn+npremod	nn			npremod						NN	compound	61
60	-	-											HYPH	punct	61
61	off	off		nn									NN	dobj	57
62	,	,											,	punct	36
63													_SP	dep	36
64	right	right											UH	intj	17
65	.	.											.	punct	17

#sentid = 564
0													_SP	dep	9
1	you	you		pro	2nd	sg							PRP	nsubj	9
2	're	be		vbaux									VBP	aux	9
3	,	,											,	punct	7
4	you	you		pro	2nd	sg							PRP	nsubj	7
5	're	be		vbaux									VBP	aux	7
6	still	still	rb+jjrbmod	rb	othr								RB	advmod	7
7	also	also											RB	parataxis	9
8	,	,											,	punct	9
9	talking	talk		vbmain	prepv	pres	prog	active					VBG	ROOT	9
10	about	about	in+advl	in	advl								IN	prep	9
11	failure	failure	nn+npremod	nn		nom	npremod						NN	compound	12
12	avoidance	avoidance		nn		nom							NN	pobj	10
13	.	.											.	punct	9

#sentid = 565
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	0

#sentid = 566
0	so	so		rb	link								RB	advmod	12
1	,	,											,	punct	12
2	right	right	rb+jjrbmod	rb	othr								RB	advmod	3
3	now	now	rb+advl	rb	advl								RB	advmod	12
4	th-	th-											XX	dep	12
5	th-	th-											XX	dep	12
6	the	the		dt	art								DT	det	7
7	way	way		nn									NN	nsubj	12
8	that	that	rb+advl	rb	advl								WDT	advmod	10
9	we	we		pro	1st								PRP	nsubj	10
10	do	do	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	7
11	that	that		pro	dem	sg							DT	dobj	10
12	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	12
13	to	to		to									TO	aux	14
14	say	say	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	12
15	,	,											,	punct	14
16	we	we		pro	1st								PRP	nsubj	18
17	're	be		vbaux									VBP	aux	18
18	going	go	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	14
19	to	to		to									TO	aux	20
20	split	split	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	18
21	the	the		dt	art								DT	det	22
22	actions	action		nn	pl	nom							NNS	dobj	20
23	into	into	in+advl	in	advl								IN	prep	20
24	two	two											CD	nummod	25
25	plans	plan		nn	pl								NNS	pobj	23
26	so	so		cs	cs_othr								IN	mark	29
27	that	that		cs	cs_othr								IN	mark	29
28	we	we		pro	1st								PRP	nsubj	29
29	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	20
30	a	a		dt	art								DT	det	32
31	contingency	contingency	nn+npremod	nn		nom	npremod						NN	compound	32
32	plan	plan		nn									NN	dobj	29
33	and	and		cc	phrs								CC	cc	32
34	a	a		dt	art								DT	det	36
35	nominal	nominal	attr+npremod	jj	attr								JJ	amod	36
36	plan	plan		nn									NN	conj	32
37	,	,											,	punct	18
38	and	and		cc	cls								CC	cc	18
39	then	then		rb	link								RB	advmod	45
40	all	all											DT	nsubj	45
41	we	we		pro	1st								PRP	nsubj	42
42	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	40
43	to	to		to									TO	aux	44
44	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	42
45	is	be		vbmain	be	pres	simple	active					VBZ	conj	18
46	schedule	schedule		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	45
47	this	this		pro	dem	sg							DT	dobj	46
48	,	,											,	punct	47
49	TAP	tap	appos+npostmod	nn			nappos						NN	appos	47
50	that	that		relpro	relpro_that	sg							WDT	nsubj	52
51	will	will		vbaux	mod	prd							MD	aux	52
52	detect	detect	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	49
53	this	this		dt	dt_dem								DT	det	55
54	unhandled	unhandled	attr+npremod	jj	attr								JJ	amod	55
55	state	state		nn		nom							NN	dobj	52
56	and	and		cc	phrs								CC	cc	52
57	will	will		vbaux	mod	prd							MD	aux	58
58	go	go		vbmain	phrsv	vp_w_modal	simple	active					VB	conj	52
59	off	off		rb	prtcle								RP	prt	58
60	and	and		cc	phrs								CC	cc	58
61	pull	pull		vbmain	vblex	nonfinite	simple	active					VB	conj	58
62	,	,											,	punct	52
63	this	this		dt	dt_dem								DT	det	65
64	other	other	attr+npremod	jj	attr								JJ	amod	65
65	plan	plan		nn									NN	dobj	52
66	and	and		cc	phrs								CC	cc	65
67	that	that		pro	dem	sg							DT	nsubj	70
68	specifically	specifically	rb+advl	rb	advl	ly							RB	advmod	70
69	,	,											,	punct	70
70	is	be		vbmain	be	pres	simple	active					VBZ	conj	65
71	responsible	responsible		jj	pred								JJ	acomp	70
72	for	for	in+jcomp	in	jcomp								IN	prep	71
73	reacting	react	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	72
74	to	to	in+advl	in	advl								IN	prep	73
75	that	that		dt	dt_dem								DT	det	77
76	unhandled	unhandled	attr+npremod	jj	attr								JJ	amod	77
77	state	state		nn		nom							NN	pobj	74
78	.	.											.	punct	12

#sentid = 567
0	so	so		rb	link								RB	advmod	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	9
5	,	,											,	punct	9
6	that	that		pro	dem	sg							DT	nsubj	7
7	's	be		vbmain	be	pres	simple	active					VBZ	dep	9
8	that	that		pro	dem	sg							DT	nsubj	9
9	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	21
10	all	all											DT	attr	9
11	we	we		pro	1st								PRP	nsubj	12
12	do	do	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	10
13	now	now	rb+advl	rb	advl								RB	advmod	12
14	in	in		cs	cs_othr								IN	mark	21
15	in	in	in+advl	in	advl								IN	prep	21
16	future	future	attr+npremod	jj	attr								JJ	amod	17
17	work	work		nn									NN	pobj	15
18	we	we		pro	1st								PRP	nsubj	21
19	might	might		vbaux	mod	pos							MD	aux	21
20													_SP	dep	21
21	do	do		vbmain	vblex	vp_w_modal	simple	active	compcls		other_advl	compdel	VB	xcomp	2
22	that	that		pro	dem	sg							DT	dobj	21
23	.	.											.	punct	2

#sentid = 568
0													_SP	dep	5
1	but	but		cc	phrs								CC	cc	5
2	but	but		cc	phrs								CC	cc	5
3	that	that		pro	dem	sg							DT	nsubj	5
4	only	only	rb+advl	rb	advl	ly							RB	advmod	5
5	works	work		vbmain	vblex	pres	simple	active					VBZ	ROOT	5
6	when	when		rb	advl								WRB	advmod	13
7	you	you		pro	2nd	sg							PRP	nsubj	13
8	just	just	rb+advl	rb	advl								RB	advmod	13
9	ha-	ha-		vbmain	vblex	pres	simple	active					VBP	punct	13
10	fortuitously	fortuitously	rb+advl	rb	advl	ly							RB	advmod	13
11	uh	uh											UH	intj	13
12	,	,											,	punct	13
13	detect	detect		vbmain	vblex	nonfinite	simple	active	advlcls	whcls			VB	advcl	5
14	the	the		dt	art								DT	det	19
15	,	,											,	punct	19
16													_SP	dep	19
17	(	(											-LRB-	punct	19
18	optimal	optimal	attr+npremod	jj	attr								JJ	amod	19
19	plan	plan		nn									NN	dobj	13
20	)	)											-RRB-	punct	19
21													_SP	dep	5
22	well	well											UH	intj	24
23	it	it		pro	3rd	sg							PRP	nsubj	24
24	's	be		vbmain	be	pres	simple	active					VBZ	meta	5
25	not	not											RB	neg	24
26	fortuitous	fortuitous		jj	pred								JJ	acomp	24
27	if	if		cs	cnd								IN	mark	29
28	we	we		pro	1st								PRP	nsubj	29
29	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	24
30	,	,											,	punct	29
31	uh	uh											UH	intj	29
32	i	i		pro	1st	sg							PRP	nsubj	33
33	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	35
34	we	we		pro	1st								PRP	nsubj	35
35	build	build		vbmain	vblex	pres	simple	active					VBP	dep	29
36	a	a		dt	art								DT	det	37
37	list	list		nn		nom							NN	dobj	35
38	of	of	of+npostmod	in	nmod								IN	prep	37
39	the	the		dt	art								DT	det	40
40	states	state		nn	pl	nom							NNS	pobj	38
41	that	that		pro	dem	sg							WDT	pobj	43
42	we	we		pro	1st								PRP	nsubj	43
43	hope	hope		vbmain	vblex	pres	simple	active					VBP	dobj	54
44	to	to											TO	xcomp	43
45	,	,											,	punct	43
46	uh	uh											UH	intj	43
47	uh	uh											UH	intj	43
48	that	that											DT	dep	54
49	,	,											,	punct	54
50	at	at		rb	othr								IN	advmod	51
51	least	least	rb+advl	rb	advl								JJS	advmod	54
52	have	have		vbaux									VBP	aux	54
53	been	be		vbaux									VBN	auxpass	54
54	identified	identify	finitecls+rel	vbmain	vblex	pres	perf	pasv_agls	nmod_cls		rel		VBN	relcl	40
55	as	as	in+advl	in	advl								IN	prep	54
56	reachable	reachable		jj	attr								JJ	amod	55
57	and	and		cc	phrs								CC	cc	29
58	,	,											,	punct	24
59	then	then		rb	link								RB	advmod	61
60	it	it		pro	3rd	sg							PRP	nsubj	61
61	's	be		vbmain	be	pres	simple	active					VBZ	conj	24
62	not	not											RB	neg	61
63	fortuitous	fortuitous		jj	pred								JJ	acomp	61
64	that	that		comp	comp_that								IN	mark	67
65	we	we		pro	1st								PRP	nsubj	67
66	actually	actually	rb+advl	rb	advl	ly							RB	advmod	67
67	detect	detect	xtrapos+thatcls+jcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	jcomp		VBP	ccomp	61
68	it	it		pro	3rd	sg							PRP	dobj	67
69	when	when		rb	advl								WRB	advmod	79
70													_SP	dep	78
71	cuz	cuz											IN	dep	78
72	those	those		pro	dem	pl							DT	nsubj	73
73	are	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	csubj	78
74	the	the		dt	art								DT	det	75
75	detection	detection		nn		nom							NN	attr	73
76	and	and		cc	phrs								CC	cc	75
77	response	response		nn									NN	conj	75
78	are	be		vbaux									VBP	auxpass	79
79	guaranteed	guarantee	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls	whcls			VBN	advcl	67
80	TAPs	tap		nn	pl								NNS	dobj	79
81	?	?											.	punct	61

#sentid = 569
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	1

#sentid = 570
0	mhm	mhm											UH	ROOT	0
1	.	.											.	punct	0

#sentid = 571
0													_SP	dep	0
1	well	well											UH	intj	16
2	,	,											,	punct	16
3	we	we		pro	1st								PRP	nsubj	4
4	looked	look		vbmain	prepv	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	16
5	at	at	in+advl	in	advl								IN	prep	4
6	it	it		pro	3rd	sg							PRP	pobj	5
7	i	i		pro	1st	sg							PRP	punct	16
8	i	i		pro	1st	sg							PRP	nsubj	11
9	do	do		vbaux									VBP	aux	11
10	n't	not											RB	neg	11
11	think	think		vbmain	vblex	pres	simple	active					VB	parataxis	16
12	it	it		pro	3rd	sg							PRP	dep	16
13	,	,											,	punct	16
14	this	this		pro	dem	sg							DT	nsubj	16
15	will	will		vbaux	mod	prd							MD	aux	16
16	work	work		vbmain	in_othr	vp_w_modal	simple	active					VB	prep	0
17	?	?											.	punct	16
18													_SP	dep	0
19	what	what											WP	attr	20
20	's	be		vbmain	be	pres	simple	active	compcls	whcls			VBZ	ccomp	18
21	that	that		pro	dem	sg							DT	nsubj	20
22	?	?											.	punct	20

#sentid = 572
0													_SP	dep	3
1	no	no											UH	intj	3
2	we	we		pro	1st								PRP	nsubj	3
3	looked	look		vbmain	prepv	past	simple	active					VBD	ROOT	3
4	at	at	in+advl	in	advl								IN	prep	3
5	it	it		pro	3rd	sg							PRP	pobj	4
6	the	the		dt	art								DT	det	8
7	the	the		dt	art								DT	det	8
8	testing	testing		nn		nom							NN	dobj	3
9	for	for	in+npostmod	in	nmod								IN	prep	8
10	TAPs	tap		nn	pl								NNS	pobj	9
11													_SP	dep	3
12	excuse	excuse		vbmain	vblex	nonfinite	simple	active					VB	meta	3
13	me	i		pro	1st	sg							PRP	dobj	12
14	.	.											.	punct	3

#sentid = 573
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	1

#sentid = 574
0													_SP	dep	2
1	the	the		dt	art								DT	det	2
2	other	other											JJ	ROOT	2

#sentid = 575
0	the	the		dt	art								DT	det	2
1	other	other	attr+npremod	jj	attr								JJ	amod	2
2	idea	idea		nn									NN	ROOT	2
3	though	though		cs	con								IN	mark	7
4	you	you		pro	2nd	sg							PRP	nsubj	7
5	did	do		vbaux									VBD	aux	7
6	n't	not											RB	neg	7
7	address	address	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		concessive		VB	advcl	2
8	and	and		cc	cls								CC	cc	7
9	you	you		pro	2nd	sg							PRP	nsubj	13
10	did	do		vbaux									VBD	aux	13
11	n't	not											RB	neg	13
12	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	13
13	look	look		vbmain	prepv	past	simple	active					VB	conj	7
14	at	at	in+advl	in	advl								IN	prep	13
15	this	this		dt	dt_dem								DT	det	16
16	overbook	overbook		nn									NN	pobj	14
17	.	.											.	punct	2

#sentid = 576
0	because	because		cs	cos								IN	mark	8
1	,	,											,	punct	8
2	the	the		dt	art								DT	det	7
3	worst	bad	attr+npremod	jj	attr								JJS	amod	5
4	-	-											HYPH	punct	5
5	case	case	nn+npremod	nn			npremod						NN	compound	7
6	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	7
7	time	time		nn									NN	nsubj	8
8	is	be		vbmain	be	pres	simple	active			causative		VBZ	ROOT	8
9	quite	quite	rb+jjrbmod	rb	othr								RB	advmod	10
10	often	often	rb+advl	rb	advl								RB	advmod	8
11	you	you		pro	2nd	sg							PRP	nsubj	12
12	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	8
13	the	the		dt	art								DT	det	17
14	uh	uh											UH	intj	17
15	hundred	hundred											CD	nummod	16
16	percent	percent		nn		nom							NN	npadvmod	17
17	more	more											JJR	npadvmod	8
18	even	even		rb	othr								RB	advmod	19
19	one	one											CD	nummod	20
20	order	order		nn		nom							NN	npadvmod	23
21	of	of		in	nmod								IN	prep	20
22	magnitude	magnitude		nn									NN	pobj	21
23	larger	large		jj	attr								JJR	amod	17
24	than	than	in+comparative	in	jcomp								IN	prep	23
25	actual	actual	attr+npremod	jj	attr								JJ	amod	27
26	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	27
27	time	time		nn									NN	pobj	24
28	so	so		cc	cls								RB	cc	8
29	in	in	in+advl	in	advl								IN	prep	46
30	reality	reality		nn		nom							NN	pobj	29
31	if	if		cs	cnd								IN	mark	33
32	you	you		pro	2nd	sg							PRP	nsubj	33
33	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	46
34	a	a		dt	art								DT	det	35
35	lot	lot		nn									NN	dobj	33
36	of	of	of+npostmod	in	nmod								IN	prep	35
37	slacks	slack		nn	pl								NNS	pobj	36
38	so	so		cs	cs_othr								IN	mark	41
39	you	you		pro	2nd	sg							PRP	nsubj	41
40	can	can		vbaux	mod	pos							MD	aux	41
41	overbook	overbook	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	33
42	in	in	in+advl	in	advl								IN	prep	41
43	that	that		dt	dt_dem								DT	det	44
44	case	case		nn									NN	pobj	42
45	it	it		pro	3rd	sg							PRP	nsubj	46
46	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	52
47	what	what											WP	nsubj	48
48	's	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	46
49	most	most											JJS	attr	48
50	you	you		pro	2nd	sg							PRP	nsubj	52
51	can	can		vbaux	mod	pos							MD	aux	52
52	guarantee	guarantee		vbmain	vblex	vp_w_modal	simple	active					VB	conj	8
53	it	it		pro	3rd	sg							PRP	nsubj	54
54	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	52
55	not	not											RB	neg	54
56	an	an		dt									DT	det	58
57	absolute	absolute	attr+npremod	jj	attr								JJ	amod	58
58	guarantee	guarantee		nn		nom							NN	attr	54
59	anymore	anymore	rb+advl	rb	advl								RB	advmod	54
60	,	,											,	punct	52
61	if	if		cs	cnd								IN	mark	64
62	,	,											,	punct	64
63	everybody	everybody		nn	other	sg							NN	nsubj	64
64	takes	take	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBZ	advcl	52
65	worst	bad	attr+npremod	jj	attr								JJS	amod	67
66	-	-											HYPH	punct	67
67	case	case	nn+npremod	nn			npremod						NN	compound	69
68	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	69
69	time	time		nn									NN	dobj	64
70	right	right		jj	pred								JJ	acomp	8
71	?	?											.	punct	70

#sentid = 577
0													_SP	dep	25
1	well	well											UH	intj	25
2	,	,											,	punct	25
3	so	so		rb	link								RB	advmod	25
4	so	so		rb	link								RB	advmod	25
5	one	one		pro	other	pl							CD	nsubj	25
6	of	of		in	in_othr								IN	prep	5
7	the	the		dt	art								DT	det	8
8	things	thing		nn	pl	nom							NNS	pobj	6
9	that	that		pro	dem	sg							WDT	dobj	12
10	i	i		pro	1st	sg							PRP	nsubj	12
11	was	be		vbaux									VBD	aux	12
12	hoping	hope	finitecls+rel	vbmain	vblex	past	prog	active	nmod_cls		rel		VBG	relcl	8
13	with	with	in+advl	in	advl								IN	prep	12
14	the	the		dt	art								DT	det	20
15	quality	quality	nn+npremod	nn		nom	npremod						NN	nmod	20
16	-	-											HYPH	punct	15
17	of	of	of+npostmod	in	nmod								IN	prep	15
18	-	-											HYPH	punct	17
19	service	service		nn									NN	pobj	17
20	negotiation	negotiation		nn		nom							NN	pobj	13
21	in	in	in+advl	in	advl								IN	prep	12
22	the	the		dt	art								DT	det	23
23	future	future		nn		nom							NN	pobj	21
24	,	,											,	punct	25
25	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	25
26	uh	uh											UH	intj	25
27	to	to		to									TO	aux	30
28	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	30
29	,	,											,	punct	30
30	provide	provide	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	25
31	mechanisms	mechanism		nn	pl	nom							NNS	dobj	30
32	in	in	in+npostmod	in	nmod								IN	prep	31
33	the	the		dt	art								DT	det	36
34	plan	plan	nn+npremod	nn			npremod						NN	compound	35
35	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	36
36	system	system		nn									NN	pobj	32
37	that	that		relpro	relpro_that								WDT	mark	40
38	it	it		pro	3rd	sg							PRP	nsubj	40
39	will	will		vbaux	mod	prd							MD	aux	40
40	truncate	truncate	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	31
41	execution	execution		nn		nom							NN	dobj	40
42	of	of	of+npostmod	in	nmod								IN	prep	41
43	a	a		dt	art								DT	det	44
44	TAP	tap		nn									NN	pobj	42
45	if	if		cs	cnd								IN	mark	49
46	you	you		pro	2nd	sg							PRP	nsubj	49
47	do	do		vbaux									VBP	aux	49
48	n't	not											RB	neg	49
49	finish	finish	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VB	advcl	40
50	so	so	rb+advl	rb	advl								IN	advmod	40
51	if	if		cs	cnd								IN	mark	53
52	you	you		pro	2nd	sg							PRP	nsubj	53
53	degrade	degrade	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	62
54	its	its		dt	poss								PRP$	poss	55
55	quality	quality		nn		nom							NN	dobj	53
56	of	of	of+npostmod	in	nmod								IN	prep	55
57	service	service		nn									NN	pobj	56
58	,	,											,	punct	62
59	that	that		pro	dem	sg							WDT	nsubj	62
60	might	might		vbaux	mod	pos							MD	aux	62
61	simply	simply	rb+advl	rb	advl	ly	splaux						RB	advmod	62
62	correspond	correspond		vbmain	vblex	vp_w_modal	simple	active					VB	conj	40
63	to	to	in+advl	in	advl								IN	prep	62
64	relaxing	relax	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	63
65	its	its		dt	poss								PRP$	poss	70
66	worst	bad	attr+npremod	jj	attr								JJS	amod	68
67	-	-											HYPH	punct	68
68	case	case	nn+npremod	nn			npremod						NN	compound	70
69	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	70
70	time	time		nn									NN	dobj	64
71	,	,											,	punct	63
72	to	to		in	in_othr								IN	prep	63
73	something	something		nn	other	nom							NN	pobj	72
74	that	that		relpro	relpro_that	sg							WDT	nsubj	75
75	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	73
76	closer	close		jj	pred								JJR	acomp	75
77	to	to	in+jcomp	in	jcomp								IN	prep	76
78	the	the		dt	art								DT	det	81
79	average	average	attr+npremod	jj	attr								JJ	amod	81
80	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	81
81	time	time		nn									NN	pobj	77
82	which	which											WDT	nsubj	84
83	would	would		vbaux	mod	prd							MD	aux	84
84	allow	allow	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls	whcls			VB	advcl	62
85	you	you		pro	2nd	sg							PRP	nsubj	87
86	to	to		to									TO	aux	87
87	schedule	schedule		vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	84
88	it	it		pro	3rd	sg							PRP	dobj	87
89	and	and		cc	cls								CC	cc	84
90	it	it		pro	3rd	sg							PRP	nsubj	92
91	would	would		vbaux	mod	prd							MD	aux	92
92	allow	allow		vbmain	vblex	vp_w_modal	simple	active					VB	conj	84
93	you	you		pro	2nd	sg							PRP	nsubj	95
94	to	to		to									TO	aux	95
95	do	do		vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	92
96	it	it		pro	3rd	sg							PRP	dobj	95
97	most	most											JJS	npadvmod	95
98	of	of		in	jcomp								IN	prep	97
99	the	the		dt	art								DT	det	100
100	time	time		nn									NN	pobj	98
101	but	but		cc	cls								CC	cc	40
102	then	then		rb	link								RB	advmod	112
103	if	if		cs	cnd								IN	mark	105
104	you	you		pro	2nd	sg							PRP	nsubj	105
105	ran	run	finitecls+advl	vbmain	phrsv	past	simple	active	advlcls		conditional		VBD	advcl	112
106	out	out		rb	prtcle								RP	prt	105
107	of	of		in	in_othr								IN	prep	106
108	time	time		nn									NN	pobj	107
109	then	then		rb	link								RB	advmod	112
110	you	you		pro	2nd	sg							PRP	nsubj	112
111	would	would		vbaux	mod	prd							MD	aux	112
112	truncate	truncate		vbmain	vblex	vp_w_modal	simple	active					VB	conj	40
113	its	its		dt	poss								PRP$	poss	114
114	execution	execution		nn		nom							NN	dobj	112
115	.	.											.	punct	25

#sentid = 578
0													_SP	dep	4
1	then	then		rb	link								RB	advmod	4
2	you	you		pro	2nd	sg							PRP	nsubj	4
3	would	would		vbaux	mod	prd							MD	aux	4
4	have	have		vbmain	vblex	vp_w_modal	simple	active	compcls		jcomp	compdel	VB	ccomp	18
5	a	a		dt	art								DT	det	6
6	somewhat	somewhat											RB	dobj	4
7	of	of		in	in_othr								IN	prep	6
8	a	a		dt	art								DT	det	11
9	imprecise	imprecise	attr+npremod	jj	attr								JJ	amod	11
10	computation	computation	nn+npremod	nn		nom	npremod						NN	compound	11
11	model	model		nn									NN	pobj	7
12													_SP	dep	4
13	is	be		vbmain	be	pres	simple	active					VBZ	parataxis	4
14	what	what		comp	comp_wh								WP	dobj	17
15	you	you		pro	2nd	sg							PRP	nsubj	17
16	're	be		vbaux									VBP	aux	17
17	saying	say	whcls+vcomp	vbmain	vblex	pres	prog	active	compcls	whcls	vcomp		VBG	ccomp	13
18	right	right											JJ	ROOT	18
19	?	?											.	punct	18

#sentid = 579
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	1

#sentid = 580
0	mhm	mhm											UH	intj	2
1	,	,											,	punct	2
2	right	right											UH	ROOT	2
3	...	...											:	punct	2

#sentid = 581
0	so	so		rb	link								RB	advmod	14
1	,	,											,	punct	14
2	going	go	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	14
3	back	back	rb+advl	rb	advl								RB	advmod	2
4	to	to		in	in_othr								IN	prep	3
5	the	the		dt	art								DT	det	7
6	last	last	attr+npremod	jj	attr								JJ	amod	7
7	slide	slide		nn									NN	pobj	4
8	so	so		rb	link								RB	advmod	14
9	basically	basically	rb+advl	rb	advl	ly							RB	advmod	14
10	,	,											,	punct	14
11	we	we		pro	1st								PRP	nsubj	14
12	're	be		vbaux									VBP	aux	14
13	now	now	rb+advl	rb	advl		splaux						RB	advmod	14
14	talking	talk		vbmain	prepv	pres	prog	active					VBG	ROOT	14
15	about	about	in+advl	in	advl								IN	prep	14
16	the	the		dt	art								DT	det	18
17	multiresource	multiresource	nn+npremod	nn			npremod						NN	compound	18
18	scheduling	scheduling		nn		nom							NN	pobj	15
19	,	,											,	punct	14
20	and	and		cc	cls								CC	cc	14
21	so	so		rb	link								RB	advmod	30
22	for	for	in+advl	in	advl								IN	prep	30
23	this	this		dt	dt_dem								DT	det	24
24	system	system		nn									NN	pobj	22
25	,	,											,	punct	30
26	um	um											UH	intj	30
27	,	,											,	punct	30
28	we	we		pro	1st								PRP	nsubj	30
29	've	've		vbaux									VBP	aux	30
30	started	start		vbmain	vblex	pres	simple	active					VBN	conj	14
31	also	also	rb+advl	rb	advl								RB	advmod	30
32	thinking	think	ingcls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	30
33	about	about	in+advl	in	advl								IN	prep	32
34	,	,											,	punct	33
35	fault	fault	nn+npremod	nn			npremod						NN	compound	36
36	tolerance	tolerance		nn		nom							NN	pobj	33
37	in	in	in+npostmod	in	nmod								IN	prep	36
38	terms	term		nn	pl								NNS	pobj	37
39	of	of	of+npostmod	in	nmod								IN	prep	38
40	what	what											WP	nsubj	41
41	happens	happen	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VBZ	pcomp	39
42	if	if		cs	cnd								IN	mark	47
43	the	the		dt	art								DT	det	46
44	com-	com-	attr+npremod	jj	attr								JJ	amod	46
45	computational	computational	attr+npremod	jj	attr								JJ	amod	46
46	resource	resource		nn									NN	nsubj	47
47	fails	fail	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBZ	advcl	41
48	.	.											.	punct	30

#sentid = 582
0	so	so		rb	link								RB	advmod	31
1	to	to		to									TO	aux	2
2	do	do	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	31
3	this	this		pro	dem	sg							DT	dobj	2
4	instead	instead		rb	othr								RB	advmod	5
5	of	of	in+advl	in	advl								IN	prep	2
6	having	have	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	5
7	a	a		dt	art								DT	det	9
8	general	general	attr+npremod	jj	attr								JJ	amod	9
9	model	model		nn									NN	dobj	6
10	that	that		relpro	relpro_that	sg							WDT	nsubj	11
11	says	say	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	9
12	okay	okay											UH	intj	18
13	as	as		cs	cs_othr								IN	mark	15
14	it	it		pro	3rd	sg							PRP	nsubj	15
15	occurs	occur	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	18
16	we	we		pro	1st								PRP	nsubj	18
17	're	be		vbaux									VBP	aux	18
18	going	go	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	11
19	to	to		to									TO	aux	24
20	dynamically	dynamically	rb+advl	rb	advl	ly	splaux						RB	advmod	24
21	,	,											,	punct	24
22	um	um											UH	intj	24
23	,	,											,	punct	24
24	decide	decide	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	18
25	what	what											WP	dobj	27
26	to	to		to									TO	aux	27
27	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	24
28	,	,											,	punct	31
29	instead	instead	rb+advl	rb	advl								RB	advmod	31
30	we	we		pro	1st								PRP	nsubj	31
31	think	think		vbmain	prepv	pres	simple	active					VBP	ROOT	31
32	about	about	in+advl	in	advl								IN	prep	31
33	it	it		pro	3rd	sg							PRP	pobj	32
34	in	in	in+advl	in	advl								IN	prep	31
35	advance	advance		nn		nom							NN	pobj	34
36	,	,											,	punct	31
37	by	by	in+advl	in	advl								IN	prep	31
38	thinking	think	ingcls+incomp	vbmain	prepv	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	37
39	about	about	in+advl	in	advl								IN	prep	38
40	specific	specific	attr+npremod	jj	attr								JJ	amod	41
41	faults	fault		nn	pl								NNS	pobj	39
42	that	that		relpro	relpro_that	sg							WDT	nsubj	44
43	could	could		vbaux	mod	pos							MD	aux	44
44	occur	occur	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	41
45	.	.											.	punct	31

#sentid = 583
0	so	so		rb	link								RB	advmod	16
1	,	,											,	punct	16
2	fault	fault	nn+npremod	nn			npremod						NN	compound	3
3	F	f		nn									NN	nsubj	7
4	-	-											HYPH	punct	3
5	zero	zero											CD	nummod	3
6	would	would		vbaux	mod	prd							MD	aux	7
7	be	be		vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	16
8	everything	everything		nn	other	nom							NN	nsubj	9
9	works	work		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	16
10	,	,											,	punct	16
11	fault	fault	nn+npremod	nn			npremod						NN	compound	12
12	F	f		nn									NN	nsubj	16
13	-	-											HYPH	punct	12
14	one	one											CD	nummod	12
15	would	would		vbaux	mod	prd							MD	aux	16
16	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	16
17	some	some		dt									DT	det	18
18	resource	resource		nn									NN	nsubj	22
19	of	of	of+npostmod	in	nmod								IN	prep	18
20	some	some		dt									DT	det	21
21	sort	sort		nn									NN	pobj	19
22	fails	fail	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	16
23	,	,											,	punct	22
24	uh	uh											UH	intj	22
25	progressively	progressively	rb+jjrbmod	rb	adjmod	ly							RB	advmod	26
26	worse	bad		jj	pred								JJR	acomp	22
27	through	through	in+jcomp	in	jcomp								IN	prep	26
28	fault	fault	nn+npremod	nn			npremod						NN	compound	29
29	F	f		nn									NN	pobj	27
30	-	-		nn									NN	pobj	27
31	sub	sub		nn									NN	pobj	27
32	-	-		nn									NN	pobj	27
33	N.	n.		nn									NN	punct	16

#sentid = 584
0	so	so		rb	link								RB	advmod	6
1	,	,											,	punct	6
2	the	the		dt	art								DT	det	3
3	idea	idea		nn									NN	nsubj	6
4	with	with	in+npostmod	in	nmod								IN	prep	3
5	this	this		pro	dem	sg							DT	pobj	4
6	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	6
7	that	that		comp	comp_that								IN	mark	9
8	we	we		pro	1st								PRP	nsubj	9
9	improve	improve	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	6
10	,	,											,	punct	9
11	the	the		dt	art								DT	det	12
12	response	response		nn									NN	dobj	9
13	over	over	in+npostmod	in	nmod								IN	prep	12
14	a	a		dt	art								DT	det	23
15	traditional	traditional	attr+npremod	jj	attr								JJ	amod	23
16	real	real	attr+npremod	jj	attr								JJ	amod	18
17	-	-											HYPH	punct	18
18	time	time	nn+npremod	nn			npremod						NN	nmod	21
19	task	task	nn+npremod	nn			npremod						NN	nmod	21
20	-	-											HYPH	punct	21
21	execution	execution	nn+npremod	nn		nom	npremod						NN	nmod	23
22	,	,											,	punct	23
23	system	system		nn									NN	pobj	13
24	because	because		cs	cos								IN	mark	27
25	we	we		pro	1st								PRP	nsubj	27
26	explicitly	explicitly	rb+advl	rb	advl	ly							RB	advmod	27
27	deliberate	deliberate	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBP	advcl	9
28	about	about	in+advl	in	advl								IN	prep	27
29	what	what		comp	comp_wh								WP	dobj	40
30	if	if		cs	cnd								IN	mark	32
31	this	this		pro	dem	sg							DT	nsubj	32
32	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBZ	advcl	29
33	the	the		dt	art								DT	det	34
34	case	case		nn									NN	attr	32
35	what	what											WP	dep	40
36	if	if		cs	cnd								IN	mark	40
37	we	we		pro	1st								PRP	nsubj	40
38	do	do		vbaux									VBP	aux	40
39	n't	not											RB	neg	40
40	have	have		vbmain	vblex	pres	simple	active	compcls	whcls	conditional		VB	pcomp	28
41	,	,											,	punct	40
42	that	that	rb+jjrbmod	rb	adjmod								DT	advmod	43
43	many	many	attr+npremod	jj	attr								JJ	amod	44
44	resources	resource		nn	pl								NNS	dobj	40
45	anymore	anymore	rb+advl	rb	advl								RB	advmod	40
46	.	.											.	punct	6

#sentid = 585
0	so	so		rb	link								RB	advmod	4
1	we	we		pro	1st								PRP	nsubj	4
2	have	have		vbaux									VBP	aux	4
3	n't	not											RB	neg	4
4	implemented	implement		vbmain	vblex	pres	perf	active					VBN	ROOT	4
5	this	this		pro	dem	sg							DT	dobj	4
6	in	in	in+advl	in	advl								IN	prep	4
7	CIRCA	circa		nn		proper							NNP	pobj	6
8	-	-											HYPH	punct	7
9	two	two											CD	nummod	7
10	so	so		cc	cls								CC	cc	4
11	,	,											,	punct	4
12	if	if		cs	cnd								IN	mark	14
13	you	you		pro	2nd	sg							PRP	nsubj	14
14	ask	ask	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	19
15	implementation	implementation	nn+npremod	nn		nom	npremod						NN	compound	16
16	questions	question		nn	pl	nom							NNS	dobj	14
17	i	i		pro	1st	sg							PRP	nsubj	19
18	'll	will		vbaux	mod								MD	aux	19
19	say	say		vbmain	vblex	vp_w_modal	simple	active					VB	conj	4
20	uh	uh											UH	intj	23
21	well	well											UH	intj	23
22	this	this		pro	dem	sg							DT	nsubj	23
23	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	19
24	how	how		rb	advl								WRB	advmod	28
25	we	we		pro	1st								PRP	nsubj	26
26	hope	hope	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	23
27	to	to		to									TO	aux	28
28	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	26
29	it	it		pro	3rd	sg							PRP	dobj	28
30	,	,											,	punct	23
31	but	but		cc	cls								CC	cc	23
32	uh	uh											UH	intj	34
33	we	we		pro	1st								PRP	nsubj	34
34	're	be		vbmain	be	pres	simple	active					VBP	conj	23
35	in	in	in+advl	in	advl								IN	prep	34
36	the	the		dt	art								DT	det	37
37	process	process		nn		nom							NN	pobj	35
38	of	of	of+npostmod	in	nmod								IN	prep	37
39	converting	convert	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	38
40	the	the		dt	art								DT	det	44
41	plan	plan	nn+npremod	nn			npremod						NN	compound	43
42	-	-											HYPH	punct	43
43	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	44
44	system	system		nn									NN	dobj	39
45	so	so		cs	cs_othr								IN	mark	49
46	that	that		cs	cs_othr								IN	mark	49
47	it	it		pro	3rd	sg							PRP	nsubj	49
48	can	can		vbaux	mod	pos							MD	aux	49
49	handle	handle	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	39
50	multiple	multiple	attr+npremod	jj	attr								JJ	amod	51
51	resources	resource		nn	pl								NNS	dobj	49
52	in	in	in+advl	in	advl								IN	prep	49
53	the	the		dt	art								DT	det	54
54	future	future		nn		nom							NN	pobj	52
55	.	.											.	punct	19

#sentid = 586
0	so	so		rb	link								RB	advmod	3
1	i	i		pro	1st	sg							PRP	nsubj	3
2	'll	will		vbaux	mod								MD	aux	3
3	give	give		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	3
4	a	a		dt	art								DT	det	7
5	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	6
6	simple	simple	attr+npremod	jj	attr								JJ	amod	7
7	example	example		nn									NN	dobj	3
8	.	.											.	punct	3

#sentid = 587
0	um	um											UH	intj	3
1	,	,											,	punct	3
2	this	this		pro	dem	sg							DT	nsubj	3
3	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	an	an		dt									DT	det	5
5	example	example		nn									NN	attr	3
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	a	a		dt	art								DT	det	8
8	s-	s-											XX	pobj	6
9	the	the		dt	art								DT	det	10
10	features	feature	appos+npostmod	nn	pl		nappos						NNS	appos	8
11	uh	uh											UH	intj	10
12	,	,											,	punct	10
13	the	the		dt	art								DT	det	15
14	uh	uh											UH	intj	15
15	features	feature	appos+npostmod	nn	pl		nappos						NNS	appos	10
16	the	the		dt	art								DT	det	19
17	uh	uh											UH	intj	19
18	airplane	airplane		nn									NN	nsubj	19
19	is	be		vbmain	be	pres	simple	active					VBZ	attr	3
20	on	on	in+advl	in	advl								IN	prep	19
21	course	course		nn									NN	pobj	20
22	,	,											,	punct	19
23	no	no		dt									DT	det	24
24	obstacle	obstacle	appos+npostmod	nn			nappos						NN	appos	19
25	and	and		cc	phrs								CC	cc	19
26	has	have		vbmain	vblex	pres	simple	active					VBZ	conj	19
27	normal	normal	attr+npremod	jj	attr								JJ	amod	28
28	status	status		nn									NN	dobj	26
29	.	.											.	punct	3

#sentid = 588
0	uh	uh											UH	intj	7
1	two	two											CD	nummod	2
2	things	thing		nn	pl	nom							NNS	nsubj	4
3	can	can		vbaux	mod	pos							MD	aux	4
4	happen	happen		vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	7
5	it	it		pro	3rd	sg							PRP	nsubj	7
6	can	can		vbaux	mod	pos							MD	aux	7
7	deviate	deviate		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	7
8	from	from	in+advl	in	advl								IN	prep	7
9	its	its		dt	poss								PRP$	poss	10
10	course	course		nn									NN	pobj	8
11	or	or		cc	cls								CC	cc	7
12	it	it		pro	3rd	sg							PRP	nsubj	15
13	can	can		vbaux	mod	pos							MD	aux	15
14	,	,											,	punct	15
15	detect	detect		vbmain	vblex	vp_w_modal	simple	active					VB	conj	7
16	um	um											UH	intj	15
17	an	an		dt									DT	det	18
18	obstacle	obstacle		nn									NN	dobj	15
19	that	that		pro	dem	sg							WDT	pobj	23
20	it	it		pro	3rd	sg							PRP	nsubj	22
21	may	may		vbaux	mod	pos							MD	aux	22
22	collide	collide	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	18
23	with	with	in+advl	in	advl								IN	prep	22
24	.	.											.	punct	7

#sentid = 589
0	both	both											DT	nsubj	9
1	of	of		in	in_othr								IN	prep	0
2	these	these		pro	dem	pl							DT	pobj	1
3	,	,											,	punct	6
4	we	we		pro	1st								PRP	nsubj	6
5	'll	will		vbaux	mod								MD	aux	6
6	say	say		vbmain	vblex	vp_w_modal	simple	active					VB	parataxis	9
7	,	,											,	punct	6
8	could	could		vbaux	mod	pos							MD	aux	9
9	result	result		vbmain	prepv	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	21
10	in	in	in+advl	in	advl								IN	prep	9
11	failure	failure		nn		nom							NN	pobj	10
12	by	by	in+npostmod	in	nmod								IN	prep	11
13	a	a		dt	art								DT	det	15
14	temporal	temporal	attr+npremod	jj	attr								JJ	amod	15
15	transition	transition		nn		nom							NN	pobj	12
16	to	to	in+npostmod	in	nmod								IN	prep	15
17	failure	failure		nn		nom							NN	pobj	16
18	so	so		cc	phrs								CC	cc	9
19	,	,											,	punct	21
20	we	we		pro	1st								PRP	nsubj	21
21	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	21
22	to	to		to									TO	aux	23
23	guarantee	guarantee		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	21
24	actions	action		nn	pl	nom							NNS	dobj	23
25	for	for	in+npostmod	in	nmod								IN	prep	24
26	those	those		pro	dem	pl							DT	pobj	25
27	.	.											.	punct	21

#sentid = 590
0	so	so		rb	link								RB	advmod	6
1	our	our		dt	poss								PRP$	poss	3
2	single	single	attr+npremod	jj	attr								JJ	amod	3
3	timeline	timeline		nn									NN	nsubjpass	6
4	's	be		vbaux									VBZ	auxpass	6
5	now	now	rb+advl	rb	advl								RB	advmod	6
6	exploded	explode		vbmain	vblex	pres	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	35
7	into	into	in+advl	in	advl								IN	prep	6
8	multiple	multiple	attr+npremod	jj	attr								JJ	amod	10
9	,	,											,	punct	10
10	timelines	timeline		nn	pl								NNS	pobj	7
11	one	one		pro	other	pl							CD	nsubj	21
12	for	for		in	in_othr								IN	prep	11
13	each	each		dt									DT	det	14
14	instance	instance		nn		nom							NN	pobj	12
15	of	of	of+npostmod	in	nmod								IN	prep	14
16	a	a		dt	art								DT	det	17
17	resource	resource		nn									NN	pobj	15
18	the	the		dt	art								DT	det	20
19	top	top		jj	attr								JJ	amod	20
20	two	two											CD	nsubj	21
21	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	10
22	for	for	in+advl	in	advl								IN	prep	21
23	processors	processor		nn	pl	nom							NNS	pobj	22
24	and	and		cc	phrs								CC	cc	21
25	one	one											CD	conj	21
26	for	for		in	in_othr								IN	prep	25
27	each	each											DT	pobj	26
28	,	,											,	punct	25
29	class	class	appos+npostmod	nn			nappos						NN	appos	25
30	of	of	of+npostmod	in	nmod								IN	prep	29
31	resource	resource		nn									NN	pobj	30
32	the	the		dt	art								DT	det	34
33	bottom	bottom		jj	attr								JJ	amod	34
34	one	one		pro	other	pl							CD	nsubj	35
35	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	35
36	a	a		dt	art								DT	det	38
37	communication	communication	nn+npremod	nn		nom	npremod						NN	compound	38
38	channel	channel		nn									NN	attr	35
39	.	.											.	punct	35

#sentid = 591
0	we	we		pro	1st								PRP	nsubj	5
1	have	have		vbaux									VBP	aux	5
2	at	at	in+advl	in	advl								IN	prep	5
3	this	this		dt	dt_dem								DT	det	4
4	point	point		nn									NN	pobj	2
5	divided	divide		vbmain	vblex	pres	perf	active	compcls		vcomp	compdel	VBN	ccomp	20
6	the	the		dt	art								DT	det	7
7	TAPs	tap		nn	pl								NNS	dobj	5
8	into	into	in+advl	in	advl								IN	prep	5
9	different	different	attr+npremod	jj	attr								JJ	amod	10
10	modules	module		nn	pl								NNS	pobj	8
11	which	which		relpro	relpro_wh								WDT	nsubj	12
12	go	go	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	10
13	together	together	rb+advl	rb	advl								RB	advmod	12
14	,	,											,	punct	20
15	to	to		to									TO	aux	16
16	form	form	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	20
17	that	that		dt	dt_dem								DT	det	18
18	task	task		nn									NN	dobj	16
19	this	this		pro	dem	sg							DT	nsubj	20
20	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	20
21	,	,											,	punct	20
22	um	um											UH	intj	20
23	more	more	rb+advl	rb	advl								RBR	advmod	20
24	how	how		comp	comp_wh								WRB	advmod	31
25	the	the		dt	art								DT	det	30
26	real	real	attr+npremod	jj	attr								JJ	amod	28
27	-	-											HYPH	punct	28
28	time	time	nn+npremod	nn			npremod						NN	nmod	30
29	,	,											,	punct	30
30	community	community		nn		nom							NN	nsubj	31
31	thinks	think	whcls+vcomp	vbmain	prepv	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	20
32	of	of	in+advl	in	advl								IN	prep	31
33	tasks	task		nn	pl								NNS	pobj	32
34	to	to		to									TO	aux	35
35	split	split	tocls+rel	vbmain	phrsv	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	33
36	up	up		rb	prtcle								RP	prt	35
37	into	into	in+advl	in	advl								IN	prep	35
38	spe-	spe-	nn+npremod	nn			npremod						NN	nmod	40
39	separate	separate	attr+npremod	jj	attr								JJ	amod	40
40	parts	part		nn	pl								NNS	pobj	37
41	,	,											,	punct	35
42	and	and		cc	phrs								CC	cc	35
43	fit	fit		vbmain	vblex	nonfinite	simple	active					VB	conj	35
44	them	they		pro	pl								PRP	dobj	43
45	on	on	in+advl	in	advl								IN	prep	43
46	the	the		dt	art								DT	det	47
47	timeline	timeline		nn									NN	pobj	45
48	so	so		cs	cs_othr								IN	mark	52
49	that	that		cs	cs_othr								IN	mark	52
50	they	they		pro	pl								PRP	nsubj	52
51	'll	will		vbaux	mod								MD	aux	52
52	meet	meet	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	43
53	the	the		dt	art								DT	det	54
54	deadlines	deadline		nn	pl								NNS	dobj	52
55	...	...											:	punct	20

#sentid = 592
0	so	so											CC	ROOT	0
1	,	,											,	punct	2
2	what	what											WP	dep	0
3	if	if		cs	cnd								IN	mark	6
4	a	a		dt	art								DT	det	5
5	processor	processor		nn		nom							NN	nsubj	6
6	fails	fail	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBZ	advcl	2
7	?	?											.	punct	2

#sentid = 593
0	tha-	tha-											DT	punct	2
1	that	that		pro	dem	sg							DT	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	the	the		dt	art								DT	det	6
4	the	the		dt	art								DT	det	6
5	one	one											CD	nummod	6
6	fault	fault		nn									NN	attr	2
7	that	that		pro	dem	sg							WDT	pobj	11
8	we	we		pro	1st								PRP	nsubj	10
9	,	,											,	punct	10
10	think	think	finitecls+rel	vbmain	prepv	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	6
11	about	about	in+advl	in	advl								IN	prep	10
12	with	with	in+advl	in	advl								IN	prep	10
13	this	this		dt	dt_dem								DT	det	15
14	particular	particular	attr+npremod	jj	attr								JJ	amod	15
15	example	example		nn									NN	pobj	12
16	.	.											.	punct	2

#sentid = 594
0	well	well											UH	intj	25
1	,	,											,	punct	25
2	since	since		cs	cs_othr								IN	mark	11
3	this	this		dt	dt_dem								DT	det	5
4	,	,											,	punct	5
5	schedule	schedule		nn									NN	nsubjpass	11
6	,	,											,	punct	11
7	was	be		vbaux									VBD	auxpass	11
8	obviously	obviously	rb+advl	rb	advl	ly							RB	advmod	11
9	very	very	rb+jjrbmod	rb	othr								RB	advmod	10
10	much	much	rb+advl	rb	advl								RB	advmod	11
11	overutilized	overutilize	finitecls+advl	vbmain	vblex	past	simple	pasv_agls	advlcls		other_advl		VBN	advcl	25
12	if	if		cs	cnd								IN	mark	14
13	you	you		pro	2nd	sg							PRP	nsubj	14
14	tried	try	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	11
15	to	to		to									TO	aux	16
16	map	map	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	14
17	everything	everything		nn	other	nom							NN	dobj	16
18	here	here		rb	othr								RB	advmod	17
19	onto	onto	in+advl	in	advl								IN	prep	16
20	this	this		dt	dt_dem								DT	det	22
21	top	top	attr+npremod	jj	attr								JJ	amod	22
22	timeline	timeline		nn									NN	pobj	19
23	,	,											,	punct	25
24	you	you		pro	2nd	sg							PRP	nsubj	25
25	had	have		vbmain	vblex	past	simple	active					VBD	ROOT	25
26	to	to		to									TO	aux	27
27	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	25
28	something	something		nn	other	nom							NN	dobj	27
29	,	,											,	punct	25
30	so	so		cc	cls								CC	cc	25
31	,	,											,	punct	25
32	at	at	in+advl	in	advl								IN	prep	42
33	this	this		dt	dt_dem								DT	det	34
34	point	point		nn									NN	pobj	32
35	for	for	in+advl	in	advl								IN	prep	42
36	this	this		dt	dt_dem								DT	det	39
37	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	38
38	simple	simple	attr+npremod	jj	attr								JJ	amod	39
39	example	example		nn									NN	pobj	35
40	the	the		dt	art								DT	det	41
41	planner	planner		nn		nom							NN	nsubj	42
42	determines	determine		vbmain	vblex	pres	simple	active					VBZ	conj	25
43	that	that		comp	comp_that								IN	mark	48
44	it	it		pro	3rd	sg							PRP	nsubj	48
45	actually	actually	rb+advl	rb	advl	ly							RB	advmod	48
46	ca	can		vbaux	mod								MD	aux	48
47	n't	not											RB	neg	48
48	do	do	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	42
49	either	either		dt									DT	det	50
50	action	action		nn		nom							NN	dobj	48
51	that	that		pro	dem	sg							WDT	dobj	54
52	it	it		pro	3rd	sg							PRP	nsubj	54
53	originally	originally	rb+advl	rb	advl	ly							RB	advmod	54
54	planned	plan	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel		VBD	relcl	50
55	and	and		cc	cls								CC	cc	42
56	this	this		pro	dem	sg							DT	nsubj	57
57	is	be		vbmain	be	pres	simple	active					VBZ	conj	42
58	,	,											,	punct	57
59	by	by	in+advl	in	advl								IN	prep	57
60	several	several	attr+npremod	jj	attr								JJ	amod	62
61	backtracking	backtracking	nn+npremod	nn		nom	npremod						NN	compound	62
62	steps	step		nn	pl								NNS	pobj	59
63	.	.											.	punct	57

#sentid = 595
0	so	so		cs	cs_othr								IN	mark	4
1	that	that											IN	mark	4
2	it	it		pro	3rd	sg							PRP	nsubj	4
3	decli-	decli-	rb+advl	rb	advl								RB	advmod	4
4	decides	decide		vbmain	vblex	pres	simple	active			other_advl		VBZ	ROOT	4
5	that	that		comp	comp_that								IN	mark	13
6	if	if		cs	cnd								IN	mark	8
7	it	it		pro	3rd	sg							PRP	nsubj	8
8	declares	declare	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBZ	advcl	13
9	an	an		dt									DT	det	10
10	emergency	emergency		nn		nom							NN	dobj	8
11	that	that		pro	dem	sg							DT	nsubj	13
12	,	,											,	punct	13
13	avoids	avoid	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	4
14	the	the		dt	art								DT	det	15
15	failures	failure		nn	pl								NNS	dobj	13
16	in	in	in+npostmod	in	nmod								IN	prep	15
17	all	all		dt									DT	det	18
18	states	state		nn	pl	nom							NNS	pobj	16
19	.	.											.	punct	4

#sentid = 596
0	and	and		cc	cls								CC	cc	7
1	at	at	in+advl	in	advl								IN	prep	7
2	that	that		dt	dt_dem								DT	det	3
3	point	point		nn									NN	pobj	1
4	it	it		pro	3rd	sg							PRP	nsubj	7
5	's	be		vbaux									VBZ	aux	7
6	effectively	effectively	rb+advl	rb	advl	ly	splaux						RB	advmod	7
7	trading	trade		vbmain	phrsv	pres	prog	active					VBG	ROOT	7
8	off	off		rb	prtcle								RP	prt	7
9	,	,											,	punct	7
10	um	um											UH	intj	7
11	using	use	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	7
12	lots	lot		nn	pl								NNS	dobj	11
13	of	of	of+npostmod	in	nmod								IN	prep	12
14	processor	processor	nn+npremod	nn		nom	npremod						NN	compound	16
15	resource	resource	nn+npremod	nn			npremod						NN	compound	16
16	time	time		nn									NN	pobj	13
17	,	,											,	punct	7
18	or	or		cc	phrs								CC	cc	7
19	using	use		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	7
20	the	the		dt	art								DT	det	22
21	communication	communication	nn+npremod	nn		nom	npremod						NN	compound	22
22	channel	channel		nn									NN	dobj	19
23	to	to		to									TO	aux	24
24	get	get	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	19
25	air	air	nn+npremod	nn			npremod						NN	compound	26
26	traffic	traffic	nn+npremod	nn			npremod						NN	compound	27
27	control	control		nn									NN	nsubj	30
28	basically	basically	rb+advl	rb	advl	ly							RB	advmod	30
29	to	to		to									TO	aux	30
30	tell	tell		vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	24
31	it	it		pro	3rd	sg							PRP	dobj	30
32	where	where		rb	advl								WRB	advmod	34
33	to	to		to									TO	aux	34
34	go	go	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	30
35	next	next	rb+advl	rb	advl								RB	advmod	34
36	...	...											:	punct	7

#sentid = 597
0	okay	okay											UH	intj	5
1	so	so		rb	link								RB	advmod	5
2	that	that		dt	dt_dem								DT	det	3
3	example	example		nn									NN	nsubj	5
4	's	be		vbaux									VBZ	aux	5
5	leading	lead		vbmain	vblex	pres	prog	active					VBG	ROOT	5
6	into	into	in+advl	in	advl								IN	prep	5
7	the	the		dt	art								DT	det	9
8	next	next	attr+npremod	jj	attr								JJ	amod	9
9	section	section		nn		nom							NN	pobj	6
10	which	which		relpro	relpro_wh								WDT	nsubj	11
11	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	9
12	,	,											,	punct	11
13	what	what		comp	comp_wh								WP	dobj	17
14	we	we		pro	1st								PRP	nsubj	17
15	've	've		vbaux									VBP	aux	17
16	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	17
17	done	do	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBN	ccomp	11
18	with	with	in+advl	in	advl								IN	prep	17
19	CIRCA	circa		nn		proper							NNP	pobj	18
20	-	-											HYPH	punct	19
21	two	two											CD	nummod	19
22	,	,											,	punct	17
23	towards	towards	in+advl	in	advl								IN	prep	17
24	autonomous	autonomous	attr+npremod	jj	attr								JJ	amod	25
25	flight	flight		nn									NN	pobj	23
26	.	.											.	punct	5

#sentid = 598
0	CIRCA	circa		nn		proper	npremod						NNP	compound	2
1	-	-											HYPH	punct	2
2	two	two											CD	nsubj	3
3	had	have		vbmain	vblex	past	simple	active					VBD	ROOT	3
4	nothing	nothing		nn	other	nom							NN	dobj	3
5	to	to		to									TO	aux	6
6	do	do	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	4
7	with	with	in+advl	in	advl								IN	prep	6
8	this	this		dt	dt_dem								DT	det	9
9	airplane	airplane		nn									NN	pobj	7
10	.	.											.	punct	3

#sentid = 599
0	so	so		rb	link								RB	advmod	9
1	basically	basically	rb+advl	rb	advl	ly							RB	advmod	9
2	,	,											,	punct	9
3	uh	uh											UH	intj	9
4	the	the		dt	art								DT	det	6
5	first	first	attr+npremod	jj	attr								JJ	amod	6
6	thing	thing		nn		nom							NN	nsubj	9
7	we	we		pro	1st								PRP	nsubj	8
8	did	do	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel	reldel	VBD	relcl	6
9	was	be		vbmain	be	past	simple	active					VBD	ROOT	9
10	we	we		pro	1st								PRP	nsubj	12
11	,	,											,	punct	12
12	grabbed	grab	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	9
13	an	an											DT	dep	12
14	,	,											,	punct	13
15	a	a		dt	art								DT	det	16
16	simulator	simulator	appos+npostmod	nn		nom	nappos						NN	appos	13
17	,	,											,	punct	16
18	shareware	shareware	nn+npremod	nn			npremod						NN	compound	19
19	simulator	simulator	appos+npostmod	nn		nom	nappos						NN	appos	16
20	called	call	edcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	edcls	ncomp		VBN	acl	19
21	Aerial	aerial		nn		proper	npremod						NNP	compound	22
22	Combat	combat		nn		proper							NNP	oprd	20
23	,	,											,	punct	16
24	um	um											UH	intj	12
25	and	and		cc	phrs								CC	cc	12
26	put	put		vbmain	vblex	past	simple	active					VBD	conj	12
27	a	a		dt	art								DT	det	30
28	simple	simple	attr+npremod	jj	attr								JJ	amod	30
29	linear	linear	attr+npremod	jj	attr								JJ	amod	30
30	controller	controller		nn		nom							NN	dobj	26
31	on	on	in+advl	in	advl								IN	prep	26
32	it	it		pro	3rd	sg							PRP	pobj	31
33	that	that		relpro	relpro_that	sg							WDT	nsubj	34
34	allowed	allow	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls	thatcls	rel		VBD	relcl	30
35	,	,											,	punct	34
36	gentle	gentle	attr+npremod	jj	attr								JJ	amod	37
37	maneuvers	maneuver	nn+npremod	nn	pl	nom	npremod						NNS	nmod	41
38	take	take	attr+npremod	jj	attr								VB	amod	41
39	-	-											HYPH	punct	38
40	off	off		rb	prtcle								RP	prt	38
41	landing	landing		nn		nom							NN	dobj	34
42	so	so		cs	cs_othr								IN	mark	45
43	that	that		cs	cs_othr								IN	mark	45
44	it	it		pro	3rd	sg							PRP	nsubj	45
45	was	be	finitecls+advl	vbmain	be	past	simple	active	advlcls		other_advl		VBD	advcl	26
46	able	able		jj	pred								JJ	acomp	45
47	to	to		to									TO	aux	49
48	,	,											,	punct	49
49	fly	fly	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	46
50	around	around	in+advl	in	advl								IN	prep	49
51	a	a		dt	art								DT	det	52
52	pattern	pattern		nn									NN	pobj	50
53	.	.											.	punct	9

#sentid = 600
0	so	so		rb	link								RB	advmod	5
1	,	,											,	punct	5
2	the	the		dt	art								DT	det	3
3	simulator	simulator		nn		nom							NN	nsubj	5
4	basically	basically	rb+advl	rb	advl	ly							RB	advmod	5
5	looks	look		vbmain	prepv	pres	simple	active					VBZ	ROOT	5
6	like	like	in+advl	in	advl								IN	prep	5
7	this	this		pro	dem	sg							DT	pobj	6
8	it	it		pro	3rd	sg							PRP	nsubj	9
9	's	be		vbmain	be	pres	simple	active					VBZ	parataxis	12
10	uh	uh											UH	intj	9
11	,	,											,	punct	9
12	has	have		vbmain	vblex	pres	simple	active					VBZ	conj	5
13	a	a		dt	art								DT	det	17
14	heads	heads	attr+npremod	jj	attr								VB	amod	17
15	-	-											HYPH	punct	14
16	up	up		rb	prtcle								RP	prt	14
17	display	display		nn									NN	dobj	12
18	and	and		cc	phrs								CC	cc	12
19	was	be		vbaux									VBD	auxpass	21
20	originally	originally	rb+advl	rb	advl	ly							RB	advmod	21
21	designed	design		vbmain	vblex	past	simple	pasv_agls					VBN	conj	12
22	for	for	in+advl	in	advl								IN	prep	21
23	basically	basically		rb	othr	ly							RB	advmod	25
24	a	a		dt	art								DT	det	25
25	human	human		nn									NN	pobj	22
26	to	to		to									TO	aux	27
27	play	play	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	25
28	games	game		nn	pl								NNS	dobj	27
29	with	with	in+advl	in	advl								IN	prep	27
30	.	.											.	punct	5

#sentid = 601
0	but	but		cc	cls								CC	cc	4
1	we	we		pro	1st								PRP	nsubj	4
2	,	,											,	punct	4
3	basically	basically	rb+advl	rb	advl	ly							RB	advmod	4
4	took	take		vbmain	vblex	past	simple	active					VBD	ROOT	4
5	all	all											PDT	predet	7
6	those	those		dt	dt_dem								DT	det	7
7	inputs	input		nn	pl								NNS	dobj	4
8	,	,											,	punct	4
9	sent	send		vbmain	vblex	past	simple	active					VBD	dep	4
10	them	they		pro	pl								PRP	dobj	9
11	through	through	in+advl	in	advl								IN	prep	9
12	C-	c-		nn		proper							NNP	pobj	11
13	through	through	in+advl	in	advl								IN	prep	9
14	CIRCA	circa		nn		proper							NNP	pobj	13
15	to	to		to									TO	aux	16
16	get	get	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	4
17	it	it		pro	3rd	sg							PRP	nsubj	19
18	to	to		to									TO	aux	19
19	control	control		vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	16
20	it	it		pro	3rd	sg							PRP	dobj	19
21	instead	instead	rb+advl	rb	advl								RB	advmod	19
22	...	...											:	punct	4

#sentid = 602
0	and	and		cc	cls								CC	cc	11
1	,	,											,	punct	11
2	the	the		dt	art								DT	det	4
3	simple	simple	attr+npremod	jj	attr								JJ	amod	4
4	tasks	task		nn	pl								NNS	nsubj	11
5	that	that		pro	dem	sg							WDT	dobj	10
6	we	we		pro	1st								PRP	nsubj	7
7	had	have	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel	reldel	VBD	relcl	4
8	it	it		pro	3rd	sg							PRP	nsubj	10
9	um	um											UH	intj	10
10	flying	fly		vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	ccomp	7
11	was	be		vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	38
12	to	to		to									TO	aux	13
13	take	take	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	11
14	off	off	rb+advl	rb	advl								RB	advmod	13
15	,	,											,	punct	13
16	going	go		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	dep	13
17	south	south	rb+advl	rb	advl								RB	advmod	16
18	on	on		in	in_othr								IN	prep	17
19	the	the		dt	art								DT	det	20
20	runway	runway		nn									NN	pobj	18
21	,	,											,	punct	13
22	fly	fly		vbmain	vblex	nonfinite	simple	active					VB	conj	13
23	in	in	in+advl	in	advl								IN	prep	22
24	a	a		dt	art								DT	det	25
25	rectangle	rectangle		nn									NN	pobj	23
26	and	and		cc	phrs								CC	cc	22
27	go	go		vbmain	vblex	nonfinite	simple	active					VB	conj	22
28	back	back	rb+advl	rb	advl								RB	advmod	27
29	so	so	rb+advl	rb	advl								RB	advmod	11
30	,	,											,	punct	38
31	as	as		rb	othr								RB	advmod	32
32	far	far	rb+advl	rb	advl								RB	advmod	38
33	as	as		in	in_othr								IN	prep	32
34	goal	goal	nn+npremod	nn		nom	npremod						NN	compound	35
35	achievement	achievement		nn		nom							NN	pobj	33
36	its	its		dt	poss								PRP$	poss	37
37	goals	goal		nn	pl	nom							NNS	nsubj	38
38	were	be		vbmain	be	past	simple	active					VBD	ROOT	38
39	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	40
40	simple	simple		jj	pred								JJ	acomp	38
41	,	,											,	punct	38
42	flying	fly		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	dep	38
43	to	to	in+advl	in	advl								IN	prep	42
44	the	the		dt	art								DT	det	46
45	next	next	attr+npremod	jj	attr								JJ	amod	46
46	fix	fix		nn									NN	pobj	43
47	,	,											,	punct	42
48	um	um											UH	intj	42
49	which	which											WDT	nsubj	50
50	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	42
51	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	52
52	of	of	rb+advl	rb	advl								RB	advmod	57
53	what	what		comp	comp_wh								WP	dobj	57
54	you	you		pro	2nd	sg							PRP	nsubj	57
55	've	've		vbaux									VBP	aux	57
56	been	be		vbaux									VBN	aux	57
57	seeing	see	whcls+vcomp	vbmain	vblex	pres	prog	active	compcls	whcls	vcomp		VBG	ccomp	50
58	in	in	in+advl	in	advl								IN	prep	57
59	the	the		dt	art								DT	det	60
60	examples	example		nn	pl								NNS	pobj	58
61	so	so	rb+jjrbmod	rb	othr								RB	advmod	62
62	far	far		rb	othr								RB	advmod	60
63	.	.											.	punct	38

#sentid = 603
0	so	so		rb	link								RB	advmod	8
1	,	,											,	punct	8
2	during	during	in+advl	in	advl								IN	prep	8
3	these	these		dt	dt_dem								DT	det	5
4	initial	initial	attr+npremod	jj	attr								JJ	amod	5
5	tests	test		nn	pl								NNS	pobj	2
6	we	we		pro	1st								PRP	nsubj	8
7	,	,											,	punct	8
8	inserted	insert		vbmain	vblex	past	simple	active					VBD	ROOT	8
9	some	some		dt									DT	det	10
10	emergencies	emergency		nn	pl	nom							NNS	dobj	8
11	basically	basically		rb	othr	ly							RB	advmod	12
12	by	by	in+advl	in	advl								IN	prep	8
13	pressing	press	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	12
14	keys	key		nn	pl								NNS	dobj	13
15	on	on	in+advl	in	advl								IN	prep	13
16	the	the		dt	art								DT	det	17
17	keyboard	keyboard		nn									NN	pobj	15
18	,	,											,	punct	8
19	um	um											UH	intj	8
20	that	that		pro	dem	sg							WDT	nsubj	21
21	allowed	allow	finitecls+advl	vbmain	vblex	past	simple	active	advlcls				VBD	advcl	8
22	us	we		pro	pl								PRP	nsubj	24
23	to	to		to									TO	aux	24
24	think	think		vbmain	prepv	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	21
25	about	about	in+advl	in	advl								IN	prep	24
26	what	what											WP	nsubj	27
27	happened	happen	whcls+incomp	vbmain	vblex	past	simple	active	compcls	whcls	incomp		VBD	pcomp	25
28	if	if		cs	cnd								IN	mark	31
29	,	,											,	punct	31
30	we	we		pro	1st								PRP	nsubj	31
31	failed	fail	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	27
32	gear	gear		nn									NN	dobj	31
33	-	-											HYPH	punct	32
34	up	up		rb	prtcle								RP	prt	32
35	on	on	in+advl	in	advl								IN	prep	31
36	approach	approach		nn									NN	pobj	35
37	to	to	in+npostmod	in	nmod								IN	prep	36
38	landing	landing		nn		nom							NN	pobj	37
39	,	,											,	punct	27
40	and	and		cc	cls								CC	cc	27
41	what	what											WP	nsubj	42
42	happened	happen		vbmain	vblex	past	simple	active					VBD	conj	27
43	when	when		rb	advl								WRB	advmod	49
44	collision	collision	nn+npremod	nn			npremod						NN	compound	46
45	-	-											HYPH	punct	46
46	course	course	nn+npremod	nn			npremod						NN	compound	47
47	traffic	traffic		nn									NN	nsubjpass	49
48	was	be		vbaux									VBD	auxpass	49
49	detected	detect	finitecls+advl	vbmain	vblex	past	simple	pasv_agls	advlcls	whcls			VBN	advcl	42
50	.	.											.	punct	8

#sentid = 604
0	and	and		cc	cls								CC	cc	17
1	we	we		pro	1st								PRP	nsubj	4
2	,	,											,	punct	4
3	carefully	carefully	rb+advl	rb	advl	ly							RB	advmod	4
4	engineered	engineer		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	17
5	the	the		dt	art								DT	det	10
6	worst	bad	attr+npremod	jj	attr								JJS	amod	8
7	-	-											HYPH	punct	8
8	case	case	nn+npremod	nn			npremod						NN	compound	10
9	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	10
10	times	time		nn	pl								NNS	dobj	4
11	and	and		cc	phrs								CC	cc	10
12	so	so	rb+jjrbmod	rb	othr								RB	advmod	13
13	forth	forth											RB	conj	10
14	,	,											,	punct	17
15	yes	yes											UH	intj	17
16	we	we		pro	1st								PRP	nsubj	17
17	engineered	engineer		vbmain	vblex	past	simple	active					VBD	ROOT	17
18	them	they		pro	pl								PRP	dobj	17
19	we	we		pro	1st								PRP	nsubj	22
20	did	do		vbaux									VBD	aux	22
21	n't	not											RB	neg	22
22	compute	compute		vbmain	vblex	past	simple	active					VB	parataxis	17
23	them	they		pro	pl								PRP	dobj	22
24	accurately	accurately	rb+advl	rb	advl	ly							RB	advmod	22
25	,	,											,	punct	17
26	to	to		to									TO	aux	28
27	uh	uh											UH	intj	28
28	allow	allow	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	17
29	us	we		pro	pl								PRP	nsubj	31
30	to	to		to									TO	aux	31
31	make	make		vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	28
32	things	thing		nn	pl	nom							NNS	nsubj	34
33	not	not											RB	neg	34
34	schedulable	schedulable											JJ	ccomp	31
35	,	,											,	punct	28
36	to	to		to									TO	aux	37
37	test	test		vbmain	vblex	nonfinite	simple	active		tocls			VB	dep	28
38	the	the		dt	art								DT	det	39
39	ability	ability		nn		nom							NN	dobj	37
40	of	of	of+npostmod	in	nmod								IN	prep	39
41	the	the		dt	art								DT	det	42
42	system	system		nn									NN	pobj	40
43	to	to		to									TO	aux	44
44	make	make	tocls+ncomp	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	ncomp		VB	acl	39
45	the	the		dt	art								DT	det	48
46	trade	trade	nn+npremod	nn			npremod						NN	compound	48
47	-	-											HYPH	punct	48
48	offs	off		nn	pl								NNS	dobj	44
49	toward	toward	in+npostmod	in	nmod								IN	prep	48
50	,	,											,	punct	49
51	basically	basically	rb+advl	rb	advl	ly							RB	advmod	52
52	bumping	bump	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	49
53	,	,											,	punct	52
54	gear	gear	attr+npremod	jj	attr								VB	amod	58
55	-	-											HYPH	punct	54
56	up	up		rb	prtcle								RP	prt	54
57	failure	failure	nn+npremod	nn		nom	npremod						NN	compound	58
58	detection	detection		nn		nom							NN	dobj	52
59	and	and		cc	phrs								CC	cc	58
60	collision	collision	nn+npremod	nn			npremod						NN	compound	62
61	-	-											HYPH	punct	62
62	course	course	nn+npremod	nn			npremod						NN	compound	64
63	traffic	traffic	nn+npremod	nn			npremod						NN	compound	64
64	detection	detection		nn		nom							NN	conj	58
65	off	off	in+advl	in	advl								IN	prep	52
66	to	to		in	in_othr								IN	prep	65
67	contingency	contingency	nn+npremod	nn		nom	npremod						NN	compound	68
68	plans	plan		nn	pl								NNS	pobj	66
69	,	,											,	punct	52
70	and	and		cc	phrs								CC	cc	52
71	testing	test		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	52
72	the	the		dt	art								DT	det	73
73	response	response		nn									NN	dobj	71
74	of	of	of+npostmod	in	nmod								IN	prep	73
75	the	the		dt	art								DT	det	76
76	system	system		nn									NN	pobj	74
77	that	that		dt	dt_dem								DT	det	78
78	way	way		nn									NN	npadvmod	71
79	.	.											.	punct	17

#sentid = 605
0	so	so		rb	link								IN	advmod	36
1	that	that		comp	comp_that								IN	mark	36
2	in	in	in+advl	in	advl								IN	prep	36
3	,	,											,	punct	2
4	the	the		dt	art								DT	det	6
5	next	next	attr+npremod	jj	attr								JJ	amod	6
6	set	set	appos+npostmod	nn			nappos						NN	appos	2
7	of	of	of+npostmod	in	nmod								IN	prep	6
8	tests	test		nn	pl								NNS	pobj	7
9	,	,											,	punct	36
10	basically	basically	rb+advl	rb	advl	ly							RB	advmod	36
11	at	at	in+advl	in	advl								IN	prep	36
12	this	this		dt	dt_dem								DT	det	13
13	point	point		nn									NN	pobj	11
14	,	,											,	punct	36
15	um	um											UH	intj	36
16	um	um											UH	intj	36
17	some	some		dt									DT	det	18
18	researchers	researcher		nn	pl	nom							NNS	nsubj	36
19	at	at	in+npostmod	in	nmod								IN	prep	18
20	Honeywell	honeywell		nn		proper							NNP	pobj	19
21	who	who		relpro	relpro_wh								WP	nsubj	25
22	were	be		vbaux									VBD	aux	25
23	basically	basically	rb+advl	rb	advl	ly	splaux						RB	advmod	25
24	,	,											,	punct	25
25	working	work	finitecls+rel	vbmain	vblex	past	prog	active	nmod_cls	whcls	rel		VBG	relcl	18
26	also	also	rb+advl	rb	advl								RB	advmod	25
27	with	with	in+advl	in	advl								IN	prep	25
28	uh	uh											UH	intj	27
29	the	the		dt	art								DT	det	31
30	original	original	attr+npremod	jj	attr								JJ	amod	31
31	version	version		nn									NN	pobj	27
32	of	of	of+npostmod	in	nmod								IN	prep	31
33	CIRCA	circa		nn		proper							NNP	pobj	32
34	,	,											,	punct	36
35	um	um											UH	intj	36
36	took	take		vbmain	vblex	past	simple	active	compcls	thatcls	vcomp		VBD	ccomp	105
37	the	the		dt	art								DT	det	38
38	simulator	simulator		nn		nom							NN	dobj	36
39	and	and		cc	phrs								CC	cc	36
40	uh	uh											UH	intj	36
41	,	,											,	punct	36
42	adopted	adopt		vbmain	vblex	past	simple	active					VBD	conj	36
43	it	it		pro	3rd	sg							PRP	dobj	42
44	,	,											,	punct	42
45	as	as	in+advl	in	advl								IN	prep	42
46	an	an		dt									DT	det	50
47	unmanned	unmanned	attr+npremod	jj	attr								JJ	amod	50
48	combat	combat	nn+npremod	nn			npremod						NN	nmod	50
49	aerial	aerial	attr+npremod	jj	attr								JJ	amod	50
50	vehicle	vehicle		nn									NN	pobj	45
51	so	so		cs	cs_othr								IN	mark	54
52	they	they		pro	pl								PRP	nsubj	54
53	,	,											,	punct	54
54	kept	keep	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		other_advl		VBD	advcl	42
55	the	the		dt	art								DT	det	57
56	flight	flight	nn+npremod	nn			npremod						NN	compound	57
57	controller	controller		nn		nom							NN	dobj	54
58	basically	basically	rb+advl	rb	advl	ly							RB	advmod	59
59	put	put		vbmain	phrsv	past	simple	active					VBD	dep	54
60	in	in		rb	prtcle								RP	prt	59
61	a	a		dt	art								DT	det	62
62	bunch	bunch		nn									NN	dobj	59
63	of	of	of+npostmod	in	nmod								IN	prep	62
64	missiles	missile		nn	pl								NNS	pobj	63
65	and	and		cc	phrs								CC	cc	64
66	targets	target		nn	pl								NNS	conj	64
67	and	and		cc	phrs								CC	cc	66
68	things	thing		nn	pl	nom							NNS	conj	66
69	like	like	in+npostmod	in	nmod								IN	prep	68
70	that	that		pro	dem	sg							DT	pobj	69
71	,	,											,	punct	54
72	so	so		cs	cs_othr								IN	mark	78
73	that	that		cs	cs_othr								IN	mark	78
74	uh	uh											UH	intj	78
75	,	,											,	punct	78
76	they	they		pro	pl								PRP	nsubj	78
77	could	could		vbaux	mod	pos							MD	aux	78
78	demonstrate	demonstrate	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	36
79	,	,											,	punct	78
80	the	the		dt	art								DT	det	81
81	utility	utility		nn		nom							NN	dobj	78
82	of	of	of+npostmod	in	nmod								IN	prep	81
83	the	the		dt	art								DT	det	84
84	system	system		nn									NN	pobj	82
85	for	for	in+npostmod	in	nmod								IN	prep	81
86	that	that		pro	dem	sg							DT	pobj	85
87	,	,											,	punct	36
88	and	and		cc	cls								CC	cc	90
89	i	i		pro	1st	sg							PRP	nsubj	90
90	know	know		vbmain	vblex	pres	simple	active					VBP	conj	36
91	the	the		dt	art								DT	det	92
92	picture	picture		nn		nom							NN	nsubj	93
93	turned	turn	thatcls+vcomp	vbmain	phrsv	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	90
94	out	out		rb	prtcle								RP	prt	93
95	terribly	terribly	rb+advl	rb	advl	ly							RB	advmod	93
96	in	in	in+advl	in	advl								IN	prep	93
97	the	the		dt	art								DT	det	98
98	dissertation	dissertation		nn		nom							NN	pobj	96
99	but	but		cc	cls								CC	cc	90
100	this	this		pro	dem	sg							DT	nsubj	101
101	is	be		vbmain	be	pres	simple	active					VBZ	conj	90
102	,	,											,	punct	105
103	the	the		dt	art								DT	det	104
104	idea	idea		nn									NN	nsubj	105
105	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	105
106	that	that		comp	comp_that								IN	mark	108
107	there	there											EX	expl	108
108	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	105
109	various	various	attr+npremod	jj	attr								JJ	amod	110
110	targets	target		nn	pl								NNS	attr	108
111	that	that		pro	dem	sg							WDT	dobj	115
112	you	you		pro	2nd	sg							PRP	nsubj	113
113	want	want	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	110
114	to	to		to									TO	aux	115
115	destroy	destroy		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	113
116	,	,											,	punct	110
117	and	and		cc	phrs								CC	cc	110
118	radar	radar	nn+npremod	nn			npremod						NN	compound	119
119	threats	threat		nn	pl								NNS	conj	110
120	and	and		cc	phrs								CC	cc	119
121	infrared	infrared	nn+npremod	nn			npremod						NN	compound	123
122	missile	missile	nn+npremod	nn			npremod						NN	compound	123
123	threats	threat		nn	pl								NNS	conj	119
124	...	...											:	punct	119
125	that	that		pro	dem	sg							WDT	dobj	129
126	you	you		pro	2nd	sg							PRP	nsubj	127
127	want	want	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	119
128	to	to		to									TO	aux	129
129	avoid	avoid		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	127
130	...	...											:	punct	105

#sentid = 606
0	so	so		cc	cls								CC	cc	3
1	i	i		pro	1st	sg							PRP	nsubj	3
2	'll	will		vbaux	mod								MD	aux	3
3	talk	talk		vbmain	prepv	vp_w_modal	simple	active					VB	ROOT	3
4	about	about	in+advl	in	advl								IN	prep	3
5	,	,											,	punct	4
6	the	the		dt	art								DT	det	7
7	example	example		nn									NN	pobj	4
8	that	that		relpro	relpro_that	sg							WDT	nsubj	10
9	,	,											,	punct	10
10	illustrates	illustrate	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	7
11	how	how		comp	comp_wh								WRB	advmod	13
12	CIRCA	circa		nn		proper							NNP	nsubj	13
13	works	work	whcls+vcomp	vbmain	prepv	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	10
14	with	with	in+advl	in	advl								IN	prep	13
15	that	that		pro	dem	sg							DT	pobj	14
16	,	,											,	punct	3
17	and	and		cc	cls								CC	cc	3
18	then	then		rb	link								RB	advmod	21
19	i	i		pro	1st	sg							PRP	nsubj	21
20	'll	will		vbaux	mod								MD	aux	21
21	talk	talk		vbmain	prepv	vp_w_modal	simple	active					VB	conj	3
22	about	about	in+advl	in	advl								IN	prep	21
23	our	our		dt	poss								PRP$	poss	25
24	ongoing	ongoing	attr+npremod	jj	attr								JJ	amod	25
25	research	research		nn									NN	pobj	22
26	to	to		to									TO	aux	27
27	automate	automate	tocls+ncomp	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	ncomp		VB	acl	25
28	the	the		dt	art								DT	det	36
29	uh	uh											UH	intj	36
30	University	university		nn		proper	npremod						NNP	nmod	36
31	of	of	of+npostmod	in	nmod								IN	prep	30
32	Michigan	michigan		nn		proper							NNP	pobj	31
33	,	,											,	punct	36
34	Uninhabited	uninhabited		nn		proper	npremod						NNP	compound	36
35	Aerial	aerial		nn		proper	npremod						NNP	compound	36
36	Vehicle	vehicle		nn		proper							NNP	dobj	27
37	.	.											.	punct	21

#sentid = 607
0													_SP	dep	17
1	so	so		rb	link								RB	advmod	17
2	for	for	in+advl	in	advl								IN	prep	10
3	the	the		dt	art								DT	det	8
4	,	,											,	punct	8
5	unmanned	unmanned	attr+npremod	jj	attr								JJ	amod	8
6	combat	combat	nn+npremod	nn			npremod						NN	nmod	8
7	aerial	aerial	attr+npremod	jj	attr								JJ	amod	8
8	vehicle	vehicle		nn									NN	pobj	2
9	this	this		pro	dem	sg							DT	nsubj	10
10	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	17
11	again	again	rb+advl	rb	advl								RB	advmod	10
12	a	a		dt	art								DT	det	13
13	simulator	simulator		nn		nom							NN	attr	10
14	,	,											,	punct	17
15	we	we		pro	1st								PRP	nsubj	17
16	basically	basically	rb+advl	rb	advl	ly							RB	advmod	17
17	had	have		vbmain	vblex	past	simple	active					VBD	ROOT	17
18	a	a		dt	art								DT	det	23
19	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	20
20	specific	specific	attr+npremod	jj	attr								JJ	amod	23
21	,	,											,	punct	23
22	um	um											UH	intj	23
23	trajectory	trajectory		nn		nom							NN	dobj	17
24	that	that		pro	dem	sg							WDT	dobj	27
25	we	we		pro	1st								PRP	nsubj	27
26	were	be		vbaux									VBD	aux	27
27	following	follow	finitecls+rel	vbmain	vblex	past	prog	active	nmod_cls		rel		VBG	relcl	23
28	so	so		cc	cls								CC	cc	17
29	we	we		pro	1st								PRP	nsubj	33
30	did	do		vbaux									VBD	aux	33
31	n't	not											RB	neg	33
32	even	even	rb+advl	rb	advl		splaux						RB	advmod	33
33	model	model		vbmain	vblex	past	simple	active					VB	conj	17
34	that	that		pro	dem	sg							DT	dobj	33
35	within	within	in+advl	in	advl								IN	prep	33
36	CIRCA	circa		nn		proper							NNP	pobj	35
37	itself	itself											PRP	appos	36
38	.	.											.	punct	33

#sentid = 608
0	um	um											UH	intj	3
1	,	,											,	punct	3
2	we	we		pro	1st								PRP	nsubj	3
3	had	have		vbmain	vblex	past	simple	active					VBD	ROOT	3
4	a	a		dt	art								DT	det	8
5	waypoint	waypoint	nn+npremod	nn			npremod						NN	nmod	7
6	ge-	ge-											HYPH	punct	7
7	trajectory	trajectory	nn+npremod	nn		nom	npremod						NN	compound	8
8	generator	generator		nn		nom							NN	dobj	3
9	and	and		cc	cls								CC	cc	3
10	it	it		pro	3rd	sg							PRP	nsubj	13
11	,	,											,	punct	13
12	basically	basically	rb+advl	rb	advl	ly							RB	advmod	13
13	identified	identify		vbmain	vblex	past	simple	active					VBD	conj	3
14	the	the		dt	art								DT	det	16
15	different	different	attr+npremod	jj	attr								JJ	amod	16
16	targets	target		nn	pl								NNS	dobj	13
17	that	that		pro	dem	sg							WDT	dobj	20
18	it	it		pro	3rd	sg							PRP	nsubj	20
19	would	would		vbaux	mod	prd							MD	aux	20
20	encounter	encounter	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel		VB	relcl	16
21	on	on	in+advl	in	advl								IN	prep	20
22	the	the		dt	art								DT	det	23
23	way	way		nn									NN	pobj	21
24	.	.											.	punct	13

#sentid = 609
0	so	so		rb	link								RB	advmod	5
1	for	for	in+advl	in	advl								IN	prep	5
2	CIRCA	circa		nn		proper							NNP	pobj	1
3	we	we		pro	1st								PRP	nsubj	5
4	specifically	specifically	rb+advl	rb	advl	ly							RB	advmod	5
5	looked	look		vbmain	prepv	past	simple	active					VBD	ROOT	5
6	at	at	in+advl	in	advl								IN	prep	5
7	failure	failure	nn+npremod	nn		nom	npremod						NN	compound	8
8	avoidance	avoidance		nn		nom							NN	pobj	6
9	.	.											.	punct	5

#sentid = 610
0	so	so		rb	link								RB	advmod	18
1	,	,											,	punct	18
2	for	for	in+advl	in	advl								IN	prep	18
3	the	the		dt	art								DT	det	5
4	first	first	attr+npremod	jj	attr								JJ	amod	5
5	test	test		nn									NN	pobj	2
6	we	we		pro	1st								PRP	nsubj	7
7	looked	look	finitecls+rel	vbmain	prepv	past	simple	active	nmod_cls		rel	reldel	VBD	relcl	5
8	at	at	in+advl	in	advl								IN	prep	7
9	,	,											,	punct	18
10	how	how		rb	advl								WRB	advmod	18
11	would	would		vbaux	mod	prd							MD	aux	18
12	the	the		dt	art								DT	det	17
13	original	original	attr+npremod	jj	attr								JJ	amod	17
14	C-	c-		nn		proper							NNP	punct	17
15	um	um											UH	intj	17
16	CIRCA	circa	nn+npremod	nn		proper	npremod						NNP	compound	17
17	system	system		nn									NN	nsubj	18
18	work	work		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	18
19	.	.											.	punct	18

#sentid = 611
0	well	well											UH	intj	15
1	basically	basically	rb+advl	rb	advl	ly							RB	advmod	15
2	if	if		cs	cnd								IN	mark	4
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	took	take	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	15
5	the	the		dt	art								DT	det	8
6	original	original	attr+npremod	jj	attr								JJ	amod	8
7	CIRCA	circa	nn+npremod	nn		proper	npremod						NNP	compound	8
8	system	system		nn									NN	dobj	4
9	as	as		cs	cs_othr								IN	mark	10
10	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	4
11	,	,											,	punct	15
12	it	it		pro	3rd	sg							PRP	nsubj	15
13	would	would		vbaux	mod	prd							MD	aux	15
14	n't	not											RB	neg	15
15	generate	generate		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	15
16	any	any		dt									DT	det	17
17	plan	plan		nn									NN	dobj	15
18	because	because		cs	cos								IN	mark	30
19	,	,											,	punct	30
20	infrared	infrared											JJ	compound	21
21	threats	threat		nn	pl								NNS	nsubjpass	30
22	and	and		cc	phrs								CC	cc	21
23	radar	radar	nn+npremod	nn			npremod						NN	compound	24
24	threats	threat		nn	pl								NNS	conj	21
25	could	could		vbaux	mod	pos							MD	aux	30
26	not	not											RB	neg	30
27	be	be		vbaux									VB	auxpass	30
28	,	,											,	punct	30
29	together	together	rb+advl	rb	advl		splaux						RB	advmod	30
30	scheduled	schedule	finitecls+advl	vbmain	vblex	vp_w_modal	simple	pasv_agls	advlcls		causative		VBN	advcl	15
31	on	on	in+advl	in	advl								IN	prep	30
32	the	the		dt	art								DT	det	33
33	variable	variable		nn									NN	pobj	31
34	,	,											,	punct	31
35	uh	uh											UH	intj	31
36	on	on		in	in_othr								IN	prep	31
37	the	the											DT	pobj	36
38	on	on		in	in_othr								IN	prep	31
39	the	the		dt	art								DT	det	41
40	available	available	attr+npremod	jj	attr								JJ	amod	41
41	resources	resource		nn	pl								NNS	pobj	38
42	.	.											.	punct	15

#sentid = 612
0	however	however		rb	link								RB	advmod	5
1	,	,											,	punct	5
2	if	if		cs	cnd								IN	mark	5
3	someone	someone		nn	other	sg							NN	nsubj	5
4	manually	manually	rb+advl	rb	advl	ly							RB	advmod	5
5	went	go		vbmain	vblex	past	simple	active			conditional		VBD	ROOT	5
6	in	in	rb+advl	rb	advl								RB	advmod	5
7	,	,											,	punct	5
8	and	and		cc	phrs								CC	cc	5
9	then	then		rb	link								RB	advmod	10
10	said	say		vbmain	vblex	past	simple	active					VBD	conj	5
11	okay	okay											UH	intj	15
12	,	,											,	punct	15
13	i	i		pro	1st	sg							PRP	nsubj	15
14	'm	be		vbaux									VBP	aux	15
15	looking	look	thatcls+vcomp	vbmain	prepv	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	10
16	at	at	in+advl	in	advl								IN	prep	15
17	the	the		dt	art								DT	det	18
18	likelihood	likelihood		nn		nom							NN	pobj	16
19	of	of	of+npostmod	in	nmod								IN	prep	18
20	infrared	infrared	attr+npremod	jj	attr								JJ	amod	21
21	threat	threat		nn									NN	pobj	19
22	versus	versus	in+npostmod	in	nmod								IN	prep	21
23	radar	radar	nn+npremod	nn			npremod						NN	compound	24
24	threat	threat		nn									NN	pobj	22
25	and	and		cc	phrs								CC	cc	15
26	well	well											UH	intj	38
27	since	since		cs	cs_othr								IN	mark	32
28	the	the		dt	art								DT	det	31
29	,	,											,	punct	31
30	infrared	infrared	attr+npremod	jj	attr								JJ	amod	31
31	threat	threat		nn									NN	nsubj	32
32	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	38
33	more	more	rb+jjrbmod	rb	adjmod								RBR	advmod	34
34	likely	likely		jj	pred								JJ	acomp	32
35	i	i		pro	1st	sg							PRP	nsubj	38
36	'm	be		vbaux									VBP	aux	38
37	just	just		rb	othr								RB	advmod	38
38	gon	go		vbaux									TO	aux	40
39	na	to		vbaux									TO	aux	40
40	ignore	ignore		vbmain	vblex	nonfinite	simple	active					VB	conj	15
41	radar	radar	nn+npremod	nn			npremod						NN	compound	42
42	threats	threat		nn	pl								NNS	dobj	40
43	.	.											.	punct	5

#sentid = 613
0	so	so		rb	link								RB	advmod	2
1	this	this		pro	dem	sg							DT	nsubj	2
2	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	a	a		dt	art								DT	det	6
4	manual	manual	attr+npremod	jj	attr								JJ	amod	6
5	,	,											,	punct	6
6	computation	computation		nn		nom							NN	attr	2
7	that	that		relpro	relpro_that	sg							WDT	nsubj	10
8	s-	s-											XX	punct	10
9	basically	basically	rb+advl	rb	advl	ly							RB	advmod	10
10	throws	throw	finitecls+rel	vbmain	phrsv	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	6
11	out	out		rb	prtcle								RP	prt	10
12	this	this		dt	dt_dem								DT	det	13
13	transition	transition		nn		nom							NN	dobj	10
14	.	.											.	punct	2

#sentid = 614
0	at	at	in+advl	in	advl								IN	prep	4
1	which	which		dt									WDT	det	2
2	case	case		nn									NN	pcomp	0
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	able	able		jj	pred								JJ	acomp	4
6	to	to		to									TO	aux	7
7	develop	develop	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	5
8	a	a		dt	art								DT	det	9
9	plan	plan		nn									NN	dobj	7
10	to	to		to									TO	aux	11
11	handle	handle	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	9
12	,	,											,	punct	11
13	infrared	infrared	attr+npremod	jj	attr								JJ	amod	15
14	missile	missile	nn+npremod	nn			npremod						NN	compound	15
15	threats	threat		nn	pl								NNS	dobj	11
16	and	and		cc	phrs								CC	cc	11
17	,	,											,	punct	11
18	schedule	schedule		vbmain	vblex	nonfinite	simple	active					VB	conj	11
19	those	those		dt	dt_dem								DT	det	20
20	actions	action		nn	pl	nom							NNS	dobj	18
21	.	.											.	punct	4

#sentid = 615
0	however	however		rb	link								RB	advmod	11
1	if	if		cs	cnd								IN	mark	7
2	i-	i-											XX	dep	7
3	a	a		dt	art								DT	det	5
4	radar	radar	nn+npremod	nn			npremod						NN	compound	5
5	threat	threat		nn									NN	nsubj	7
6	then	then		rb	link								RB	advmod	7
7	occurs	occur	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBZ	advcl	11
8	then	then	rb+advl	rb	advl								RB	advmod	7
9	,	,											,	punct	11
10	it	it		pro	3rd	sg							PRP	nsubj	11
11	has	have		vbmain	vblex	pres	simple	active					VBZ	ROOT	11
12	no	no		dt									DT	det	13
13	model	model		nn									NN	dobj	11
14	of	of	of+npostmod	in	nmod								IN	prep	13
15	that	that		pro	dem	sg							DT	pobj	14
16	so	so		cc	cls								CC	cc	11
17	it	it		pro	3rd	sg							PRP	nsubj	18
18	fails	fail		vbmain	vblex	pres	simple	active					VBZ	conj	11
19	.	.											.	punct	18

#sentid = 616
0													_SP	dep	11
1	so	so		rb	link								RB	advmod	11
2	in	in	in+advl	in	advl								IN	prep	11
3	the	the		dt	art								DT	det	6
4	next	next	attr+npremod	jj	attr								JJ	amod	6
5	,	,											,	punct	6
6	generation	generation		nn		nom							NN	pobj	2
7	of	of	of+npostmod	in	nmod								IN	prep	6
8	plan	plan		nn									NN	pobj	7
9	,	,											,	punct	11
10	we	we		pro	1st								PRP	nsubj	11
11	said	say		vbmain	vblex	past	simple	active					VBD	ROOT	11
12	okay	okay											UH	intj	15
13	we	we		pro	1st								PRP	nsubj	15
14	're	be		vbaux									VBP	aux	15
15	gon	go		vbaux									VBG	aux	17
16	na	to		vbaux									VBG	aux	17
17	put	put		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	11
18	this	this		dt	dt_dem								DT	det	25
19	,	,											,	punct	25
20	CIRCA	circa	nn+npremod	nn		proper	npremod						NNP	nmod	25
21	-	-											HYPH	punct	20
22	two	two											CD	nummod	20
23	,	,											,	punct	25
24	stochastic	stochastic	attr+npremod	jj	attr								JJ	amod	25
25	planner	planner		nn		nom							NN	dobj	17
26	in	in	rb+advl	rb	advl								RB	advmod	17
27	and	and		cc	phrs								CC	cc	17
28	see	see		vbmain	vblex	nonfinite	simple	active					VB	conj	17
29	what	what											WP	pobj	33
30	it	it		pro	3rd	sg							PRP	nsubj	31
31	comes	come	thatcls+vcomp	vbmain	phrsv	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	28
32	up	up		rb	prtcle								RP	prt	31
33	with	with	in+advl	in	advl								IN	prep	31
34	,	,											,	punct	17
35	but	but		cc	phrs								CC	cc	17
36	we	we		pro	1st								PRP	nsubj	39
37	're	be		vbaux									VBP	aux	39
38	not	not											RB	neg	39
39	gon	go		vbaux									VBG	aux	41
40	na	to		vbaux									VBG	aux	41
41	use	use		vbmain	vblex	nonfinite	simple	active					VB	conj	17
42	a	a		dt	art								DT	det	44
43	plan	plan	nn+npremod	nn			npremod						NN	compound	44
44	cache	cache		nn									NN	dobj	41
45	we	we		pro	1st								PRP	nsubj	47
46	're	be		vbaux									VBP	aux	47
47	gon	go											TO	parataxis	17
48	na	to		vbaux									TO	aux	49
49	make	make		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	11
50	it	it		pro	3rd	sg							PRP	nsubj	51
51	fit	fit		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	49
52	everything	everything		nn	other	nom							NN	dobj	51
53	that	that		pro	dem	sg							WDT	dobj	56
54	it	it		pro	3rd	sg							PRP	nsubj	56
55	can	can		vbaux	mod	pos							MD	aux	56
56	do	do	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel		VB	relcl	52
57	into	into	in+advl	in	advl								IN	prep	51
58	one	one											CD	nummod	59
59	plan	plan		nn									NN	pobj	57
60	and	and		cc	phrs								CC	cc	51
61	see	see		vbmain	vblex	nonfinite	simple	active					VB	conj	51
62	what	what											WP	nsubj	63
63	happens	happen	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	61
64	.	.											.	punct	11

#sentid = 617
0	so	so		rb	link								RB	advmod	9
1	at	at	in+advl	in	advl								IN	prep	9
2	that	that		dt	dt_dem								DT	det	3
3	point	point		nn									NN	pobj	1
4	,	,											,	punct	9
5	the	the		dt	art								DT	det	8
6	,	,											,	punct	8
7	stochastic	stochastic	attr+npremod	jj	attr								JJ	amod	8
8	planner	planner		nn		nom							NN	nsubj	9
9	decides	decide		vbmain	vblex	pres	simple	active					VBZ	ROOT	9
10	that	that		comp	comp_that								IN	mark	27
11	,	,											,	punct	27
12	instead	instead		rb	othr								RB	advmod	13
13	of	of	in+advl	in	advl								IN	prep	27
14	ignoring	ignore	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	13
15	the	the		dt	art								DT	det	17
16	infrared	infrared	attr+npremod	jj	attr								JJ	amod	17
17	threat	threat		nn									NN	dobj	14
18	,	,											,	punct	20
19	instead	instead		rb	othr								RB	advmod	20
20	of	of	in+advl	in	advl								IN	prep	27
21	ignoring	ignore	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	20
22	the	the		dt	art								DT	det	24
23	radar	radar	nn+npremod	nn			npremod						NN	compound	24
24	threats	threat		nn	pl								NNS	dobj	21
25	it	it		pro	3rd	sg							PRP	nsubj	27
26	's	be		vbaux									VBZ	aux	27
27	going	go	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls	thatcls	vcomp		VBG	ccomp	9
28	to	to		to									TO	aux	29
29	ignore	ignore	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	27
30	the	the		dt	art								DT	det	32
31	infrared	infrared	attr+npremod	jj	attr								JJ	amod	32
32	threats	threat		nn	pl								NNS	dobj	29
33	because	because		cs	cos								IN	mark	35
34	there	there											EX	expl	35
35	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		causative		VBZ	advcl	29
36	a	a		dt	art								DT	det	39
37	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	38
38	low	low	attr+npremod	jj	attr								JJ	amod	39
39	probability	probability		nn		nom							NN	attr	35
40	of	of	of+npostmod	in	nmod								IN	prep	39
41	ever	ever	rb+advl	rb	advl								RB	advmod	42
42	reaching	reach	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	40
43	,	,											,	punct	42
44	a	a		dt	art								DT	det	45
45	state	state		nn		nom							NN	dobj	42
46	,	,											,	punct	45
47	a	a		dt	art								DT	det	51
48	low	low	attr+npremod	jj	attr								JJ	amod	50
49	-	-											HYPH	punct	50
50	altitude	altitude	nn+npremod	nn			npremod						NN	compound	51
51	state	state	appos+npostmod	nn		nom	nappos						NN	appos	45
52	where	where		rb	advl								WRB	advmod	58
53	,	,											,	punct	58
54	the	the		dt	art								DT	det	56
55	infrared	infrared	attr+npremod	jj	attr								JJ	amod	56
56	missiles	missile		nn	pl								NNS	nsubj	58
57	can	can		vbaux	mod	pos							MD	aux	58
58	find	find	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	whcls	rel		VB	relcl	51
59	the	the		dt	art								DT	det	60
60	airplane	airplane		nn									NN	dobj	58
61	,	,											,	punct	58
62	at	at	in+advl	in	advl								IN	prep	66
63	which	which		dt									WDT	det	64
64	case	case		nn									NN	pcomp	62
65	it	it		pro	3rd	sg							PRP	nsubj	66
66	has	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBZ	advcl	58
67	a	a		dt	art								DT	det	69
68	higher	high	attr+npremod	jj	attr								JJR	amod	69
69	probability	probability		nn		nom							NN	dobj	66
70	of	of	of+npostmod	in	nmod								IN	prep	69
71	success	success		nn		nom							NN	pobj	70
72	but	but		cc	cls								CC	cc	66
73	it	it		pro	3rd	sg							PRP	nsubj	75
74	still	still	rb+advl	rb	advl								RB	advmod	75
75	fails	fail		vbmain	vblex	pres	simple	active					VBZ	conj	66
76	if	if		cs	cnd								IN	mark	79
77	those	those		pro	dem	pl							DT	nsubjpass	79
78	are	be		vbaux									VBP	auxpass	79
79	reached	reach	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls		conditional		VBN	advcl	75
80	.	.											.	punct	9

#sentid = 618
0													_SP	dep	10
1	so	so		rb	link								RB	advmod	10
2	,	,											,	punct	10
3	in	in	in+advl	in	advl								IN	prep	10
4	the	the		dt	art								DT	det	6
5	final	final	attr+npremod	jj	attr								JJ	amod	6
6	iteration	iteration		nn		nom							NN	pobj	3
7	_	_											NFP	punct	10
8	oh	oh											UH	intj	10
9	those	those		pro	dem	pl							DT	nsubj	10
10	are	be		vbmain	be	pres	simple	active					VBP	ROOT	10
11	ugly	ugly	attr+npremod	jj	attr								JJ	amod	14
12	,	,											,	punct	14
13	handwritten	handwritten	attr+npremod	jj	attr								JJ	amod	14
14	numbers	number		nn	pl	nom							NNS	attr	10
15	,	,											,	punct	10
16	oh	oh											UH	intj	10
17	well	well											UH	intj	16
18	.	.											.	punct	10

#sentid = 619
0	in	in	in+advl	in	advl								IN	prep	7
1	the	the		dt	art								DT	det	3
2	final	final	attr+npremod	jj	attr								JJ	amod	3
3	iteration	iteration		nn		nom							NN	pobj	0
4	um	um											UH	intj	7
5	,	,											,	punct	7
6	we	we		pro	1st								PRP	nsubj	7
7	put	put		vbmain	vblex	pres	simple	active					VBP	ROOT	7
8	the	the		dt	art								DT	det	10
9	plan	plan	nn+npremod	nn			npremod						NN	compound	10
10	cache	cache		nn									NN	dobj	7
11	back	back	rb+jjrbmod	rb	othr								RB	advmod	12
12	in	in	rb+advl	rb	advl								RB	advmod	7
13	,	,											,	punct	7
14	in	in	in+advl	in	advl								IN	prep	19
15	which	which		dt									WDT	det	16
16	case	case		nn									NN	pcomp	14
17	the	the		dt	art								DT	det	18
18	planner	planner		nn		nom							NN	nsubj	19
19	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBZ	advcl	7
20	able	able		jj	pred								JJ	acomp	19
21	to	to		to									TO	aux	22
22	plan	plan	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	20
23	for	for	in+advl	in	advl								IN	prep	22
24	both	both		dt									DT	det	25
25	sets	set		nn	pl								NNS	pobj	23
26	of	of	of+npostmod	in	nmod								IN	prep	25
27	states	state		nn	pl	nom							NNS	pobj	26
28	by	by	in+advl	in	advl								IN	prep	22
29	putting	put	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	28
30	,	,											,	punct	29
31	the	the		dt	art								DT	det	32
32	response	response		nn									NN	dobj	29
33	for	for	in+npostmod	in	nmod								IN	prep	32
34	the	the		dt	art								DT	det	37
35	,	,											,	punct	37
36	infrared	infrared	nn+npremod	nn			npremod						NN	compound	37
37	threat	threat		nn									NN	pobj	33
38	into	into	in+advl	in	advl								IN	prep	29
39	the	the		dt	art								DT	det	41
40	contingency	contingency	nn+npremod	nn		nom	npremod						NN	compound	41
41	plan	plan		nn									NN	pobj	38
42	,	,											,	punct	29
43	into	into	in+advl	in	advl								IN	prep	29
44	a	a		dt	art								DT	det	46
45	contingency	contingency	nn+npremod	nn		nom	npremod						NN	compound	46
46	plan	plan		nn									NN	pobj	43
47	which	which		relpro	relpro_wh								WDT	nsubjpass	49
48	is	be		vbaux									VBZ	auxpass	49
49	stored	store	finitecls+rel	vbmain	vblex	pres	simple	pasv_agls	nmod_cls	whcls	rel		VBN	relcl	46
50	and	and		cc	phrs								CC	cc	49
51	retrieved	retrieve		vbmain	vblex	nonfinite	simple	active		edcls			VBN	conj	49
52	when	when	rb+jjrbmod	rb	othr								WRB	advmod	53
53	necessary	necessary											JJ	advcl	51
54	.	.											.	punct	7

#sentid = 620
0	so	so		rb	link								RB	advmod	2
1	this	this		pro	dem	sg							DT	nsubj	2
2	shows	show		vbmain	vblex	pres	simple	active					VBZ	ROOT	2
3	the	the		dt	art								DT	det	4
4	probabilities	probability		nn	pl	nom							NNS	dobj	2
5	for	for	in+npostmod	in	nmod								IN	prep	4
6	the	the		dt	art								DT	det	8
7	various	various	attr+npremod	jj	attr								JJ	amod	8
8	states	state		nn	pl	nom							NNS	pobj	5
9	,	,											,	punct	2
10	um	um											UH	intj	2
11	to	to		to									TO	aux	12
12	illustrate	illustrate	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	2
13	that	that		comp	comp_that								IN	mark	24
14	,	,											,	punct	24
15	the	the		dt	art								DT	det	16
16	reason	reason		nn									NN	nsubj	24
17	the	the		dt	art								DT	det	19
18	infrared	infrared	nn+npremod	nn			npremod						NN	compound	19
19	threat	threat		nn									NN	nsubj	20
20	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	16
21	,	,											,	punct	20
22	less	less	rb+jjrbmod	rb	adjmod								RBR	advmod	23
23	likely	likely		jj	pred								JJ	acomp	20
24	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	12
25	because	because		cs	cos								IN	mark	29
26	,	,											,	punct	29
27	um	um											UH	intj	29
28	there	there											EX	expl	29
29	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		causative		VBZ	advcl	24
30	a	a		dt	art								DT	det	32
31	low	low	attr+npremod	jj	attr								JJ	amod	32
32	probability	probability		nn		nom							NN	attr	29
33	of	of	of+npostmod	in	nmod								IN	prep	32
34	going	go	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	33
35	into	into	in+advl	in	advl								IN	prep	34
36	this	this		dt	dt_dem								DT	det	37
37	state	state		nn		nom							NN	pobj	35
38	.	.											.	punct	2

#sentid = 621
0													_SP	dep	36
1	so	so		rb	link								RB	advmod	36
2	to	to		to									TO	aux	3
3	summarize	summarize	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	36
4	the	the		dt	art								DT	det	7
5	trade	trade	nn+npremod	nn			npremod						NN	compound	7
6	-	-											HYPH	punct	7
7	offs	off		nn	pl								NNS	dobj	3
8	that	that		relpro	relpro_that	sg							WDT	nsubj	10
9	have	have		vbaux									VBP	aux	10
10	happened	happen	finitecls+rel	vbmain	vblex	pres	perf	active	nmod_cls	thatcls	rel		VBN	relcl	7
11	,	,											,	punct	36
12	um	um											UH	intj	36
13	CIRCA	circa		nn		proper							NNP	nsubj	36
14	alone	alone		rb	othr								RB	advmod	13
15	with	with	in+npostmod	in	nmod								IN	prep	13
16	someone	someone		nn	other	sg							NN	nsubj	18
17	manually	manually	rb+advl	rb	advl	ly							RB	advmod	18
18	saying	say	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	15
19	,	,											,	punct	18
20	okay	okay											UH	intj	23
21	i	i		pro	1st	sg							PRP	nsubj	23
22	'm	be		vbaux									VBP	aux	23
23	gon	go	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	18
24	na	to		vbaux									VBG	aux	25
25	remove	remove		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	18
26	this	this		dt	dt_dem								DT	det	32
27	,	,											,	punct	32
28	um	um											UH	intj	32
29	radar	radar	nn+npremod	nn			npremod						NN	compound	31
30	-	-											HYPH	punct	31
31	threat	threat	nn+npremod	nn			npremod						NN	compound	32
32	transition	transition		nn		nom							NN	dobj	25
33	from	from	in+advl	in	advl								IN	prep	25
34	consideration	consideration		nn		nom							NN	pobj	33
35	,	,											,	punct	36
36	has	have		vbmain	vblex	pres	simple	active					VBZ	ROOT	36
37	a	a		dt	art								DT	det	40
38	twenty	twenty											CD	nummod	39
39	percent	percent	nn+npremod	nn		nom	npremod						NN	compound	40
40	chance	chance		nn		nom							NN	dobj	36
41	of	of	of+npostmod	in	nmod								IN	prep	40
42	succeeding	succeed	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	41
43	.	.											.	punct	36

#sentid = 622
0	basically	basically	rb+advl	rb	advl	ly							RB	advmod	5
1	,	,											,	punct	5
2	because	because		cs	cos								IN	mark	5
3	,	,											,	punct	5
4	there	there											EX	expl	5
5	is	be		vbmain	be	pres	simple	active			causative		VBZ	ROOT	5
6	an	an		dt									DT	det	9
7	eighty	eighty											CD	nummod	8
8	percent	percent	nn+npremod	nn		nom	npremod						NN	compound	9
9	chance	chance		nn		nom							NN	attr	5
10	that	that		relpro	relpro_that								IN	mark	15
11	this	this		dt	dt_dem								DT	det	13
12	radar	radar	nn+npremod	nn			npremod						NN	compound	13
13	threat	threat		nn									NN	nsubj	15
14	will	will		vbaux	mod	prd							MD	aux	15
15	happen	happen	thatcls+ncomp	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	ncomp		VB	acl	9
16	in	in	in+advl	in	advl								IN	prep	22
17	which	which		dt									WDT	det	18
18	case	case		nn									NN	pcomp	16
19	,	,											,	punct	22
20	it	it		pro	3rd	sg							PRP	nsubj	22
21	will	will		vbaux	mod	prd							MD	aux	22
22	fail	fail	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	9
23	because	because		cs	cos								IN	mark	27
24	it	it		pro	3rd	sg							PRP	nsubj	27
25	wo	will		vbaux	mod								MD	aux	27
26	n't	not											RB	neg	27
27	do	do	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		causative		VB	advcl	22
28	anything	anything		nn	other	nom							NN	dobj	27
29	...	...											:	punct	5

#sentid = 623
0	with	with	in+advl	in	advl								IN	prep	14
1	a	a		dt	art								DT	det	3
2	single	single	attr+npremod	jj	attr								JJ	amod	3
3	plan	plan		nn									NN	pobj	0
4	,	,											,	punct	14
5	CIRCA	circa		nn		proper							NNP	nsubj	8
6	-	-											HYPH	punct	5
7	two	two											CD	nummod	5
8	has	have		vbaux									VBZ	aux	14
9	,	,											,	punct	8
10	a	a		dt	art								DT	det	11
11	chance	chance		nn		nom							NN	dobj	8
12	,	,											,	punct	8
13	has	have		vbaux									VBZ	aux	14
14	improved	improve		vbmain	vblex	pres	perf	active					VBN	ROOT	14
15	the	the		dt	art								DT	det	16
16	chance	chance		nn		nom							NN	dobj	14
17	uh	uh											UH	intj	16
18	of	of	of+npostmod	in	nmod								IN	prep	16
19	succeeding	succeed	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	18
20	to	to	in+advl	in	advl								IN	prep	14
21	seventy	seventy											CD	compound	23
22	-	-											HYPH	punct	23
23	six	six											CD	nummod	24
24	percent	percent		nn		nom							NN	pobj	20
25	,	,											,	punct	14
26	because	because		cs	cos								IN	mark	38
27													_SP	dep	26
28	this	this											DT	pcomp	26
29													_SP	dep	38
30	um	um											UH	intj	38
31	how	how		rb	advl								WRB	advmod	38
32	did	do		vbmain	vblex	past	simple	active					VBD	dep	38
33	the	the											DT	dep	38
34	,	,											,	punct	38
35	how	how		rb	advl								WRB	advmod	38
36	did	do		vbaux									VBD	aux	38
37	you	you		pro	2nd	sg							PRP	nsubj	38
38	arrive	arrive	finitecls+advl	vbmain	prepv	past	simple	active	advlcls	whcls	causative		VB	advcl	14
39	at	at	in+advl	in	advl								IN	prep	38
40	these	these		dt	dt_dem								DT	det	41
41	numbers	number		nn	pl	nom							NNS	pobj	39
42	?	?											.	punct	38

#sentid = 624
0													_SP	dep	0
1	uh	uh											UH	intj	0
2	basically	basically		rb	othr	ly							RB	advmod	3
3	by	by		in	in_othr								IN	prep	0
4	looking	look	ingcls+incomp	vbmain	prepv	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	3
5	at	at	in+advl	in	advl								IN	prep	4
6	the	the		dt	art								DT	det	8
7	state	state	nn+npremod	nn		nom	npremod						NN	compound	8
8	diagram	diagram		nn									NN	pobj	5
9	and	and		cc	phrs								CC	cc	4
10	looking	look		vbmain	prepv	nonfinite	simple	active		ingcls			VBG	conj	4
11	at	at	in+advl	in	advl								IN	prep	10
12	the	the		dt	art								DT	det	13
13	probability	probability		nn		nom							NN	pobj	11
14	that	that		relpro	relpro_that								IN	mark	17
15	it	it		pro	3rd	sg							PRP	nsubj	17
16	'll	will		vbaux	mod								MD	aux	17
17	enter	enter	thatcls+ncomp	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	ncomp		VB	acl	13
18	,	,											,	punct	17
19	into	into	in+advl	in	advl								IN	prep	17
20	one	one		pro	other	pl							CD	pobj	19
21	of	of		in	in_othr								IN	prep	20
22	these	these		dt	dt_dem								DT	det	23
23	states	state		nn	pl	nom							NNS	pobj	21
24	that	that		relpro	relpro_that	sg							WDT	nsubj	25
25	has	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	20
26	,	,											,	punct	25
27	one	one		pro	other	pl							CD	dobj	25
28	of	of		in	in_othr								IN	prep	27
29	the	the		dt	art								DT	det	30
30	threats	threat		nn	pl								NNS	pobj	28
31	that	that		pro	dem	sg							WDT	pobj	36
32	you	you		pro	2nd	sg							PRP	nsubj	35
33	would	would		vbaux	mod	prd							MD	aux	35
34	n't	not											RB	neg	35
35	respond	respond	finitecls+rel	vbmain	prepv	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	30
36	to	to	in+advl	in	advl								IN	prep	35
37	...	...											:	punct	0

#sentid = 625
0													_SP	dep	4
1	so	so		rb	link								RB	advmod	4
2	,	,											,	punct	4
3	this	this		pro	dem	sg							DT	nsubj	4
4	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	again	again	rb+advl	rb	advl								RB	advmod	4
6	,	,											,	punct	4
7	thi-	thi-											XX	dep	9
8	this	this		pro	dem	sg							DT	nsubj	9
9	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	14
10	not	not											RB	neg	9
11	an	an		dt									DT	det	12
12	approximation	approximation		nn		nom							NN	attr	9
13	it	it		pro	3rd	sg							PRP	nsubj	14
14	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	22
15	a	a		dt	art								DT	det	16
16	s-	s-											XX	attr	14
17	this	this		pro	dem	sg							DT	nsubj	18
18	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	22
19	the	the											DT	dep	22
20	,	,											,	punct	22
21	this	this		pro	dem	sg							DT	nsubj	22
22	is	be		vbmain	be	pres	simple	active					VBZ	parataxis	4
23	a	a		dt	art								DT	det	24
24	fact	fact		nn									NN	attr	22
25													_SP	dep	22
26	about	about	in+advl	in	advl								IN	prep	22
27	the	the		dt	art								DT	det	29
28	(	(											-LRB-	punct	29
29	statistics	statistic		nn	pl								NNS	pobj	26
30	.	.											-RRB-	punct	22
31	)	)											-RRB-	punct	4

#sentid = 626
0													_SP	dep	4
1	well	well											UH	intj	4
2	,	,											,	punct	4
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	uh	uh											UH	intj	4
6	well	well											UH	intj	8
7	it	it		pro	3rd	sg							PRP	nsubj	8
8	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	4
9	an	an		dt									DT	det	10
10	approximation	approximation		nn		nom							NN	attr	8
11	,	,											,	punct	8
12	given	give	edcls+advl	vbmain	advl	nonfinite	simple	active		edcls			VBN	prep	8
13	that	that											IN	mark	17
14	our	our		dt	poss								PRP$	poss	16
15	stochastic	stochastic	attr+npremod	jj	attr								JJ	amod	16
16	model	model		nn									NN	nsubj	17
17	approximates	approximate	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBZ	pcomp	12
18	the	the		dt	art								DT	det	20
19	real	real	attr+npremod	jj	attr								JJ	amod	20
20	world	world		nn									NN	dobj	17
21	,	,											,	punct	4
22	but	but		cc	cls								CC	cc	4
23	it	it		pro	3rd	sg							PRP	nsubj	24
24	's	be		vbmain	be	pres	simple	active					VBZ	conj	4
25	what	what											WP	dative	30
26	our	our		dt	poss								PRP$	poss	28
27	stochastic	stochastic	attr+npremod	jj	attr								JJ	amod	28
28	model	model		nn									NN	nsubj	30
29	is	be		vbaux									VBZ	aux	30
30	telling	tell	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	24
31	us	we		pro	pl								PRP	dobj	30
32	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	30
33	the	the		dt	art								DT	det	34
34	guarantee	guarantee		nn		nom							NN	attr	32
35	,	,											,	punct	30
36	so	so	rb+advl	rb	advl								RB	advmod	30
37	.	.											.	punct	24

#sentid = 627
0	if	if		cs	cnd								IN	mark	5
1	,	,											,	punct	5
2	our	our		dt	poss								PRP$	poss	4
3	stochastic	stochastic	attr+npremod	jj	attr								JJ	amod	4
4	model	model		nn									NN	nsubj	5
5	were	be	finitecls+advl	vbmain	be	past	simple	active	advlcls		conditional		VBD	advcl	12
6	,	,											,	punct	5
7	completely	completely	rb+jjrbmod	rb	adjmod	ly							RB	advmod	8
8	accurate	accurate		jj	pred								JJ	acomp	5
9	then	then		rb	link								RB	advmod	12
10	that	that		pro	dem	sg							DT	nsubj	12
11	would	would		vbaux	mod	prd							MD	aux	12
12	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	12
13	the	the		dt	art								DT	det	16
14	statistical	statistical	attr+npremod	jj	attr								JJ	amod	16
15	,	,											,	punct	16
16	chance	chance		nn		nom							NN	attr	12
17	.	.											.	punct	12

#sentid = 628
0	so	so		rb	link								RB	advmod	16
1	,	,											,	punct	16
2	and	and		cc	cls								CC	cc	16
3	then	then		rb	link								RB	advmod	16
4	with	with	in+advl	in	advl								IN	prep	16
5	the	the		dt	art								DT	det	7
6	plan	plan	nn+npremod	nn			npremod						NN	compound	7
7	cache	cache		nn									NN	pobj	4
8	since	since		cs	cs_othr								IN	mark	12
9	we	we		pro	1st								PRP	nsubj	12
10	're	be		vbaux									VBP	aux	12
11	not	not											RB	neg	12
12	ignoring	ignore	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		other_advl		VBG	advcl	16
13	anything	anything		nn	other	nom							NN	dobj	12
14	we	we		pro	1st								PRP	nsubj	16
15	still	still	rb+advl	rb	advl								RB	advmod	16
16	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	16
17	a	a		dt	art								DT	det	20
18	hundred	hundred											CD	nummod	19
19	percent	percent	nn+npremod	nn		nom	npremod						NN	compound	20
20	guarantee	guarantee		nn		nom							NN	dobj	16
21	,	,											,	punct	16
22	and	and		cc	cls								CC	cc	16
23	that	that		pro	dem	sg							DT	nsubj	24
24	's	be		vbmain	be	pres	simple	active					VBZ	conj	16
25	not	not											RB	neg	24
26	approximate	approximate		jj	pred								JJ	acomp	24
27	because	because		cs	cos								IN	mark	30
28	we	we		pro	1st								PRP	nsubj	30
29	are	be		vbaux									VBP	aux	30
30	reacting	react	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		causative		VBG	advcl	24
31	to	to	in+advl	in	advl								IN	prep	30
32	everything	everything		nn	other	nom							NN	pobj	31
33	...	...											:	punct	24

#sentid = 629
0													_SP	dep	18
1	so	so		rb	link								RB	advmod	8
2	actually	actually	rb+advl	rb	advl	ly							RB	advmod	8
3	,	,											,	punct	8
4	why	why		rb	advl								WRB	advmod	8
5	do	do		vbaux									VBP	aux	8
6	you	you		pro	2nd	sg							PRP	nsubj	8
7	even	even	rb+advl	rb	advl		splaux						RB	advmod	8
8	think	think		vbmain	in_othr	pres	simple	active					VB	prep	0
9	of	of	in+advl	in	advl								IN	prep	8
10	it	it		pro	3rd	sg							PRP	pobj	9
11	as	as	in+advl	in	advl								IN	prep	8
12	a	a		dt	art								DT	det	14
13	plan	plan	nn+npremod	nn			npremod						NN	compound	14
14	cache	cache		nn									NN	pobj	11
15	i	i		pro	1st	sg							PRP	nsubj	16
16	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	18
17	it	it		pro	3rd	sg							PRP	nsubj	18
18	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	18
19	really	really	rb+advl	rb	advl	ly							RB	advmod	18
20	just	just	rb+advl	rb	advl								RB	advmod	18
21	,	,											,	punct	18
22	uh	uh											UH	intj	26
23	the	the		dt	art								DT	det	25
24	overall	overall	attr+npremod	jj	attr								JJ	amod	25
25	plan	plan		nn									NN	nsubj	26
26	has	have		vbmain	vblex	pres	simple	active					VBZ	meta	18
27													_SP	dep	26
28	yes	yes											UH	intj	26
29	.	.											.	punct	18

#sentid = 630
0													_SP	dep	7
1	(	(											-LRB-	punct	7
2	multiple	multiple	attr+npremod	jj	attr								JJ	amod	7
3	)	)											-RRB-	punct	7
4	you	you		pro	2nd	sg							PRP	nsubj	5
5	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	7
6	switches	switch	nn+npremod	nn	pl		npremod						NNS	compound	7
7	modes	mode		nn	pl								NNS	ROOT	7
8	and	and		cc	phrs								CC	cc	7
9													_SP	dep	25
10	um	um											UH	intj	25
11	,	,											,	punct	10
12													_SP	dep	25
13	you	you		pro	2nd	sg							PRP	nsubj	14
14	c-	c-											XX	parataxis	25
15	you	you		pro	2nd	sg							PRP	nsubj	17
16	can	can		vbaux	mod	pos							MD	aux	17
17	think	think		vbmain	prepv	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	25
18	of	of	in+advl	in	advl								IN	prep	17
19	it	it		pro	3rd	sg							PRP	pobj	18
20	like	like	in+advl	in	advl								IN	prep	17
21	that	that		pro	dem	sg							DT	pobj	20
22	um	um											UH	intj	25
23	,	,											,	punct	25
24	we	we		pro	1st								PRP	nsubj	25
25	think	think		vbmain	prepv	pres	simple	active					VBP	conj	7
26	of	of	in+advl	in	advl								IN	prep	25
27	it	it		pro	3rd	sg							PRP	pobj	26
28	as	as	in+advl	in	advl								IN	prep	25
29	a	a		dt	art								DT	det	30
30	cache	cache		nn									NN	pobj	28
31	because	because		cs	cos								IN	mark	38
32	we	we		pro	1st								PRP	nsubj	38
33	're	be		vbaux									VBP	aux	38
34	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	38
35	,	,											,	punct	38
36	um	um											UH	intj	38
37	,	,											,	punct	38
38	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VB	advcl	25
39	this	this		dt	dt_dem								DT	det	40
40	definition	definition		nn		nom							NN	dobj	38
41	of	of	of+npostmod	in	nmod								IN	prep	40
42	a	a		dt	art								DT	det	44
43	control	control	nn+npremod	nn			npremod						NN	compound	44
44	plan	plan		nn									NN	pobj	41
45	that	that		relpro	relpro_that	sg							WDT	nsubj	46
46	includes	include	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	44
47	a	a		dt	art								DT	det	48
48	schedule	schedule		nn									NN	dobj	46
49	and	and		cc	cls								CC	cc	46
50	you	you		pro	2nd	sg							PRP	nsubj	51
51	have	have		vbmain	vblex	pres	simple	active					VBP	conj	46
52	to	to		to									TO	aux	54
53	le-	le-											XX	dep	54
54	have	have		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	51
55	to	to		to									TO	aux	57
56	basically	basically	rb+advl	rb	advl	ly	splaux						RB	advmod	57
57	throw	throw		vbmain	phrsv	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	54
58	out	out		rb	prtcle								RP	prt	57
59	the	the		dt	art								DT	det	61
60	old	old	attr+npremod	jj	attr								JJ	amod	61
61	schedule	schedule		nn									NN	dobj	57
62	and	and		cc	phrs								CC	cc	57
63	put	put		vbmain	phrsv	nonfinite	simple	active					VB	conj	57
64	in	in		rb	prtcle								RP	prt	63
65	a	a		dt	art								DT	det	68
66	totally	totally	rb+jjrbmod	rb	adjmod	ly							RB	advmod	67
67	new	new	attr+npremod	jj	attr								JJ	amod	68
68	one	one		nn	other	pl							NN	dobj	63

#sentid = 631
0	.	.											.	ROOT	0

#sentid = 632
0													_SP	dep	10
1	right	right											UH	intj	10
2	but	but		cc	phrs								CC	cc	10
3	that	that											IN	mark	10
4	,	,											,	punct	10
5	that	that		dt	dt_dem								DT	det	6
6	switch	switch		nn									NN	nsubjpass	10
7	is	be		vbaux									VBZ	auxpass	10
8	actually	actually	rb+advl	rb	advl	ly							RB	advmod	10
9	,	,											,	punct	10
10	specified	specify		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	10
11	in	in	in+advl	in	advl								IN	prep	10
12	the	the		dt	art								DT	det	13
13	plan	plan		nn									NN	pobj	11
14	actually	actually	rb+advl	rb	advl	ly							RB	advmod	10
15	,	,											,	punct	10
16													_SP	dep	10
17	yes	yes											UH	intj	10
18	.	.											.	punct	10

#sentid = 633
0													_SP	dep	0
1	pretty	pretty	rb+jjrbmod	rb	othr								RB	advmod	2
2	directly	directly		rb	othr	ly							RB	advmod	0
3	as	as		in	in_othr								IN	prep	2
4													_SP	dep	3
5	mhm	mhm											UH	intj	3
6	.	.											.	punct	2

#sentid = 634
0	however	however		rb	link								RB	advmod	3
1	you	you		pro	2nd	sg							PRP	nsubj	3
2	could	could		vbaux	mod	pos							MD	aux	3
3	use	use		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	3
4	,	,											,	punct	3
5	the	the		dt	art								DT	det	8
6	same	same	attr+npremod	jj	attr								JJ	amod	8
7	contingency	contingency	nn+npremod	nn		nom	npremod						NN	compound	8
8	plans	plan		nn	pl								NNS	dobj	3
9	for	for	in+npostmod	in	nmod								IN	prep	8
10	multiple	multiple	attr+npremod	jj	attr								JJ	amod	13
11	,	,											,	punct	13
12	nominal	nominal	attr+npremod	jj	attr								JJ	amod	13
13	plans	plan		nn	pl								NNS	pobj	9
14	.	.											.	punct	3

#sentid = 635
0	which	which											WDT	nsubj	2
1	would	would		vbaux	mod	prd							MD	aux	2
2	mean	mean		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	2
3	that	that		comp	comp_that								IN	mark	8
4	you	you		pro	2nd	sg							PRP	nsubj	8
5	would	would		vbaux	mod	prd							MD	aux	8
6	be	be		vbaux									VB	aux	8
7	effectively	effectively	rb+advl	rb	advl	ly	splaux						RB	advmod	8
8	having	have	thatcls+vcomp	vbmain	vblex	vp_w_modal	prog	active	compcls	thatcls	vcomp		VBG	ccomp	2
9	one	one											CD	nummod	11
10	overall	overall	attr+npremod	jj	attr								JJ	amod	11
11	plan	plan		nn									NN	dobj	8
12	for	for	in+npostmod	in	nmod								IN	prep	11
13	your	your		dt	poss								PRP$	poss	15
14	whole	whole	attr+npremod	jj	attr								JJ	amod	15
15	system	system		nn									NN	pobj	12
16	if	if		cs	cnd								IN	mark	18
17	you	you		pro	2nd	sg							PRP	nsubj	18
18	wanted	want	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	8
19	to	to		to									TO	aux	20
20	think	think		vbmain	prepv	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	18
21	of	of	in+advl	in	advl								IN	prep	20
22	it	it		pro	3rd	sg							PRP	pobj	21
23	that	that		dt	dt_dem								DT	det	24
24	way	way		nn									NN	npadvmod	20
25	.	.											.	punct	2

#sentid = 636
0	i	i		pro	1st	sg							PRP	nsubj	1
1	mean	mean		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	a-	a-											XX	dep	1
3	at	at	in+advl	in	advl								IN	prep	1
4	this	this		dt	dt_dem								DT	det	5
5	point	point		nn									NN	pobj	3
6	when	when		rb	advl								WRB	advmod	8
7	we	we		pro	1st								PRP	nsubj	8
8	get	get	finitecls+rel	vbmain	prepv	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	5
9	into	into	in+advl	in	advl								IN	prep	8
10	terminology	terminology		nn									NN	pobj	9
11	which	which		relpro	relpro_wh								WDT	nsubj	14
12	would	would		vbaux	mod	prd							MD	aux	14
13	be	be		vbaux									VB	aux	14
14	saying	say	finitecls+rel	vbmain	vblex	vp_w_modal	prog	active	nmod_cls	whcls	rel		VBG	relcl	10
15	that	that		comp	comp_that								IN	mark	23
16	like	like											UH	intj	23
17	,	,											,	punct	23
18	P	p		nn		proper	npremod						NNP	compound	22
19	-	-											HYPH	punct	22
20	R	r		nn		proper	npremod						NNP	compound	22
21	-	-											HYPH	punct	22
22	S	s		nn		proper							NNP	nsubj	23
23	has	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	14
24	one	one											CD	nummod	25
25	plan	plan		nn									NN	dobj	23
26	for	for	in+npostmod	in	nmod								IN	prep	25
27	the	the		dt	art								DT	det	29
28	entire	entire	attr+npremod	jj	attr								JJ	amod	29
29	system	system		nn									NN	pobj	26
30	,	,											,	punct	23
31	or	or		cc	cls								CC	cc	23
32	,	,											,	punct	34
33	WRAPS	wraps		nn		proper							NNP	nsubj	34
34	has	have		vbmain	vblex	pres	simple	active					VBZ	conj	23
35	one	one											CD	nummod	36
36	plan	plan		nn									NN	dobj	34
37	or	or		cc	cls								CC	cc	34
38	,	,											,	punct	34
39	however	however		rb	link								WRB	advmod	43
40	you	you		pro	2nd	sg							PRP	nsubj	41
41	want	want		vbmain	vblex	pres	simple	active					VBP	conj	34
42	to	to		to									TO	aux	43
43	think	think		vbmain	prepv	nonfinite	simple	active	compcls	whcls	vcomp		VB	xcomp	41
44	of	of	in+advl	in	advl								IN	prep	43
45	it	it		pro	3rd	sg							PRP	pobj	44
46	.	.											.	punct	1

#sentid = 637
0	e-	e-											XX	dep	17
1	effectively	effectively	rb+advl	rb	advl	ly							RB	advmod	17
2	yes	yes											UH	intj	17
3	,	,											,	punct	17
4	if	if		cs	cnd								IN	mark	6
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	think	think	finitecls+advl	vbmain	prepv	pres	simple	active	advlcls		conditional		VBP	advcl	17
7	of	of	in+advl	in	advl								IN	prep	6
8	the	the		dt	art								DT	det	10
9	whole	whole	attr+npremod	jj	attr								JJ	amod	10
10	system	system		nn									NN	pobj	7
11	as	as	in+advl	in	advl								IN	prep	6
12	using	use	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	11
13	one	one											CD	nummod	14
14	plan	plan		nn									NN	dobj	12
15	then	then		rb	link								RB	advmod	17
16	that	that		pro	dem	sg							DT	nsubj	17
17	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	17
18	absolutely	absolutely	rb+jjrbmod	rb	adjmod	ly							RB	advmod	19
19	correct	correct		jj	pred								JJ	acomp	17
20	.	.											.	punct	17

#sentid = 638
0	but	but		cc	cls								CC	cc	6
1	,	,											,	punct	6
2	in	in	in+advl	in	advl								IN	prep	6
3	our	our		dt	poss								PRP$	poss	4
4	terminology	terminology		nn									NN	pobj	2
5	we	we		pro	1st								PRP	nsubj	6
6	think	think		vbmain	prepv	pres	simple	active					VBP	ROOT	6
7	of	of	in+advl	in	advl								IN	prep	6
8	whenever	whenever		rb	advl								WRB	advmod	10
9	we	we		pro	1st								PRP	nsubj	10
10	switch	switch	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	16
11	schedules	schedule		nn	pl								NNS	dobj	10
12	,	,											,	punct	16
13	that	that		cs	cs_othr								IN	mark	16
14	we	we		pro	1st								PRP	nsubj	16
15	're	be		vbaux									VBP	aux	16
16	switching	switch	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls				VBG	advcl	6
17	to	to	in+advl	in	advl								IN	prep	16
18	a	a		dt	art								DT	det	20
19	new	new	attr+npremod	jj	attr								JJ	amod	20
20	plan	plan		nn									NN	pobj	17
21	.	.											.	punct	6

#sentid = 639
0	and	and		cc	cls								CC	cc	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	not	not											RB	neg	2
4	just	just		rb	othr								RB	advmod	5
5	schedules	schedule		nn	pl								NNS	attr	2
6	we	we		pro	1st								PRP	nsubj	8
7	're	be		vbaux									VBP	aux	8
8	switching	switch	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel	reldel	VBG	relcl	5
9	,	,											,	punct	5
10	a	a		dt	art								DT	det	11
11	set	set	appos+npostmod	nn			nappos						NN	appos	5
12	of	of	of+npostmod	in	nmod								IN	prep	11
13	actions	action		nn	pl	nom							NNS	pobj	12
14	that	that		relpro	relpro_that	sg							WDT	nsubjpass	16
15	get	get		vbaux									VBP	auxpass	16
16	done	do	finitecls+rel	vbmain	vblex	pres	simple	pasv_agls	nmod_cls	thatcls	rel		VBN	relcl	11
17	also	also	rb+advl	rb	advl								RB	advmod	16
18	.	.											.	punct	2

#sentid = 640
0													_SP	dep	7
1	so	so		rb	link								RB	advmod	7
2	briefly	briefly	rb+advl	rb	advl	ly							RB	advmod	7
3	,	,											,	punct	7
4	i	i		pro	1st	sg							PRP	nsubj	7
5	've	've		vbaux									VBP	aux	7
6	been	be		vbaux									VBN	aux	7
7	spending	spend		vbmain	vblex	pres	prog	active					VBG	ROOT	7
8	a	a		dt	art								DT	det	9
9	lot	lot		nn									NN	dobj	7
10	of	of	of+npostmod	in	nmod								IN	prep	9
11	time	time		nn									NN	pobj	10
12	working	work	ingcls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	7
13	on	on	in+advl	in	advl								IN	prep	12
14	,	,											,	punct	13
15	the	the		dt	art								DT	det	22
16	University	university	nn+npremod	nn		proper	npremod						NNP	nmod	22
17	of	of	of+npostmod	in	nmod								IN	prep	16
18	Michigan	michigan		nn		proper							NNP	pobj	17
19	un-	un-	attr+npremod	jj	attr								JJ	amod	22
20	uninhabited	uninhabited	attr+npremod	jj	attr								JJ	amod	22
21	aerial	aerial	attr+npremod	jj	attr								JJ	amod	22
22	vehicle	vehicle		nn									NN	pobj	13
23	,	,											,	punct	22
24	which	which											WDT	dep	29
25	the	the		dt	art								DT	det	26
26	purpose	purpose		nn									NN	nsubj	29
27	of	of	of+npostmod	in	nmod								IN	prep	26
28	it	it		pro	3rd	sg							PRP	pobj	27
29	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls		rel		VBZ	relcl	22
30	basically	basically	rb+advl	rb	advl	ly							RB	advmod	29
31	to	to		to									TO	aux	33
32	,	,											,	punct	33
33	combine	combine	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	29
34	a	a		dt	art								DT	det	35
35	lot	lot		nn									NN	dobj	33
36	of	of	of+npostmod	in	nmod								IN	prep	35
37	different	different	attr+npremod	jj	attr								JJ	amod	38
38	technologies	technology		nn	pl								NNS	pobj	36
39	,	,											,	punct	38
40	for	for	in+npostmod	in	nmod								IN	prep	38
41	online	online	attr+npremod	jj	attr								JJ	amod	42
42	identification	identification		nn		nom							NN	pobj	40
43	,	,											,	punct	42
44	fault	fault	nn+npremod	nn			npremod						NN	compound	45
45	detection	detection	nn+npremod	nn		nom	npremod						NN	compound	47
46	isolation	isolation	nn+npremod	nn		nom	npremod						NN	compound	47
47	recovery	recovery	appos+npostmod	nn		nom	nappos						NN	appos	42
48	,	,											,	punct	33
49	and	and		cc	cls								CC	cc	33
50	we	we		pro	1st								PRP	nsubj	52
51	can	can		vbaux	mod	pos							MD	aux	52
52	figure	figure		vbmain	vblex	vp_w_modal	simple	active					VB	conj	33
53	a	a		dt	art								DT	det	56
54	little	little	attr+npremod	jj	attr								JJ	amod	56
55	flight	flight	nn+npremod	nn			npremod						NN	compound	56
56	control	control		nn									NN	dobj	52
57	to	to		to									TO	aux	60
58	,	,											,	punct	60
59	fully	fully	rb+advl	rb	advl	ly	splaux						RB	advmod	60
60	automate	automate	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	56
61	the	the		dt	art								DT	det	62
62	airplane	airplane		nn									NN	dobj	60
63	.	.											.	punct	7

#sentid = 641
0	CIRCA	circa	s+gen	dt	poss	proper	sgen						NNP	poss	2
1	's	's											POS	case	0
2	role	role		nn									NN	nsubj	7
3	in	in	in+npostmod	in	nmod								IN	prep	2
4	this	this		pro	dem	sg							DT	pobj	3
5	,	,											,	punct	7
6	um	um											UH	intj	7
7	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	7
8	to	to		to									TO	aux	9
9	be	be	tocls+vcomp	vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	7
10	for	for	in+advl	in	advl								IN	prep	9
11	,	,											,	punct	10
12	mission	mission	nn+npremod	nn			npremod						NN	compound	13
13	planning	planning		nn		nom							NN	pobj	10
14	and	and		cc	phrs								CC	cc	13
15	fault	fault	nn+npremod	nn			npremod						NN	compound	16
16	recovery	recovery		nn		nom							NN	conj	13
17	...	...											:	punct	7

#sentid = 642
0	so	so		rb	link								CC	advmod	3
1	,	,											,	punct	3
2	here	here	rb+advl	rb	advl								RB	advmod	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	a	a		dt	art								DT	det	5
5	picture	picture		nn		nom							NN	nsubj	3
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	the	the		dt	art								DT	det	9
8	airplane	airplane	nn+npremod	nn			npremod						NN	compound	9
9	note	note		nn									NN	pobj	6
10	that	that		relpro	relpro_that								IN	mark	12
11	it	it		pro	3rd	sg							PRP	nsubj	12
12	's	be	thatcls+ncomp	vbmain	be	pres	simple	active	nmod_cls	thatcls	ncomp		VBZ	acl	9
13	not	not											RB	neg	12
14	this	this		dt	dt_dem								DT	det	15
15	airplane	airplane		nn									NN	attr	12
16	so	so		cc	cls								CC	cc	12
17	it	it		pro	3rd	sg							PRP	nsubj	18
18	's	be		vbmain	be	pres	simple	active					VBZ	conj	12
19	still	still	rb+advl	rb	advl								RB	advmod	18
20	alive	alive		jj	pred								JJ	acomp	18
21	...	...											:	punct	3

#sentid = 643
0	and	and		cc	cls								CC	cc	6
1	,	,											,	punct	6
2	very	very	rb+jjrbmod	rb	othr								RB	advmod	3
3	briefly	briefly	rb+advl	rb	advl	ly							RB	advmod	6
4	,	,											,	punct	6
5	it	it		pro	3rd	sg							PRP	nsubj	6
6	has	have		vbmain	vblex	pres	simple	active					VBZ	ROOT	6
7	,	,											,	punct	6
8	lots	lot		nn	pl								NNS	dobj	6
9	of	of	of+npostmod	in	nmod								IN	prep	8
10	instrumentation	instrumentation		nn		nom							NN	pobj	9
11	and	and		cc	phrs								CC	cc	6
12	that	that		pro	dem	sg							DT	nsubj	13
13	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	csubj	24
14	what	what											WP	nsubjpass	17
15	's	be		vbaux									VBZ	auxpass	17
16	really	really	rb+advl	rb	advl	ly							RB	advmod	17
17	slowed	slow	whcls+vcomp	vbmain	phrsv	pres	simple	pasv_agls	compcls	whcls	vcomp		VBN	ccomp	13
18	us	we		pro	pl								PRP	dobj	17
19	uh	uh											UH	intj	17
20	,	,											,	punct	17
21	down	down		rb	prtcle								RP	prt	17
22	a	a		dt	art								DT	det	23
23	lot	lot		nn									NN	npadvmod	17
24	is	be		vbmain	be	pres	simple	active					VBZ	parataxis	26
25	,	,											,	punct	24
26	getting	get		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	6
27	all	all											DT	nsubjpass	42
28	of	of		in	in_othr								IN	prep	27
29	the	the		dt	art								DT	det	34
30	,	,											,	punct	34
31	thirty	thirty											CD	nummod	34
32	-	-											HYPH	punct	31
33	odd	odd		jj	attr								JJ	amod	31
34	sensors	sensor		nn	pl	nom							NNS	pobj	28
35	and	and		cc	phrs								CC	cc	34
36	actuators	actuator		nn	pl	nom							NNS	conj	34
37	to	to		to									TO	aux	42
38	uh	uh											UH	intj	42
39	,	,											,	punct	42
40	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	42
41	be	be		vbaux									VB	auxpass	42
42	calibrated	calibrate	thatcls+vcomp	vbmain	vblex	past	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	26
43	and	and		cc	phrs								CC	cc	42
44	,	,											,	punct	42
45	reliably	reliably	rb+advl	rb	advl	ly							RB	advmod	46
46	talk	talk		vbmain	prepv	nonfinite	simple	active					VB	conj	42
47	to	to	in+advl	in	advl								IN	prep	46
48	the	the		dt	art								DT	det	49
49	airplane	airplane		nn									NN	pobj	47
50	and	and		cc	phrs								CC	cc	46
51	,	,											,	punct	46
52	so	so	rb+jjrbmod	rb	othr								RB	advmod	53
53	forth	forth											RB	conj	46
54	.	.											.	punct	6

#sentid = 644
0	i	i		pro	1st	sg							PRP	nsubj	3
1	'm	be		vbaux									VBP	aux	3
2	,	,											,	punct	3
3	rushing	rush		vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	17
4	through	through	in+advl	in	advl								IN	prep	3
5	these	these		pro	dem	pl							DT	pobj	4
6	fast	fast	rb+advl	rb	advl								JJ	advmod	3
7	cuz	cuz	in+advl	in	advl								IN	prep	3
8	,	,											,	punct	7
9	it	it		pro	3rd	sg							PRP	nsubj	10
10	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	17
11	not	not											RB	neg	10
12	really	really	rb+advl	rb	advl	ly							RB	advmod	10
13	CIRCA	circa	nn+npremod	nn		proper	npremod						NNP	compound	15
14	re-	re-	nn+npremod	nn			npremod						NN	nmod	15
15	research	research		nn									NN	attr	10
16	i	i		pro	1st	sg							PRP	nsubj	17
17	guess	guess		vbmain	vblex	pres	simple	active					VBP	ROOT	17
18	.	.											.	punct	17

#sentid = 645
0	so	so		rb	link								RB	advmod	7
1	,	,											,	punct	7
2	the	the		dt	art								DT	det	3
3	software	software		nn									NN	dep	7
4	,	,											,	punct	7
5	this	this											DT	intj	7
6	this	this		pro	dem	sg							DT	nsubj	7
7	gets	get		vbmain	prepv	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	13
8	at	at	in+advl	in	advl								IN	prep	7
9	,	,											,	punct	7
10	how	how		rb	advl								WRB	advmod	13
11	,	,											,	punct	13
12	i	i		pro	1st	sg							PRP	nsubj	13
13	was	be		vbmain	be	past	simple	active					VBD	ROOT	13
14	before	before	in+advl	in	advl								IN	prep	13
15	saying	say	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	14
16	that	that		comp	comp_that								IN	mark	20
17	the	the		dt	art								DT	det	19
18	feature	feature	nn+npremod	nn		nom	npremod						NN	compound	19
19	tests	test		nn	pl								NNS	nsubj	20
20	were	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls	thatcls	vcomp		VBD	ccomp	15
21	virtually	virtually	rb+jjrbmod	rb	adjmod	ly							RB	advmod	22
22	free	free		jj	pred								JJ	acomp	20
23	.	.											.	punct	13

#sentid = 646
0	the	the		dt	art								DT	det	2
1	software	software	nn+npremod	nn			npremod						NN	compound	2
2	processes	process		nn	pl	nom							NNS	nsubj	12
3	on	on	in+npostmod	in	nmod								IN	prep	2
4	our	our		dt	poss								PRP$	poss	10
5	,	,											,	punct	10
6	U	u		nn		proper	npremod						NNP	compound	10
7	-	-											HYPH	punct	10
8	A	a		nn		proper	npremod						NNP	compound	10
9	-	-											HYPH	punct	10
10	V	v		nn		proper							NNP	pobj	3
11	,	,											,	punct	10
12	consist	consist		vbmain	prepv	pres	simple	active					VBP	ROOT	12
13	of	of	in+advl	in	advl								IN	prep	12
14	not	not											RB	preconj	17
15	only	only	rb+jjrbmod	rb	othr	ly							RB	advmod	14
16	,	,											,	punct	17
17	CIRCA	circa		nn		proper							NNP	pobj	13
18	,	,											,	punct	17
19	but	but		cc	phrs								CC	cc	17
20	also	also		rb	othr								RB	advmod	19
21	,	,											,	punct	17
22	the	the		dt	art								DT	det	25
23	other	other	attr+npremod	jj	attr								JJ	amod	25
24	support	support	nn+npremod	nn			npremod						NN	compound	25
25	algorithms	algorithm		nn	pl								NNS	conj	17
26	which	which											WDT	dep	31
27	,	,											,	punct	31
28	i	i		pro	1st	sg							PRP	oprd	31
29	i	i		pro	1st	sg							PRP	nsubj	31
30	'll	will		vbaux	mod								MD	aux	31
31	call	call	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel		VB	relcl	25
32	them	they		pro	pl								PRP	dobj	31
33	support	support	nn+npremod	nn			npremod						NN	compound	34
34	algorithms	algorithm		nn	pl								NNS	oprd	31
35	but	but		cc	phrs								CC	cc	12
36	,	,											,	punct	12
37	each	each		dt									DT	det	38
38	one	one											CD	dep	48
39	of	of		in	in_othr								IN	prep	38
40	these	these		dt	dt_dem								DT	det	41
41	boxes	box		nn	pl								NNS	pobj	39
42	,	,											,	punct	38
43	some	some											DT	nsubjpass	48
44	of	of		in	in_othr								IN	prep	43
45	them	they		pro	pl								PRP	pobj	44
46	can	can		vbaux	mod	pos							MD	aux	48
47	be	be		vbaux									VB	auxpass	48
48	thought	think		vbmain	prepv	vp_w_modal	simple	pasv_agls					VBN	conj	12
49	of	of	in+advl	in	advl								IN	prep	48
50	as	as	in+advl	in	advl								IN	prep	48
51	entire	entire	attr+npremod	jj	attr								JJ	amod	53
52	research	research	nn+npremod	nn			npremod						NN	compound	53
53	disciplines	discipline		nn	pl								NNS	pobj	50
54	in	in	in+npostmod	in	nmod								IN	prep	53
55	themselves	themselves		pro	pl								PRP	pobj	54
56	,	,											,	punct	48
57	so	so		cc	cls								CC	cc	48
58	we	we		pro	1st								PRP	nsubj	59
59	have	have		vbmain	vblex	pres	simple	active					VBP	conj	48
60	a	a		dt	art								DT	det	64
61	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	62
62	set	set	attr+npremod	jj	attr								JJ	amod	64
63	,	,											,	punct	64
64	architecture	architecture		nn		nom							NN	dobj	59
65	but	but		cc	phrs								CC	cc	59
66	um	um											UH	intj	70
67	,	,											,	punct	70
68	the	the		dt	art								DT	det	69
69	airplane	airplane		nn									NN	nsubj	70
70	has	have		vbmain	vblex	pres	simple	active					VBZ	conj	48
71	two	two											CD	nummod	72
72	processors	processor		nn	pl	nom							NNS	dobj	70
73	on	on	in+advl	in	advl								IN	prep	70
74	it	it		pro	3rd	sg							PRP	pobj	73
75	and	and		cc	cls								CC	cc	70
76	that	that		pro	dem	sg							DT	nsubj	77
77	's	be		vbmain	be	pres	simple	active					VBZ	conj	70
78	not	not											RB	neg	77
79	subject	subject		jj	pred								JJ	acomp	77
80	to	to	in+jcomp	in	jcomp								IN	prep	79
81	expansion	expansion		nn									NN	pobj	80
82	so	so		cc	cls								IN	cc	77
83	we	we		pro	1st								PRP	nsubj	85
84	certainly	certainly	rb+advl	rb	advl	ly							RB	advmod	85
85	have	have		vbmain	vblex	pres	simple	active					VBP	conj	77
86	computational	computational	attr+npremod	jj	attr								JJ	amod	87
87	resource	resource	nn+npremod	nn			npremod						NN	compound	88
88	limits	limit		nn	pl								NNS	dobj	85
89	.	.											.	punct	48

#sentid = 647
0	one	one		pro	other	pl							CD	nsubj	3
1	of	of		in	in_othr								IN	prep	0
2	them	they		pro	pl								PRP	pobj	1
3	has	have		vbmain	vblex	pres	simple	active					VBZ	ROOT	3
4	,	,											,	punct	3
5	a	a		dt	art								DT	det	6
6	set	set		nn									NN	dobj	3
7	of	of	of+npostmod	in	nmod								IN	prep	6
8	processes	process		nn	pl	nom							NNS	pobj	7
9	that	that		relpro	relpro_that	sg							WDT	nsubj	11
10	,	,											,	punct	11
11	do	do	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	8
12	the	the		dt	art								DT	det	16
13	control	control	nn+npremod	nn			npremod						NN	nmod	16
14	and	and		cc	phrs								CC	cc	13
15	state	state		nn		nom							NN	conj	13
16	estimation	estimation		nn		nom							NN	dobj	11
17	and	and		cc	phrs								CC	cc	11
18	,	,											,	punct	11
19	detect	detect		vbmain	vblex	pres	simple	active					VBP	conj	11
20	the	the		dt	art								DT	det	21
21	faults	fault		nn	pl								NNS	dobj	19
22	and	and		cc	phrs								CC	cc	11
23	then	then		rb	link								RB	advmod	25
24	they	they		pro	pl								PRP	nsubj	25
25	pass	pass		vbmain	phrsv	pres	simple	active					VBP	conj	11
26	that	that		dt	dt_dem								DT	det	27
27	information	information		nn		nom							NN	dobj	25
28	over	over		rb	prtcle								RP	prt	25
29	,	,											,	punct	25
30	to	to	in+advl	in	advl								IN	prep	25
31	the	the		dt	art								DT	det	33
32	other	other	attr+npremod	jj	attr								JJ	amod	33
33	processor	processor		nn		nom							NN	pobj	30
34	which	which		relpro	relpro_wh								WDT	nsubj	36
35	,	,											,	punct	36
36	contains	contain	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	33
37	the	the		dt	art								DT	det	42
38	more	more	attr+npremod	jj	attr								RBR	amod	41
39	high	high	attr+npremod	jj	attr								JJ	amod	41
40	va-	va-											JJ	punct	41
41	variability	variability	nn+npremod	nn		nom	npremod						NN	compound	42
42	processes	process		nn	pl	nom							NNS	dobj	36
43	such	such		jj	attr								JJ	amod	44
44	as	as	in+npostmod	in	nmod								IN	prep	42
45	model	model	nn+npremod	nn			npremod						NN	compound	48
46	I	i		nn	1st	proper	npremod						NNP	compound	48
47	-	-											HYPH	punct	48
48	D	d		nn		proper							NNP	pobj	44
49	,	,											,	punct	48
50	and	and		cc	phrs								CC	cc	42
51	the	the		dt	art								DT	det	58
52	CIRCA	circa	nn+npremod	nn		proper	npremod						NNP	nmod	58
53	-	-											HYPH	punct	52
54	two	two											CD	nummod	58
55	plan	plan	nn+npremod	nn			npremod						NN	compound	57
56	-	-											HYPH	punct	57
57	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	58
58	system	system		nn									NN	conj	42
59	.	.											.	punct	3

#sentid = 648
0	on	on	in+advl	in	advl								IN	prep	6
1	the	the		dt	art								DT	det	2
2	ground	ground		nn									NN	pobj	0
3	,	,											,	punct	6
4	we	we		pro	1st								PRP	nsubj	6
5	basically	basically	rb+advl	rb	advl	ly							RB	advmod	6
6	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	6
7	a	a		dt	art								DT	det	12
8	G	g		nn		proper	npremod						NNP	compound	12
9	-	-											HYPH	punct	12
10	U	u		nn		proper	npremod						NNP	compound	12
11	-	-											HYPH	punct	12
12	I	i		nn	1st	proper							NNP	dobj	6
13	and	and		cc	phrs								CC	cc	12
14	then	then		rb	othr								RB	advmod	20
15	the	the		dt	art								DT	det	20
16	soft	soft	attr+npremod	jj	attr								JJ	amod	20
17	real	real	attr+npremod	jj	attr								JJ	amod	19
18	-	-											HYPH	punct	19
19	time	time	nn+npremod	nn			npremod						NN	compound	20
20	planning	planning		nn		nom							NN	conj	12
21	of	of	of+npostmod	in	nmod								IN	prep	20
22	CIRCA	circa		nn		proper							NNP	pobj	21
23	...	...											:	punct	6

#sentid = 649
0	so	so		rb	link								RB	advmod	5
1	,	,											,	punct	5
2	so	so		rb	link								CC	advmod	5
3	i	i		pro	1st	sg							PRP	nsubj	5
4	've	've		vbaux									VBP	aux	5
5	talked	talk		vbmain	prepv	pres	simple	active					VBN	ROOT	5
6	about	about	in+advl	in	advl								IN	prep	5
7	this	this		pro	dem	sg							DT	pobj	6
8	um	um											UH	intj	20
9	,	,											,	punct	20
10	the	the		dt	art								DT	det	12
11	one	one											CD	nummod	12
12	processor	processor		nn		nom							NN	nsubj	20
13	in	in	in+npostmod	in	nmod								IN	prep	12
14	the	the		dt	art								DT	det	19
15	U	u		nn		proper	npremod						NNP	compound	19
16	-	-											HYPH	punct	19
17	A	a		nn		proper	npremod						NNP	compound	19
18	-	-											HYPH	punct	19
19	V	v		nn		proper							NNP	pobj	13
20	has	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	5
21	a	a		dt	art								DT	det	24
22	very	very	rb+advl	rb	advl								RB	advmod	23
23	fixed	fix	attr+npremod	jj	attr	ed							VBN	amod	24
24	schedule	schedule		nn									NN	dobj	20
25	,	,											,	punct	20
26	and	and		cc	phrs								CC	cc	20
27	does	do		vbmain	vblex	pres	simple	active					VBZ	conj	20
28	all	all											DT	dobj	27
29	of	of		in	in_othr								IN	prep	28
30	the	the		dt	art								DT	det	35
31	fast	fast	attr+npremod	jj	attr								JJ	amod	35
32	real	real	attr+npremod	jj	attr								JJ	amod	34
33	-	-											HYPH	punct	34
34	time	time	nn+npremod	nn			npremod						NN	compound	35
35	processes	process		nn	pl	nom							NNS	pobj	29
36	.	.											.	punct	5

#sentid = 650
0	the	the		dt	art								DT	det	2
1	other	other	attr+npremod	jj	attr								JJ	amod	2
2	processor	processor		nn		nom							NN	nsubj	3
3	does	do		vbmain	vblex	pres	simple	active					VBZ	ROOT	3
4	the	the		dt	art								DT	det	9
5	slower	slow	attr+npremod	jj	attr								JJR	amod	9
6	real	real	attr+npremod	jj	attr								JJ	amod	8
7	-	-											HYPH	punct	8
8	time	time	nn+npremod	nn			npremod						NN	compound	9
9	processes	process		nn	pl	nom							NNS	dobj	3
10	but	but		cc	cls								CC	cc	3
11	they	they		pro	pl								PRP	nsubj	12
12	're	be		vbmain	be	pres	simple	active					VBP	conj	3
13	still	still	rb+advl	rb	advl								RB	advmod	12
14	hard	hard	attr+npremod	jj	attr								JJ	amod	18
15	real	real	attr+npremod	jj	attr								JJ	amod	17
16	-	-											HYPH	punct	17
17	time	time	nn+npremod	nn			npremod						NN	compound	18
18	processes	process		nn	pl	nom							NNS	attr	12
19	.	.											.	punct	12

#sentid = 651
0	um	um											UH	intj	7
1	,	,											,	punct	7
2	and	and		cc	phrs								CC	cc	7
3	then	then		rb	link								RB	advmod	7
4	on	on	in+advl	in	advl								IN	prep	7
5	the	the		dt	art								DT	det	6
6	ground	ground		nn									NN	pobj	4
7	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	7
8	the	the		dt	art								DT	det	11
9	,	,											,	punct	11
10	soft	soft	attr+npremod	jj	attr								JJ	amod	11
11	processes	process		nn	pl	nom							NNS	nsubj	7
12	where	where		rb	advl								WRB	advmod	17
13	we	we		pro	1st								PRP	nsubj	17
14	really	really	rb+advl	rb	advl	ly							RB	advmod	17
15	do	do		vbaux									VBP	aux	17
16	n't	not											RB	neg	17
17	know	know	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VB	relcl	11
18	the	the		dt	art								DT	det	23
19	worst	bad	attr+npremod	jj	attr								JJS	amod	21
20	-	-											HYPH	punct	21
21	case	case	nn+npremod	nn			npremod						NN	compound	23
22	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	23
23	times	time		nn	pl								NNS	dobj	17
24	.	.											.	punct	7

#sentid = 652
0													_SP	dep	11
1	so	so		rb	link								RB	advmod	11
2	,	,											,	punct	11
3	instead	instead		rb	othr								RB	advmod	4
4	of	of	in+advl	in	advl								IN	prep	11
5	presenting	present	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	4
6	res-	res-											HYPH	nmod	7
7	results	result		nn	pl								NNS	dobj	5
8	i	i		pro	1st	sg							PRP	nsubj	11
9	am	be		vbaux									VBP	aux	11
10	simply	simply	rb+advl	rb	advl	ly	splaux						RB	advmod	11
11	presenting	present		vbmain	vblex	pres	prog	active					VBG	ROOT	11
12	a	a		dt	art								DT	det	15
13	a	a		dt	art								DT	det	15
14	test	test	nn+npremod	nn			npremod						NN	compound	15
15	plan	plan		nn									NN	dobj	11
16	for	for	in+npostmod	in	nmod								IN	prep	15
17	the	the		dt	art								DT	det	18
18	future	future		nn		nom							NN	pobj	16
19	because	because		cs	cos								IN	mark	21
20	it	it		pro	3rd	sg							PRP	nsubj	21
21	became	become	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		causative		VBD	advcl	11
22	clear	clear		jj	pred								JJ	acomp	21
23	,	,											,	punct	21
24	several	several	attr+npremod	jj	attr								JJ	amod	25
25	months	month		nn	pl								NNS	npadvmod	26
26	ago	ago	rb+advl	rb	advl								RB	advmod	21
27	that	that		comp	comp_that								IN	mark	33
28	we	we		pro	1st								PRP	nsubj	33
29	were	be		vbaux									VBD	aux	33
30	n't	not											RB	neg	33
31	,	,											,	punct	33
32	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	33
33	going	go	thatcls+vcomp	vbmain	vblex	past	prog	active	compcls	thatcls	vcomp		VBG	ccomp	21
34	to	to		to									TO	aux	38
35	be	be		vbaux									VB	aux	38
36	,	,											,	punct	38
37	um	um											UH	intj	38
38	getting	get	ingcls+vcomp	vbmain	vblex	nonfinite	prog	active	compcls	ingcls	vcomp		VBG	xcomp	33
39	to	to	in+advl	in	advl								IN	prep	38
40	the	the		dt	art								DT	det	41
41	point	point		nn									NN	pobj	39
42	where	where		rb	advl								WRB	advmod	46
43	i	i		pro	1st	sg							PRP	nsubj	46
44	could	could		vbaux	mod	pos							MD	aux	46
45	,	,											,	punct	46
46	use	use	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	whcls	rel		VB	relcl	41
47	any	any		dt									DT	det	51
48	high	high	attr+npremod	jj	attr								JJ	amod	50
49	-	-											HYPH	punct	50
50	level	level	nn+npremod	nn			npremod						NN	compound	51
51	algorithms	algorithm		nn	pl								NNS	dobj	46
52	for	for	in+advl	in	advl								IN	prep	46
53	quite	quite											PDT	predet	55
54	some	some		dt									DT	det	55
55	time	time		nn									NN	pobj	52
56	because	because		cs	cos								IN	mark	67
57	the	the		dt	art								DT	det	63
58	,	,											,	punct	63
59	the	the		dt	art								DT	det	63
60	low	low	attr+npremod	jj	attr								JJ	amod	62
61	-	-											HYPH	punct	62
62	level	level	nn+npremod	nn			npremod						NN	compound	63
63	controllers	controller		nn	pl	nom							NNS	nsubj	67
64	and	and		cc	phrs								CC	cc	63
65	state	state	nn+npremod	nn		nom	npremod						NN	compound	66
66	estimators	estimator		nn	pl	nom							NNS	conj	63
67	are	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		causative		VBP	advcl	21
68	still	still	rb+advl	rb	advl								RB	advmod	67
69	not	not											RB	neg	67
70	in	in	in+advl	in	advl								IN	prep	67
71	place	place		nn									NN	pobj	70
72	and	and		cc	cls								CC	cc	67
73	,	,											,	punct	67
74	of	of	in+advl	in	advl								IN	prep	77
75	course	course		nn									NN	pobj	74
76	CIRCA	circa		nn		proper							NNP	nsubj	77
77	re-	re-		vbmain	vblex	pres	simple	active					VBZ	conj	67
78	relies	rely		vbmain	vblex	pres	simple	active					VBZ	conj	67
79	those	those		pro	dem	pl							DT	dobj	78
80	,	,											,	punct	78
81	relies	rely		vbmain	prepv	pres	simple	active					VBZ	dep	78
82	on	on	in+advl	in	advl								IN	prep	81
83	those	those		pro	dem	pl							DT	pobj	82
84	to	to		to									TO	aux	85
85	do	do	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	81
86	anything	anything		nn	other	nom							NN	dobj	85
87	.	.											.	punct	11

#sentid = 653
0	so	so		rb	link								RB	advmod	3
1	,	,											,	punct	3
2	we	we		pro	1st								PRP	nsubj	3
3	're	be		vbmain	be	pres	simple	active					VBP	ROOT	3
4	in	in	in+advl	in	advl								IN	prep	3
5	the	the		dt	art								DT	det	6
6	process	process		nn		nom							NN	pobj	4
7	right	right	rb+jjrbmod	rb	othr								RB	advmod	8
8	now	now	rb+advl	rb	advl								RB	advmod	3
9	of	of	in+advl	in	advl								IN	prep	3
10	,	,											,	punct	9
11	completing	complete	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	9
12	the	the		dt	art								DT	det	13
13	tests	test		nn	pl								NNS	dobj	11
14	to	to		to									TO	aux	15
15	identify	identify	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	13
16	the	the		dt	art								DT	det	20
17	dynamic	dynamic	attr+npremod	jj	attr								JJ	amod	19
18	-	-											HYPH	punct	19
19	model	model	nn+npremod	nn			npremod						NN	compound	20
20	parameters	parameter		nn	pl	nom							NNS	dobj	15
21	,	,											,	punct	3
22	and	and		cc	cls								CC	cc	3
23	uh	uh											UH	intj	29
24	,	,											,	punct	29
25	the	the		dt	art								DT	det	27
26	next	next	attr+npremod	jj	attr								JJ	amod	27
27	step	step		nn									NN	nsubj	29
28	will	will		vbaux	mod	prd							MD	aux	29
29	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	3
30	to	to		to									TO	aux	31
31	verify	verify	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	29
32	operation	operation		nn		nom							NN	dobj	31
33	of	of	of+npostmod	in	nmod								IN	prep	32
34	the	the		dt	art								DT	det	38
35	high	high	attr+npremod	jj	attr								JJ	amod	37
36	-	-											HYPH	punct	37
37	altitude	altitude	nn+npremod	nn			npremod						NN	compound	38
38	controller	controller		nn		nom							NN	pobj	33
39	.	.											.	punct	29

#sentid = 654
0	although	although		cs	con								IN	mark	4
1	it	it		pro	3rd	sg							PRP	nsubj	4
2	did	do		vbaux									VBD	aux	4
3	n't	not											RB	neg	4
4	make	make	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		concessive		VB	advcl	13
5	it	it		pro	3rd	sg							PRP	dobj	4
6	into	into	in+advl	in	advl								IN	prep	4
7	my	my		dt	poss								PRP$	poss	9
8	,	,											,	punct	9
9	thesis	thesis		nn									NN	pobj	6
10	,	,											,	punct	13
11	um	um											UH	intj	13
12	i	i		pro	1st	sg							PRP	nsubj	13
13	hope	hope		vbmain	vblex	pres	simple	active					VBP	ROOT	13
14	to	to		to									TO	aux	19
15	at	at	in+advl	in	advl								IN	prep	19
16	that	that		dt	dt_dem								DT	det	17
17	point	point		nn									NN	pobj	15
18	,	,											,	punct	19
19	use	use	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	13
20	CIRCA	circa		nn		proper							NNP	dobj	19
21	to	to		to									TO	aux	22
22	think	think	tocls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	19
23	about	about	in+advl	in	advl								IN	prep	22
24	,	,											,	punct	23
25	uh	uh											UH	intj	23
26	one	one	rb+jjrbmod	rb	adjmod								CD	advmod	28
27	-	-											HYPH	punct	28
28	dimensional	dimensional	attr+npremod	jj	attr								JJ	amod	30
29	,	,											,	punct	30
30	trajectories	trajectory		nn	pl	nom							NNS	pobj	23
31	and	and		cc	phrs								CC	cc	30
32	,	,											,	punct	30
33	one	one	rb+jjrbmod	rb	adjmod								CD	advmod	35
34	-	-											HYPH	punct	35
35	dimensional	dimensional	attr+npremod	jj	attr								JJ	amod	36
36	emergencies	emergency		nn	pl	nom							NNS	conj	30
37	to	to		to									TO	aux	40
38	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	39
39	of	of	rb+advl	rb	advl		splaux						RB	advmod	40
40	get	get	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	22
41	a	a		dt	art								DT	det	46
42	,	,											,	punct	46
43	just	just		rb	othr								RB	advmod	44
44	uh	uh											UH	intj	46
45	a	a		dt	art								DT	det	46
46	flight	flight		nn									NN	dobj	40
47	in	in	in+npostmod	in	nmod								IN	prep	46
48	,	,											,	punct	47
49	along	along	in+npostmod	in	nmod								IN	prep	46
50	the	the		dt	art								DT	det	53
51	X	x	nn+npremod	nn			npremod						NN	compound	53
52	-	-											HYPH	punct	53
53	axis	axi		nn	pl								NNS	pobj	49
54	,	,											,	punct	46
55	and	and		cc	phrs								CC	cc	46
56	then	then		rb	othr								RB	advmod	58
57	an	an		dt									DT	det	58
58	altitude	altitude		nn									NN	conj	46
59	to	to		to									TO	aux	61
60	,	,											,	punct	61
61	get	get	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	40
62	the	the		dt	art								DT	det	66
63	con-	con-											XX	nmod	66
64	the	the		dt	art								DT	det	66
65	,	,											,	punct	66
66	airplane	airplane		nn									NN	nsubj	68
67	to	to		to									TO	aux	68
68	react	react		vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	61
69	to	to	in+advl	in	advl								IN	prep	68
70	,	,											,	punct	69
71	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	73
72	,	,											,	punct	73
73	contrived	contrived	attr+npremod	jj	attr								JJ	amod	74
74	emergencies	emergency		nn	pl	nom							NNS	pobj	69
75	in	in	in+advl	in	advl								IN	prep	68
76	that	that		dt	dt_dem								DT	det	77
77	way	way		nn									NN	pobj	75
78	,	,											,	punct	13
79	and	and		cc	cls								CC	cc	13
80	then	then		rb	link								RB	advmod	89
81	at	at	in+advl	in	advl								IN	prep	89
82	that	that		dt	dt_dem								DT	det	83
83	point	point		nn									NN	pobj	81
84	,	,											,	punct	89
85	um	um											UH	intj	89
86	they	they		pro	pl								PRP	nsubj	89
87	will	will		vbaux	mod	prd							MD	aux	89
88	also	also	rb+advl	rb	advl		splaux						RB	advmod	89
89	introduce	introduce		vbmain	vblex	vp_w_modal	simple	active					VB	conj	13
90	a	a		dt	art								DT	det	92
91	lateral	lateral	attr+npremod	jj	attr								JJ	amod	92
92	control	control		nn									NN	dobj	89
93	the	the		dt	art								DT	det	95
94	other	other	attr+npremod	jj	attr								JJ	amod	95
95	researchers	researcher	appos+npostmod	nn	pl	nom	nappos						NNS	appos	92
96	that	that		relpro	relpro_that	sg							WDT	nsubj	98
97	are	be		vbaux									VBP	aux	98
98	working	work	finitecls+rel	vbmain	prepv	pres	prog	active	nmod_cls	thatcls	rel		VBG	relcl	95
99	on	on	in+advl	in	advl								IN	prep	98
100	it	it		pro	3rd	sg							PRP	pobj	99
101	.	.											.	punct	89

#sentid = 655
0	ultimately	ultimately	rb+advl	rb	advl	ly							RB	advmod	2
1	we	we		pro	1st								PRP	nsubj	2
2	hope	hope		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	to	to		to									TO	aux	4
4	look	look	tocls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	2
5	at	at	in+advl	in	advl								IN	prep	4
6	,	,											,	punct	5
7	engine	engine	nn+npremod	nn			npremod						NN	compound	8
8	failure	failure		nn		nom							NN	pobj	5
9	and	and		cc	phrs								CC	cc	8
10	icing	icing		nn		nom							NN	conj	8
11	,	,											,	punct	2
12	and	and		cc	cls								CC	cc	2
13	hopefully	hopefully	rb+advl	rb	advl	ly							RB	advmod	20
14	by	by	in+advl	in	advl								IN	prep	20
15	that	that		dt	dt_dem								DT	det	16
16	time	time		nn									NN	pobj	14
17	,	,											,	punct	20
18	i	i		pro	1st	sg							PRP	nsubj	20
19	will	will		vbaux	mod	prd							MD	aux	20
20	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	conj	2
21	a	a		dt	art								DT	det	24
22	,	,											,	punct	24
23	better	well	attr+npremod	jj	attr								JJR	amod	24
24	model	model		nn									NN	dobj	20
25	of	of	of+npostmod	in	nmod								IN	prep	24
26	the	the		dt	art								DT	det	29
27	actual	actual	attr+npremod	jj	attr								JJ	amod	29
28	,	,											,	punct	29
29	statistics	statistic		nn	pl								NNS	pobj	25
30	,	,											,	punct	29
31	sto-	sto-											FW	appos	29
32	for	for	in+npostmod	in	nmod								IN	prep	29
33	,	,											,	punct	32
34	um	um											UH	intj	32
35	,	,											,	punct	32
36	the	the		dt	art								DT	det	39
37	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	38
38	rate	rate	nn+npremod	nn		nom	npremod						NN	compound	39
39	functions	function		nn	pl	nom							NNS	pobj	32
40	,	,											,	punct	32
41	for	for	in+npostmod	in	nmod								IN	prep	24
42	those	those		dt	dt_dem								DT	det	43
43	kind	kind		nn									NN	pobj	41
44	of	of	of+npostmod	in	nmod								IN	prep	43
45	,	,											,	punct	44
46	um	um											UH	intj	44
47	situations	situation		nn	pl	nom							NNS	pobj	44
48	.	.											.	punct	20

#sentid = 656
0	so	so		rb	link								RB	advmod	7
1	,	,											,	punct	7
2	to	to		to									TO	aux	3
3	summarize	summarize	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	7
4	,	,											,	punct	7
5	i	i		pro	1st	sg							PRP	nsubj	7
6	've	've		vbaux									VBP	aux	7
7	talked	talk		vbmain	prepv	pres	simple	active					VBN	ROOT	7
8	about	about	in+advl	in	advl								IN	prep	7
9	,	,											,	punct	8
10	CIRCA	circa		nn									NN	pobj	8
11	-	-											HYPH	punct	10
12	two	two											CD	nummod	10
13	,	,											,	punct	10
14	to	to		to									TO	aux	15
15	generate	generate	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	10
16	and	and		cc	phrs								CC	cc	15
17	execute	execute		vbmain	vblex	nonfinite	simple	active					VB	conj	15
18	in	in	in+advl	in	advl								IN	prep	17
19	hard	hard	attr+npremod	jj	attr								JJ	amod	23
20	real	real	attr+npremod	jj	attr								JJ	amod	22
21	-	-											HYPH	punct	22
22	time	time	nn+npremod	nn			npremod						NN	compound	23
23	plans	plan		nn	pl								NNS	pobj	18
24	,	,											,	punct	15
25	that	that		pro	dem	sg							WDT	nsubj	30
26	,	,											,	punct	30
27	hopefully	hopefully	rb+advl	rb	advl	ly							RB	advmod	30
28	will	will		vbaux	mod	prd							MD	aux	30
29	ultimately	ultimately	rb+advl	rb	advl	ly	splaux						RB	advmod	30
30	lead	lead		vbmain	prepv	vp_w_modal	simple	active					VB	dep	15
31	to	to	in+advl	in	advl								IN	prep	30
32	safe	safe	attr+npremod	jj	attr								JJ	amod	34
33	a-	a-											XX	punct	34
34	lead	lead		nn									NN	pobj	31
35	to	to	in+npostmod	in	nmod								IN	prep	34
36	safe	safe	attr+npremod	jj	attr								JJ	amod	39
37	autonomous	autonomous	attr+npremod	jj	attr								JJ	amod	38
38	system	system	nn+npremod	nn			npremod						NN	compound	39
39	operation	operation		nn		nom							NN	pobj	35
40	.	.											.	punct	7

#sentid = 657
0	i	i		pro	1st	sg							PRP	nsubj	2
1	've	've		vbaux									VBP	aux	2
2	described	describe		vbmain	vblex	pres	simple	active					VBN	ROOT	2
3	a	a		dt	art								DT	det	7
4	,	,											,	punct	7
5	probabilistic	probabilistic	attr+npremod	jj	attr								JJ	amod	7
6	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	7
7	model	model		nn									NN	dobj	2
8	,	,											,	punct	7
9	that	that		relpro	relpro_that	sg							WDT	nsubjpass	12
10	has	have		vbaux									VBZ	aux	12
11	been	be		vbaux									VBN	auxpass	12
12	used	use	finitecls+rel	vbmain	vblex	pres	perf	pasv_agls	nmod_cls	thatcls	rel		VBN	relcl	7
13	to	to		to									TO	aux	14
14	prioritize	prioritize	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	12
15	states	state		nn	pl	nom							NNS	dobj	14
16	,	,											,	punct	14
17	and	and		cc	phrs								CC	cc	14
18	to	to		to									TO	aux	20
19	,	,											,	punct	20
20	remove	remove		vbmain	vblex	nonfinite	simple	active		tocls			VB	conj	14
21	improbable	improbable	attr+npremod	jj	attr								JJ	amod	22
22	states	state		nn	pl	nom							NNS	dobj	20
23	,	,											,	punct	20
24	um	um											UH	intj	20
25	,	,											,	punct	20
26	when	when		rb	advl								WRB	advmod	29
27	schedulability	schedulability	nn+npremod	nn		nom	npremod						NN	compound	28
28	considerations	consideration		nn	pl	nom							NNS	nsubj	29
29	require	require	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	20
30	it	it		pro	3rd	sg							PRP	dobj	29
31	.	.											.	punct	2

#sentid = 658
0	i	i		pro	1st	sg							PRP	nsubj	2
1	've	've		vbaux									VBP	aux	2
2	talked	talk		vbmain	prepv	pres	simple	active					VBN	ROOT	2
3	about	about	in+advl	in	advl								IN	prep	2
4	detecting	detect	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	3
5	and	and		cc	phrs								CC	cc	4
6	reacting	react		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	4
7	to	to	in+advl	in	advl								IN	prep	6
8	unhandled	unhandled	attr+npremod	jj	attr								JJ	amod	9
9	states	state		nn	pl	nom							NNS	pobj	7
10	resulting	result	ingcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	9
11	either	either											CC	preconj	12
12	from	from	in+advl	in	advl								IN	prep	10
13	these	these		dt	dt_dem								DT	det	17
14	schedulability	schedulability	nn+npremod	nn		nom	npremod						NN	compound	17
15	trade	trade	nn+npremod	nn			npremod						NN	compound	17
16	-	-											HYPH	punct	17
17	offs	off		nn	pl								NNS	pobj	12
18	,	,											,	punct	12
19	or	or		cc									CC	cc	12
20	from	from											IN	conj	12
21	imprecisions	imprecision		nn	pl								NNS	pobj	20
22	in	in	in+npostmod	in	nmod								IN	prep	21
23	the	the		dt	art								DT	det	24
24	model	model		nn									NN	pobj	22
25	,	,											,	punct	12
26	itsel-	itsel-											XX	nmod	27
27	i-	i-											XX	dep	2
28	in	in		in	in_othr								IN	prep	27
29	the	the		dt	art								DT	det	31
30	knowledge	knowledge	nn+npremod	nn			npremod						NN	compound	31
31	base	base		nn									NN	pobj	28
32	itself	itself											PRP	appos	31
33	,	,											,	punct	2
34	and	and		cc	phrs								CC	cc	2
35	then	then		rb	link								RB	advmod	36
36	talked	talk		vbmain	prepv	past	simple	active					VBD	conj	2
37	about	about	in+advl	in	advl								IN	prep	36
38	how	how		comp	comp_wh								WRB	advmod	56
39	,	,											,	punct	56
40	the	the		dt	art								DT	det	45
41	,	,											,	punct	45
42	planner	planner	nn+npremod	nn		nom	npremod						NN	compound	44
43	-	-											HYPH	punct	44
44	schedule	schedule	nn+npremod	nn			npremod						NN	compound	45
45	negotiation	negotiation		nn		nom							NN	nsubj	56
46	at	at		in	nmod								IN	prep	49
47	this	this		dt	dt_dem								DT	det	48
48	point	point		nn									NN	pobj	46
49	feedback	feedback		nn									NN	nsubj	56
50	from	from	in+npostmod	in	nmod								IN	prep	49
51	scheduler	scheduler		nn		nom							NN	pobj	50
52	to	to		in	in_othr								IN	prep	50
53	planner	planner		nn		nom							NN	pobj	52
54	,	,											,	punct	49
55	can	can		vbaux	mod	pos							MD	aux	56
56	guide	guide	whcls+incomp	vbmain	vblex	vp_w_modal	simple	active	compcls	whcls	incomp		VB	pcomp	37
57	the	the		dt	art								DT	det	61
58	schedulability	schedulability	nn+npremod	nn		nom	npremod						NN	compound	61
59	trade	trade	nn+npremod	nn			npremod						NN	compound	61
60	-	-											HYPH	punct	61
61	offs	off		nn	pl								NNS	dobj	56
62	,	,											,	punct	56
63	during	during	in+advl	in	advl								IN	prep	56
64	replanning	replanning		nn		nom							NN	pobj	63
65	or	or		cc									CC	cc	63
66	for	for											IN	conj	63
67	backtracking	backtracking		nn		nom							NN	pobj	66
68	during	during		in	in_othr								IN	prep	66
69	planning	planning		nn		nom							NN	pobj	68
70	.	.											.	punct	2

#sentid = 659
0	then	then		rb	link								RB	advmod	3
1	i	i		pro	1st	sg							PRP	nsubj	3
2	've	've		vbaux									VBP	aux	3
3	talked	talk		vbmain	prepv	pres	simple	active					VBN	ROOT	3
4	about	about	in+advl	in	advl								IN	prep	3
5	how	how		comp	comp_wh								WRB	advmod	11
6	CIRCA	circa		nn		proper							NNP	nsubjpass	11
7	-	-											HYPH	punct	6
8	two	two											CD	nummod	6
9	has	have		vbaux									VBZ	aux	11
10	been	be		vbaux									VBN	auxpass	11
11	used	use	whcls+incomp	vbmain	vblex	pres	perf	pasv_agls	compcls	whcls	incomp		VBN	pcomp	4
12	so	so	rb+jjrbmod	rb	othr								RB	advmod	13
13	far	far	rb+advl	rb	advl								RB	advmod	11
14	to	to		to									TO	aux	17
15	,	,											,	punct	17
16	fully	fully	rb+advl	rb	advl	ly	splaux						RB	advmod	17
17	automate	automate	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	11
18	,	,											,	punct	17
19	um	um											UH	intj	17
20	simulated	simulated	attr+npremod	jj	attr								JJ	amod	25
21	and	and		cc	phrs								CC	cc	20
22	real	real	rb+jjrbmod	rb	othr								JJ	advmod	23
23	uninhabited	uninhabited											JJ	conj	20
24	aerial	aerial	attr+npremod	jj	attr								JJ	amod	25
25	vehicles	vehicle		nn	pl								NNS	dobj	17
26	...	...											:	punct	3

#sentid = 660
0	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	1
1	of	of		rb	othr								RB	advmod	3
2	a	a		dt	art								DT	det	3
3	summary	summary		nn		nom							NN	dep	25
4	of	of	of+npostmod	in	nmod								IN	prep	3
5	contributions	contribution		nn	pl	nom							NNS	pobj	4
6	,	,											,	punct	5
7	um	um											UH	intj	5
8	,	,											,	punct	5
9	to	to	in+npostmod	in	nmod								IN	prep	5
10	stochastic	stochastic	attr+npremod	jj	attr								JJ	amod	11
11	planning	planning		nn		nom							NN	pobj	9
12	,	,											,	punct	25
13	it	it		pro	3rd	sg							PRP	nsubj	14
14	's	be		vbmain	be	pres	simple	active					VBZ	parataxis	25
15	not	not											RB	neg	14
16	,	,											,	punct	14
17	uh	uh											UH	intj	14
18	of	of	in+advl	in	advl								IN	prep	25
19	course	course		nn									NN	pobj	18
20	future	future	attr+npremod	jj	attr								JJ	amod	21
21	work	work		nn									NN	nsubj	25
22	,	,											,	punct	25
23	needs	need		nn	pl								NNS	dep	25
24	,	,											,	punct	25
25	remains	remain		vbmain	vblex	pres	simple	active					VBZ	ROOT	25
26	to	to		to									TO	aux	27
27	make	make	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	25
28	it	it		pro	3rd	sg							PRP	nsubj	31
29	a	a		dt	art								DT	det	31
30	convincing	convincing	attr+npremod	jj	attr								JJ	amod	31
31	argument	argument		nn		nom							NN	ccomp	27
32	but	but		cc	cls								CC	cc	25
33	,	,											,	punct	37
34	um	um											UH	intj	37
35	,	,											,	punct	37
36	we	we		pro	1st								PRP	nsubj	37
37	believe	believe		vbmain	vblex	pres	simple	active					VBP	conj	25
38	this	this		pro	dem	sg							DT	nsubj	39
39	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	37
40	an	an		dt									DT	det	41
41	alternative	alternative		nn									NN	attr	39
42	to	to	in+npostmod	in	nmod								IN	prep	41
43	,	,											,	punct	42
44	Markov	markov	nn+npremod	nn		proper	npremod						NNP	compound	46
45	decision	decision	nn+npremod	nn			npremod						NN	compound	46
46	process	process		nn		nom							NN	pobj	42
47	,	,											,	punct	46
48	specifically	specifically		rb	othr	ly							RB	advmod	49
49	for	for	in+npostmod	in	nmod								IN	prep	46
50	real	real	attr+npremod	jj	attr								JJ	amod	52
51	-	-											HYPH	punct	52
52	time	time	nn+npremod	nn			npremod						NN	compound	54
53	plan	plan	nn+npremod	nn			npremod						NN	compound	54
54	development	development		nn		nom							NN	pobj	49
55	,	,											,	punct	54
56	um	um											UH	intj	54
57	,	,											,	punct	54
58	when	when		rb	advl								WRB	advmod	61
59	problem	problem	nn+npremod	nn			npremod						NN	compound	60
60	domains	domain		nn	pl								NNS	nsubj	61
61	are	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBP	advcl	54
62	so	so	rb+jjrbmod	rb	adjmod								RB	advmod	63
63	complex	complex		jj	pred								JJ	acomp	61
64	that	that		comp	comp_that								IN	mark	67
65	,	,											,	punct	67
66	it	it		pro	3rd	sg							PRP	nsubj	67
67	gets	get	thatcls+jcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	jcomp		VBZ	ccomp	63
68	difficult	difficult		jj	pred								JJ	acomp	67
69	to	to		to									TO	aux	70
70	think	think	tocls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	67
71	about	about	in+advl	in	advl								IN	prep	70
72	specifying	specify	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	71
73	the	the		dt	art								DT	det	74
74	problem	problem		nn									NN	dobj	72
75	for	for	in+advl	in	advl								IN	prep	72
76	an	an		dt									DT	det	82
77	(	(											-LRB-	punct	82
78	M	m		nn		proper	npremod						NNP	compound	82
79	-	-											HYPH	punct	82
80	V	v		nn		proper	npremod						NNP	compound	82
81	-	-											HYPH	punct	82
82	P.	p.		nn		proper							NNP	pobj	75
83	)	)											-RRB-	punct	37

#sentid = 661
0	um	um											UH	intj	4
1	,	,											,	punct	4
2	we	we		pro	1st								PRP	nsubj	4
3	have	have		vbaux									VBP	aux	4
4	looked	look		vbmain	prepv	pres	perf	active					VBN	ROOT	4
5	at	at	in+advl	in	advl								IN	prep	4
6	how	how											WRB	pobj	13
7	multi	multi	attr+npremod	jj	attr								JJ	amod	10
8	-	-	attr+npremod	jj	attr								JJ	amod	10
9	layer	layer	attr+npremod	jj	attr								JJ	amod	10
10	architectures	architecture		nn	pl								NNS	nsubj	12
11	can	can		vbaux	mod	pos							MD	aux	12
12	benefit	benefit		vbmain	vblex	vp_w_modal	simple	active	compcls		incomp	compdel	VB	pcomp	5
13	from	from	in+advl	in	advl								IN	prep	12
14	,	,											,	punct	4
15	thinking	think	ingcls+advl	vbmain	prepv	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	4
16	about	about	in+advl	in	advl								IN	prep	15
17	detecting	detect	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	16
18	and	and		cc	phrs								CC	cc	17
19	responding	respond		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	17
20	specifically	specifically	rb+advl	rb	advl	ly							RB	advmod	19
21	in	in	in+advl	in	advl								IN	prep	19
22	real	real	attr+npremod	jj	attr								JJ	amod	24
23	-	-											HYPH	punct	24
24	time	time		nn									NN	pobj	21
25	to	to	in+advl	in	advl								IN	prep	19
26	unplanned	unplanned		jj	attr								JJ	amod	28
27	-	-											HYPH	punct	26
28	for	for											RP	pobj	25
29	states	state		nn	pl	nom							NNS	pobj	25
30	,	,											,	punct	4
31	and	and		cc	cls								CC	cc	4
32	then	then		rb	link								RB	advmod	35
33	we	we		pro	1st								PRP	nsubj	35
34	've	've		vbaux									VBP	aux	35
35	talked	talk		vbmain	prepv	pres	simple	active					VBN	conj	4
36	about	about	in+advl	in	advl								IN	prep	35
37	how	how		comp	comp_wh								WRB	advmod	41
38	,	,											,	punct	41
39	we	we		pro	1st								PRP	nsubj	41
40	could	could		vbaux	mod	pos							MD	aux	41
41	use	use	whcls+incomp	vbmain	vblex	vp_w_modal	simple	active	compcls	whcls	incomp		VB	pcomp	36
42	,	,											,	punct	41
43	the	the		dt	art								DT	det	44
44	ben-	ben-											XX	nmod	46
45	the	the		dt	art								DT	det	46
46	capabilities	capability		nn	pl	nom							NNS	dobj	41
47	of	of	of+npostmod	in	nmod								IN	prep	46
48	the	the		dt	art								DT	det	49
49	planner	planner		nn		nom							NN	pobj	47
50	and	and		cc	phrs								CC	cc	49
51	the	the		dt	art								DT	det	52
52	scheduler	scheduler		nn		nom							NN	conj	49
53	together	together		rb	othr								RB	advmod	46
54	,	,											,	punct	46
55	to	to		to									TO	aux	56
56	guide	guide	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	41
57	trade	trade	nn+npremod	nn			npremod						NN	compound	59
58	-	-											HYPH	punct	59
59	offs	off		nn	pl								NNS	dobj	56
60	and	and		cc	cls								CC	cc	41
61	then	then		rb	link								RB	advmod	76
62	,	,											,	punct	76
63	although	although		cs	con								IN	mark	70
64	we	we		pro	1st								PRP	nsubj	70
65	have	have		vbaux									VBP	aux	70
66	n't	not											RB	neg	70
67	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	70
68	,	,											,	punct	70
69	fully	fully	rb+advl	rb	advl	ly	splaux						RB	advmod	70
70	automated	automate	finitecls+advl	vbmain	vblex	pres	perf	active	advlcls		concessive		VBN	advcl	76
71	an	an		dt									DT	det	72
72	aircraft	aircraft		nn									NN	dobj	70
73	,	,											,	punct	76
74	we	we		pro	1st								PRP	nsubj	76
75	have	have		vbaux									VBP	aux	76
76	begun	begin		vbmain	vblex	pres	perf	active					VBN	conj	41
77	to	to		to									TO	aux	78
78	think	think	tocls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	76
79	about	about	in+advl	in	advl								IN	prep	78
80	the	the		dt	art								DT	det	81
81	problem	problem		nn									NN	pobj	79
82	,	,											,	punct	81
83	well	well											UH	intj	81
84	,	,											,	punct	81
85	other	other		jj	attr								JJ	amod	81
86	than	than	in+jcomp	in	jcomp								IN	prep	85
87	the	the		dt	art								DT	det	88
88	simulator	simulator		nn		nom							NN	pobj	86
89	we	we		pro	1st								PRP	nsubj	90
90	began	begin	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	76
91	to	to		to									TO	aux	92
92	think	think	tocls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	90
93	about	about	in+advl	in	advl								IN	prep	92
94	the	the		dt	art								DT	det	95
95	problem	problem		nn									NN	pobj	93
96	of	of	of+npostmod	in	nmod								IN	prep	95
97	,	,											,	punct	96
98	how	how		comp	comp_wh								WRB	advmod	100
99	to	to		to									TO	aux	100
100	use	use		vbmain	vblex	nonfinite	simple	active	compcls	tocls	incomp		VB	pcomp	96
101	such	such	attr+npremod	jj	attr								JJ	amod	106
102	high	high	attr+npremod	jj	attr								JJ	amod	104
103	-	-											HYPH	punct	104
104	level	level	nn+npremod	nn			npremod						NN	compound	106
105	reasoning	reasoning	nn+npremod	nn		nom	npremod						NN	compound	106
106	mechanisms	mechanism		nn	pl	nom							NNS	dobj	100
107	to	to		to									TO	aux	109
108	,	,											,	punct	109
109	augment	augment	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	100
110	,	,											,	punct	109
111	um	um											UH	intj	109
112	,	,											,	punct	109
113	the	the		dt	art								DT	det	115
114	system	system	nn+npremod	nn			npremod						NN	compound	115
115	response	response		nn									NN	dobj	109
116	for	for	in+npostmod	in	nmod								IN	prep	115
117	emergencies	emergency		nn	pl	nom							NNS	pobj	116
118	where	where		rb	advl								WRB	advmod	125
119	current	current	attr+npremod	jj	attr								JJ	amod	123
120	flight	flight	nn+npremod	nn			npremod						NN	compound	122
121	-	-											HYPH	punct	122
122	management	management	nn+npremod	nn		nom	npremod						NN	compound	123
123	systems	system		nn	pl								NNS	nsubj	125
124	would	would		vbaux	mod	prd							MD	aux	125
125	fail	fail	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	whcls	rel		VB	relcl	117
126	.	.											.	punct	76

#sentid = 662
0													_SP	dep	2
1	we	we		pro	1st								PRP	nsubj	2
2	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	quite	quite											PDT	predet	5
4	a	a		dt	art								DT	det	5
5	bit	bit		nn									NN	dobj	2
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	future	future	attr+npremod	jj	attr								JJ	amod	8
8	work	work		nn									NN	pobj	6
9	to	to		to									TO	aux	12
10	,	,											,	punct	12
11	to	to		to									TO	aux	12
12	look	look	tocls+rel	vbmain	prepv	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	8
13	at	at	in+advl	in	advl								IN	prep	12
14	um	um											UH	intj	13
15	,	,											,	punct	12
16	in	in	in+advl	in	advl								IN	prep	12
17	,	,											,	punct	16
18	all	all											DT	pobj	16
19	of	of		in	in_othr								IN	prep	18
20	the	the		dt	art								DT	det	22
21	different	different	attr+npremod	jj	attr								JJ	amod	22
22	disciplines	discipline		nn	pl								NNS	pobj	19
23	.	.											.	punct	2

#sentid = 663
0	in	in	in+advl	in	advl								IN	prep	6
1	planning	planning		nn		nom							NN	pobj	0
2	in	in	in+npostmod	in	nmod								IN	prep	1
3	particular	particular		jj	attr								JJ	amod	2
4	i	i		pro	1st	sg							PRP	nsubj	6
5	've	've		vbaux									VBP	aux	6
6	talked	talk		vbmain	prepv	pres	simple	active					VBN	ROOT	6
7	about	about	in+advl	in	advl								IN	prep	6
8	,	,											,	punct	7
9	um	um											UH	intj	7
10	,	,											,	punct	7
11	how	how		comp	comp_wh								WRB	advmod	13
12	to	to		to									TO	aux	13
13	impose	impose		vbmain	vblex	nonfinite	simple	active	compcls	tocls	incomp		VB	pcomp	7
14	real	real	attr+npremod	jj	attr								JJ	amod	16
15	-	-											HYPH	punct	16
16	time	time	nn+npremod	nn			npremod						NN	compound	18
17	planning	planning	nn+npremod	nn		nom	npremod						NN	compound	18
18	bounds	bound		nn	pl								NNS	dobj	13
19	because	because		cs	cos								IN	mark	27
20	in	in	in+advl	in	advl								IN	prep	27
21	the	the		dt	art								DT	det	23
22	worst	bad	attr+npremod	jj	attr								JJS	amod	23
23	case	case		nn									NN	pobj	20
24	we	we		pro	1st								PRP	nsubj	27
25	ca	can		vbaux	mod								MD	aux	27
26	n't	not											RB	neg	27
27	store	store	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		causative		VB	advcl	13
28	everything	everything		nn	other	nom							NN	dobj	27
29	in	in	in+advl	in	advl								IN	prep	27
30	advance	advance		nn		nom							NN	pobj	29
31	and	and		cc	cls								CC	cc	27
32	we	we		pro	1st								PRP	nsubj	35
33	,	,											,	punct	35
34	really	really	rb+advl	rb	advl	ly							RB	advmod	35
35	have	have		vbmain	vblex	pres	simple	active					VBP	conj	27
36	to	to		to									TO	aux	37
37	rely	rely		vbmain	prepv	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	35
38	on	on	in+advl	in	advl								IN	prep	37
39	some	some		dt									DT	det	42
40	dynamic	dynamic	attr+npremod	jj	attr								JJ	amod	42
41	,	,											,	punct	42
42	replanning	replanning		nn		nom							NN	pobj	38
43	.	.											.	punct	6

#sentid = 664
0	also	also	rb+advl	rb	advl								RB	advmod	15
1	although	although		cs	con								IN	mark	5
2	i	i		pro	1st	sg							PRP	nsubj	5
3	did	do		vbaux									VBD	aux	5
4	n't	not											RB	neg	5
5	talk	talk	finitecls+advl	vbmain	prepv	past	simple	active	advlcls		concessive		VB	advcl	15
6	about	about	in+advl	in	advl								IN	prep	5
7	this	this		pro	dem	sg							DT	pobj	6
8	in	in	in+advl	in	advl								IN	prep	5
9	detail	detail		nn									NN	pobj	8
10	,	,											,	punct	15
11	um	um											UH	intj	15
12	right	right	rb+jjrbmod	rb	othr								RB	advmod	13
13	now	now	rb+advl	rb	advl								RB	advmod	15
14	we	we		pro	1st								PRP	nsubj	15
15	specify	specify		vbmain	vblex	pres	simple	active					VBP	ROOT	15
16	a	a		dt	art								DT	det	17
17	list	list		nn		nom							NN	dobj	15
18	of	of	of+npostmod	in	nmod								IN	prep	17
19	subgoals	subgoal		nn	pl	nom							NNS	pobj	18
20	for	for	in+npostmod	in	nmod								IN	prep	19
21	the	the		dt	art								DT	det	22
22	planner	planner		nn		nom							NN	pobj	20
23	,	,											,	punct	15
24	and	and		cc	cls								CC	cc	15
25	we	we		pro	1st								PRP	nsubj	27
26	'd	would		vbaux	mod								MD	aux	27
27	like	like		vbmain	vblex	vp_w_modal	simple	active					VB	conj	15
28	to	to		to									TO	aux	29
29	be	be	tocls+vcomp	vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	27
30	able	able		jj	pred								JJ	acomp	29
31	to	to		to									TO	aux	33
32	dynamically	dynamically	rb+advl	rb	advl	ly	splaux						RB	advmod	33
33	develop	develop	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	30
34	those	those		pro	dem	pl							DT	dobj	33
35	too	too	rb+advl	rb	advl								RB	advmod	33
36	.	.											.	punct	27

#sentid = 665
0	um	um											UH	intj	5
1	,	,											,	punct	5
2	we	we		pro	1st								PRP	nsubj	5
3	also	also	rb+advl	rb	advl								RB	advmod	5
4	would	would		vbaux	mod	prd							MD	aux	5
5	like	like		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	5
6	to	to		to									TO	aux	7
7	continue	continue	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	5
8	evaluating	evaluate	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	7
9	our	our		dt	poss								PRP$	poss	11
10	stochastic	stochastic	attr+npremod	jj	attr								JJ	amod	11
11	model	model		nn									NN	dobj	8
12	,	,											,	punct	5
13	because	because		cs	cos								IN	mark	26
14	it	it		pro	3rd	sg							PRP	dep	26
15	,	,											,	punct	26
16	at	at	in+advl	in	advl								IN	prep	26
17	this	this		dt	dt_dem								DT	det	18
18	point	point		nn									NN	pobj	16
19	it	it		pro	3rd	sg							PRP	nsubjpass	26
20	's	be		vbaux									VBZ	auxpass	26
21	just	just	rb+advl	rb	advl								RB	advmod	26
22	,	,											,	punct	26
23	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	24
24	of	of	rb+advl	rb	advl								RB	advmod	26
25	been	be		vbaux									VBN	auxpass	26
26	proposed	propose	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls		causative		VBN	advcl	5
27	and	and		cc	phrs								CC	cc	26
28	implemented	implement		vbmain	vblex	nonfinite	simple	active		edcls			VBN	conj	26
29	but	but		cc	phrs								CC	cc	26
30	,	,											,	punct	26
31	we	we		pro	1st								PRP	nsubj	32
32	need	need		vbmain	vblex	pres	simple	active					VBP	conj	26
33	to	to		to									TO	aux	34
34	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	32
35	further	further	attr+npremod	jj	attr								JJ	amod	36
36	evaluations	evaluation		nn	pl	nom							NNS	dobj	34
37	specifically	specifically	rb+advl	rb	advl	ly							RB	advmod	39
38	to	to		to									TO	aux	39
39	compare	compare	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	32
40	it	it		pro	3rd	sg							PRP	dobj	39
41	to	to	in+advl	in	advl								IN	prep	39
42	,	,											,	punct	41
43	Markov	markov	nn+npremod	nn		proper	npremod						NNP	compound	44
44	methods	method		nn	pl								NNS	pobj	41
45	.	.											.	punct	5

#sentid = 666
0	so	so		rb	link								RB	advmod	13
1	,	,											,	punct	13
2	for	for	in+advl	in	advl								IN	prep	13
3	the	the		dt	art								DT	det	4
4	planner	planner		nn		nom							NN	pobj	2
5	and	and		cc	phrs								CC	cc	4
6	scheduler	scheduler		nn		nom							NN	conj	4
7	as	as		cs	cs_othr								IN	mark	9
8	i	i		pro	1st	sg							PRP	nsubj	9
9	said	say	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		other_advl		VBD	advcl	13
10	before	before	rb+advl	rb	advl								RB	advmod	9
11	we	we		pro	1st								PRP	nsubj	13
12	'd	would		vbaux	mod								MD	aux	13
13	like	like		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	13
14	to	to		to									TO	aux	17
15	,	,											,	punct	17
16	to	to		to									TO	aux	17
17	combine	combine	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	13
18	the	the		dt	art								DT	det	25
19	quality	quality	nn+npremod	nn		nom	npremod						NN	nmod	25
20	-	-											HYPH	punct	19
21	of	of	of+npostmod	in	nmod								IN	prep	19
22	-	-											HYPH	punct	21
23	service	service		nn									NN	pobj	21
24	negotiation	negotiation	nn+npremod	nn		nom	npremod						NN	compound	25
25	techniques	technique		nn	pl								NNS	dobj	17
26	with	with	in+advl	in	advl								IN	prep	17
27	,	,											,	punct	26
28	the	the		dt	art								DT	det	35
29	,	,											,	punct	35
30	right	right	rb+jjrbmod	rb	othr								RB	advmod	31
31	now	now		rb	othr								RB	advmod	34
32	the	the		dt	art								DT	det	34
33	the	the		dt	art								DT	det	34
34	planner	planner		nn		nom							NN	nsubj	35
35	backtracking	backtrack		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	pobj	26
36	to	to		to									TO	aux	37
37	find	find	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	35
38	a	a		dt	art								DT	det	41
39	a	a		dt	art								DT	det	41
40	schedulable	schedulable	attr+npremod	jj	attr								JJ	amod	41
41	plan	plan		nn									NN	dobj	37
42	.	.											.	punct	13

#sentid = 667
0	to	to		to									TO	aux	1
1	look	look		vbmain	vblex	nonfinite	simple	active		tocls			VB	ROOT	1
2	spec-	spec-	rb+advl	rb	advl								XX	advmod	1
3	at	at	in+advl	in	advl								IN	prep	1
4	specifically	specifically		rb	othr	ly							RB	advmod	8
5	the	the		dt	art								DT	det	8
6	trade	trade	nn+npremod	nn			npremod						NN	compound	8
7	-	-											HYPH	punct	8
8	offs	off		nn	pl								NNS	pobj	3
9	of	of	of+npostmod	in	nmod								IN	prep	8
10	,	,											,	punct	9
11	when	when		comp	comp_wh								WRB	advmod	15
12	you	you		pro	2nd	sg							PRP	nsubj	15
13	should	should		vbaux	mod	nec							MD	aux	15
14	,	,											,	punct	15
15	degrade	degrade	whcls+incomp	vbmain	vblex	vp_w_modal	simple	active	compcls	whcls	incomp		VB	pcomp	9
16	the	the		dt	art								DT	det	22
17	task	task	nn+npremod	nn			npremod						NN	nmod	22
18	lev-	lev-	nn+npremod	nn			npremod						NN	nmod	22
19	Q	q	nn+npremod	nn			npremod						NN	compound	21
20	-	-											HYPH	punct	21
21	S	s	nn+npremod	nn			npremod						NN	compound	22
22	level	level		nn									NN	dobj	15
23	,	,											,	punct	15
24	and	and		cc	cls								CC	cc	15
25	when	when		rb	advl								WRB	advmod	28
26	you	you		pro	2nd	sg							PRP	nsubj	28
27	should	should		vbaux	mod	nec							MD	aux	28
28	do	do		vbmain	vblex	vp_w_modal	simple	active					VB	conj	15
29	the	the		dt	art								DT	det	30
30	backtracking	backtracking		nn		nom							NN	dobj	28
31	,	,											,	punct	28
32	in	in	in+advl	in	advl								IN	prep	28
33	the	the		dt	art								DT	det	34
34	planner	planner		nn		nom							NN	pobj	32
35	.	.											.	punct	1

#sentid = 668
0	um	um											UH	intj	9
1	,	,											,	punct	9
2	for	for	in+advl	in	advl								IN	prep	9
3	pl-	pl-	attr+npremod	jj	attr								XX	amod	5
4	plan	plan	nn+npremod	nn			npremod						NN	compound	5
5	execution	execution		nn		nom							NN	pobj	2
6	we	we		pro	1st								PRP	nsubj	9
7	have	have		vbaux									VBP	aux	9
8	been	be		vbaux									VBN	aux	9
9	migrating	migrate		vbmain	vblex	pres	perfprog	active	compcls		vcomp	compdel	VBG	ccomp	24
10	CIRCA	circa		nn		proper							NNP	dobj	9
11	,	,											,	punct	9
12	toward	toward	in+advl	in	advl								IN	prep	9
13	a	a		dt	art								DT	det	18
14	real	real	attr+npremod	jj	attr								JJ	amod	16
15	-	-											HYPH	punct	16
16	time	time	nn+npremod	nn			npremod						NN	compound	18
17	operating	operating	nn+npremod	nn		nom	npremod						NN	compound	18
18	system	system		nn									NN	pobj	12
19	in	in	in+advl	in	advl								IN	prep	24
20	the	the		dt	art								DT	det	21
21	past	past		nn									NN	pobj	19
22	it	it		pro	3rd	sg							PRP	nsubjpass	24
23	's	be		vbaux									VBZ	auxpass	24
24	run	run		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	24
25	on	on	in+advl	in	advl								IN	prep	24
26	UNIX	unix		nn		proper							NNP	pobj	25
27	which	which											WDT	dobj	31
28	,	,											,	punct	31
29	we	we		pro	1st								PRP	nsubj	31
30	could	could		vbaux	mod	pos							MD	aux	31
31	get	get	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel		VB	relcl	26
32	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	33
33	of	of	rb+advl	rb	advl								RB	advmod	31
34	,	,											,	punct	31
35	guesses	guess		nn	pl	nom							NNS	dobj	31
36	at	at	in+npostmod	in	nmod								IN	prep	35
37	worst	bad	attr+npremod	jj	attr								JJS	amod	39
38	-	-											HYPH	punct	39
39	case	case	nn+npremod	nn			npremod						NN	compound	40
40	properties	property		nn	pl								NNS	pobj	36
41	at	at		rb	othr								IN	advmod	42
42	best	good		rb	othr								JJS	advmod	35
43	,	,											,	punct	24
44	so	so		cc	cls								CC	cc	24
45	for	for	in+advl	in	advl								IN	prep	57
46	the	the		dt	art								DT	det	51
47	U	u		nn		proper	npremod						NNP	compound	51
48	-	-											HYPH	punct	51
49	A	a	nn+npremod	nn			npremod						NN	compound	51
50	-	-											HYPH	punct	51
51	V	v		nn		proper							NNP	pobj	45
52	in	in	in+npostmod	in	nmod								IN	prep	51
53	particular	particular		jj	attr								JJ	amod	52
54	,	,											,	punct	57
55	we	we		pro	1st								PRP	nsubj	57
56	're	be		vbaux									VBP	aux	57
57	running	run		vbmain	vblex	pres	prog	active					VBG	conj	24
58	everything	everything		nn	other	nom							NN	dobj	57
59	on	on	in+advl	in	advl								IN	prep	57
60	the	the		dt	art								DT	det	67
61	Q	q		nn		proper	npremod						NNP	nmod	65
62	-	-											HYPH	punct	65
63	N	n		nn		proper	npremod						NNP	compound	65
64	-	-											HYPH	punct	65
65	X	x	nn+npremod	nn		proper	npremod						NNP	nmod	67
66	operating	operate	attr+npremod	jj	attr	ing							VBG	amod	67
67	system	system		nn									NN	pobj	59
68	,	,											,	punct	57
69	and	and		cc	cls								CC	cc	57
70	a-	a-											LS	punct	77
71	in	in	in+advl	in	advl								IN	prep	77
72	parallel	parallel	attr+npremod	jj	attr								JJ	amod	73
73	work	work		nn									NN	pobj	71
74	we	we		pro	1st								PRP	nsubj	77
75	've	've		vbaux									VBP	aux	77
76	been	be		vbaux									VBN	aux	77
77	migrating	migrate		vbmain	vblex	pres	prog	active					VBG	conj	57
78	the	the		dt	art								DT	det	85
79	entire	entire	attr+npremod	jj	attr								JJ	amod	85
80	,	,											,	punct	82
81	um	um											UH	intj	82
82	CIRCA	circa	nn+npremod	nn		proper	npremod						NNP	nmod	85
83	-	-											HYPH	punct	82
84	two	two											CD	nummod	82
85	architecture	architecture		nn		nom							NN	dobj	77
86	over	over	in+advl	in	advl								RP	prep	77
87	to	to	in+advl	in	advl								IN	prep	77
88	that	that		dt	dt_dem								DT	det	89
89	platform	platform		nn									NN	pobj	87
90	.	.											.	punct	77

#sentid = 669
0	at	at	in+advl	in	advl								IN	prep	6
1	the	the		dt	art								DT	det	3
2	same	same	attr+npremod	jj	attr								JJ	amod	3
3	time	time		nn									NN	pobj	0
4	we	we		pro	1st								PRP	nsubj	6
5	will	will		vbaux	mod	prd							MD	aux	6
6	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	6
7	things	thing		nn	pl	nom							NNS	dobj	6
8	like	like	in+npostmod	in	nmod								IN	prep	7
9	thread	thread	nn+npremod	nn			npremod						NN	compound	10
10	support	support		nn									NN	pobj	8
11	,	,											,	punct	6
12	and	and		cc	cls								CC	cc	6
13	,	,											,	punct	6
14	that	that		pro	dem	sg							DT	nsubj	16
15	will	will		vbaux	mod	prd							MD	aux	16
16	allow	allow		vbmain	vblex	vp_w_modal	simple	active					VB	conj	6
17	us	we		pro	pl								PRP	nsubj	19
18	to	to		to									TO	aux	19
19	be	be		vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	16
20	able	able		jj	pred								JJ	acomp	19
21	to	to		to									TO	aux	22
22	do	do	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	20
23	better	well	attr+npremod	jj	attr								JJR	amod	31
24	,	,											,	punct	31
25	um	um											UH	intj	31
26	,	,											,	punct	31
27	multi	multi	attr+npremod	jj	attr								JJ	amod	31
28	-	-	attr+npremod	jj	attr								JJ	amod	31
29	resource	resource	attr+npremod	jj	attr								JJ	amod	31
30	platform	platform	nn+npremod	nn			npremod						NN	compound	31
31	consideration	consideration		nn		nom							NN	dobj	22
32	within	within	in+advl	in	advl								IN	prep	22
33	the	the		dt	art								DT	det	37
34	plan	plan	nn+npremod	nn			npremod						NN	compound	36
35	-	-											HYPH	punct	36
36	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	37
37	part	part		nn									NN	pobj	32
38	of	of	of+npostmod	in	nmod								IN	prep	37
39	CIRCA	circa		nn		proper							NNP	pobj	38
40	.	.											.	punct	16

#sentid = 670
0	and	and		cc	cls								CC	cc	8
1	then	then		rb	link								RB	advmod	8
2	of	of	in+advl	in	advl								IN	prep	8
3	course	course		nn									NN	pobj	2
4	with	with	in+advl	in	advl								IN	prep	8
5	autonomous	autonomous	attr+npremod	jj	attr								JJ	amod	6
6	flight	flight		nn									NN	pobj	4
7	we	we		pro	1st								PRP	nsubj	8
8	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	8
9	,	,											,	punct	8
10	all	all		dt									DT	det	11
11	kinds	kind		nn	pl								NNS	dobj	8
12	of	of	of+npostmod	in	nmod								IN	prep	11
13	things	thing		nn	pl	nom							NNS	pobj	12
14	to	to		to									TO	aux	15
15	do	do	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	13
16	to	to		to									TO	aux	17
17	think	think	tocls+rel	vbmain	prepv	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	11
18	about	about	in+advl	in	advl								IN	prep	17
19	,	,											,	punct	18
20	really	really	rb+advl	rb	advl	ly							RB	advmod	8
21	,	,											,	punct	8
22	what	what		dt									WDT	det	23
23	features	feature		nn	pl								NNS	dobj	29
24	and	and		cc	phrs								CC	cc	23
25	what	what		dt									WDT	det	26
26	values	value		nn	pl								NNS	conj	23
27	do	do		vbaux									VBP	aux	29
28	we	we		pro	1st								PRP	nsubj	29
29	want	want		vbmain	vblex	pres	simple	active	compcls		vcomp		VB	ccomp	8
30	and	and		cc	cls								CC	cc	29
31	how	how		rb	advl								WRB	advmod	34
32	do	do		vbaux									VBP	aux	34
33	they	they		pro	pl								PRP	nsubj	34
34	interact	interact		vbmain	vblex	pres	simple	active					VB	conj	29
35	with	with	in+advl	in	advl								IN	prep	34
36	the	the		dt	art								DT	det	39
37	,	,											,	punct	39
38	flight	flight	nn+npremod	nn			npremod						NN	compound	39
39	dynamics	dynamic		nn	pl								NNS	pobj	35
40	and	and		cc	cls								CC	cc	34
41	also	also	rb+advl	rb	advl								RB	advmod	46
42	how	how		rb	advl								WRB	advmod	46
43	,	,											,	punct	46
44	can	can		vbaux	mod	pos							MD	aux	46
45	we	we		pro	1st								PRP	nsubj	46
46	look	look		vbmain	prepv	vp_w_modal	simple	active					VB	conj	34
47	at	at	in+advl	in	advl								IN	prep	46
48	,	,											,	punct	47
49	specifically	specifically		rb	othr	ly							RB	advmod	52
50	the	the		dt	art								DT	det	52
51	engine	engine	nn+npremod	nn			npremod						NN	compound	52
52	failure	failure		nn		nom							NN	pobj	47
53	and	and		cc	phrs								CC	cc	52
54	airframe	airframe	nn+npremod	nn			npremod						NN	compound	55
55	icing	icing	nn+npremod	nn		nom	npremod						NN	compound	56
56	emergencies	emergency		nn	pl	nom							NNS	conj	52
57	.	.											.	punct	8

#sentid = 671
0	that	that		pro	dem	sg							DT	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	everything	everything		nn		nom							NN	attr	1
3	.	.											.	punct	1

#sentid = 672
0	okay	okay											UH	intj	3
1	,	,											,	punct	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	it	it		pro	3rd	sg							PRP	attr	3
5	.	.											.	punct	3

#sentid = 673
0													_SP	dep	3
1	any	any	attr+npremod	jj	attr								DT	amod	3
2													_SP	dep	1
3	questions	question		nn	pl	nom							NNS	ROOT	3
4	?	?											.	punct	3

#sentid = 674
0													_SP	dep	1
1	questions	question		nn	pl	nom							NNS	ROOT	1
2													_SP	dep	1
3	from	from	in+npostmod	in	nmod								IN	prep	1
4	the	the		dt	art								DT	det	5
5	committee	committee		nn		nom							NN	pobj	3
6	?	?											.	punct	1

#sentid = 675
0													_SP	dep	0
1	just	just		rb	othr								RB	advmod	5
2	a	a		dt	art								DT	det	5
3	,	,											,	punct	5
4	personal	personal	attr+npremod	jj	attr								JJ	amod	5
5	question	question	appos+npostmod	nn		nom	nappos						NN	appos	0
6	,	,											,	punct	5
7													_SP	dep	5
8	yes	yes											UH	intj	12
9	,	,											,	punct	12
10													_SP	dep	12
11	i	i		pro	1st	sg							PRP	nsubj	12
12	know	know		vbmain	vblex	pres	simple	active	nmod_cls		ncomp	reldel	VBP	acl	5
13	you	you		pro	2nd	sg							PRP	nsubj	14
14	plan	plan	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	12
15	to	to		to									TO	aux	17
16	,	,											,	punct	17
17	have	have	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	14
18	some	some		dt									DT	det	20
19	continuing	continue	attr+npremod	jj	attr	ing							VBG	amod	20
20	contact	contact		nn									NN	dobj	17
21	with	with	in+npostmod	in	nmod								IN	prep	20
22	the	the		dt	art								DT	det	29
23	,	,											,	punct	29
24	U	u	nn+npremod	nn		proper	npremod						NNP	compound	28
25	-	-											HYPH	punct	28
26	A	a	nn+npremod	nn			npremod						NN	compound	28
27	-	-											HYPH	punct	28
28	V	v	nn+npremod	nn			npremod						NN	compound	29
29	activities	activity		nn	pl	nom							NNS	pobj	21
30	here	here		rb	othr								RB	advmod	29
31	but	but		cc	phrs								CC	cc	12
32	,	,											,	punct	12
33													_SP	dep	12
34	yes	yes											UH	intj	12
35	.	.											.	punct	12

#sentid = 676
0													_SP	dep	3
1	have	have		vbaux									VBP	aux	3
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	identified	identify		vbmain	vblex	pres	perf	active					VBN	ROOT	3
4	a	a		dt	art								DT	det	5
5	successor	successor		nn		nom							NN	dobj	3
6	from	from	in+npostmod	in	nmod								IN	prep	5
7	the	the		dt	art								DT	det	11
8	A	a		nn		proper	npremod						NNP	compound	10
9	-	-											HYPH	punct	10
10	I	i		nn	1st	proper	npremod						NNP	compound	11
11	Lab	lab		nn		proper							NNP	pobj	6
12	who	who		relpro	relpro_wh								WP	nsubj	16
13	might	might		vbaux	mod	pos							MD	aux	16
14	uh	uh											UH	intj	16
15	,	,											,	punct	16
16	be	be	finitecls+rel	vbmain	be	vp_w_modal	simple	active	nmod_cls	whcls	rel		VB	relcl	5
17	interested	interested		jj	pred								JJ	acomp	16
18	in	in	in+jcomp	in	jcomp								IN	prep	17
19	,	,											,	punct	18
20													_SP	dep	18
21	continuing	continue	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	18
22	this	this		pro	dem	sg							DT	dobj	21
23	?	?											.	punct	3

#sentid = 677
0													_SP	dep	10
1	no	no											UH	intj	3
2	i	i		pro	1st	sg							PRP	nsubj	3
3	have	have		vbaux									VBP	aux	10
4	n't	not											RB	neg	3
5	,	,											,	punct	3
6	and	and		cc	phrs								CC	cc	3
7	i	i		pro	1st	sg							PRP	nsubj	10
8	do	do		vbaux									VBP	aux	10
9	n't	not											RB	neg	10
10	plan	plan		vbmain	vblex	pres	perf	active					VB	ROOT	10
11	to	to											TO	xcomp	10
12	because	because		cs	cos								IN	mark	14
13	i	i		pro	1st	sg							PRP	nsubj	14
14	plan	plan	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBP	advcl	10
15	to	to		to									TO	aux	16
16	work	work	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	14
17	,	,											,	punct	16
18	on	on	in+advl	in	advl								IN	prep	16
19	it	it		pro	3rd	sg							PRP	pobj	18
20	myself	myself		pro	1st	sg							PRP	npadvmod	16
21	and	and		cc	cls								CC	cc	14
22	i	i		pro	1st	sg							PRP	nsubj	25
23	do	do		vbaux									VBP	aux	25
24	n't	not											RB	neg	25
25	wanna	wanna		vbmain	vblex	pres	simple	active					VB	conj	14
26	be	be		vbaux									VB	auxpass	27
27	replaced	replace		vbmain	vblex	nonfinite	simple	pasv_agls	compcls		vcomp	compdel	VBN	xcomp	25
28	.	.											.	punct	10

#sentid = 678
0													_SP	dep	6
1	ah	ah											UH	intj	6
2	,	,											,	punct	6
3	okay	okay											UH	intj	6
4	okay	okay											UH	intj	6
5	,	,											,	punct	6
6	okay	okay											UH	ROOT	6
7	.	.											.	punct	6

#sentid = 679
0													_SP	dep	2
1	that	that		pro	dem	sg							DT	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	a	a		dt	art								DT	det	5
4	good	good	attr+npremod	jj	attr								JJ	amod	5
5	answer	answer		nn		nom							NN	attr	2
6	.	.											.	punct	2

#sentid = 680
0													_SP	dep	6
1	so	so		rb	link								RB	advmod	6
2	we	we		pro	1st								PRP	dep	6
3	,	,											,	punct	6
4	we	we		pro	1st								PRP	nsubj	6
5	've	've		vbaux									VBP	aux	6
6	talked	talk		vbmain	prepv	pres	simple	active					VBN	ROOT	6
7	about	about	in+advl	in	advl								IN	prep	6
8	it	it		pro	3rd	sg							PRP	pobj	7
9	a	a		dt	art								DT	det	10
10	lot	lot		nn									NN	npadvmod	6
11	,	,											,	punct	6
12	and	and		cc	phrs								CC	cc	6
13	uh	uh											UH	intj	17
14	,	,											,	punct	17
15	they	they		pro	pl								PRP	nsubj	17
16	're	be		vbaux									VBP	aux	17
17	gon	go		vbaux									TO	aux	21
18	na	to		vbaux									TO	aux	21
19	of	of	in+advl	in	advl								IN	prep	21
20	course	course		nn									NN	pobj	19
21	keep	keep		vbmain	vblex	nonfinite	simple	active					VB	conj	6
22	the	the		dt	art								DT	det	23
23	airplane	airplane		nn									NN	dobj	21
24	here	here	rb+advl	rb	advl								RB	advmod	21
25	because	because		cs	cos								IN	mark	29
26	our	our		dt	poss								PRP$	poss	28
27	expert	expert	attr+npremod	jj	attr								JJ	amod	28
28	pilot	pilot		nn									NN	nsubj	29
29	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		causative		VBZ	advcl	21
30	here	here	rb+advl	rb	advl								RB	advmod	29

#sentid = 681
0	but	but											CC	ROOT	0
1	,	,											,	punct	0

#sentid = 682
0	since	since		cs	cs_othr								IN	mark	7
1	my	my		dt	poss								PRP$	poss	2
2	role	role		nn									NN	nsubj	7
3	is	be		vbaux									VBZ	aux	7
4	in	in	in+advl	in	advl								IN	prep	7
5	large	large	attr+npremod	jj	attr								JJ	amod	6
6	part	part		nn									NN	pobj	4
7	doing	do	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		other_advl		VBG	advcl	30
8	software	software		nn									NN	dobj	7
9	,	,											,	punct	7
10	and	and		cc	cls								CC	cc	7
11	we	we		pro	1st								PRP	nsubj	12
12	are	be		vbmain	be	pres	simple	active					VBP	conj	7
13	close	close		jj	pred								JJ	acomp	12
14	to	to	in+jcomp	in	jcomp								IN	prep	13
15	having	have	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	14
16	MATLAB	matlab	nn+npremod	nn		proper	npremod						NNP	compound	17
17	simulations	simulation		nn	pl	nom							NNS	dobj	15
18	of	of	of+npostmod	in	nmod								IN	prep	17
19	what	what											WP	nsubj	22
20	we	we		pro	1st								PRP	nsubj	21
21	believe	believe		vbmain	vblex	pres	simple	active	compcls		incomp	compdel	VBP	pcomp	18
22	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	21
23	the	the		dt	art								DT	det	24
24	dynamics	dynamic		nn	pl								NNS	attr	22
25	for	for	in+npostmod	in	nmod								IN	prep	24
26	the	the		dt	art								DT	det	27
27	airplanes	airplane		nn	pl								NNS	pobj	25
28	we	we		pro	1st								PRP	nsubj	30
29	can	can		vbaux	mod	pos							MD	aux	30
30	do	do		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	30
31	a	a		dt	art								DT	det	32
32	lot	lot		nn									NN	dobj	30
33	of	of	of+npostmod	in	nmod								IN	prep	32
34	the	the		dt	art								DT	det	38
35	,	,											,	punct	38
36	uh	uh											UH	intj	38
37	software	software	nn+npremod	nn			npremod						NN	compound	38
38	testing	testing		nn		nom							NN	pobj	33
39	remotely	remotely	rb+advl	rb	advl	ly							RB	advmod	30
40	.	.											.	punct	30

#sentid = 683
0	and	and		cc	cls								CC	cc	8
1	then	then		rb	link								RB	advmod	8
2	if	if		cs	cnd								IN	mark	4
3	there	there											EX	expl	4
4	are	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBP	advcl	8
5	major	major	attr+npremod	jj	attr								JJ	amod	6
6	flights	flight		nn	pl								NNS	attr	4
7	i	i		pro	1st	sg							PRP	nsubj	8
8	hope	hope		vbmain	vblex	pres	simple	active					VBP	ROOT	8
9	to	to		to									TO	aux	10
10	come	come	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	8
11	back	back	rb+advl	rb	advl								RB	advmod	10
12	and	and		cc	phrs								CC	cc	10
13	,	,											,	punct	10
14	go	go		vbmain	vblex	nonfinite	simple	active					VB	conj	10
15	out	out	rb+advl	rb	advl								RB	advmod	14
16	to	to		in	in_othr								IN	prep	15
17	the	the		dt	art								DT	det	18
18	field	field		nn									NN	pobj	16
19	and	and		cc	phrs								CC	cc	14
20	test	test		vbmain	vblex	nonfinite	simple	active					VB	conj	14
21	it	it		pro	3rd	sg							PRP	dobj	20
22	.	.											.	punct	8

#sentid = 684
0													_SP	dep	8
1	did	do		vbmain	vblex	past	simple	active					VBD	dep	8
2	,	,											,	punct	8
3	did	do		vbaux									VBD	aux	8
4	any	any											DT	nsubj	8
5	of	of		in	in_othr								IN	prep	4
6	your	your		dt	poss								PRP$	poss	7
7	implementations	implementation		nn	pl	nom							NNS	pobj	5
8	work	work		vbmain	vblex	past	simple	active					VB	ROOT	8
9	?	?											.	punct	8

#sentid = 685
0	um	um											UH	intj	4
1	,	,											,	punct	4
2													_SP	dep	4
3	a-	a-											XX	dep	4
4													_SP	dep	4
5	what	what											WP	dobj	8
6	do	do		vbaux									VBP	aux	8
7	you	you		pro	2nd	sg							PRP	nsubj	8
8	mean	mean		vbmain	vblex	pres	simple	active					VB	meta	4
9	did	do		vbaux									VBD	aux	11
10	they	they		pro	pl								PRP	nsubj	11
11	work	work		vbmain	vblex	past	simple	active	compcls		vcomp		VB	ccomp	8
12	?	?											.	punct	8

#sentid = 686
0													_SP	dep	21
1	well	well											UH	intj	5
2	how	how		rb	advl								WRB	advmod	5
3	would	would		vbaux	mod	prd							MD	aux	5
4	i	i		pro	1st	sg							PRP	nsubj	5
5	know	know		vbmain	vblex	vp_w_modal	simple	active					VBP	meta	0
6	,	,											,	punct	5
7	ho-	ho-											XX	dep	14
8													_SP	dep	7
9	i	i		nn	1st	proper							NNP	meta	7
10	,	,											,	punct	7
11	what	what		comp	comp_wh								WP	dobj	14
12	i	i		pro	1st	sg							PRP	nsubj	14
13	'd	would		vbaux	mod								MD	aux	14
14	like	like	whcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	whcls	vcomp		VB	ccomp	5
15	to	to											TO	ccomp	5
16	s-	s-											XX	dep	15
17													_SP	dep	21
18	well	well											UH	intj	21
19	i	i		pro	1st	sg							PRP	nsubj	21
20	can	can		vbaux	mod	pos							MD	aux	21
21	bring	bring		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	21
22	you	you		pro	2nd	sg							PRP	dative	21
23	the	the		dt	art								DT	det	24
24	video	video		nn									NN	dobj	21
25	.	.											.	punct	21

#sentid = 687
0													_SP	dep	7
1	well	well											UH	intj	7
2	no	no											UH	intj	7
3	,	,											,	punct	7
4													_SP	dep	7
5	well	well											UH	intj	7
6	it	it		pro	3rd	sg							PRP	nsubj	7
7	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	7
8													_SP	dep	7
9	i	i		pro	1st	sg							PRP	nsubj	12
10	do	do		vbaux									VBP	aux	12
11	n't	not											RB	neg	12
12	mean	mean		vbmain	vblex	pres	simple	active					VB	parataxis	19
13	,	,											,	punct	12
14	i	i		pro	1st	sg							PRP	nsubj	15
15	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	19
16	i	i		pro	1st	sg							PRP	dep	19
17	,	,											,	punct	19
18	y-	y-											XX	dep	19
19	had	have		vbmain	vblex	past	simple	active					VBD	meta	7
20	,	,											,	punct	19
21	not	not											RB	neg	23
22	not	not											RB	neg	23
23	with	with	in+advl	in	advl								IN	prep	19
24	the	the											DT	pobj	23
25	,	,											,	punct	29
26	i-	i-											XX	dep	29
27	i-	i-											XX	dep	29
28	not	not											RB	neg	29
29	with	with		in	in_othr								IN	prep	23
30	any	any		dt									DT	det	31
31	hardware	hardware		nn									NN	pobj	29
32	but	but		cc	cls								CC	cc	19
33	you	you		pro	2nd	sg							PRP	nsubj	34
34	had	have		vbmain	vblex	past	simple	active					VBD	conj	19
35	two	two											CD	nummod	37
36	different	different	attr+npremod	jj	attr								JJ	amod	37
37	simulation	simulation		nn		nom							NN	dobj	34
38													_SP	dep	34
39	right	right											UH	intj	41
40	,	,											,	punct	41
41	mhm	mhm											UH	intj	34
42	.	.											.	punct	34

#sentid = 688
0													_SP	dep	1
1	requirements	requirement		nn	pl	nom							NNS	ROOT	1
2	and	and		cc	phrs								CC	cc	1
3	,	,											,	punct	1
4	the	the		dt	art								DT	det	12
5	only	only		jj	attr								JJ	amod	12
6	,	,											,	punct	12
7	quantitative	quantitative											JJ	intj	12
8	,	,											,	punct	12
9	i	i		pro	1st	sg							PRP	nsubj	12
10	did	do		vbaux									VBD	aux	12
11	n't	not											RB	neg	12
12	see	see		vbmain	vblex	past	simple	active					VB	conj	1
13	any	any		dt									DT	det	15
14	quantitative	quantitative	attr+npremod	jj	attr								JJ	amod	15
15	measures	measure		nn	pl								NNS	dobj	12
16	of	of	of+npostmod	in	nmod								IN	prep	15
17	,	,											,	punct	16
18	performance	performance		nn		nom							NN	pobj	16
19	or	or		cc	phrs								CC	cc	18
20	,	,											,	punct	18
21	or	or		cc	phrs								CC	cc	18
22	capabilities	capability		nn	pl	nom							NNS	conj	18
23	at	at	rb+jjrbmod	rb	othr								RB	advmod	24
24	all	all		rb	othr								RB	advmod	22
25	,	,											,	punct	12
26													_SP	dep	12
27	right	right											UH	intj	12
28	.	.											.	punct	12

#sentid = 689
0													_SP	dep	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	saw	see		vbmain	vblex	past	simple	active					VBD	ROOT	2
3	a	a											DT	quantmod	4
4	few	few											JJ	nummod	5
5	numbers	number		nn	pl	nom							NNS	dobj	2
6	that	that		pro	dem	sg							WDT	dobj	8
7	you	you		pro	2nd	sg							PRP	nsubj	8
8	scratched	scratch	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel		VBD	relcl	5
9	on	on	in+advl	in	advl								IN	prep	8
10	your	your		dt	poss								PRP$	poss	12
11	,	,											,	punct	12
12	transparencies	transparency		nn	pl	nom							NNS	pobj	9
13	but	but		cc	cls								CC	cc	2
14	i	i		pro	1st	sg							PRP	nsubj	15
15	have	have		vbmain	vblex	pres	simple	active					VBP	conj	2
16	no	no		dt									DT	det	17
17	idea	idea		nn									NN	dobj	15
18	whether	whether		cs	cs_othr								IN	mark	29
19	,	,											,	punct	29
20	these	these		pro	dem	pl							DT	nsubj	21
21	are	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	29
22	good	good	attr+npremod	jj	attr								JJ	amod	23
23	ideas	idea		nn	pl								NNS	attr	21
24	bad	bad	attr+npremod	jj	attr								JJ	amod	25
25	ideas	idea	appos+npostmod	nn	pl		nappos						NNS	appos	23
26	,	,											,	punct	29
27	can	can		vbaux	mod	pos							MD	aux	29
28	you	you		pro	2nd	sg							PRP	nsubj	29
29	help	help		vbmain	vblex	vp_w_modal	simple	active	nmod_cls		other_advl	reldel	VB	acl	17
30	me	i		pro	1st	sg							PRP	dobj	29
31	?	?											.	punct	29

#sentid = 690
0													_SP	dep	5
1	right	right											UH	intj	5
2	well	well											UH	intj	5
3	,	,											,	punct	5
4	that	that		pro	dem	sg							DT	nsubj	5
5	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	5
6	something	something		nn		nom							NN	attr	5
7	that	that		pro	dem	sg							WDT	pobj	12
8	i	i		pro	1st	sg							PRP	nsubj	11
9	've	've		vbaux									VBP	aux	11
10	been	be		vbaux									VBN	aux	11
11	struggling	struggle	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel	reldel	VBG	relcl	6
12	with	with	in+advl	in	advl								IN	prep	11
13	for	for	in+advl	in	advl								IN	prep	11
14	a	a		dt	art								DT	det	15
15	while	while		nn									NN	pobj	13
16	and	and		cc	cls								CC	cc	5
17	,	,											,	punct	5
18	the	the		dt	art								DT	det	19
19	problem	problem		nn									NN	nsubj	20
20	is	be		vbmain	be	pres	simple	active					VBZ	conj	5
21	,	,											,	punct	20
22	what	what											WP	dobj	25
23	do	do		vbaux									VBP	aux	25
24	i	i		pro	1st	sg							PRP	nsubj	25
25	plot	plot		vbmain	vblex	pres	simple	active					VB	dobj	36
26	what	what											WP	dep	27
27	do	do		vbmain	vblex	pres	simple	active					VBP	dobj	36
28	i	i		pro	1st	sg							PRP	nsubj	27
29	what	what											WP	dep	30
30	do	do	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBP	advcl	36
31	i	i		pro	1st	sg							PRP	nsubj	30
32	,	,											,	punct	36
33	what	what		comp	comp_wh								WP	dobj	36
34	do	do		vbaux									VBP	aux	36
35	i	i		pro	1st	sg							PRP	nsubj	36
36	show	show	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VB	ccomp	20
37	because	because		cs	cos								IN	mark	43
38	,	,											,	punct	43
39	it	it		pro	3rd	sg							PRP	nsubj	43
40	does	do		vbaux									VBZ	aux	43
41	n't	not											RB	neg	43
42	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	43
43	tell	tell	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VB	advcl	20
44	anything	anything		nn	other	nom							NN	dobj	43
45	to	to		to									TO	aux	46
46	show	show	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	44
47	_	_											NFP	punct	20

#sentid = 691
0	so	so		rb	link								RB	advmod	2
1	you	you		pro	2nd	sg							PRP	nsubj	2
2	saw	see		vbmain	vblex	past	simple	active					VBD	ROOT	2
3	in	in	in+advl	in	advl								IN	prep	2
4	the	the		dt	art								DT	det	9
5	Q	q	nn+npremod	nn			npremod						NN	compound	7
6	-	-											HYPH	punct	7
7	S	s	nn+npremod	nn			npremod						NN	compound	9
8	negotiation	negotiation	nn+npremod	nn		nom	npremod						NN	compound	9
9	section	section		nn		nom							NN	pobj	3
10	i	i		pro	1st	sg							PRP	nsubj	11
11	had	have	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	2
12	controller	controller	nn+npremod	nn		nom	npremod						NN	compound	13
13	response	response		nn									NN	dobj	11
14	which	which		relpro	relpro_wh								WDT	nsubj	15
15	made	make	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls	whcls	rel		VBD	relcl	13
16	sense	sense		nn									NN	dobj	15
17	for	for	in+advl	in	advl								IN	prep	15
18	that	that		pro	dem	sg							DT	pobj	17
19	because	because		cs	cos								IN	mark	22
20	we	we		pro	1st								PRP	nsubj	22
21	were	be		vbaux									VBD	aux	22
22	varying	vary	finitecls+advl	vbmain	vblex	past	prog	active	advlcls		causative		VBG	advcl	15
23	worst	bad	attr+npremod	jj	attr								JJS	amod	25
24	-	-											HYPH	punct	25
25	case	case	nn+npremod	nn			npremod						NN	compound	27
26	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	27
27	times	time		nn	pl								NNS	dobj	22
28	,	,											,	punct	22
29	for	for	in+advl	in	advl								IN	prep	22
30	things	thing		nn	pl	nom							NNS	pobj	29
31	like	like	in+npostmod	in	nmod								IN	prep	30
32	the	the		dt	art								DT	det	33
33	controller	controller		nn		nom							NN	pobj	31
34	and	and		cc	cls								CC	cc	22
35	seeing	see		vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	csubj	39
36	what	what											WP	nsubj	37
37	happened	happen	whcls+vcomp	vbmain	vblex	past	simple	active	compcls	whcls	vcomp		VBD	ccomp	35
38	eventually	eventually	rb+advl	rb	advl	ly							RB	advmod	39
39	became	become		vbmain	vblex	past	simple	active					VBD	conj	22
40	unstable	unstable		jj	pred								JJ	acomp	39
41	.	.											.	punct	2

#sentid = 692
0	for	for											IN	dep	14
1	,	,											,	punct	14
2	thinking	think	ingcls+advl	vbmain	prepv	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	14
3	about	about	in+advl	in	advl								IN	prep	2
4	,	,											,	punct	3
5	whether	whether		cs	cs_othr								IN	mark	7
6	CIRCA	circa		nn		proper							NNP	nsubj	7
7	succeeds	succeed		vbmain	vblex	pres	simple	active	compcls		other_advl	compdel	VBZ	pcomp	3
8	or	or		cc	phrs								CC	cc	7
9	fails	fail		vbmain	vblex	pres	simple	active					VBZ	conj	7
10	,	,											,	punct	14
11	uh	uh											UH	intj	14
12	,	,											,	punct	14
13	these	these		pro	dem	pl							DT	nsubj	14
14	are	be		vbmain	be	pres	simple	active					VBP	ROOT	14
15	such	such	attr+npremod	jj	attr								JJ	amod	19
16	high	high	attr+npremod	jj	attr								JJ	amod	18
17	-	-											HYPH	punct	18
18	level	level	nn+npremod	nn			npremod						NN	compound	19
19	responses	response		nn	pl								NNS	attr	14
20	that	that		relpro	relpro_that								IN	mark	31
21	,	,											,	punct	31
22	plotting	plot		vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	csubj	31
23	the	the		dt	art								DT	det	24
24	trajectory	trajectory		nn		nom							NN	dobj	22
25	of	of	of+npostmod	in	nmod								IN	prep	24
26	the	the		dt	art								DT	det	27
27	aircraft	aircraft		nn									NN	pobj	25
28	really	really	rb+advl	rb	advl	ly							RB	advmod	31
29	does	do		vbaux									VBZ	aux	31
30	n't	not											RB	neg	31
31	seem	seem	thatcls+ncomp	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	ncomp		VB	acl	19
32	to	to		to									TO	aux	33
33	make	make		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	31
34	a	a		dt	art								DT	det	35
35	lot	lot		nn									NN	dobj	33
36	of	of	of+npostmod	in	nmod								IN	prep	35
37	sense	sense		nn									NN	pobj	36
38	.	.											.	punct	14

#sentid = 693
0	and	and		cc	cls								CC	cc	20
1	,	,											,	punct	20
2	since	since		cs	cs_othr								IN	mark	4
3	these	these		pro	dem	pl							DT	nsubj	4
4	are	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBP	advcl	20
5	,	,											,	punct	4
6	high	high	attr+npremod	jj	attr								JJ	amod	8
7	-	-											HYPH	punct	8
8	level	level	nn+npremod	nn			npremod						NN	nmod	10
9	discrete	discrete	attr+npremod	jj	attr								JJ	amod	10
10	values	value		nn	pl								NNS	attr	4
11	,	,											,	punct	20
12	the	the		dt	art								DT	det	13
13	most	most											JJS	nsubj	20
14	i	i		pro	1st	sg							PRP	nsubj	16
15	have	have		vbaux									VBP	aux	16
16	been	be	finitecls+rel	vbmain	be	pres	perf	active	nmod_cls		rel	reldel	VBN	relcl	13
17	able	able		jj	pred								JJ	acomp	16
18	to	to		to									TO	aux	19
19	do	do	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	17
20	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	20
21	to	to		to									TO	aux	22
22	come	come	tocls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	20
23	up	up		rb	prtcle								RP	prt	22
24	with	with	in+advl	in	advl								IN	prep	22
25	,	,											,	punct	24
26	here	here	rb+advl	rb	advl								RB	advmod	27
27	's	be		vbmain	be	pres	simple	active	compcls		incomp	compdel	VBZ	pcomp	24
28	the	the		dt	art								DT	det	29
29	plan	plan		nn									NN	nsubj	27
30	and	and		cc	cls								CC	cc	20
31	,	,											,	punct	34
32	i	i		pro	1st	sg							PRP	nsubj	34
33	could	could		vbaux	mod	pos							MD	aux	34
34	give	give		vbmain	vblex	vp_w_modal	simple	active					VB	conj	20
35	a	a		dt	art								DT	det	36
36	video	video		nn									NN	dobj	34
37	on	on	in+npostmod	in	nmod								IN	prep	36
38													_SP	dep	37
39	showing	show	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	37
40	it	it		pro	3rd	sg							PRP	dobj	39
41	flying	fly		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	dep	39
42	.	.											.	punct	20

#sentid = 694
0													_SP	dep	8
1	but	but		cc	phrs								CC	cc	8
2	you	you		pro	2nd	sg							PRP	nsubj	4
3	could	could		vbaux	mod	pos							MD	aux	4
4	stress	stress		vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	8
5	,	,											,	punct	8
6	you	you		pro	2nd	sg							PRP	nsubj	8
7	could	could		vbaux	mod	pos							MD	aux	8
8	stress	stress		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	8
9	your	your		dt	poss								PRP$	poss	10
10	plan	plan		nn									NN	dobj	8
11	in	in	in+advl	in	advl								IN	prep	8
12	a	a		dt	art								DT	det	13
13	variety	variety		nn									NN	pobj	11
14	of	of	of+npostmod	in	nmod								IN	prep	13
15	ways	way		nn	pl								NNS	pobj	14
16	many	many	attr+npremod	jj	attr								JJ	amod	19
17	many	many	attr+npremod	jj	attr								JJ	amod	19
18	different	different	attr+npremod	jj	attr								JJ	amod	19
19	ways	way	appos+npostmod	nn	pl		nappos						NNS	appos	15
20	i	i		pro	1st	sg							PRP	nsubj	21
21	presume	presume		vbmain	vblex	pres	simple	active					VBP	parataxis	8
22	,	,											,	punct	21
23													_SP	dep	21
24	i	i		pro	1st	sg							PRP	nsubj	29
25	i	i		pro	1st	sg							PRP	nsubj	26
26	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	28
27	what	what											WP	dep	28
28	you	you		pro	2nd	sg							PRP	meta	24
29													_SP	dep	39
30	well	well											UH	intj	33
31	i	i		pro	1st	sg							PRP	nsubj	33
32	can	can		vbaux	mod	pos							MD	aux	33
33	change	change		vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	39
34	,	,											,	punct	39
35	i	i		pro	1st	sg							PRP	dep	39
36	,	,											,	punct	39
37	so	so		rb	link								CC	advmod	39
38	that	that		pro	dem	sg							DT	nsubj	39
39	was	be		vbmain	be	past	simple	active					VBD	dep	21
40	the	the		dt	art								DT	det	41
41	idea	idea		nn									NN	attr	39
42	by	by	in+advl	in	advl								IN	prep	39
43	uh	uh											UH	intj	42
44	,	,											,	punct	42
45													_SP	dep	21
46	you	you		pro	2nd	sg							PRP	nsubj	47
47	have	have		vbmain	vblex	pres	simple	active	compcls			compdel	VBP	ccomp	49
48	three	three											CD	dobj	47
49													_SP	dep	21
50	changing	change	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	21
51	the	the		dt	art								DT	det	52
52	deadlines	deadline		nn	pl								NNS	dobj	50
53													_SP	dep	21
54	you	you		pro	2nd	sg							PRP	nsubj	55
55	had	have	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	21
56	three	three											CD	dobj	55
57													_SP	dep	56
58	and	and		cc									CC	cc	56
59	so	so	rb+jjrbmod	rb	othr								RB	advmod	60
60	forth	forth											RB	conj	56
61													_SP	dep	63
62	you	you		pro	2nd	sg							PRP	nsubj	63
63	had	have	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	21
64	three	three											CD	nummod	66
65	different	different	attr+npremod	jj	attr								JJ	amod	66
66	scenarios	scenario		nn	pl								NNS	dobj	63
67	i	i		pro	1st	sg							PRP	nsubj	68
68	think	think		vbmain	vblex	pres	simple	active					VBP	parataxis	63
69													_SP	dep	8
70	right	right											JJ	intj	8
71	?	?											.	punct	70

#sentid = 695
0													_SP	dep	3
1	yeah	yeah											UH	intj	3
2	,	,											,	punct	3
3	mhm	mhm											UH	ROOT	3
4	...	...											:	punct	3

#sentid = 696
0													_SP	dep	50
1	uh	uh											UH	intj	0
2	uh	uh											UH	intj	1
3													_SP	dep	50
4	so	so		rb	link								RB	advmod	50
5	,	,											,	punct	50
6													_SP	dep	50
7	so	so		rb	link								RB	advmod	50
8	,	,											,	punct	50
9	wha-	wha-											XX	dep	17
10	what	what											WP	dep	17
11	would	would		vbaux	mod	prd							MD	aux	17
12	it	it		pro	3rd	sg							PRP	nsubj	17
13	,	,											,	punct	17
14	suppo-	suppo-											XX	dep	17
15	you	you		pro	2nd	sg							PRP	nsubj	16
16	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	17
17	suppose	suppose		vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	50
18	you	you		pro	2nd	sg							PRP	nsubj	20
19	're	be		vbaux									VBP	aux	20
20	running	run		vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	50
21	the	the		dt	art								DT	det	26
22	F	f		nn		proper	npremod						NNP	compound	26
23	-	-											HYPH	punct	26
24	A	a		nn		proper	npremod						NNP	compound	26
25	-	-											HYPH	punct	26
26	A	a		nn		proper							NNP	dobj	20
27	,	,											,	punct	20
28	in	in	in+advl	in	advl								IN	prep	20
29	ten	ten											CD	quantmod	31
30	,	,											,	punct	31
31	twenty	twenty											CD	nummod	32
32	years	year		nn	pl								NNS	pobj	28
33	let	let		vbmain	vblex	nonfinite	simple	active					VB	dep	20
34	's	us											PRP	nsubj	35
35	suppose	suppose		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	33
36	you	you		pro	2nd	sg							PRP	nsubj	37
37	know	know		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	35
38	,	,											,	punct	35
39													_SP	dep	50
40	well	well											UH	intj	50
41	they	they		pro	pl								PRP	nsubj	44
42	do	do		vbaux									VBP	aux	44
43	n't	not											RB	neg	44
44	like	like		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	50
45	,	,											,	punct	44
46													_SP	dep	50
47	yeah	yeah											UH	intj	50
48	they	they		pro	pl								PRP	nsubj	50
49	would	would		vbaux	mod	prd							MD	aux	50
50	want	want		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	50
51	more	more	attr+npremod	jj	attr								JJR	amod	52
52	numbers	number		nn	pl	nom							NNS	dobj	50
53	than	than	in+npostmod	in	nmod								IN	prep	52
54	that	that		pro	dem	sg							DT	pobj	53
55	before	before		cs	cs_othr								IN	mark	58
56	they	they		pro	pl								PRP	nsubj	58
57	would	would		vbaux	mod	prd							MD	aux	58
58	give	give	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	50
59	me	i		pro	1st	sg							PRP	dative	58
60	a	a		dt	art								DT	det	61
61	shot	shot		nn									NN	dobj	58
62	at	at	in+npostmod	in	nmod								IN	prep	61
63	running	run	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	62
64	the	the		dt	art								DT	det	73
65													_SP	dep	73
66	um	um											UH	intj	73
67	,	,											,	punct	73
68													_SP	dep	73
69	F	f		nn		proper	npremod						NNP	compound	73
70	-	-											HYPH	punct	73
71	A	a		nn		proper	npremod						NNP	compound	73
72	-	-											HYPH	punct	73
73	A	a		nn		proper							NNP	dobj	63
74	but	but		cc	phrs								CC	cc	58
75	yeah	yeah											UH	intj	77
76	,	,											,	punct	75
77													_SP	dep	58
78	what	what											WP	dep	81
79	are	be		vbaux									VBP	aux	81
80	you	you		pro	2nd	sg							PRP	nsubj	81
81	gon	go		vbaux									TO	aux	83
82	na	to		vbaux									TO	aux	83
83	say	say		vbmain	vblex	nonfinite	simple	active					VB	dep	50
84	to	to	in+advl	in	advl								IN	prep	83
85	,	,											,	punct	84
86	people	people		nn	pl								NNS	npadvmod	83
87	,	,											,	punct	90
88	are	be		vbaux									VBP	aux	90
89	you	you		pro	2nd	sg							PRP	nsubj	90
90	gon	go		vbmain	vblex	pres	prog	active					VBG	conj	83
91	na	to	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	50
92	,	,											,	punct	94
93	you	you		pro	2nd	sg							PRP	nsubj	94
94	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	99
95	next	next	attr+npremod	jj	attr								JJ	amod	96
96	year	year		nn									NN	npadvmod	99
97	you	you		pro	2nd	sg							PRP	nsubj	99
98	're	be		vbaux									VBP	aux	99
99	gon	go		vbaux									TO	aux	102
100	na	to		vbaux									TO	aux	102
101	be	be		vbaux									VB	aux	102
102	writing	write	ingcls+vcomp	vbmain	vblex	nonfinite	prog	active	compcls	ingcls	vcomp		VBG	xcomp	91
103	,	,											,	punct	102
104	grant	grant	nn+npremod	nn		nom	npremod						NN	compound	105
105	proposals	proposal		nn	pl	nom							NNS	dobj	102
106	.	.											.	punct	50

#sentid = 697
0													_SP	dep	0
1	mhm	mhm											UH	intj	0
2	.	.											.	punct	1

#sentid = 698
0													_SP	dep	10
1	um	um											UH	intj	0
2	...	...											:	punct	1
3	how	how		rb	advl								WRB	advmod	10
4	do	do		vbaux									VBP	aux	10
5	you	you		pro	2nd	sg							PRP	nsubj	10
6	,	,											,	punct	10
7	how	how		rb	advl		splaux						WRB	advmod	10
8	do	do		vbaux									VBP	aux	10
9	you	you		pro	2nd	sg							PRP	nsubj	10
10	convince	convince		vbmain	vblex	pres	simple	active					VB	ROOT	10
11	people	people		nn	pl								NNS	dobj	10
12	that	that		comp	comp_that								IN	mark	15
13	these	these		dt	dt_dem								DT	det	14
14	ideas	idea		nn	pl								NNS	nsubj	15
15	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	10
16	,	,											,	punct	15
17	at	at		rb	othr								IN	advmod	18
18	least	least	rb+jjrbmod	rb	adjmod								JJS	advmod	19
19	worth	worth		jj	pred								JJ	acomp	15
20	trying	try	ingcls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	ingcls	jcomp		VBG	xcomp	19
21	out	out		rb	prtcle								RP	prt	20
22	some	some		dt									DT	det	23
23	more	more											JJR	npadvmod	20
24	?	?											.	punct	10

#sentid = 699
0													_SP	dep	26
1	so	so		rb	link								RB	advmod	4
2	,	,											,	punct	4
3	there	there											EX	expl	4
4	are	be		vbmain	in_othr	pres	simple	active					VBP	prep	0
5	two	two											CD	nummod	9
6	,	,											,	punct	9
7	separate	separate	attr+npremod	jj	attr								JJ	amod	9
8	,	,											,	punct	9
9	ways	way		nn	pl								NNS	attr	4
10	that	that		rb	advl								WRB	advmod	13
11	i	i		pro	1st	sg							PRP	nsubj	13
12	am	be		vbaux									VBP	aux	13
13	looking	look	finitecls+rel	vbmain	prepv	pres	prog	active	nmod_cls		rel		VBG	relcl	9
14	at	at	in+advl	in	advl								IN	prep	13
15	this	this		pro	dem	sg							DT	pobj	14
16	i	i		pro	1st	sg							PRP	nsubj	17
17	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	18
18	one	one											CD	nummod	20
19	,	,											,	punct	20
20	avenue	avenue		nn									NN	nsubj	26
21	of	of	of+npostmod	in	nmod								IN	prep	20
22	me	i		pro	1st	sg							PRP	nsubj	23
23	getting	get	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	21
24	more	more	attr+npremod	jj	attr								JJR	amod	25
25	plucks	pluck		nn	pl								NNS	dobj	23
26	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	26
27	to	to		to									TO	aux	28
28	put	put	tocls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	26
29	this	this		pro	dem	sg							DT	dobj	28
30	in	in		rb	prtcle								RP	prt	28
31	with	with	in+advl	in	advl								IN	prep	28
32	say	say											UH	intj	31
33	the	the		dt	art								DT	det	36
34	simple	simple	attr+npremod	jj	attr								JJ	amod	36
35	longitudinal	longitudinal	attr+npremod	jj	attr								JJ	amod	36
36	controller	controller		nn		nom							NN	pobj	31
37	,	,											,	punct	36
38	for	for	in+npostmod	in	nmod								IN	prep	36
39	,	,											,	punct	38
40	not	not											RB	preconj	43
41	only	only	rb+jjrbmod	rb	othr	ly							RB	advmod	40
42	model	model	nn+npremod	nn			npremod						NN	compound	43
43	identification	identification		nn		nom							NN	pobj	38
44	but	but		cc	phrs								CC	cc	43
45	overall	overall											RB	conj	43
46	,	,											,	punct	45
47	what	what											WP	nsubj	48
48	happens	happen		vbmain	vblex	pres	simple	active					VBZ	conj	45
49	when	when		rb	advl								WRB	advmod	57
50	you	you		pro	2nd	sg							PRP	nsubj	53
51	,	,											,	punct	53
52	uh	uh											UH	intj	53
53	detect	detect	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBP	advcl	48
54	this	this		dt	dt_dem								DT	det	55
55	problem	problem		nn									NN	dobj	53
56	and	and		cc	phrs								CC	cc	53
57	do	do		vbmain	vblex	pres	simple	active					VBP	conj	53
58	some	some		dt									DT	det	61
59	,	,											,	punct	61
60	so	so	rb+jjrbmod	rb	othr								RB	advmod	61
61	so	so	rb+advl	rb	advl								RB	advmod	57
62	...	...											:	punct	26

#sentid = 700
0													_SP	dep	7
1	i	i		pro	1st	sg							PRP	nsubj	2
2	'm	be		vbaux									VBP	aux	7
3	not	not											RB	neg	2
4													_SP	dep	7
5	are	be		vbaux									VBP	aux	7
6	you	you		pro	2nd	sg							PRP	nsubj	7
7	saying	say		vbmain	vblex	pres	prog	active					VBG	ROOT	7
8	you	you		pro	2nd	sg							PRP	nsubj	9
9	need	need	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	7
10	a	a		dt	art								DT	det	12
11	truth	truth	nn+npremod	nn			npremod						NN	compound	12
12	model	model		nn									NN	dobj	9
13	somehow	somehow	rb+advl	rb	advl								RB	advmod	9
14	i	i		pro	1st	sg							PRP	nsubj	15
15	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	13
16	a-	a-											XX	dep	9
17	to	to											TO	dep	20
18	to	to		to									TO	aux	20
19	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	20
20	make	make	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	9
21	,	,											,	punct	20
22	performance	performance	nn+npremod	nn		nom	npremod						NN	compound	23
23	comparisons	comparison		nn	pl								NNS	dobj	20
24	in	in	in+advl	in	advl								IN	prep	20
25	some	some		dt									DT	det	26
26	way	way		nn									NN	pobj	24
27	.	.											.	punct	7

#sentid = 701
0	i	i		pro	1st	sg							PRP	nsubj	1
1	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	4
2	you	you		pro	2nd	sg							PRP	nsubj	4
3	've	've		vbaux									VBP	aux	4
4	got	get		vbmain	vblex	pres	simple	active					VBN	ROOT	4
5	to	to		to									TO	aux	6
6	have	have	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	4
7	,	,											,	punct	6
8	something	something		nn	other	nom							NN	dobj	6
9	to	to		to									TO	aux	10
10	compare	compare	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	8
11	with	with	in+advl	in	advl								IN	prep	10
12	,	,											,	punct	6
13													_SP	dep	4
14	right	right											UH	intj	4
15	.	.											.	punct	4

#sentid = 702
0	s-	s-											XX	ROOT	0
1	so	so		cc									RB	cc	0
2													_SP	dep	0
3	and	and		cc									CC	cc	0
4													_SP	dep	0

#sentid = 703
0	so	so	rb+jjrbmod	rb	othr								RB	advmod	1
1	far	far	rb+advl	rb	advl								RB	advmod	6
2	i	i		pro	1st	sg							PRP	nsubj	6
3	've	've		vbaux									VBP	aux	6
4	been	be		vbaux									VBN	aux	6
5	,	,											,	punct	6
6	doing	do		vbmain	vblex	pres	prog	active					VBG	ROOT	6
7	this	this		dt	dt_dem								DT	det	8
8	kind	kind		nn									NN	dobj	6
9	of	of	of+npostmod	in	nmod								IN	prep	8
10	high	high	attr+npremod	jj	attr								JJ	amod	12
11	-	-											HYPH	punct	12
12	level	level	nn+npremod	nn			npremod						NN	compound	13
13	comparison	comparison		nn									NN	pobj	9
14	of	of	of+npostmod	in	nmod								IN	prep	13
15	CIRCA	circa		nn		proper							NNP	pobj	14
16	to	to	in+npostmod	in	nmod								IN	prep	13
17	CIRCA	circa		nn		proper							NNP	pobj	16
18	-	-											HYPH	punct	17
19	two	two											CD	nummod	17
20	and	and		cc	cls								CC	cc	6
21	,	,											,	punct	6
22	in	in	in+advl	in	advl								IN	prep	26
23	the	the		dt	art								DT	det	24
24	future	future		nn		nom							NN	pobj	22
25	i	i		pro	1st	sg							PRP	nsubj	26
26	hope	hope		vbmain	vblex	pres	simple	active					VBP	conj	6
27	to	to											TO	xcomp	26
28	_	_											.	punct	26

#sentid = 704
0	the	the		dt	art								DT	det	1
1	reason	reason		nn									NN	nsubj	11
2	i	i		pro	1st	sg							PRP	nsubj	3
3	keep	keep	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	1
4	talking	talk	ingcls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	3
5	about	about	in+advl	in	advl								IN	prep	4
6	these	these		dt	dt_dem								DT	det	10
7	Markov	markov	nn+npremod	nn		proper	npremod						NNP	compound	10
8	decision	decision	nn+npremod	nn			npremod						NN	compound	9
9	process	process	nn+npremod	nn		nom	npremod						NN	compound	10
10	models	model		nn	pl								NNS	pobj	5
11	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	11
12	that	that		comp	comp_that								IN	mark	19
13	at	at		rb	othr								IN	advmod	14
14	least	least		rb	othr								JJS	advmod	15
15	for	for	in+advl	in	advl								IN	prep	19
16	that	that		dt	dt_dem								DT	det	17
17	part	part		nn									NN	pobj	15
18	i	i		pro	1st	sg							PRP	nsubj	19
19	want	want	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	11
20	to	to		to									TO	aux	21
21	compare	compare		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	19
22	,	,											,	punct	11
23													_SP	dep	11
24	the	the		dt	art								DT	det	25
25	accuracy	accuracy		nn		nom							NN	ccomp	11
26	of	of	of+npostmod	in	nmod								IN	prep	25
27	that	that		pro	dem	sg							DT	pobj	26
28													_SP	dep	25
29	well	well											UH	intj	31
30	i	i		pro	1st	sg							PRP	nsubj	31
31	guess	guess		vbmain	vblex	pres	simple	active					VBP	parataxis	38
32	that	that		pro	dem	sg							DT	nsubj	33
33	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	31
34	what	what		comp	comp_wh								WP	dobj	37
35	i	i		pro	1st	sg							PRP	nsubj	37
36	'm	be		vbaux									VBP	aux	37
37	asking	ask	whcls+vcomp	vbmain	vblex	pres	prog	active	compcls	whcls	vcomp		VBG	ccomp	33
38	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	11
39	what	what											WP	nsubj	40
40	's	be		vbmain	be	pres	simple	active					VBZ	dep	44
41	,	,											,	punct	44
42	i	i		pro	1st	sg							PRP	nsubj	44
43	'd	would		vbaux	mod								MD	aux	44
44	like	like	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	38
45	to	to		to									TO	aux	46
46	understand	understand	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	44
47	how	how		comp	comp_wh								WRB	advmod	49
48	,	,											,	punct	49
49	i-	i-								whcls			XX	ccomp	46
50	in	in	in+advl	in	advl								IN	prep	11
51	one	one											CD	nummod	53
52	particular	particular	attr+npremod	jj	attr								JJ	amod	53
53	application	application		nn		nom							NN	pobj	50
54													_SP	dep	11
55	mhm	mhm											UH	intj	54
56	.	.											.	punct	55
57													_SP	dep	11
58	if	if		cs	cnd								IN	mark	60
59	it	it		pro	3rd	sg							PRP	nsubj	60
60	's	be		vbmain	be	pres	simple	active	compcls		conditional	compdel	VBZ	ccomp	11
61	more	more	rb+jjrbmod	rb	adjmod								RBR	advmod	62
62	rudimentary	rudimentary		jj	pred								JJ	acomp	60
63	than	than	in+jcomp	in	jcomp								IN	prep	62
64	your	your		dt	poss								PRP$	poss	65
65													_SP	dep	63
66	yeah	yeah											UH	intj	65
67	.	.											.	punct	66
68													_SP	dep	71
69	most	most		jj	attr								JJS	amod	70
70	rudimentary	rudimentary		jj	attr								JJ	amod	71
71	one	one		pro	other	pl							CD	dobj	11
72	,	,											,	punct	71
73													_SP	dep	71
74	mhm	mhm											UH	intj	71
75	.	.											.	punct	11

#sentid = 705
0													_SP	dep	40
1	how	how		comp	comp_wh								WRB	advmod	4
2	we	we		pro	1st								PRP	nsubj	4
3	can	can		vbaux	mod	pos							MD	aux	4
4	assess	assess		vbmain	vblex	vp_w_modal	simple	active	compcls	whcls			VB	ccomp	0
5	the	the		dt	art								DT	det	6
6	goodness	goodness		nn		nom							NN	dobj	4
7	or	or		cc	phrs								CC	cc	6
8	the	the		dt	art								DT	det	9
9	badness	badness		nn		nom							NN	conj	6
10	of	of	of+npostmod	in	nmod								IN	prep	6
11	the	the		dt	art								DT	det	13
12	design	design	nn+npremod	nn			npremod						NN	compound	13
13	decisions	decision		nn	pl								NNS	pobj	10
14	that	that		pro	dem	sg							WDT	dobj	17
15	you	you		pro	2nd	sg							PRP	nsubj	17
16	've	've		vbaux									VBP	aux	17
17	made	make	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBN	relcl	13
18	and	and		cc	phrs								CC	cc	17
19	i	i		pro	1st	sg							PRP	nsubj	22
20	do	do		vbaux									VBP	aux	22
21	n't	not											RB	neg	22
22	see	see		vbmain	vblex	pres	simple	active					VB	parataxis	17
23													_SP	dep	22
24	that	that		comp	comp_that								IN	mark	26
25	you	you		pro	2nd	sg							PRP	nsubj	26
26	've	've	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	22
27													_SP	dep	4
28	right	right											UH	intj	40
29	,	,											,	punct	28
30	so	so		cc									CC	cc	29
31	...	...											:	punct	29
32	in	in	in+advl	in	advl								IN	prep	40
33	terms	term		nn	pl								NNS	pobj	32
34	of	of	of+npostmod	in	nmod								IN	prep	33
35	,	,											,	punct	34
36	calculating	calculate	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	34
37	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	38
38	accuracy	accuracy		nn		nom							NN	dobj	36
39	i	i		pro	1st	sg							PRP	nsubj	40
40	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	40
41	that	that		comp	comp_that								IN	mark	46
42	the	the		dt	art								DT	det	43
43	answer	answer		nn		nom							NN	nsubj	46
44	to	to	in+npostmod	in	nmod								IN	prep	43
45	that	that		pro	dem	sg							DT	pobj	44
46	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	40
47	to	to		to									TO	aux	50
48	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	50
49	,	,											,	punct	50
50	implement	implement	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	46
51	the	the		dt	art								DT	det	56
52	,	,											,	punct	56
53	Markov	markov	nn+npremod	nn		proper	npremod						NNP	compound	56
54	decision	decision	nn+npremod	nn			npremod						NN	compound	55
55	process	process	nn+npremod	nn		nom	npremod						NN	compound	56
56	planner	planner		nn		nom							NN	dobj	50
57	in	in	in+advl	in	advl								IN	prep	50
58	CIRCA	circa		nn		proper							NNP	pobj	57
59	and	and		cc	phrs								CC	cc	50
60	let	let		vbmain	vblex	nonfinite	simple	active					VB	conj	50
61	it	it		pro	3rd	sg							PRP	nsubj	62
62	run	run		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	60
63	and	and		cc	phrs								CC	cc	62
64	see	see		vbmain	vblex	nonfinite	simple	active					VB	conj	62
65	what	what											WP	nsubj	66
66	happens	happen	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	64
67	with	with	in+advl	in	advl								IN	prep	66
68	all	all											PDT	predet	70
69	the	the		dt	art								DT	det	70
70	complexity	complexity		nn		nom							NN	pobj	67
71	that	that		pro	dem	sg							WDT	dobj	73
72	it	it		pro	3rd	sg							PRP	nsubj	73
73	has	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBZ	relcl	70
74	.	.											.	punct	40

#sentid = 706
0	our	our		dt	poss								PRP$	poss	3
1	current	current	attr+npremod	jj	attr								JJ	amod	3
2	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	3
3	model	model		nn									NN	nsubj	4
4	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	recent	recent		jj	pred								JJ	acomp	4
6	enough	enough	rb+jjrbmod	rb	adjmod								RB	advmod	5
7	that	that		comp	comp_that								IN	mark	11
8	we	we		pro	1st								PRP	nsubj	11
9	just	just	rb+jjrbmod	rb	othr								RB	advmod	10
10	barely	barely	rb+advl	rb	advl	ly							RB	advmod	11
11	have	have	thatcls+jcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	jcomp		VBP	ccomp	5
12	it	it		pro	3rd	sg							PRP	nsubj	13
13	working	work		vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	ccomp	11
14	which	which											WDT	nsubj	15
15	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	11
16	why	why		rb	advl								WRB	advmod	20
17	the	the		dt	art								DT	det	18
18	numbers	number		nn	pl	nom							NNS	nsubjpass	20
19	were	be		vbaux									VBD	auxpass	20
20	scribbled	scribble	finitecls+advl	vbmain	vblex	past	simple	pasv_agls	advlcls	whcls			VBN	advcl	15
21	onto	onto	in+advl	in	advl								IN	prep	20
22	that	that		dt	dt_dem								DT	det	23
23	slide	slide		nn									NN	pobj	21
24	,	,											,	punct	4
25	and	and		cc	cls								CC	cc	4
26	it	it		pro	3rd	sg							PRP	nsubj	27
27	's	be		vbmain	be	pres	simple	active					VBZ	conj	4
28	not	not											RB	neg	27
29	all	all	rb+jjrbmod	rb	adjmod								RB	advmod	31
30	that	that	rb+jjrbmod	rb	adjmod								RB	advmod	31
31	trivial	trivial		jj	pred								JJ	acomp	27
32	to	to		to									TO	aux	33
33	think	think	xtrapos+tocls+jcomp	vbmain	prepv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	27
34	of	of	in+advl	in	advl								IN	prep	33
35	taking	take	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	34
36	Markov	markov	nn+npremod	nn		proper	npremod						NNP	compound	38
37	decision	decision	nn+npremod	nn			npremod						NN	compound	38
38	software	software		nn									NN	dobj	35
39	off	off	in+advl	in	advl								IN	prep	35
40	the	the		dt	art								DT	det	41
41	shelf	shelf		nn									NN	pobj	39
42	and	and		cc	phrs								CC	cc	35
43	putting	put		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	35
44	it	it		pro	3rd	sg							PRP	dobj	43
45	into	into	in+advl	in	advl								IN	prep	43
46	CIRCA	circa		nn		proper							NNP	pobj	45
47	because	because		cs	cos								IN	mark	49
48	we	we		pro	1st								PRP	nsubj	49
49	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBP	advcl	27
50	to	to		to									TO	aux	51
51	customize	customize		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	49
52	it	it		pro	3rd	sg							PRP	dobj	51
53	to	to		to									TO	aux	54
54	compute	compute	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	51
55	all	all											PDT	predet	57
56	the	the		dt	art								DT	det	57
57	things	thing		nn	pl	nom							NNS	dobj	54
58	we	we		pro	1st								PRP	nsubj	59
59	want	want	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	57
60	.	.											.	punct	27

#sentid = 707
0	so	so		rb	link								RB	advmod	7
1	,	,											,	punct	7
2	and	and		cc	cls								CC	cc	7
3	we	we		pro	1st								PRP	nsubj	7
4	do	do		vbaux									VBP	aux	7
5	n't	not											RB	neg	7
6	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	7
7	have	have		vbmain	vblex	pres	simple	active					VB	ROOT	7
8	,	,											,	punct	7
9													_SP	dep	7
10	we	we		pro	1st								PRP	nsubj	11
11	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	7
12	not	not											RB	neg	11
13	really	really	rb+advl	rb	advl	ly							RB	advmod	11
14													_SP	dep	7
15	is	be		vbmain	be	pres	simple	active					VBZ	meta	7
16	it	it		pro	3rd	sg							PRP	nsubj	15
17	possible	possible		jj	pred								JJ	acomp	15
18	that	that		comp	comp_that								IN	mark	21
19	you	you		pro	2nd	sg							PRP	nsubj	21
20	could	could		vbaux	mod	pos							MD	aux	21
21	articulate	articulate	xtrapos+thatcls+jcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	jcomp		VB	ccomp	15
22	a	a		dt	art								DT	det	27
23	tiny	tiny	attr+npremod	jj	attr								JJ	amod	27
24	tiny	tiny	attr+npremod	jj	attr								JJ	amod	27
25	tiny	tiny	attr+npremod	jj	attr								JJ	amod	27
26	,	,											,	punct	27
27	scenario	scenario		nn									NN	dobj	21
28	,	,											,	punct	21
29	and	and		cc	phrs								CC	cc	21
30	actually	actually	rb+advl	rb	advl	ly							RB	advmod	31
31	give	give		vbmain	vblex	nonfinite	simple	active					VB	conj	21
32	(	(											-LRB-	punct	31
33	xx	xx											XX	dobj	31
34	)	)											-RRB-	punct	31
35	some	some		dt									DT	det	36
36	sort	sort		nn									NN	dobj	31
37	of	of	of+npostmod	in	nmod								IN	prep	36
38	(	(											-LRB-	punct	37
39	xx	xx											XX	pobj	37
40	)	)											-RRB-	punct	37
41													_SP	dep	37
42	well	well											UH	intj	45
43	,	,											,	punct	45
44	i	i		pro	1st	sg							PRP	nsubj	45
45	hesitate	hesitate	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	7
46	to	to		to									TO	aux	47
47	draw	draw	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	45
48	these	these		dt	dt_dem								DT	det	52
49	trade	trade	attr+npremod	jj	attr								VB	amod	52
50	-	-											HYPH	punct	49
51	off	off		rb	prtcle								RP	prt	49
52	curves	curve		nn	pl								NNS	dobj	47
53	for	for	in+advl	in	advl								IN	prep	47
54	a	a		dt	art								DT	det	56
55	tiny	tiny	attr+npremod	jj	attr								JJ	amod	56
56	scenario	scenario		nn									NN	pobj	53
57	because	because		cs	cos								IN	mark	59
58	i	i		pro	1st	sg							PRP	nsubj	59
59	think	think	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBP	advcl	45
60	that	that		comp	comp_that								IN	mark	67
61	what	what											WP	pobj	66
62	we	we		pro	1st								PRP	nsubj	64
63	would	would		vbaux	mod	prd							MD	aux	64
64	end	end		vbmain	phrsv	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	csubj	67
65	up	up		rb	prtcle								RP	prt	64
66	with	with	in+advl	in	advl								IN	prep	64
67	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	59
68	two	two											CD	nummod	70
69	data	data	nn+npremod	nn			npremod						NN	compound	70
70	points	point		nn	pl								NNS	attr	67
71	and	and		cc	cls								CC	cc	67
72	we	we		pro	1st								PRP	nsubj	75
73	would	would		vbaux	mod	prd							MD	aux	75
74	n't	not											RB	neg	75
75	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	67
76	able	able		jj	pred								JJ	acomp	75
77	to	to		to									TO	aux	78
78	say	say	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	76
79	anything	anything		nn	other	nom							NN	dobj	78
80	about	about	in+npostmod	in	nmod								IN	prep	79
81	what	what											WP	pobj	85
82	they	they		pro	pl								PRP	nsubj	84
83	would	would		vbaux	mod	prd							MD	aux	84
84	look	look		vbmain	prepv	vp_w_modal	simple	active	compcls		incomp	compdel	VB	pcomp	80
85	at	at	in+advl	in	advl								IN	prep	84
86	_	_											NFP	punct	84
87	look	look		vbmain	vblex	nonfinite	simple	active					VB	dep	84
88	look	look		vbmain	prepv	nonfinite	simple	active					VB	dep	87
89	like	like	in+advl	in	advl								IN	prep	88
90	in	in	in+advl	in	advl								IN	prep	84
91	a	a		dt	art								DT	det	94
92	more	more	rb+jjrbmod	rb	adjmod								RBR	advmod	93
93	general	general	attr+npremod	jj	attr								JJ	amod	94
94	case	case		nn									NN	pobj	90
95	because	because		cs	cos								IN	mark	112
96	we	we		pro	1st								PRP	nsubj	97
97	're	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	112
98	not	not											RB	neg	97
99	,	,											,	punct	112
100	our	our		dt	poss								PRP$	poss	101
101	goal	goal		nn		nom							NN	nsubj	102
102	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	112
103	not	not											RB	neg	102
104	to	to		to									TO	aux	105
105	prove	prove	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	102
106	one	one											CD	nummod	109
107	,	,											,	punct	109
108	particular	particular	attr+npremod	jj	attr								JJ	amod	109
109	example	example		nn									NN	nsubj	110
110	works	work	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	105
111	it	it		pro	3rd	sg							PRP	nsubj	112
112	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		causative		VBZ	advcl	7
113	to	to		to									TO	aux	114
114	show	show	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	112
115	that	that		comp	comp_that								IN	mark	119
116	the	the		dt	art								DT	det	117
117	system	system		nn									NN	nsubj	119
118	somehow	somehow	rb+advl	rb	advl								RB	advmod	119
119	improves	improve	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	114
120	on	on	in+advl	in	advl								IN	prep	119
121	previous	previous	attr+npremod	jj	attr								JJ	amod	122
122	results	result		nn	pl								NNS	pobj	120
123	so	so		cc	cls								CC	cc	7
124	,	,											,	punct	7
125	i	i		pro	1st	sg							PRP	nsubj	128
126	have	have		vbaux									VBP	aux	128
127	purposely	purposely	rb+advl	rb	advl	ly	splaux						RB	advmod	128
128	hesitated	hesitate		vbmain	vblex	pres	perf	active					VBN	conj	7
129	to	to		to									TO	aux	130
130	come	come	tocls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	128
131	up	up		rb	prtcle								RP	prt	130
132	with	with	in+advl	in	advl								IN	prep	130
133	a	a		dt	art								DT	det	135
134	simple	simple	attr+npremod	jj	attr								JJ	amod	135
135	example	example		nn									NN	pobj	132
136	and	and		cc	phrs								CC	cc	130
137	say	say		vbmain	vblex	nonfinite	simple	active					VB	conj	130
138	look	look		vbmain	vblex	nonfinite	simple	active					VB	intj	140
139	here	here											RB	nsubj	140
140	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	137
141	how	how		comp	comp_wh								WRB	advmod	143
142	it	it		pro	3rd	sg							PRP	nsubj	143
143	degrades	degrade	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	140

#sentid = 708
0	because	because		cs	cos								IN	mark	1
1	...	...											:	ROOT	1

#sentid = 709
0	the	the		dt	art								DT	det	1
1	curve	curve		nn									NN	nsubj	4
2	would	would		vbaux	mod	prd							MD	aux	4
3	basically	basically	rb+advl	rb	advl	ly	splaux						RB	advmod	4
4	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	4
5	a	a		dt	art								DT	det	11
6	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	7
7	limited	limited	attr+npremod	jj	attr								JJ	amod	11
8	step	step	nn+npremod	nn			npremod						NN	compound	10
9	-	-											HYPH	punct	10
10	function	function	nn+npremod	nn		nom	npremod						NN	compound	11
11	appearance	appearance		nn		nom							NN	dobj	4
12	and	and		cc	phrs								CC	cc	4
13	would	would		vbaux	mod	prd							MD	aux	15
14	not	not											RB	neg	15
15	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	4
16	representative	representative		jj	pred								JJ	acomp	15
17	.	.											.	punct	4

#sentid = 710
0													_SP	dep	2
1	l-	l-		in	in_othr								XX	prep	0
2	let	let		vbmain	vblex	nonfinite	simple	active					VB	ROOT	2
3	me	i		pro	1st	sg							PRP	nsubj	4
4	add	add		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	2
5	i	i		pro	1st	sg							PRP	nsubj	6
6	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	4
7	the	the		dt	art								DT	det	8
8	curves	curve		nn	pl								NNS	dobj	4
9	you	you		pro	2nd	sg							PRP	nsubj	10
10	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	8
11	there	there	rb+advl	rb	advl								RB	advmod	10
12	of	of	of+npostmod	in	nmod								IN	prep	8
13	,	,											,	punct	12
14													_SP	dep	12
15	mhm	mhm											UH	intj	12
16	.	.											.	punct	2

#sentid = 711
0													_SP	dep	0
1	i	i		pro	1st	sg							PRP	nsubj	2
2	guess	guess		vbmain	vblex	pres	simple	active					VBP	parataxis	5
3	uh	uh											UH	intj	5
4	,	,											,	punct	5
5	perform	perform		vbmain	vblex	pres	simple	active					VBP	dep	0
6	,	,											,	punct	5
7	the	the		dt	art								DT	det	10
8	vertical	vertical	attr+npremod	jj	attr								JJ	amod	9
9	axis	axis	nn+npremod	nn			npremod						NN	compound	10
10	performance	performance		nn		nom							NN	dobj	5
11	versus	versus	in+npostmod	in	nmod								IN	prep	10
12													_SP	dep	11
13	yeah	yeah											UH	intj	11
14	,	,											,	punct	11
15	resource	resource	nn+npremod	nn			npremod						NN	compound	16
16	capacity	capacity		nn		nom							NN	pobj	11
17	.	.											.	punct	0

#sentid = 712
0													_SP	dep	4
1	uh	uh											UH	intj	4
2	yeah	yeah											UH	intj	4
3	resource	resource	nn+npremod	nn			npremod						NN	compound	4
4	capacity	capacity		nn		nom							NN	ROOT	4
5	.	.											.	punct	4

#sentid = 713
0	i	i		pro	1st	sg							PRP	nsubj	1
1	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	7
2	,	,											,	punct	7
3	presumably	presumably	rb+advl	rb	advl	ly							RB	advmod	7
4	if	if		cs	cnd								IN	mark	7
5	you	you		pro	2nd	sg							PRP	nsubj	7
6	actually	actually	rb+advl	rb	advl	ly							RB	advmod	7
7	had	have		vbmain	vblex	past	simple	active			conditional		VBD	ROOT	7
8	this	this		pro	dem	sg							DT	nsubj	9
9	implemented	implement	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBN	ccomp	7
10	in	in	in+advl	in	advl								IN	prep	9
11	some	some		dt									DT	det	12
12	system	system		nn									NN	pobj	10
13	for	for	in+npostmod	in	nmod								IN	prep	12
14	example	example		nn									NN	pobj	13
15	the	the		dt	art								DT	det	20
16	U	u		nn		proper	npremod						NNP	compound	20
17	-	-											HYPH	punct	20
18	A	a		nn		proper	npremod						NNP	compound	20
19	-	-											HYPH	punct	20
20	V	v	appos+npostmod	nn		proper	nappos						NNP	appos	12
21	,	,											,	punct	7
22													_SP	dep	7
23	yeah	yeah											UH	intj	7
24	.	.											.	punct	7

#sentid = 714
0													_SP	dep	3
1	one	one		pro	other	pl							CD	nsubj	3
2	could	could		vbaux	mod	pos							MD	aux	3
3	do	do		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	3
4	a	a		dt	art								DT	det	6
5	whole	whole	attr+npremod	jj	attr								JJ	amod	6
6	variety	variety		nn									NN	dobj	3
7	,	,											,	punct	6
8	a	a		dt	art								DT	det	10
9	whole	whole	attr+npremod	jj	attr								JJ	amod	10
10	scenario	scenario	appos+npostmod	nn			nappos						NN	appos	6
11	of	of	of+npostmod	in	nmod								IN	prep	10
12	test	test	nn+npremod	nn			npremod						NN	compound	13
13	flights	flight		nn	pl								NNS	pobj	11
14	with	with	in+npostmod	in	nmod								IN	prep	13
15	a	a		dt	art								DT	det	23
16	whole	whole		jj	attr								JJ	amod	23
17	,	,											,	punct	23
18	grou-	grou-											XX	dep	23
19	i	i		pro	1st	sg							PRP	nsubj	20
20	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	23
21	you	you		pro	2nd	sg							PRP	nsubj	23
22	'd	would		vbaux	mod								MD	aux	23
23	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	dep	3
24	to	to		to									TO	aux	25
25	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	23
26	,	,											,	punct	25
27	almost	almost		rb	othr								RB	advmod	28
28	something	something		nn	other	nom							NN	dobj	25
29	like	like	in+npostmod	in	nmod								IN	prep	28
30	a	a		dt	art								DT	det	33
31	Monte	monte		nn		proper	npremod						NNP	compound	32
32	Carlo	carlo	nn+npremod	nn		proper	npremod						NNP	compound	33
33	simulation	simulation		nn		nom							NN	pobj	29
34	,	,											,	punct	23
35													_SP	dep	23
36	mhm	mhm											UH	intj	23
37	.	.											.	punct	23

#sentid = 715
0													_SP	dep	3
1	to	to		to									TO	aux	3
2	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	3
3	build	build		vbmain	phrsv	nonfinite	simple	active		tocls			VB	ROOT	3
4	up	up		rb	prtcle								RP	prt	3
5	,	,											,	punct	3
6													_SP	dep	3
7	yeah	yeah											UH	intj	3
8	.	.											.	punct	3

#sentid = 716
0													_SP	dep	0
1	the	the		dt	art								DT	det	3
2	real	real	attr+npremod	jj	attr								JJ	amod	3
3	cur-	cur-		nn									NN	punct	0
4	you	you		pro	2nd	sg							PRP	nsubj	5
5	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	3
6	,	,											,	punct	5
7	to	to											TO	dep	9
8	to	to		to									TO	aux	9
9	get	get	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	0
10	an	an		dt									DT	det	11
11	experimental	experimental											JJ	dobj	9
12	,	,											,	punct	13
13													_SP	dep	11
14	right	right											UH	intj	13
15	.	.											.	punct	11

#sentid = 717
0													_SP	dep	4
1	or	or		cc	phrs								CC	cc	4
2	a	a		dt	art								DT	det	4
3	,	,											,	punct	4
4	simulation	simulation		nn		nom							NN	ROOT	4
5	of	of	of+npostmod	in	nmod								IN	prep	4
6	the	the											DT	pobj	5
7	,	,											,	punct	4
8													_SP	dep	4
9	mhm	mhm											UH	intj	4
10	.	.											.	punct	4

#sentid = 718
0													_SP	dep	0
1	of	of		in	in_othr								IN	prep	0
2	that	that		dt	dt_dem								DT	det	3
3	cur-	cur-		nn									NN	pobj	1
4	that	that											IN	dep	6
5	that	that		dt	dt_dem								DT	det	6
6	rook	rook		nn									NN	dep	1
7	or	or		cc	phrs								CC	cc	17
8	i	i		pro	1st	sg							PRP	nsubj	13
9	i	i		pro	1st	sg							PRP	nsubj	10
10	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	13
11	i	i		pro	1st	sg							PRP	nsubj	13
12	i	i		pro	1st	sg							PRP	nsubj	13
13	'm	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	17
14	not	not											RB	neg	13
15	,	,											,	punct	13
16	i	i		pro	1st	sg							PRP	nsubj	17
17	think	think		vbmain	vblex	pres	simple	active					VBP	parataxis	6
18	Don	don		nn		proper							NNP	dobj	17
19	was	be		vbaux									VBD	aux	20
20	asking	ask	thatcls+vcomp	vbmain	vblex	past	prog	active	compcls		vcomp	compdel	VBG	ccomp	17
21	something	something		nn	other	nom							NN	dobj	20
22	,	,											,	punct	21
23	more	more	rb+jjrbmod	rb	adjmod								RBR	advmod	24
24	broad	broad		jj	attr								JJ	amod	21
25	than	than	in+jcomp	in	jcomp								IN	prep	24
26	just	just		rb	othr								RB	advmod	28
27	that	that		dt	dt_dem								DT	det	28
28	measure	measure		nn		nom							NN	pobj	25
29	but	but		cc									CC	cc	0
30	but	but		cc									CC	cc	0
31	it	it		pro	3rd	sg							PRP	dep	36
32	,	,											,	punct	36
33	i	i		pro	1st	sg							PRP	nsubj	34
34	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	36
35	that	that		pro	dem	sg							DT	nsubj	36
36	's	be		vbmain	be	pres	simple	active					VBZ	conj	0
37	a	a		dt	art								DT	det	38
38	measure	measure		nn		nom							NN	attr	36
39	but	but		cc	phrs								CC	cc	36
40	,	,											,	punct	36
41													_SP	dep	36
42	right	right											UH	intj	36
43	.	.											.	punct	36

#sentid = 719
0													_SP	dep	4
1	what	what		comp	comp_wh								WP	dobj	3
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	have	have		vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	csubj	4
4	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	only	only		rb	othr	ly							RB	advmod	7
6	an	an		dt									DT	det	7
7	inkling	inkling		nn		nom							NN	attr	4
8	of	of	of+npostmod	in	nmod								IN	prep	7
9	what	what											WP	pobj	13
10	those	those		dt	dt_dem								DT	det	11
11	curves	curve		nn	pl								NNS	nsubj	12
12	look	look		vbmain	prepv	pres	simple	active	compcls		incomp	compdel	VBP	pcomp	8
13	like	like	in+advl	in	advl								IN	prep	12
14	.	.											.	punct	4

#sentid = 720
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	1

#sentid = 721
0	yes	yes											UH	intj	7
1	,	,											,	punct	7
2													_SP	dep	7
3	not	not											RB	neg	7
4													_SP	dep	7
5	i	i		pro	1st	sg							PRP	dep	7
6	i	i		pro	1st	sg							PRP	nsubj	7
7	hope	hope		vbmain	vblex	pres	simple	active					VBP	ROOT	7
8	that	that		pro	dem	sg							DT	nsubj	9
9	came	come	thatcls+vcomp	vbmain	phrsv	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	7
10	across	across		rb	prtcle								RP	prt	9
11	,	,											,	punct	7
12	i-	i-											PRP	meta	7
13	that	that		cs	cs_othr								IN	mark	16
14	,	,											,	punct	16
15	this	this		pro	dem	sg							DT	nsubj	16
16	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBZ	advcl	7
17	what	what											WP	pobj	27
18	i	i		pro	1st	sg							PRP	nsubj	21
19	,	,											,	punct	21
20	would	would		vbaux	mod	prd							MD	aux	21
21	expect	expect	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	16
22	the	the		dt	art								DT	det	23
23	shape	shape		nn									NN	nsubj	26
24	to	to		to									TO	aux	26
25	roughly	roughly	rb+advl	rb	advl	ly	splaux						RB	advmod	26
26	look	look		vbmain	prepv	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	21
27	like	like	in+advl	in	advl								IN	prep	26
28	but	but		cc	cls								CC	cc	16
29	that	that											IN	mark	31
30	it	it		pro	3rd	sg							PRP	nsubj	31
31	's	be		vbmain	be	pres	simple	active					VBZ	conj	16
32	not	not											RB	neg	31
33	something	something		nn		nom							NN	attr	31
34	that	that		pro	dem	sg							WDT	dobj	39
35	i	i		pro	1st	sg							PRP	nsubj	36
36	am	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	33
37	able	able		jj	pred								JJ	acomp	36
38	to	to		to									TO	aux	39
39	compute	compute	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	37
40	.	.											.	punct	7

#sentid = 722
0	because	because											IN	ROOT	0
1	of	of											IN	pcomp	0
2	the	the		dt	art								DT	det	3
3	complexity	complexity		nn		nom							NN	pobj	0
4	of	of	of+npostmod	in	nmod								IN	prep	3
5	actually	actually	rb+advl	rb	advl	ly							RB	advmod	6
6	computing	compute	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	4
7	the	the		dt	art								DT	det	9
8	the	the		dt	art								DT	det	9
9	points	point		nn	pl								NNS	dobj	6
10	on	on	in+npostmod	in	nmod								IN	prep	9
11	the	the		dt	art								DT	det	12
12	curve	curve		nn									NN	pobj	10
13	and	and		cc	phrs								CC	cc	3
14	,	,											,	punct	3
15	the	the											DT	intj	3
16	,	,											,	punct	15
17	how	how		rb	advl								WRB	advmod	20
18	they	they		pro	pl								PRP	nsubj	20
19	would	would		vbaux	mod	prd							MD	aux	20
20	differ	differ		vbmain	vblex	vp_w_modal	simple	active					VB	conj	15
21	between	between	in+advl	in	advl								IN	prep	20
22	different	different	attr+npremod	jj	attr								JJ	amod	23
23	examples	example		nn	pl								NNS	pobj	21
24	.	.											.	punct	0

#sentid = 723
0	so	so		rb	link								RB	advmod	6
1	,	,											,	punct	6
2	i-	i-											PRP	dep	6
3	i	i		pro	1st	sg							PRP	nsubj	6
4	am	be		vbaux									VBP	aux	6
5	not	not											RB	neg	6
6	ignoring	ignore		vbmain	vblex	pres	prog	active					VBG	ROOT	6
7	this	this		dt	dt_dem								DT	det	8
8	problem	problem		nn									NN	dobj	6
9	,	,											,	punct	6
10	but	but		cc	cls								CC	cc	6
11	i	i		pro	1st	sg							PRP	nsubj	12
12	was	be		vbmain	be	past	simple	active					VBD	parataxis	17
13	,	,											,	punct	17
14	i	i		pro	1st	sg							PRP	nsubj	17
15	've	've		vbaux									VBP	aux	17
16	been	be		vbaux									VBN	aux	17
17	thinking	think		vbmain	prepv	pres	prog	active					VBG	conj	6
18	about	about	in+advl	in	advl								IN	prep	17
19	that	that		dt	dt_dem								DT	det	20
20	problem	problem		nn									NN	pobj	18
21	for	for	in+advl	in	advl								IN	prep	17
22	quite	quite											PDT	predet	24
23	some	some		dt									DT	det	24
24	time	time		nn									NN	pobj	21
25	and	and		cc	phrs								CC	cc	17
26	have	have		vbaux									VBP	aux	29
27	not	not											RB	neg	29
28	yet	yet		rb	link		splaux						RB	advmod	29
29	come	come		vbmain	phrsv	pres	perf	active					VBN	conj	17
30	up	up		rb	prtcle								RP	prt	29
31	with	with	in+advl	in	advl								IN	prep	29
32	a	a		dt	art								DT	det	34
33	good	good	attr+npremod	jj	attr								JJ	amod	34
34	way	way		nn									NN	pobj	31
35	to	to		to									TO	aux	38
36	quantitatively	quantitatively	rb+advl	rb	advl	ly	splaux						RB	advmod	38
37	,	,											,	punct	38
38	measure	measure	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	34
39	,	,											,	punct	38
40	what	what											WP	nsubj	42
41	's	be		vbaux									VBZ	aux	42
42	going	go	whcls+vcomp	vbmain	prepv	pres	prog	active	compcls	whcls	vcomp		VBG	ccomp	38
43	on	on		rb	prtcle								RP	prt	42
44	in	in	in+advl	in	advl								IN	prep	42
45	terms	term		nn	pl								NNS	pobj	44
46	of	of	of+npostmod	in	nmod								IN	prep	45
47	,	,											,	punct	46
48	making	make	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	46
49	these	these		dt	dt_dem								DT	det	52
50	trade	trade	nn+npremod	nn			npremod						NN	compound	52
51	-	-											HYPH	punct	52
52	offs	off		nn	pl								NNS	dobj	48
53	except	except	in+advl	in	advl								IN	prep	29
54	to	to		to									TO	aux	55
55	say	say		vbmain	vblex	nonfinite	simple	active	compcls	tocls	incomp		VB	pcomp	53
56	well	well											UH	intj	59
57	look	look		vbmain	vblex	nonfinite	simple	active	advlcls				VB	advcl	59
58	here	here	rb+advl	rb	advl								RB	advmod	59
59	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	55
60	the	the		dt	art								DT	det	61
61	probability	probability		nn		nom							NN	nsubj	59
62	that	that		pro	dem	sg							WDT	dobj	64
63	we	we		pro	1st								PRP	nsubj	64
64	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	61
65	in	in	in+advl	in	advl								IN	prep	64
66	this	this		dt	dt_dem								DT	det	67
67	case	case		nn									NN	pobj	65
68	and	and		cc	cls								CC	cc	59
69	here	here	rb+advl	rb	advl								RB	advmod	70
70	's	be		vbmain	be	pres	simple	active					VBZ	conj	59
71	the	the		dt	art								DT	det	72
72	probability	probability		nn		nom							NN	nsubj	70
73	that	that		pro	dem	sg							WDT	dobj	75
74	we	we		pro	1st								PRP	nsubj	75
75	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	72
76	in	in	in+advl	in	advl								IN	prep	75
77	this	this		dt	dt_dem								DT	det	78
78	case	case		nn									NN	pobj	76
79	.	.											.	punct	6

#sentid = 724
0	and	and		cc	cls								CC	cc	3
1	,	,											,	punct	3
2	here	here											RB	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	how	how		comp	comp_wh								WRB	advmod	7
5	the	the		dt	art								DT	det	6
6	schedule	schedule		nn									NN	nsubj	7
7	changes	change	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	3
8	and	and		cc	phrs								CC	cc	7
9	so	so	rb+jjrbmod	rb	othr								RB	advmod	10
10	forth	forth											RB	conj	7
11	so	so		cc	cls								CC	cc	3
12	with	with	in+advl	in	advl								IN	prep	18
13	a	a		dt	art								DT	det	15
14	simple	simple	attr+npremod	jj	attr								JJ	amod	15
15	example	example		nn									NN	pobj	12
16	i	i		pro	1st	sg							PRP	nsubj	18
17	can	can		vbaux	mod	pos							MD	aux	18
18	show	show		vbmain	vblex	vp_w_modal	simple	active					VB	conj	3
19	different	different	attr+npremod	jj	attr								JJ	amod	20
20	schedules	schedule		nn	pl								NNS	dobj	18
21	but	but		cc	phrs								CC	cc	18
22	,	,											,	punct	18
23	i-	i-											PRP	punct	18
24	the	the		dt	art								DT	det	26
25	the	the		dt	art								DT	det	26
26	jump	jump		nn									NN	nsubj	32
27	that	that		pro	dem	sg							WDT	dobj	31
28	i	i		pro	1st	sg							PRP	nsubj	31
29	have	have		vbaux									VBP	aux	31
30	not	not											RB	neg	31
31	made	make	finitecls+rel	vbmain	vblex	pres	perf	active	nmod_cls		rel		VBN	relcl	26
32	is	be		vbmain	be	pres	simple	active					VBZ	conj	3
33	in	in	in+advl	in	advl								IN	prep	32
34	,	,											,	punct	33
35	getting	get	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	32
36	some	some		dt									DT	det	37
37	sort	sort		nn									NN	dobj	35
38	of	of	of+npostmod	in	nmod								IN	prep	37
39	,	,											,	punct	38
40	trend	trend		nn									NN	pobj	38
41	,	,											,	punct	35
42	or	or		cc	phrs								CC	cc	35
43	defining	define		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	35
44	a	a		dt	art								DT	det	45
45	simulation	simulation		nn		nom							NN	dobj	43
46	that	that		relpro	relpro_that	sg							WDT	nsubj	48
47	even	even	rb+advl	rb	advl								RB	advmod	48
48	makes	make	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	45
49	sense	sense		nn									NN	dobj	48
50	,	,											,	punct	43
51	to	to		to									TO	aux	52
52	vary	vary		vbmain	phrsv	nonfinite	simple	active		tocls			VB	dep	43
53	these	these		dt	dt_dem								DT	det	54
54	parameters	parameter		nn	pl	nom							NNS	dobj	52
55	in	in		rb	prtcle								IN	prt	52
56	because	because		cs	cos								IN	mark	94
57	,	,											,	punct	94
58	when	when		rb	advl								WRB	advmod	60
59	we	we		pro	1st								PRP	nsubj	60
60	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	94
61	a	a		dt	art								DT	det	63
62	simple	simple	attr+npremod	jj	attr								JJ	amod	63
63	domain	domain		nn									NN	dobj	60
64	that	that		relpro	relpro_that	sg							WDT	nsubj	65
65	has	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	63
66	two	two											CD	nummod	69
67	or	or		cc									CC	cc	66
68	three	three											CD	conj	66
69	actions	action		nn	pl	nom							NNS	dobj	65
70	,	,											,	punct	69
71	and	and		cc	phrs								CC	cc	69
72	,	,											,	punct	69
73	two	two											CD	nummod	76
74	or	or		cc									CC	cc	73
75	three	three											CD	conj	73
76	transitions	transition		nn	pl	nom							NNS	conj	69
77	,	,											,	punct	94
78	it	it		pro	3rd	sg							PRP	nsubj	81
79	's	be		vbaux									VBZ	aux	81
80	not	not											RB	neg	81
81	going	go		vbmain	vblex	pres	prog	active					VBG	dep	94
82	to	to		to									TO	aux	83
83	give	give	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	81
84	you	you		pro	2nd	sg							PRP	dative	83
85	a	a		dt	art								DT	det	87
86	smooth	smooth	attr+npremod	jj	attr								JJ	amod	87
87	curve	curve		nn									NN	dobj	83
88	and	and		cc	phrs								CC	cc	87
89	neat	neat	attr+npremod	jj	attr								JJ	amod	91
90	resource	resource	nn+npremod	nn			npremod						NN	compound	91
91	capacity	capacity		nn		nom							NN	conj	87
92	it	it		pro	3rd	sg							PRP	nsubj	94
93	's	be		vbaux									VBZ	aux	94
94	going	go	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		causative		VBG	advcl	32
95	to	to		to									TO	aux	96
96	give	give	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	94
97	you	you		pro	2nd	sg							PRP	dative	96
98	jumps	jump		nn	pl								NNS	dobj	96
99	.	.											.	punct	32

#sentid = 725
0	because	because		cs	cos								IN	mark	2
1	you	you		pro	2nd	sg							PRP	nsubj	2
2	remove	remove		vbmain	vblex	pres	simple	active			causative		VBP	ROOT	2
3	one	one											CD	nummod	4
4	task	task		nn									NN	dobj	2
5	,	,											,	punct	4
6	a-	a-											DT	appos	4
7	or	or		cc	phrs								CC	cc	4
8	you	you		pro	2nd	sg							PRP	conj	4
9	,	,											,	punct	10
10	change	change		vbmain	vblex	pres	simple	active					VBP	dep	2
11	the	the		dt	art								DT	det	12
12	deadline	deadline		nn									NN	dobj	10
13	for	for	in+npostmod	in	nmod								IN	prep	12
14	that	that		dt	dt_dem								DT	det	15
15	task	task		nn									NN	pobj	13
16	,	,											,	punct	10
17	and	and		cc	cls								CC	cc	2
18	it	it		pro	3rd	sg							PRP	nsubj	20
19	's	be		vbaux									VBZ	aux	20
20	gon	go											TO	conj	2
21	na	to		vbaux									TO	aux	23
22	suddenly	suddenly	rb+advl	rb	advl	ly	splaux						RB	advmod	23
23	jump	jump		vbmain	vblex	nonfinite	simple	active	compcls			compdel	VB	xcomp	20
24	,	,											,	punct	23
25	along	along	in+advl	in	advl								IN	prep	23
26	that	that		dt	dt_dem								DT	det	27
27	curve	curve		nn									NN	pobj	25
28	.	.											.	punct	23

#sentid = 726
0	and	and		cc	phrs								CC	cc	1
1	so	so											RB	ROOT	1
2	if	if		cs	cnd								IN	mark	4
3	i	i		pro	1st	sg							PRP	nsubj	4
4	do	do	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	1
5	one	one											CD	nummod	7
6	simple	simple	attr+npremod	jj	attr								JJ	amod	7
7	example	example		nn									NN	dobj	4
8	that	that		relpro	relpro_that	sg							WDT	nsubj	9
9	gives	give	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	7
10	me	i		pro	1st	sg							PRP	dative	9
11	a	a		dt	art								DT	det	12
12	couple	couple		nn									NN	dobj	9
13	of	of	of+npostmod	in	nmod								IN	prep	12
14	jumps	jump		nn	pl								NNS	pobj	13
15	and	and		cc	cls								CC	cc	4
16	then	then		rb	link								RB	advmod	18
17	i	i		pro	1st	sg							PRP	nsubj	18
18	present	present		vbmain	vblex	pres	simple	active					VBP	conj	4
19	that	that		comp	comp_that								IN	mark	21
20	that	that		pro	dem	sg							DT	nsubj	21
21	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	18
22	not	not											RB	neg	21
23	representative	representative		jj	pred								JJ	acomp	21
24	of	of	in+jcomp	in	jcomp								IN	prep	23
25	what	what											WP	dobj	30
26	we	we		pro	1st								PRP	nsubj	28
27	're	be		vbaux									VBP	aux	28
28	gon	go											TO	pcomp	24
29	na	to		vbaux									TO	aux	30
30	get	get		vbmain	vblex	nonfinite	simple	active	compcls			compdel	VB	xcomp	28
31	for	for	in+advl	in	advl								IN	prep	30
32	another	another		dt									DT	det	33
33	example	example		nn									NN	pobj	31
34	.	.											.	punct	1

#sentid = 727
0													_SP	dep	3
1	but	but		cc	phrs								CC	cc	3
2	i	i		pro	1st	sg							PRP	nsubj	3
3	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	3
4	,	,											,	punct	3
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	3
7	you	you		pro	2nd	sg							PRP	nsubj	9
8	've	've		vbaux									VBP	aux	9
9	got	get	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBN	ccomp	3
10	that	that		dt	dt_dem								DT	det	12
11	overall	overall	attr+npremod	jj	attr								JJ	amod	12
12	curve	curve		nn									NN	dobj	9
13	but	but		cc	cls								CC	cc	9
14	that	that		pro	dem	sg							DT	nsubj	15
15	's	be		vbmain	be	pres	simple	active					VBZ	conj	9
16	actually	actually	rb+advl	rb	advl	ly							RB	advmod	15
17	a	a		dt	art								DT	det	18
18	composition	composition		nn		nom							NN	attr	15
19	of	of	of+npostmod	in	nmod								IN	prep	18
20	two	two											CD	nummod	22
21	separate	separate	attr+npremod	jj	attr								JJ	amod	22
22	things	thing		nn	pl	nom							NNS	pobj	19
23	which	which		relpro	relpro_wh								WDT	nsubj	26
24	themselves	themselves		pro	pl								PRP	appos	23
25	might	might		vbaux	mod	pos							MD	aux	26
26	be	be	finitecls+rel	vbmain	be	vp_w_modal	simple	active	nmod_cls	whcls	rel		VB	relcl	22
27	,	,											,	punct	26
28	analyzable	analyzable		jj	pred								JJ	acomp	26
29	,	,											,	punct	26
30													_SP	dep	26
31	mhm	mhm											UH	intj	26
32	.	.											.	punct	3

#sentid = 728
0													_SP	dep	12
1	individually	individually	rb+advl	rb	advl	ly							RB	advmod	12
2	,	,											,	punct	12
3	uh	uh											UH	intj	12
4	,	,											,	punct	12
5	(	(											-LRB-	punct	12
6	missing	miss	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	12
7	)	)											-RRB-	punct	12
8	so	so		rb	link								RB	advmod	12
9	one	one		pro	other	pl							CD	nsubj	12
10	of	of		in	in_othr								IN	prep	9
11	them	they		pro	pl								PRP	pobj	10
12	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	12
13	the	the		dt	art								DT	det	16
14	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	15
15	estimation	estimation	nn+npremod	nn		nom	npremod						NN	compound	16
16	part	part		nn									NN	attr	12
17	,	,											,	punct	16
18													_SP	dep	16
19	mhm	mhm											UH	intj	16
20	.	.											.	punct	12

#sentid = 729
0													_SP	dep	0
1	which	which		relpro	relpro_wh								WDT	nsubj	2
2	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	0
3	separate	separate		jj	pred								JJ	acomp	2
4	.	.											.	punct	2

#sentid = 730
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	0

#sentid = 731
0													_SP	dep	2
1	mkay	mkay											UH	intj	2
2	simulate	simulate		vbmain	vblex	nonfinite	simple	active					VB	ROOT	2
3	,	,											,	punct	2
4													_SP	dep	2
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	2
7	,	,											,	punct	2
8													_SP	dep	2
9	mhm	mhm											UH	intj	2
10	.	.											.	punct	2
11													_SP	dep	2
12	uh	uh											UH	intj	11
13	,	,											,	punct	11
14													_SP	dep	2
15	the	the		dt	art								DT	det	16
16	transitions	transition		nn	pl	nom							NNS	dobj	2
17	and	and		cc	phrs								CC	cc	2
18	then	then		rb	link								RB	advmod	19
19	simulate	simulate		vbmain	vblex	nonfinite	simple	active					VB	conj	2
20	and	and		cc	cls								CC	cc	19
21	then	then		rb	link								RB	advmod	36
22	your	your		dt	poss								PRP$	poss	23
23													_SP	dep	36
24	right	right											UH	intj	31
25	and	and		cc	phrs								CC	cc	31
26	in	in		in	nmod								IN	prep	31
27	fact	fact		nn									NN	pobj	26
28	the	the		dt	art								DT	det	31
29	,	,											,	punct	31
30	the	the		dt	art								DT	det	31
31	person	person		nn									NN	nsubj	36
32	who	who		relpro	relpro_wh								WP	nsubj	34
33	just	just	rb+advl	rb	advl								RB	advmod	34
34	left	leave	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls	whcls	rel		VBD	relcl	31
35	,	,											,	punct	36
36	is	be		vbmain	be	pres	simple	active					VBZ	conj	19
37	actually	actually	rb+advl	rb	advl	ly							RB	advmod	36
38	that	that		dt	poss								DT	poss	40
39	's	's											POS	case	38
40	part	part		nn									NN	ccomp	36
41	of	of	of+npostmod	in	nmod								IN	prep	40
42	his	his		dt	poss	sg							PRP$	poss	43
43	research	research		nn									NN	pobj	41
44	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	36
45	he	he		pro	3rd	sg							PRP	nsubjpass	49
46	's	's											POS	dep	49
47	,	,											,	punct	49
48	uh	uh											UH	intj	49
49	has	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	44
50	a	a		dt	art								DT	det	52
51	stochastic	stochastic	attr+npremod	jj	attr								JJ	amod	52
52	simulation	simulation		nn		nom							NN	dobj	49
53	where	where		rb	advl								WRB	advmod	58
54	he	he		pro	3rd	sg							PRP	nsubj	58
55	actually	actually	rb+advl	rb	advl	ly							RB	advmod	58
56	,	,											,	punct	58
57	uh	uh											UH	intj	58
58	estimates	estimate	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	52
59	,	,											,	punct	58
60	the	the		dt	art								DT	det	62
61	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	62
62	errors	error		nn	pl	nom							NNS	dobj	58
63	of	of	of+npostmod	in	nmod								IN	prep	62
64	our	our		dt	poss								PRP$	poss	65
65	model	model		nn									NN	pobj	63
66	relative	relative		jj	attr								JJ	amod	62
67	to	to	in+jcomp	in	jcomp								IN	prep	66
68	the	the		dt	art								DT	det	70
69	stochastic	stochastic	attr+npremod	jj	attr								JJ	amod	70
70	simulation	simulation		nn		nom							NN	pobj	67
71	where	where		rb	advl								WRB	advmod	74
72	he	he		pro	3rd	sg							PRP	nsubj	74
73	,	,											,	punct	74
74	puts	put	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	70
75	the	the		dt	art								DT	det	77
76	rate	rate	nn+npremod	nn		nom	npremod						NN	compound	77
77	functions	function		nn	pl	nom							NNS	dobj	74
78	into	into	in+advl	in	advl								IN	prep	74
79	that	that		dt	dt_dem								DT	det	80
80	simulation	simulation		nn		nom							NN	pobj	78
81	.	.											.	punct	2

#sentid = 732
0													_SP	dep	4
1	okay	okay											UH	intj	4
2	so	so		rb	link								RB	advmod	4
3	that	that		pro	dem	sg							DT	nsubj	4
4	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	one	one											CD	nummod	6
6	piece	piece		nn									NN	attr	4
7													_SP	dep	4
8	right	right											UH	intj	4
9	.	.											.	punct	4

#sentid = 733
0													_SP	dep	4
1	the	the		dt	art								DT	det	3
2	other	other	attr+npremod	jj	attr								JJ	amod	3
3	piece	piece		nn									NN	nsubj	4
4	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	,	,											,	punct	4
6	um	um											UH	intj	4
7	,	,											,	punct	4
8													_SP	dep	4
9	(	(											-LRB-	punct	10
10	xx	xx											XX	nmod	8
11	)	)											-RRB-	punct	10
12													_SP	dep	4
13	models	model		nn	pl								NNS	attr	4
14	of	of	of+npostmod	in	nmod								IN	prep	13
15	resource	resource	nn+npremod	nn			npremod						NN	compound	16
16	availability	availability		nn		nom							NN	pobj	14
17	and	and		cc	phrs								CC	cc	16
18	how	how		rb	advl								WRB	advmod	20
19	that	that		pro	dem	sg							DT	nsubj	20
20	trades	trade		vbmain	phrsv	pres	simple	active					VBZ	conj	16
21	off	off		rb	prtcle								RP	prt	20
22	with	with	in+advl	in	advl								IN	prep	20
23	value	value		nn									NN	pobj	22
24	for	for	in+npostmod	in	nmod								IN	prep	23
25	different	different	attr+npremod	jj	attr								JJ	amod	26
26	thresholds	threshold		nn	pl								NNS	pobj	24
27	that	that		pro	dem	sg							WDT	dobj	29
28	we	we		pro	1st								PRP	nsubj	29
29	need	need	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	26
30	.	.											.	punct	4

#sentid = 734
0	and	and		cc	cls								CC	cc	15
1	,	,											,	punct	15
2	presumably	presumably	rb+advl	rb	advl	ly							RB	advmod	15
3	e-	e-											XX	nsubj	15
4	even	even		rb	othr								RB	advmod	5
5	that	that		pro	dem	sg							DT	nsubj	6
6	is	be		vbmain	be	pres	simple	active					VBZ	nsubj	15
7	up	up	in+advl	in	advl								IN	prep	6
8	to	to		in	in_othr								IN	prep	7
9	the	the		dt	art								DT	det	10
10	simulation	simulation	nn+npremod	nn		nom	npremod						NN	nmod	12
11	(	(											-LRB-	punct	10
12	properties	property		nn	pl								NNS	pobj	8
13	)	)											-RRB-	punct	12
14	is	be		vbaux									VBZ	aux	15
15	coming	come		vbmain	phrsv	pres	prog	active					VBG	ROOT	15
16	up	up		rb	prtcle								RP	prt	15
17	with	with	in+advl	in	advl								IN	prep	15
18	some	some		dt									DT	det	19
19	parameters	parameter		nn	pl	nom							NNS	pobj	17
20	that	that		pro	dem	sg							WDT	dobj	23
21	we	we		pro	1st								PRP	nsubj	23
22	can	can		vbaux	mod	pos							MD	aux	23
23	vary	vary	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel		VB	relcl	19
24	.	.											.	punct	15

#sentid = 735
0	and	and		cc	cls								CC	cc	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	that	that		comp	comp_that								IN	mark	7
4	the	the		dt	art								DT	det	6
5	overall	overall	attr+npremod	jj	attr								JJ	amod	6
6	result	result		nn									NN	nsubj	7
7	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	2
8	just	just		rb	othr								RB	advmod	10
9	the	the		dt	art								DT	det	10
10	composition	composition		nn		nom							NN	attr	7
11	of	of	of+npostmod	in	nmod								IN	prep	10
12	those	those		dt	dt_dem								DT	det	14
13	two	two											CD	nummod	14
14	things	thing		nn	pl	nom							NNS	pobj	11
15	,	,											,	punct	14
16	um	um											UH	intj	14
17	,	,											,	punct	14
18	we	we		pro	1st								PRP	appos	14
19													_SP	dep	7
20	okay	okay											UH	intj	2
21	...	...											:	punct	2

#sentid = 736
0	uh	uh											UH	intj	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	'm	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	50
3	not	not											RB	neg	2
4	quite	quite	rb+jjrbmod	rb	adjmod								RB	advmod	5
5	sure	sure		jj	pred								JJ	acomp	2
6	how	how		rb	advl								WRB	advmod	8
7	to	to		to									TO	aux	8
8	get	get	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	5
9	that	that		dt	dt_dem								DT	det	11
10	second	second	attr+npremod	jj	attr								JJ	amod	11
11	part	part		nn									NN	dobj	8
12	the	the		dt	art								DT	det	14
13	first	first	attr+npremod	jj	attr								JJ	amod	14
14	part	part	appos+npostmod	nn			nappos						NN	appos	11
15	i	i		pro	1st	sg							PRP	dobj	18
16	i	i		pro	1st	sg							PRP	nsubj	18
17	can	can		vbaux	mod	pos							MD	aux	18
18	get	get	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	14
19	for	for	in+advl	in	advl								IN	prep	18
20	specific	specific	attr+npremod	jj	attr								JJ	amod	21
21	examples	example		nn	pl								NNS	pobj	19
22	but	but		cc	cls								CC	cc	2
23	again	again	rb+advl	rb	advl								RB	advmod	25
24	i	i		pro	1st	sg							PRP	nsubj	25
25	'm	be		vbmain	be	pres	simple	active					VBP	conj	2
26	not	not											RB	neg	25
27	sure	sure		jj	pred								JJ	acomp	25
28	how	how		comp	comp_wh								WRB	advmod	30
29	that	that		pro	dem	sg							DT	nsubj	30
30	generalizes	generalize		vbmain	vblex	pres	simple	active	compcls	whcls	jcomp		VBZ	ccomp	27
31	and	and		cc	phrs								CC	cc	30
32													_SP	dep	30
33	see	see		vbmain	vblex	pres	simple	active					VBP	dep	30
34	but	but		cc	cls								CC	cc	25
35	the	the		dt	art								DT	det	37
36	second	second	attr+npremod	jj	attr								JJ	amod	37
37	part	part		nn									NN	npadvmod	41
38	it	it		pro	3rd	sg							PRP	nsubj	41
39	does	do		vbaux									VBZ	aux	41
40	n't	not											RB	neg	41
41	matter	matter		vbmain	vblex	pres	simple	active					VB	conj	25
42	actually	actually	rb+advl	rb	advl	ly							RB	advmod	41
43	what	what											WP	attr	46
44	the	the		dt	art								DT	det	45
45	states	state		nn	pl	nom							NNS	nsubj	46
46	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	41
47	you	you		pro	2nd	sg							PRP	nsubj	48
48	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	46
49	it	it		pro	3rd	sg							PRP	nsubj	50
50	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	50
51	it	it		pro	3rd	sg							PRP	nsubj	52
52	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	50
53	really	really	rb+advl	rb	advl	ly							RB	advmod	50
54	,	,											,	punct	50
55													_SP	dep	50
56	mhm	mhm											UH	intj	50
57	.	.											.	punct	50

#sentid = 737
0													_SP	dep	4
1	um	um											UH	intj	4
2													_SP	dep	4
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	matters	matter		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	16
5	,	,											,	punct	4
6													_SP	dep	4
7	it	it		pro	3rd	sg							PRP	nsubj	8
8	's	be		vbmain	be	pres	simple	active					VBZ	meta	4
9													_SP	dep	8
10	what	what											WP	dep	11
11	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	8
12	,	,											,	punct	8
13	s-	s-											XX	dep	8
14	the	the		dt	art								DT	det	15
15	problem	problem		nn									NN	nsubj	16
16	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	16
17													_SP	dep	16
18	you	you		pro	2nd	sg							PRP	nsubj	19
19	need	need	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	16
20	you	you		pro	2nd	sg							PRP	nsubj	21
21	need	need		vbmain	vblex	pres	simple	active					VBP	parataxis	19
22													_SP	dep	19
23	th-	th-											JJ	dep	19
24	th-	th-											XX	dep	19
25	the	the		dt	art								DT	det	26
26	variables	variable		nn	pl								NNS	nsubj	28
27	here	here		rb	othr								RB	advmod	26
28	are	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	41
29	the	the		dt	art								DT	det	30
30	shape	shape		nn									NN	attr	28
31	of	of	of+npostmod	in	nmod								IN	prep	30
32	the	the		dt	art								DT	det	35
33	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	34
34	rate	rate	nn+npremod	nn		nom	npremod						NN	compound	35
35	functions	function		nn	pl	nom							NNS	pobj	31
36	,	,											,	punct	28
37	i	i		pro	1st	sg							PRP	nsubj	38
38	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	41
39	we	we		pro	1st								PRP	nsubj	41
40	've	've		vbaux									VBP	aux	41
41	presented	present	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBN	ccomp	16
42	bell	bell	nn+npremod	nn			npremod						NN	compound	43
43	distributions	distribution		nn	pl	nom							NNS	dobj	41
44	and	and		cc	phrs								CC	cc	43
45	,	,											,	punct	43
46	reliable	reliable	attr+npremod	jj	attr								JJ	amod	47
47	transitions	transition		nn	pl	nom							NNS	conj	43
48	and	and		cc	phrs								CC	cc	47
49	so	so	rb+jjrbmod	rb	othr								RB	advmod	50
50	forth	forth											RB	conj	47
51	but	but		cc	cls								CC	cc	41
52	what	what											WP	attr	53
53	is	be		vbmain	be	pres	simple	active					VBZ	conj	41
54	the	the		dt	art								DT	det	56
55	generic	generic	attr+npremod	jj	attr								JJ	amod	56
56	shape	shape		nn									NN	nsubj	53
57	we	we		pro	1st								PRP	nsubj	59
58	've	've		vbaux									VBP	aux	59
59	had	have		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBN	ccomp	66
60	constant	constant	attr+npremod	jj	attr								JJ	amod	61
61	values	value		nn	pl								NNS	dobj	59
62	,	,											,	punct	66
63	um	um											UH	intj	66
64	we	we		pro	1st								PRP	nsubj	66
65	can	can		vbaux	mod	pos							MD	aux	66
66	do	do	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	16
67	a	a		dt	art								DT	det	69
68	generic	generic	attr+npremod	jj	attr								JJ	amod	69
69	shape	shape		nn									NN	dobj	66
70	for	for	in+npostmod	in	nmod								IN	prep	69
71	an	an		dt									DT	det	72
72	action	action		nn		nom							NN	pobj	70
73	because	because		cs	cos								IN	mark	75
74	we	we		pro	1st								PRP	nsubj	75
75	know	know	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBP	advcl	66
76	how	how		comp	comp_wh								WRB	advmod	78
77	we	we		pro	1st								PRP	nsubj	78
78	model	model	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	75
79	that	that		pro	dem	sg							DT	dobj	78
80	but	but		cc	cls								CC	cc	66
81	,	,											,	punct	66
82	for	for	in+advl	in	advl								IN	prep	89
83	a	a		dt	art								DT	det	85
84	temporal	temporal	attr+npremod	jj	attr								JJ	amod	85
85	transition	transition		nn		nom							NN	pobj	82
86	,	,											,	punct	89
87	should	should		vbaux	mod	nec							MD	aux	89
88	we	we		pro	1st								PRP	nsubj	89
89	use	use		vbmain	vblex	vp_w_modal	simple	active					VB	conj	66
90	a	a		dt	art								DT	det	92
91	coin	coin	nn+npremod	nn			npremod						NN	compound	92
92	flip	flip		nn									NN	dobj	89
93	or	or		cc	cls								CC	cc	89
94	should	should		vbaux	mod	nec							MD	aux	96
95	we	we		pro	1st								PRP	nsubj	96
96	use	use		vbmain	vblex	vp_w_modal	simple	active					VB	conj	89
97	something	something		nn	other	nom							NN	dobj	96
98	that	that		relpro	relpro_that	sg							WDT	nsubj	100
99	,	,											,	punct	100
100	looks	look	finitecls+rel	vbmain	prepv	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	97
101	like	like	in+advl	in	advl								IN	prep	100
102	an	an		dt									DT	det	103
103	action	action		nn		nom							NN	pobj	101
104	that	that		relpro	relpro_that	sg							WDT	nsubj	105
105	's	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	103
106	reliable	reliable		jj	pred								JJ	acomp	105
107	or	or		cc	cls								CC	cc	96
108	should	should		vbaux	mod	nec							MD	aux	110
109	we	we		pro	1st								PRP	nsubj	110
110	use	use		vbmain	vblex	vp_w_modal	simple	active					VB	conj	96
111	a	a		dt	art								DT	det	114
112	,	,											,	punct	114
113	bell	bell	nn+npremod	nn			npremod						NN	compound	114
114	curve	curve		nn									NN	dobj	110
115	and	and		cc	phrs								CC	cc	114
116													_SP	dep	114
117	so	so		cc									RB	cc	116
118	i	i		pro	1st	sg							PRP	nsubj	119
119	w-	w-											XX	meta	116
120													_SP	dep	16
121	and	and		cc	cls								CC	cc	16
122	then	then		rb	link								RB	advmod	127
123	wha-	wha-		in	in_othr								XX	prep	122
124	what	what											WP	dobj	127
125	do	do		vbaux									VBP	aux	127
126	you	you		pro	2nd	sg							PRP	nsubj	127
127	do	do		vbmain	vblex	pres	simple	active					VB	conj	16
128	?	?											.	punct	127

#sentid = 738
0													_SP	dep	4
1	so	so		rb	link								RB	advmod	4
2	i	i		pro	1st	sg							PRP	nsubj	4
3	would	would		vbaux	mod	prd							MD	aux	4
4	take	take		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	4
5	the	the		dt	art								DT	det	6
6	results	result		nn	pl								NNS	dobj	4
7	you	you		pro	2nd	sg							PRP	nsubj	8
8	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	9
9	suppose	suppose		vbmain	vblex	nonfinite	simple	active					VB	meta	4
10	you	you		pro	2nd	sg							PRP	nsubj	11
11	had	have	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	9
12	a	a											DT	quantmod	13
13	hundred	hundred											CD	nummod	14
14	actions	action		nn	pl	nom							NNS	dobj	11
15	they	they		pro	pl								PRP	nsubj	16
16	were	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	9
17	all	all											DT	dep	16
18	coin	coin	nn+npremod	nn			npremod						NN	compound	19
19	flips	flip		nn	pl								NNS	attr	16
20	,	,											,	punct	16
21													_SP	dep	16
22	right	right											UH	intj	16
23	,	,											,	punct	16
24													_SP	dep	16
25	you	you		pro	2nd	sg							PRP	nsubj	26
26	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	16
27	and	and		cc	cls								CC	cc	16
28	these	these		pro	dem	pl							DT	nsubj	29
29	are	be		vbmain	be	pres	simple	active					VBP	conj	16
30	,	,											,	punct	29
31	the	the		dt	art								DT	det	32
32	distribution	distribution		nn		nom							NN	attr	29
33	of	of	of+npostmod	in	nmod								IN	prep	32
34	the	the											DT	pobj	33
35	,	,											,	punct	33
36	of	of		in	in_othr								IN	prep	33
37	the	the		dt	art								DT	det	38
38	parameters	parameter		nn	pl	nom							NNS	pobj	36
39	and	and		cc	phrs								CC	cc	9
40	,	,											,	punct	9
41													_SP	dep	9
42	um	um											UH	intj	9
43													_SP	dep	4
44	but	but											CC	meta	4
45	it	it		pro	3rd	sg							PRP	nsubj	46
46	makes	make		vbmain	vblex	pres	simple	active					VBZ	conj	4
47	a	a		dt	art								DT	det	49
48	big	big	attr+npremod	jj	attr								JJ	amod	49
49	difference	difference		nn		nom							NN	dobj	46
50	like	like											IN	intj	46
51	,	,											,	punct	53
52	we	we		pro	1st								PRP	nsubj	53
53	have	have		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	64
54	this	this		dt	dt_dem								DT	det	55
55	model	model		nn									NN	dobj	53
56	of	of	of+npostmod	in	nmod								IN	prep	55
57	dependent	dependent	attr+npremod	jj	attr								JJ	amod	59
58	temporal	temporal	attr+npremod	jj	attr								JJ	amod	59
59	transitions	transition		nn	pl	nom							NNS	pobj	56
60	,	,											,	punct	53
61	how	how		rb	advl								WRB	advmod	64
62	does	do		vbaux									VBZ	aux	64
63	that	that		pro	dem	sg							DT	nsubj	64
64	fit	fit		vbmain	phrsv	pres	simple	active					VB	parataxis	46
65	in	in		rb	prtcle								RP	prt	64
66	and	and		cc	cls								CC	cc	64
67	what	what											WP	nsubj	68
68	does	do		vbmain	vblex	pres	simple	active					VBZ	dep	74
69	that	that		pro	dem	sg							DT	nsubj	68
70	,	,											,	punct	74
71	how	how		rb	advl								WRB	advmod	74
72	does	do		vbaux									VBZ	aux	74
73	that	that		pro	dem	sg							DT	nsubj	74
74	benefit	benefit		vbmain	vblex	pres	simple	active					VB	conj	64
75	us	we		pro	pl								PRP	dobj	74
76	?	?											.	punct	74

#sentid = 739
0													_SP	dep	0
1	okay	okay											UH	intj	5
2	but	but		cc	phrs								CC	cc	5
3													_SP	dep	5
4	then	then		rb	link								RB	advmod	5
5	start	start		vbmain	in_othr	nonfinite	simple	active					VB	prep	0
6	from	from	in+advl	in	advl								IN	prep	5
7	start	start		nn									NN	pobj	6
8	from	from		in	in_othr								IN	prep	6
9	(	(											-LRB-	punct	8
10	xx	xx											XX	pobj	8
11	)	)											-RRB-	punct	5
12													_SP	dep	5
13	but	but		cc									CC	cc	15
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	kn-	kn-											:	meta	5
16	but	but		cc	phrs								CC	cc	18
17	you	you		pro	2nd	sg							PRP	nsubj	18
18	know	know		vbmain	vblex	pres	simple	active					VBP	meta	15
19	nothing	nothing		nn	other	nom							NN	dobj	18
20	you	you		pro	2nd	sg							PRP	nsubj	21
21	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	18
22	nothing	nothing		nn	other	nom							NN	dobj	21
23	apparently	apparently	rb+advl	rb	advl	ly							RB	advmod	21
24	right	right	rb+jjrbmod	rb	othr								RB	advmod	25
25	now	now	rb+advl	rb	advl								RB	advmod	18
26	,	,											,	punct	18
27													_SP	dep	5
28	is	be		vbmain	be	pres	simple	active					VBZ	meta	5
29	that	that		pro	dem	sg							DT	nsubj	28
30	true	true		jj	pred								JJ	acomp	28
31	?	?											.	punct	28
32													_SP	dep	36
33	which	which											WDT	dep	36
34	we	we		pro	1st								PRP	dep	36
35	,	,											,	punct	36
36	know	know		dt	vblex	pres	simple	active					VBP	det	0
37	what	what											WP	dobj	36
38	?	?											.	punct	36

#sentid = 740
0													_SP	dep	24
1	you	you		pro	2nd	sg							PRP	nsubj	2
2	know	know		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	24
3	nothing	nothing		nn	other	nom							NN	dobj	2
4	right	right	rb+jjrbmod	rb	othr								RB	advmod	5
5	now	now	rb+advl	rb	advl								RB	advmod	2
6	really	really	rb+advl	rb	advl	ly							RB	advmod	2
7	about	about	in+npostmod	in	nmod								IN	prep	3
8	the	the		dt	art								DT	det	9
9	performance	performance		nn		nom							NN	pobj	7
10	of	of	of+npostmod	in	nmod								IN	prep	9
11	your	your											PRP$	pobj	10
12	,	,											,	punct	24
13	unless	unless		cs	cnd								IN	mark	15
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	're	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBP	advcl	24
16	here	here	rb+advl	rb	advl								RB	advmod	15
17	you	you		pro	2nd	sg							PRP	nsubj	24
18	are	be		vbaux									VBP	aux	24
19	,	,											,	punct	24
20	w-	w-											XX	dep	24
21	uh	uh											UH	intj	24
22	,	,											,	punct	24
23	um	um											UH	intj	24
24	working	work		vbmain	prepv	pres	prog	active					VBG	ROOT	24
25	on	on	in+advl	in	advl								IN	prep	24
26	these	these		dt	dt_dem								DT	det	27
27	very	very											RB	pobj	25
28	very	very											RB	npadvmod	24
29	,	,											,	punct	30
30													_SP	dep	24
31	yes	yes											UH	intj	30
32	.	.											.	punct	24

#sentid = 741
0													_SP	dep	0
1	demanding	demanding		jj	attr								JJ	amod	5
2	,	,											,	punct	5
3	difficult	difficult		jj	attr								JJ	amod	5
4	,	,											,	punct	5
5	physical	physical		jj	attr								JJ	amod	0
6	,	,											,	punct	5
7													_SP	dep	6
8	mhm	mhm											UH	intj	5
9	.	.											.	punct	5

#sentid = 742
0													_SP	dep	1
1	limitations	limitation		nn	pl	nom							NNS	ROOT	1
2	,	,											,	punct	1
3													_SP	dep	1
4	mhm	mhm											UH	intj	1
5	.	.											.	punct	1

#sentid = 743
0													_SP	dep	0
1	without	without		in	in_othr								IN	prep	0
2	,	,											,	punct	1
3	much	much	attr+npremod	jj	attr								JJ	amod	4
4	idea	idea		nn									NN	pobj	1
5	about	about	in+npostmod	in	nmod								IN	prep	4
6	how	how		rb	advl								WRB	advmod	14
7	your	your		dt	poss								PRP$	poss	9
8	,	,											,	punct	9
9	framework	framework		nn									NN	nsubj	11
10	is	be		vbaux									VBZ	aux	11
11	gon	go											TO	pcomp	5
12	na	to		vbaux									TO	aux	14
13	,	,											,	punct	14
14	perform	perform		vbmain	vblex	nonfinite	simple	active	compcls	whcls			VB	xcomp	11
15	in	in	in+advl	in	advl								IN	prep	14
16	,	,											,	punct	15
17	some	some											DT	pobj	15
18	,	,											,	punct	15
19	over	over		in	in_othr								IN	prep	15
20	some	some		dt									DT	det	21
21	variety	variety		nn									NN	pobj	19
22	of	of	of+npostmod	in	nmod								IN	prep	21
23	,	,											,	punct	22
24	settings	setting		nn	pl	nom							NNS	pobj	22
25	.	.											.	punct	0

#sentid = 744
0													_SP	dep	5
1	so	so		rb	link								RB	advmod	5
2	i	i		pro	1st	sg							PRP	nsubj	3
3	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	5
4	we	we		pro	1st								PRP	nsubj	5
5	wanted	want		vbmain	vblex	past	simple	active					VBD	ROOT	5
6	_	_											:	punct	5
7	showing	show		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	dep	5
8	that	that		comp	comp_that								IN	mark	10
9	it	it		pro	3rd	sg							PRP	nsubj	10
10	works	work	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	7
11	well	well	rb+advl	rb	advl								RB	advmod	10
12	under	under	in+advl	in	advl								IN	prep	10
13	favorable	favorable	attr+npremod	jj	attr								JJ	amod	15
14	,	,											,	punct	15
15	assumptions	assumption		nn	pl	nom							NNS	pobj	12
16	all	all		rb	othr								DT	advmod	17
17	across	across	in+npostmod	in	nmod								IN	prep	15
18	the	the		dt	art								DT	det	19
19	board	board		nn									NN	pobj	17
20	,	,											,	punct	7
21													_SP	dep	7
22	mhm	mhm											UH	intj	7
23	.	.											.	punct	5

#sentid = 745
0													_SP	dep	0
1	when	when		comp	comp_wh								WRB	advmod	3
2	there	there											EX	expl	3
3	's	be		vbmain	be	pres	simple	active	compcls	whcls			VBZ	ccomp	0
4	no	no		dt									DT	det	14
5	,	,											,	punct	14
6													_SP	dep	14
7	okay	okay											UH	intj	14
8	,	,											,	punct	14
9	mhm	mhm											UH	intj	8
10	.	.											.	punct	8
11													_SP	dep	14
12	complicated	complicated	attr+npremod	jj	attr								JJ	amod	14
13	temporal	temporal	attr+npremod	jj	attr								JJ	amod	14
14	dependency	dependency		nn		nom							NN	attr	3
15	(	(											-LRB-	punct	14
16	fulfilled	fulfil	edcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	edcls	ncomp		VBN	acl	14
17	.	.											.	punct	14
18	)	)											.	punct	14

#sentid = 746
0													_SP	dep	0
1	yes	yes											UH	intj	0
2	.	.											.	punct	1

#sentid = 747
0													_SP	dep	5
1	that	that		pro	dem	sg							DT	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	dep	5
3	a	a											DT	attr	2
4	that	that		pro	dem	sg							DT	nsubj	5
5	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	5
6	a	a		dt	art								DT	det	8
7	starting	starting	nn+npremod	nn		nom	npremod						NN	compound	8
8	point	point		nn									NN	attr	5
9	.	.											.	punct	5

#sentid = 748
0													_SP	dep	0
1	mhm	mhm											UH	intj	0
2	.	.											.	punct	1

#sentid = 749
0													_SP	dep	0
1	and	and		cc	phrs								CC	cc	11
2	that	that		pro	dem	sg							DT	nsubj	3
3	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	11
4	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	5
5	of	of		rb	othr								RB	advmod	8
6	all	all											PDT	predet	8
7	the	the		dt	art								DT	det	8
8	evidence	evidence		nn		nom							NN	attr	3
9	okay	okay											UH	intj	10
10	now	now											RB	intj	11
11	let	let		vbmain	vblex	nonfinite	simple	active					VB	meta	0
12	's	us											PRP	nsubj	17
13	,	,											,	punct	15
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	17
16													_SP	dep	15
17	investigate	investigate		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	11
18	further	far	rb+advl	rb	advl								RB	advmod	17
19	(	(											-LRB-	punct	11
20	xx	xx											XX	punct	11
21	)	)											-RRB-	punct	11

#sentid = 750
0													_SP	dep	0

#sentid = 751
0	so	so		rb	link								RB	advmod	3
1	this	this		pro	dem	sg							DT	nsubj	3
2	is	be		vbaux									VBZ	aux	3
3	talking	talk		vbmain	prepv	pres	prog	active					VBG	ROOT	3
4	about	about	in+advl	in	advl								IN	prep	3
5	,	,											,	punct	4
6	using	use	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	4
7	a	a		dt	art								DT	det	9
8	stochastic	stochastic	attr+npremod	jj	attr								JJ	amod	9
9	simulation	simulation		nn		nom							NN	dobj	6
10	to	to		to									TO	aux	11
11	compare	compare	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	6
12	the	the		dt	art								DT	det	13
13	accuracy	accuracy		nn		nom							NN	dobj	11
14	of	of	of+npostmod	in	nmod								IN	prep	13
15	the	the		dt	art								DT	det	16
16	results	result		nn	pl								NNS	pobj	14
17	,	,											,	punct	3
18	as	as	in+advl	in	advl								IN	prep	3
19	one	one											CD	nummod	20
20	part	part		nn									NN	pobj	18
21	and	and		cc	cls								CC	cc	3
22	then	then		rb	link								RB	advmod	26
23	the	the		dt	art								DT	det	25
24	other	other	attr+npremod	jj	attr								JJ	amod	25
25	part	part		nn									NN	nsubj	26
26	is	be		vbmain	be	pres	simple	active					VBZ	conj	3
27	to	to		to									TO	aux	29
28	,	,											,	punct	29
29	show	show	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	26
30	that	that											IN	mark	31
31	it	it		pro	3rd	sg							PRP	nsubj	41
32	actually	actually											RB	dep	41
33	,	,											,	punct	41
34	i-	i-											XX	dep	41
35	i	i		pro	1st	sg							PRP	nsubj	36
36	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	41
37													_SP	dep	41
38	what	what											WP	dobj	43
39	am	be		vbaux									VBP	aux	41
40	i	i		pro	1st	sg							PRP	nsubj	41
41	trying	try	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	29
42	to	to		to									TO	aux	43
43	show	show	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	41
44	,	,											,	punct	41
45	that	that											IN	mark	47
46	it	it		pro	3rd	sg							PRP	nsubj	47
47	's	be		vbmain	be	pres	simple	active					VBZ	meta	41
48	(	(											-LRB-	punct	47
49	xx	xx											XX	dep	47
50	)	)											-RRB-	meta	47
51													_SP	dep	26
52	so	so		cc	phrs								RB	cc	26
53	so	so		rb	link								RB	advmod	55
54	that	that		pro	dem	sg							DT	nsubj	55
55	's	be		vbmain	be	pres	simple	active					VBZ	dep	26
56	,	,											,	punct	55
57	so	so		cs	cs_othr								IN	mark	66
58	that	that		cs	cs_othr								IN	mark	66
59	these	these											DT	dep	66
60	so	so		rb	link								IN	advmod	66
61	that	that		cs	cs_othr								IN	mark	66
62	these	these		dt	dt_dem								DT	det	65
63	trade	trade	nn+npremod	nn			npremod						NN	compound	65
64	-	-											HYPH	punct	65
65	offs	off		nn	pl								NNS	nsubj	66
66	are	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBP	advcl	55
67	relevant	relevant		jj	pred								JJ	acomp	66
68	over	over	in+jcomp	in	jcomp								IN	prep	67
69	a	a		dt	art								DT	det	71
70	broad	broad	attr+npremod	jj	attr								JJ	amod	71
71	range	range		nn									NN	pobj	68
72	of	of	of+npostmod	in	nmod								IN	prep	71
73	parameters	parameter		nn	pl	nom							NNS	pobj	72
74	,	,											,	punct	66
75	um	um											UH	intj	66
76													_SP	dep	55
77	that	that		cs	cs_othr								IN	mark	79
78	you	you		pro	2nd	sg							PRP	nsubj	79
79	got	get	finitecls+advl	vbmain	vblex	past	simple	active	advlcls				VBD	advcl	87
80	the	the		dt	art								DT	det	81
81	right	right		nn									NN	dobj	79
82	,	,											,	punct	87
83	that	that											IN	mark	84
84	you	you		pro	2nd	sg							PRP	dep	87
85	that	that											IN	mark	87
86	you	you		pro	2nd	sg							PRP	nsubj	87
87	got	get		vbmain	vblex	past	simple	active					VBD	dep	55
88	the	the		dt	art								DT	det	89
89	right	right											JJ	dobj	87
90	,	,											,	punct	91
91	levers	lever		nn	pl	nom							NNS	meta	87
92	here	here		rb	othr								RB	advmod	91
93	,	,											,	punct	91
94	you	you		pro	2nd	sg							PRP	nsubj	95
95	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	91
96	?	?											.	punct	26

#sentid = 752
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2	.	.											.	punct	1

#sentid = 753
0													_SP	dep	13
1	i	i		pro	1st	sg							PRP	nsubj	13
2	ha-	ha-		vbmain	vblex	pres	simple	active					VBP	punct	13
3	i	i		pro	1st	sg							PRP	nsubj	6
4	do	do		vbaux									VBP	aux	6
5	n't	not											RB	neg	6
6	understand	understand		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	13
7	reading	read	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	6
8	the	the		dt	art								DT	det	9
9	thesis	thesis		nn									NN	dobj	7
10	,	,											,	punct	13
11	thi-	thi-											XX	dep	13
12	things	thing		nn	pl	nom							NNS	nsubj	13
13	are	be		vbmain	be	pres	simple	active					VBP	ROOT	13
14	complicated	complicated		jj	pred								JJ	acomp	13
15	enough	enough	rb+jjrbmod	rb	adjmod								RB	advmod	14
16	that	that		comp	comp_that								IN	mark	22
17	i	i		pro	1st	sg							PRP	nsubj	22
18	,	,											,	punct	22
19	just	just	rb+advl	rb	advl								RB	advmod	22
20	do	do		vbaux									VBP	aux	22
21	n't	not											RB	neg	22
22	have	have	thatcls+jcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	jcomp		VB	ccomp	14
23	,	,											,	punct	22
24	a-	a-											XX	dep	22
25	an	an		dt									DT	det	26
26	idea	idea		nn									NN	dobj	22
27	about	about	in+npostmod	in	nmod								IN	prep	26
28	,	,											,	punct	27
29													_SP	dep	27
30	okay	okay											UH	pobj	27
31	.	.											.	punct	13

#sentid = 754
0													_SP	dep	0
1	whether	whether		cs	cs_othr								IN	mark	4
2	the	the		dt	art								DT	det	3
3	choices	choice		nn	pl								NNS	nsubj	4
4	were	be		vbmain	in_othr	past	simple	active			other_advl		VBD	prep	0
5	right	right		jj	pred								JJ	acomp	4
6	or	or		cc	phrs								CC	cc	5
7	wrong	wrong											JJ	conj	5
8	,	,											,	punct	4
9	and	and		cc	cls								CC	cc	4
10	in	in	in+advl	in	advl								IN	prep	16
11	what	what		dt									WDT	det	12
12	context	context		nn									NN	pcomp	10
13	the	the		dt	art								DT	det	14
14	choices	choice		nn	pl								NNS	nsubj	16
15	would	would		vbaux	mod	prd							MD	aux	16
16	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	4
17	right	right		jj	pred								JJ	acomp	16
18	or	or		cc	phrs								CC	cc	17
19	wrong	wrong											JJ	conj	17
20	,	,											,	punct	16
21													_SP	dep	16
22	mhm	mhm											UH	intj	4
23	.	.											.	punct	4

#sentid = 755
0													_SP	dep	4
1	and	and		cc	phrs								CC	cc	4
2	,	,											,	punct	4
3	i	i		pro	1st	sg							PRP	nsubj	4
4	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	4
5	for	for											IN	nmod	11
6	future	future		jj	attr								JJ	amod	5
7	,	,											,	punct	5
8	for	for		in	in_othr								IN	prep	5
9	future	future		jj	attr								JJ	amod	8
10	,	,											,	punct	11
11	articles	article		nn	pl								NNS	dobj	4
12	for	for	in+npostmod	in	nmod								IN	prep	11
13	future	future		jj	attr								JJ	amod	12
14													_SP	dep	4
15	oh	oh											UH	intj	16
16	sure	sure											UH	intj	14
17	.	.											.	punct	4

#sentid = 756
0													_SP	dep	6
1	funding	funding		nn		nom							NN	dep	6
2	,	,											,	punct	6
3													_SP	dep	6
4	no	no											UH	intj	6
5	i	i		pro	1st	sg							PRP	nsubj	6
6	agree	agree		vbmain	vblex	pres	simple	active					VBP	ROOT	6
7	.	.											.	punct	6

#sentid = 757
0													_SP	dep	0

#sentid = 758
0	for	for											IN	ROOT	0
1	your	your		dt	poss								PRP$	poss	2
2	own	own											JJ	dep	7
3	,	,											,	punct	7
4	you	you		pro	2nd	sg							PRP	nsubj	5
5	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	7
6	to	to		to									TO	aux	7
7	prevent	prevent		vbmain	vblex	nonfinite	simple	active		tocls			VB	pobj	0
8	you	you		pro	2nd	sg							PRP	dobj	7
9	from	from	in+advl	in	advl								IN	prep	7
10	,	,											,	punct	9
11	um	um											UH	intj	9
12	going	go	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	9
13	down	down	in+advl	in	advl								IN	prep	12
14	,	,											,	punct	12
15	a	a		dt	art								DT	det	18
16	costly	costly	attr+npremod	jj	attr								JJ	amod	18
17	,	,											,	punct	18
18	road	road		nn									NN	dobj	12
19	,	,											,	punct	18
20	uh	uh											UH	intj	18
21	,	,											,	punct	18
22	in	in	in+npostmod	in	nmod								IN	prep	18
23	in	in	in+npostmod	in	nmod								IN	prep	18
24	the	the		dt	art								DT	det	25
25	in	in	in+advl	in	advl								IN	prep	7
26	the	the		dt	art								DT	det	31
27	(	(											-LRB-	punct	31
28	applicat-	applicat-	attr+npremod	jj	attr								JJ	amod	31
29	)	)											-RRB-	punct	31
30	real	real	attr+npremod	jj	attr								JJ	amod	31
31	application	application		nn		nom							NN	pobj	25
32	,	,											,	punct	25
33	which	which											WDT	nsubj	34
34	is	be	whcls+incomp	vbmain	be	pres	simple	active	compcls	whcls	incomp		VBZ	pcomp	25
35	even	even	rb+jjrbmod	rb	othr								RB	advmod	36
36	more	more	rb+jjrbmod	rb	adjmod								RBR	advmod	37
37	painful	painful		jj	pred								JJ	acomp	34
38	than	than	in+jcomp	in	jcomp								IN	prep	37
39	software	software		nn									NN	pobj	38
40	i	i		pro	1st	sg							PRP	nsubj	41
41	think	think		vbmain	vblex	pres	simple	active					VBP	parataxis	34
42	,	,											,	punct	41
43	you	you		pro	2nd	sg							PRP	nsubj	44
44	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	41
45	,	,											,	punct	41
46	um	um											UH	intj	51
47	,	,											,	punct	51
48	i	i		pro	1st	sg							PRP	dep	51
49	,	,											,	punct	51
50	it	it		pro	3rd	sg							PRP	nsubj	51
51	seems	seem	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	41
52	like	like		cs	cs_othr								IN	mark	55
53	it	it		pro	3rd	sg							PRP	nsubj	55
54	would	would		vbaux	mod	prd							MD	aux	55
55	be	be	finitecls+advl	vbmain	be	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	51
56	really	really	rb+jjrbmod	rb	adjmod	ly							RB	advmod	57
57	critical	critical		jj	pred								JJ	acomp	55
58	to	to		to									TO	aux	59
59	think	think	xtrapos+tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	55
60	through	through	in+advl	in	advl								IN	prep	59
61	,	,											,	punct	60
62													_SP	dep	60
63	yes	yes											UH	intj	65
64	,	,											,	punct	65
65	mhm	mhm											UH	meta	60
66	.	.											.	meta	60
67													_SP	dep	60
68	what	what											WP	pobj	60
69	,	,											,	punct	60
70	what	what											WP	dobj	75
71	the	the		dt	art								DT	det	72
72	system	system		nn									NN	nsubj	73
73	wants	want		vbmain	vblex	pres	simple	active	compcls		incomp	compdel	VBZ	pcomp	60
74	to	to		to									TO	aux	75
75	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	73
76	and	and		cc	cls								CC	cc	73
77	whether	whether		cs	cs_othr								IN	mark	80
78	it	it		pro	3rd	sg							PRP	nsubj	80
79	's	be		vbaux									VBZ	aux	80
80	doing	do		vbmain	vblex	pres	prog	active			other_advl		VBG	conj	73
81	that	that		pro	dem	sg							DT	dobj	80
82	...	...											:	punct	0

#sentid = 759
0													_SP	dep	5
1	so	so		rb	link								RB	advmod	5
2	,	,											,	punct	5
3	i	i		pro	1st	sg							PRP	nsubj	5
4	,	,											,	punct	5
5	thought	think		vbmain	vblex	past	simple	active					VBD	ROOT	5
6	i	i		pro	1st	sg							PRP	nsubj	7
7	presented	present	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	5
8	what	what											WP	dobj	13
9	the	the		dt	art								DT	det	10
10	system	system		nn									NN	nsubj	11
11	wants	want	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	7
12	to	to		to									TO	aux	13
13	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	11
14	,	,											,	punct	7
15													_SP	dep	20
16	no	no											UH	intj	20
17	i	i		pro	1st	sg							PRP	nsubj	20
18	do	do		vbaux									VBP	aux	20
19	n't	not											RB	neg	20
20	think	think	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	7
21													_SP	dep	20
22	but	but		cc	phrs								CC	cc	20
23													_SP	dep	20
24	you	you		pro	2nd	sg							PRP	nsubj	25
25	have	have		vbaux									VBP	aux	32
26	,	,											,	punct	25
27	if	if		cs	cnd								IN	mark	29
28	you	you		pro	2nd	sg							PRP	nsubj	29
29	ca	can	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		conditional		MD	advcl	32
30	n't	not											RB	neg	29
31	,	,											,	punct	32
32													_SP	dep	5
33	okay	okay											UH	intj	32
34	.	.											.	punct	5

#sentid = 760
0													_SP	dep	31
1	if	if		cs	cnd								IN	mark	3
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	ca	can	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		conditional		MD	advcl	31
4	n't	not											RB	neg	3
5	,	,											,	punct	3
6	if	if		cs	cnd								IN	mark	10
7	you	you		pro	2nd	sg							PRP	nsubj	10
8	ca	can		vbaux	mod								MD	aux	10
9	n't	not											RB	neg	10
10	state	state		vbmain	vblex	vp_w_modal	simple	active			conditional		VB	conj	3
11	test	test	nn+npremod	nn			npremod						NN	compound	12
12	scenarios	scenario		nn	pl								NNS	dobj	10
13	,	,											,	punct	10
14	if	if		cs	cnd								IN	mark	18
15	you	you		pro	2nd	sg							PRP	nsubj	18
16	ca	can		vbaux	mod								MD	aux	18
17	n't	not											RB	neg	18
18	provide	provide		vbmain	vblex	vp_w_modal	simple	active			conditional		VB	conj	10
19	s-	s-	nn+npremod	nn			npremod						NN	nmod	22
20	s-	s-		nn									NN	punct	19
21	test	test	nn+npremod	nn			npremod						NN	compound	22
22	scenarios	scenario		nn	pl								NNS	dobj	18
23	,	,											,	punct	18
24	or	or		cc	phrs								CC	cc	18
25	even	even											RB	conj	18
26	,	,											,	punct	25
27													_SP	dep	31
28	so	so		rb	othr								RB	advmod	27
29	,	,											,	punct	27
30													_SP	dep	27
31	come	come		vbmain	phrsv	nonfinite	simple	active					VB	ROOT	31
32	up	up		rb	prtcle								RP	prt	31
33	with	with	in+advl	in	advl								IN	prep	31
34	a	a		dt	art								DT	det	35
35	range	range		nn									NN	pobj	33
36	of	of	of+npostmod	in	nmod								IN	prep	35
37	Monte	monte		nn		proper	npremod						NNP	compound	38
38	Carlo	carlo	nn+npremod	nn		proper	npremod						NNP	compound	39
39	simulations	simulation		nn	pl	nom							NNS	pobj	36
40	where	where		rb	othr								WRB	advmod	42
41	you	you		pro	2nd	sg							PRP	nsubj	42
42													_SP	dep	52
43	stress	stress		vbmain	vblex	nonfinite	simple	active	advlcls				VB	advcl	52
44	i	i		pro	1st	sg							PRP	nsubj	45
45	think	think		vbmain	vblex	pres	simple	active					VBP	parataxis	43
46													_SP	dep	43
47	the	the		dt	art								DT	det	49
48	test	test	nn+npremod	nn			npremod						NN	compound	49
49	scenarios	scenario		nn	pl								NNS	nsubjpass	52
50	were	be		vbaux									VBD	auxpass	52
51	,	,											,	punct	52
52	intended	intend	thatcls+vcomp	vbmain	vblex	past	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	31
53	to	to		to									TO	aux	54
54	be	be	tocls+vcomp	vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	52
55	,	,											,	punct	54
56	uh	uh											UH	intj	54
57	,	,											,	punct	54
58	the	the		dt	art								DT	det	59
59	planner	planner		nn		nom							NN	nsubj	60
60	coming	come		vbmain	phrsv	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	ccomp	54
61	up	up		rb	prtcle								RP	prt	60
62	with	with	in+advl	in	advl								IN	prep	60
63	the	the		dt	art								DT	det	64
64	plans	plan		nn	pl								NNS	pobj	62
65	and	and		cc	phrs								CC	cc	60
66	,	,											,	punct	60
67	showing	show		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	60
68	that	that		comp	comp_that								IN	mark	70
69	they	they		pro	pl								PRP	nsubj	70
70	meet	meet	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	67
71	the	the		dt	art								DT	det	72
72	deadlines	deadline		nn	pl								NNS	dobj	70
73	effectively	effectively	rb+advl	rb	advl	ly							RB	advmod	70
74	,	,											,	punct	60
75	proving	prove		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	60
76	that	that		comp	comp_that								IN	mark	87
77	given	give	edcls+advl	vbmain	advl	nonfinite	simple	active		edcls			VBN	prep	87
78	that	that		dt	dt_dem								DT	det	81
79	particular	particular	attr+npremod	jj	attr								JJ	amod	81
80	,	,											,	punct	81
81	set	set		nn									NN	pobj	77
82	of	of	of+npostmod	in	nmod								IN	prep	81
83	constraints	constraint		nn	pl								NNS	pobj	82
84	that	that		comp	comp_that								IN	mark	87
85	it	it		pro	3rd	sg							PRP	nsubj	87
86	can	can		vbaux	mod	pos							MD	aux	87
87	satisfy	satisfy	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	75
88	them	they		pro	pl								PRP	dobj	87
89	and	and		cc	phrs								CC	cc	87
90	will	will		vbaux	mod	prd							MD	aux	91
91	work	work		vbmain	vblex	vp_w_modal	simple	active					VB	conj	87
92													_SP	dep	60
93	but	but		cc	phrs								CC	cc	119
94	we	we		pro	1st								PRP	nsubj	97
95	did	do		vbaux									VBD	aux	97
96	n't	not											RB	neg	97
97	see	see		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VB	ccomp	113
98	,	,											,	punct	113
99	we	we		pro	1st								PRP	dep	107
100	,	,											,	punct	107
101	you	you		pro	2nd	sg							PRP	nsubj	102
102	did	do		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	107
103	n't	not											RB	neg	102
104	you	you		pro	2nd	sg							PRP	nsubj	107
105	did	do		vbaux									VBD	aux	107
106	n't	not											RB	neg	107
107	have	have		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VB	ccomp	113
108	,	,											,	punct	107
109	y-	y-											PRP	dep	113
110	you	you		pro	2nd	sg							PRP	nsubj	113
111	did	do		vbaux									VBD	aux	113
112	n't	not											RB	neg	113
113	parametrize	parametrize		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VB	ccomp	119
114	those	those		dt	dt_dem								DT	det	116
115	,	,											,	punct	116
116	stresses	stress		nn	pl	nom							NNS	dobj	113
117	,	,											,	punct	119
118	you	you		pro	2nd	sg							PRP	nsubj	119
119	came	come		vbmain	phrsv	past	simple	active					VBD	meta	60
120	up	up		rb	prtcle								RP	prt	119
121	with	with	in+advl	in	advl								IN	prep	119
122	one	one											CD	nummod	123
123	stress	stress		nn		nom							NN	pobj	121
124	or	or		cc	phrs								CC	cc	123
125	another	another		dt									DT	det	126
126	stress	stress		nn		nom							NN	conj	123
127	and	and		cc	phrs								CC	cc	119
128	what	what											WP	dobj	132
129	you	you		pro	2nd	sg							PRP	nsubj	132
130	,	,											,	punct	132
131	would	would		vbaux	mod	prd							MD	aux	132
132	want	want	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls				VB	advcl	135
133	,	,											,	punct	135
134	i	i		pro	1st	sg							PRP	nsubj	135
135	think	think		vbmain	vblex	pres	simple	active					VBP	dep	60
136	what	what											WP	dobj	141
137	you	you		pro	2nd	sg							PRP	nsubj	139
138	would	would		vbaux	mod	prd							MD	aux	139
139	want	want	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	135
140	to	to		to									TO	aux	141
141	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	139
142													_SP	dep	52
143	mhm	mhm											UH	intj	142
144	.	.											.	punct	52

#sentid = 761
0													_SP	dep	1
1	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	27
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	wanna	wanna		vbaux									VBP	aux	4
4	study	study	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VB	advcl	1
5	,	,											,	punct	1
6	the	the		dt	art								DT	det	7
7	ways	way		nn	pl								NNS	dep	27
8	in	in	in+advl	in	advl								IN	prep	12
9	which	which											WDT	pobj	8
10	your	your		dt	poss								PRP$	poss	11
11	decisions	decision		nn	pl								NNS	nsubj	12
12	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	7
13	wrong	wrong		jj	pred								JJ	acomp	12
14	or	or		cc	phrs								CC	cc	13
15	right	right											JJ	conj	13
16	the	the		dt	art								DT	det	17
17	decisions	decision		nn	pl								NNS	nsubj	27
18	about	about	in+npostmod	in	nmod								IN	prep	17
19	what	what		comp	comp_wh								WP	dobj	21
20	to	to		to									TO	aux	21
21	prove	prove		vbmain	vblex	nonfinite	simple	active	compcls	tocls	incomp		VB	pcomp	18
22	and	and		cc	phrs								CC	cc	21
23	how	how		rb	advl								WRB	advmod	25
24	to	to		to									TO	aux	25
25	prove	prove		vbmain	vblex	nonfinite	simple	active		tocls			VB	conj	21
26	,	,											,	punct	27
27	are	be		vbmain	be	pres	simple	active					VBP	ROOT	27
28	wrong	wrong		jj	pred								JJ	acomp	27
29	and	and		cc	phrs								CC	cc	28
30	right	right											JJ	conj	28
31	,	,											,	punct	27
32	depending	depend	ingcls+advl	vbmain	prepv	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	27
33	on	on	in+advl	in	advl								IN	prep	32
34	the	the		dt	art								DT	det	35
35	way	way		nn									NN	pobj	33
36	your	your		dt	poss								PRP$	poss	37
37	environment	environment		nn		nom							NN	nsubj	38
38	changes	change	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	35
39	.	.											.	punct	27

#sentid = 762
0	you	you		pro	2nd	sg							PRP	nsubj	1
1	're	be		vbmain	be	pres	simple	active					VBP	ROOT	1
2													_SP	dep	1
3	okay	okay		jj	pred								UH	acomp	1
4	.	.											.	punct	1

#sentid = 763
0													_SP	dep	16
1	trying	try	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	16
2	to	to		to									TO	aux	3
3	understand	understand	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	1
4	whether	whether		cs	cs_othr								IN	mark	8
5	the	the		dt	art								DT	det	6
6	_	_											XX	dep	8
7	you	you		pro	2nd	sg							PRP	nsubj	8
8	made	make		vbmain	vblex	past	simple	active	compcls		other_advl	compdel	VBD	ccomp	3
9	some	some		dt									DT	det	10
10	choices	choice		nn	pl								NNS	dobj	8
11	right	right											JJ	oprd	8
12	you	you		pro	2nd	sg							PRP	dep	1
13													_SP	dep	12
14	yeah	yeah											UH	intj	16
15	,	,											,	punct	14
16	mhm	mhm											UH	ROOT	16
17	.	.											.	punct	16

#sentid = 764
0													_SP	dep	6
1	deci-	deci-											XX	dep	6
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	took	take		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	6
4	,	,											,	punct	6
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	took	take		vbmain	vblex	past	simple	active					VBD	ROOT	6
7	something	something		nn	other	nom							NN	dobj	6
8	which	which											WDT	dobj	12
9	you	you		pro	2nd	sg							PRP	nsubj	12
10	p-	p-											XX	dep	12
11	arguably	arguably	rb+advl	rb	advl	ly							RB	advmod	12
12	model	model		vbmain	vblex	nonfinite	simple	active	nmod_cls		rel		VB	relcl	7
13	in	in	in+advl	in	advl								IN	prep	12
14	a	a											DT	pobj	13
15	in	in		in	in_othr								IN	prep	14
16	a	a		dt	art								DT	det	19
17	Markov	markov	nn+npremod	nn		proper	npremod						NNP	nmod	19
18	,	,											,	punct	19
19	fashion	fashion		nn									NN	pobj	15
20	.	.											.	punct	6

#sentid = 765
0	and	and		cc	cls								CC	cc	2
1	you	you		pro	2nd	sg							PRP	nsubj	2
2	said	say		vbmain	vblex	past	simple	active					VBD	ROOT	2
3	i	i		pro	1st	sg							PRP	nsubj	6
4	do	do		vbaux									VBP	aux	6
5	n't	not											RB	neg	6
6	have	have		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	12
7	time	time		nn									NN	dobj	6
8	,	,											,	punct	12
9	i	i		pro	1st	sg							PRP	nsubj	12
10	do	do		vbaux									VBP	aux	12
11	n't	not											RB	neg	12
12	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	2
13	the	the		dt	art								DT	det	18
14	,	,											,	punct	18
15	i	i		pro	1st	sg							PRP	nsubj	18
16	do	do		vbaux									VBP	aux	18
17	n't	not											RB	neg	18
18	have	have		vbmain	vblex	pres	simple	active					VB	dep	12
19	the	the		dt	art								DT	det	25
20	the	the		dt	art								DT	det	25
21	the	the		dt	art								DT	det	25
22	the	the		dt	art								DT	det	25
23	,	,											,	punct	25
24	computational	computational	attr+npremod	jj	attr								JJ	amod	25
25	power	power		nn		nom							NN	dobj	18
26	and	and		cc	phrs								CC	cc	25
27	the	the		dt	art								DT	det	28
28	time	time		nn									NN	conj	25
29	,	,											,	punct	28
30	to	to		to									TO	aux	33
31	,	,											,	punct	33
32	to	to		to									TO	aux	33
33	compute	compute	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	28
34	,	,											,	punct	33
35	uh	uh											UH	intj	33
36	uh	uh											UH	intj	33
37	in	in	in+advl	in	advl								IN	prep	33
38	the	the		dt	art								DT	det	42
39	,	,											,	punct	42
40	controlled	control	attr+npremod	jj	attr	ed							VBN	amod	42
41	Markov	markov	nn+npremod	nn		proper	npremod						NNP	compound	42
42	chain	chain		nn									NN	pobj	37
43	,	,											,	punct	42
44	style	style		nn									NN	dobj	33
45	,	,											,	punct	33
46													_SP	dep	33
47	mhm	mhm											UH	intj	33
48	.	.											.	punct	2

#sentid = 766
0													_SP	dep	0
1	much	much	rb+jjrbmod	rb	othr								RB	advmod	2
2	less	less		rb	othr								RBR	advmod	0
3	to	to		to									TO	aux	4
4	analyze	analyze	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls			VB	xcomp	2
5	what	what											WP	nsubj	7
6	would	would		vbaux	mod	prd							MD	aux	7
7	happen	happen	whcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	whcls	vcomp		VB	ccomp	4
8	,	,											,	punct	7
9													_SP	dep	4
10	right	right											UH	intj	4
11	.	.											.	punct	0

#sentid = 767
0													_SP	dep	0
1	so	so		rb	link								RB	advmod	8
2	what	what											WP	dobj	7
3	i	i		pro	1st	sg							PRP	nsubj	5
4	'm	be		vbaux									VBP	aux	5
5	going	go		vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	csubj	8
6	to	to		to									TO	aux	7
7	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	5
8	is	be		vbmain	in_othr	pres	simple	active					VBZ	prep	0
9	i	i		pro	1st	sg							PRP	nsubj	11
10	'm	be		vbaux									VBP	aux	11
11	going	go		vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	25
12	to	to		to									TO	aux	16
13	,	,											,	punct	16
14	i	i		pro	1st	sg							PRP	nsubj	16
15	'm	be		vbaux									VBP	aux	16
16	going	go	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	xcomp	11
17	to	to		to									TO	aux	18
18	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	16
19	a	a		dt	art								DT	det	20
20	kind	kind		nn									NN	dobj	18
21	of	of	of+npostmod	in	nmod								IN	prep	20
22	aggregation	aggregation		nn		nom							NN	pobj	21
23	,	,											,	punct	25
24	i	i		pro	1st	sg							PRP	nsubj	25
25	think	think	thatcls+vcomp	vbmain	prepv	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	8
26	of	of	in+advl	in	advl								IN	prep	25
27	it	it		pro	3rd	sg							PRP	pobj	26
28	as	as	in+advl	in	advl								IN	prep	25
29													_SP	dep	28
30	okay	okay											UH	intj	34
31	,	,											,	punct	34
32	mhm	mhm											UH	intj	34
33	,	,											,	punct	34
34	sure	sure											UH	intj	28
35	.	.											.	punct	25

#sentid = 768
0													_SP	dep	0
1	aggregation	aggregation		nn		nom							NN	dobj	0
2	but	but		cc	phrs								CC	cc	1
3	i	i		pro	1st	sg							PRP	nsubj	4
4	'm	be		vbmain	be	pres	simple	active					VBP	conj	1
5	really	really	rb+advl	rb	advl	ly							RB	advmod	4
6	not	not											RB	neg	4
7	sure	sure		jj	pred								JJ	acomp	4
8	what	what		comp	comp_wh								WP	dobj	10
9	you	you		pro	2nd	sg							PRP	nsubj	10
10	did	do		vbmain	vblex	past	simple	active	compcls	whcls	jcomp		VBD	ccomp	7
11	.	.											.	punct	4

#sentid = 769
0													_SP	dep	0
1	mhm	mhm											UH	intj	0
2	.	.											.	punct	1

#sentid = 770
0													_SP	dep	9
1	um	um											UH	intj	9
2	,	,											,	punct	9
3	the	the		dt	art								DT	det	4
4	aggregations	aggregation		nn	pl	nom							NNS	nsubj	9
5	that	that		pro	dem	sg							WDT	dobj	7
6	you	you		pro	2nd	sg							PRP	nsubj	7
7	perform	perform	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	4
8	,	,											,	punct	9
9	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	9
10	the	the		dt	art								DT	det	11
11	effect	effect		nn									NN	dobj	9
12	of	of	of+npostmod	in	nmod								IN	prep	11
13	...	...											:	punct	12
14	i-	i-											PRP	dep	20
15	y-	y-											XX	punct	14
16	you	you		pro	2nd	sg							PRP	nsubj	17
17	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	15
18	the-	the-											DT	meta	14
19	they	they		pro	pl								PRP	nsubj	20
20	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	9
21	right	right		jj	pred								JJ	acomp	20
22	for	for	in+jcomp	in	jcomp								IN	prep	21
23	some	some		dt									DT	det	24
24	kinds	kind		nn	pl								NNS	pobj	22
25	of	of	of+npostmod	in	nmod								IN	prep	24
26	,	,											,	punct	25
27													_SP	dep	25
28	mhm	mhm											UH	intj	25
29	.	.											.	punct	25
30													_SP	dep	31
31	environments	environment		nn	pl	nom							NNS	dobj	9
32	and	and		cc	phrs								CC	cc	31
33	wrong	wrong											JJ	conj	31
34	for	for	in+jcomp	in	jcomp								IN	prep	33
35	other	other		jj	attr								JJ	amod	36
36													_SP	dep	37
37	kinds	kind		nn	pl								NNS	pobj	34
38	of	of	of+npostmod	in	nmod								IN	prep	37
39	environments	environment		nn	pl	nom							NNS	pobj	38
40	.	.											.	punct	9

#sentid = 771
0													_SP	dep	7
1	okay	okay											UH	intj	7
2	so	so		rb	link								RB	advmod	7
3	right	right	rb+jjrbmod	rb	othr								RB	advmod	4
4	now	now	rb+advl	rb	advl								RB	advmod	7
5	you	you		pro	2nd	sg							PRP	nsubj	7
6	're	be		vbaux									VBP	aux	7
7	talking	talk		vbmain	prepv	pres	prog	active					VBG	ROOT	7
8	about	about	in+advl	in	advl								IN	prep	7
9	the	the		dt	art								DT	det	13
10	,	,											,	punct	13
11													_SP	dep	10
12	the	the		dt	art								DT	det	13
13	planner	planner		nn		nom							NN	pobj	8
14	.	.											.	punct	7

#sentid = 772
0													_SP	dep	0
1	testing	test	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	0
2	the	the		dt	art								DT	det	3
3	abilities	ability		nn	pl	nom							NNS	dobj	1
4	of	of	of+npostmod	in	nmod								IN	prep	3
5	the	the		dt	art								DT	det	6
6	planner	planner		nn		nom							NN	pobj	4
7													_SP	dep	3
8	yeah	yeah											UH	intj	11
9													_SP	dep	8
10	to	to		to									TO	aux	11
11	come	come		vbmain	phrsv	nonfinite	simple	active		tocls			VB	meta	1
12	up	up		rb	prtcle								RP	prt	11
13	with	with	in+advl	in	advl								IN	prep	11
14	the	the		dt	art								DT	det	24
15	correct	correct	attr+npremod	jj	attr								JJ	amod	24
16	,	,											,	punct	24
17													_SP	dep	24
18	yeah	yeah											UH	intj	24
19													_SP	dep	24
20	stochastic	stochastic	attr+npremod	jj	attr								JJ	amod	24
21													_SP	dep	24
22	yeah	yeah											UH	intj	24
23													_SP	dep	24
24	process	process		nn		nom							NN	pobj	13
25	uh	uh											UH	intj	24
26	,	,											,	punct	24
27													_SP	dep	24
28	or	or											CC	nmod	24
29	or	or		cc	phrs								CC	cc	24
30	in	in											IN	conj	24
31	situations	situation		nn	pl	nom							NNS	pobj	30
32	where	where		rb	advl								WRB	advmod	40
33	the	the											DT	dep	40
34	,	,											,	punct	40
35	time	time		nn									NN	nsubj	40
36	rou-	rou-											XX	dep	40
37	if	if		cs	cnd								IN	mark	40
38	you	you		pro	2nd	sg							PRP	nsubj	40
39	,	,											,	punct	40
40	revise	revise		vbmain	vblex	pres	simple	active	nmod_cls	whcls	conditional		VBP	relcl	31
41	the	the		dt	art								DT	det	43
42	time	time	nn+npremod	nn			npremod						NN	compound	43
43	cost	cost		nn									NN	dobj	40
44	,	,											,	punct	43
45	of	of	of+npostmod	in	nmod								IN	prep	43
46	processes	process		nn	pl	nom							NNS	pobj	45
47	,	,											,	punct	40
48													_SP	dep	40
49	mhm	mhm											UH	intj	31
50	.	.											.	punct	1

#sentid = 773
0													_SP	dep	26
1	um	um											UH	intj	26
2	,	,											,	punct	26
3	whether	whether		cs	cs_othr								IN	mark	6
4	the	the		dt	art								DT	det	6
5	,	,											,	punct	6
6	planner	planner	nn+npremod	nn		nom	npremod						NN	nmod	24
7	,	,											,	punct	24
8	whether	whether		cs	cs_othr								IN	mark	15
9	the	the		dt	art								DT	det	15
10	,	,											,	punct	15
11	whether	whether		cs	cs_othr								IN	mark	15
12	the	the		dt	art								DT	det	15
13	,	,											,	punct	15
14	heu-	heu-	nn+npremod	nn			npremod						NN	nmod	15
15	heuristics	heuristic	nn+npremod	nn	pl		npremod						NNS	nmod	24
16	that	that		pro	dem	sg							WDT	pobj	21
17	you	you		pro	2nd	sg							PRP	nsubjpass	20
18	're	be		vbaux									VBP	auxpass	20
19	(	(											-LRB-	punct	20
20	introduced	introduce	finitecls+rel	vbmain	vblex	pres	simple	pasv_agls	nmod_cls		rel	reldel	VBN	relcl	15
21	in	in	in+advl	in	advl								IN	prep	20
22	)	)											-RRB-	punct	20
23	the	the		dt	art								DT	det	24
24	planner	planner		nn		nom							NN	nsubj	26
25	could	could		vbaux	mod	pos							MD	aux	26
26	keep	keep		vbmain	phrsv	vp_w_modal	simple	active					VB	ROOT	26
27	up	up		rb	prtcle								RP	prt	26
28	with	with	in+advl	in	advl								IN	prep	26
29	or	or		cc	phrs								CC	cc	26
30	could	could		vbaux	mod	pos							MD	aux	32
31	could	could		vbaux	mod	pos							MD	aux	32
32	track	track		vbmain	vblex	vp_w_modal	simple	active					VB	conj	26
33	,	,											,	punct	32
34	um	um											UH	intj	32
35	,	,											,	punct	32
36	those	those		dt	dt_dem								DT	det	37
37	sorts	sort		nn	pl								NNS	dobj	32
38	of	of	of+npostmod	in	nmod								IN	prep	37
39	,	,											,	punct	38
40	changes	change		nn	pl								NNS	pobj	38
41	in	in	in+npostmod	in	nmod								IN	prep	40
42	in	in	in+npostmod	in	nmod								IN	prep	40
43	resource	resource	nn+npremod	nn			npremod						NN	compound	44
44	capability	capability		nn		nom							NN	pobj	42
45	.	.											.	punct	26

#sentid = 774
0													_SP	dep	0
1	mhm	mhm											UH	intj	0
2	.	.											.	punct	1

#sentid = 775
0													_SP	dep	0
1	i	i		pro	1st	sg							PRP	dep	0
2	i	i		pro	1st	sg							PRP	nsubj	5
3	do	do		vbaux									VBP	aux	5
4	n't	not											RB	neg	5
5	know	know		vbmain	vblex	pres	simple	active					VB	conj	0
6	how	how		rb	advl								WRB	advmod	8
7	to	to		to									TO	aux	8
8	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	5
9													_SP	dep	8
10	but	but											CC	dobj	8
11	but	but		cc	phrs								CC	cc	8
12													_SP	dep	8
13	it	it		pro	3rd	sg							PRP	dobj	8
14	,	,											,	punct	5
15	but	but		cc	cls								CC	cc	5
16	i	i		pro	1st	sg							PRP	nsubj	17
17	think	think		vbmain	vblex	pres	simple	active					VBP	conj	5
18	it	it		pro	3rd	sg							PRP	nsubj	20
19	would	would		vbaux	mod	prd							MD	aux	20
20	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	17
21	worth	worth		jj	pred								JJ	acomp	20
22	your	your		dt	poss								PRP$	poss	23
23	while	while		nn									NN	npadvmod	21
24	to	to		to									TO	aux	25
25	put	put	xtrapos+tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	20
26	a	a		dt	art								DT	det	29
27	a	a		dt	art								DT	det	29
28	fair	fair	attr+npremod	jj	attr								JJ	amod	29
29	bit	bit		nn									NN	dobj	25
30	of	of	of+npostmod	in	nmod								IN	prep	29
31	time	time		nn									NN	pobj	30
32	into	into	in+advl	in	advl								IN	prep	25
33													_SP	dep	32
34	this	this		pro	dem	sg							DT	pobj	32
35	.	.											.	punct	17

#sentid = 776
0													_SP	dep	4
1	but	but		cc	phrs								CC	cc	4
2	but	but		cc	phrs								CC	cc	4
3	there	there											EX	expl	4
4	are	be		vbmain	be	pres	simple	active					VBP	ROOT	4
5	so	so	rb+jjrbmod	rb	adjmod								RB	advmod	6
6	many	many	attr+npremod	jj	attr								JJ	amod	7
7	levels	level		nn	pl								NNS	attr	4
8	of	of	of+npostmod	in	nmod								IN	prep	7
9	,	,											,	punct	8
10	of	of		in	in_othr								IN	prep	8
11	uh	uh											UH	intj	10
12	i	i		pro	1st	sg							PRP	nsubj	13
13	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	10
14	there	there											EX	pcomp	10
15													_SP	dep	4
16	but	but		cc	phrs								CC	cc	18
17													_SP	dep	18
18	are	be		vbmain	be	pres	simple	active					VBP	conj	4
19	so	so	rb+jjrbmod	rb	adjmod								RB	advmod	20
20	many	many	attr+npremod	jj	attr								JJ	amod	21
21	factors	factor		nn	pl	nom							NNS	attr	18
22	here	here		rb	othr								RB	advmod	21
23	that	that		relpro	relpro_that								IN	mark	28
24	,	,											,	punct	28
25	i	i		pro	1st	sg							PRP	nsubj	26
26	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	28
27	that	that		relpro	relpro_that	sg							DT	nsubj	28
28	's	be	thatcls+ncomp	vbmain	be	pres	simple	active	nmod_cls	thatcls	ncomp		VBZ	acl	21
29	a	a		dt	art								DT	det	34
30	,	,											,	punct	34
31	certainly	certainly		rb	othr	ly							RB	advmod	34
32	a	a		dt	art								DT	det	34
33	key	key	attr+npremod	jj	attr								JJ	amod	34
34	one	one		nn									NN	attr	28
35	but	but		cc	phrs								CC	cc	28
36	there	there											EX	expl	37
37	are	be		vbmain	be	pres	simple	active					VBP	conj	28
38	others	other		nn	pl	nom							NNS	attr	37
39	such	such		jj	attr								JJ	amod	40
40	as	as	in+npostmod	in	nmod								IN	prep	38
41	,	,											,	punct	40
42	how	how	rb+jjrbmod	rb	othr								WRB	advmod	43
43	well	well	rb+advl	rb	advl								RB	advmod	55
44	does	do		vbaux									VBZ	aux	55
45	your	your		dt	poss								PRP$	poss	46
46	knowledge	knowledge		nn									NN	nsubj	55
47	uh	uh											UH	intj	46
48	really	really		rb	othr	ly							RB	advmod	46
49	,	,											,	punct	46
50	your	your		dt	poss								PRP$	poss	53
51	,	,											,	punct	53
52	probability	probability	nn+npremod	nn		nom	npremod						NN	compound	53
53	knowledge	knowledge	appos+npostmod	nn			nappos						NN	appos	46
54	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	55
55	map	map		vbmain	vblex	pres	simple	active	compcls		vcomp		VB	ccomp	68
56	the	the		dt	art								DT	det	58
57	real	real	attr+npremod	jj	attr								JJ	amod	58
58	environment	environment		nn		nom							NN	dobj	55
59	within	within	in+advl	in	advl								IN	prep	65
60	which	which											WDT	pobj	59
61	the	the		dt	art								DT	det	62
62	system	system		nn									NN	nsubj	65
63	's	be		vbaux									VBZ	aux	65
64													_SP	dep	65
65	operating	operate	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel	reldel	VBG	relcl	58
66	,	,											,	punct	68
67	it	it		pro	3rd	sg							PRP	nsubj	68
68	's	be		vbmain	be	pres	simple	active	compcls		incomp	compdel	VBZ	pcomp	40
69	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	70
70	of	of		rb	othr								RB	advmod	73
71	a	a		dt	art								DT	det	73
72	robust	robust	attr+npremod	jj	attr								JJ	amod	73
73	issue	issue		nn									NN	attr	68
74	there	there	rb+advl	rb	advl								RB	advmod	68
75	,	,											,	punct	40
76													_SP	dep	18

#sentid = 777
0	but	but		cc	cls								CC	cc	11
1	the	the		dt	art								DT	det	2
2	claim	claim		nn									NN	dep	11
3	,	,											,	punct	11
4	but	but		cc	phrs								CC	cc	6
5	there	there											EX	expl	6
6	's	be		vbmain	be	pres	simple	active					VBZ	parataxis	11
7	a	a		dt	art								DT	det	8
8	claim	claim		nn									NN	attr	6
9	,	,											,	punct	6
10	there	there											EX	expl	11
11	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	11
12	a	a		dt	art								DT	det	13
13	claim	claim		nn									NN	attr	11
14	for	for	in+npostmod	in	nmod								IN	prep	13
15	a	a		dt	art								DT	det	16
16	contribution	contribution		nn		nom							NN	pobj	14
17	,	,											,	punct	11
18													_SP	dep	11
19	uh	uh											UH	intj	23
20	so	so	rb+jjrbmod	rb	othr								RB	advmod	23
21	so	so	rb+jjrbmod	rb	othr								RB	advmod	23
22	so	so	rb+jjrbmod	rb	othr								RB	advmod	23
23	so	so											RB	meta	11
24	,	,											,	punct	23
25	but	but		cc	cls								CC	cc	11
26	but	but											CC	meta	11
27	,	,											,	punct	11
28	but	but		cc	cls								CC	cc	11
29	so	so	rb+jjrbmod	rb	othr								RB	advmod	30
30	so	so		rb	link								RB	advmod	35
31	in	in	in+advl	in	advl								IN	prep	35
32	some	some		dt									DT	det	33
33	sense	sense		nn									NN	pobj	31
34	to	to		to									TO	aux	35
35	average	average		vbmain	phrsv	nonfinite	simple	active		tocls			VB	meta	11
36	all	all											PDT	predet	37
37	that	that		pro	dem	sg							DT	dobj	35
38	out	out		rb	prtcle								RP	prt	35
39	,	,											,	punct	35
40	to	to		to									TO	aux	41
41	do	do	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	35
42	some	some		dt									DT	det	43
43													_SP	dep	41
44	test	test		nn									NN	dobj	41
45	,	,											,	punct	35
46	the	the											DT	dep	35
47													_SP	dep	35
48	but	but		cc	cls								CC	cc	11
49	that	that		pro	dem	sg							DT	nsubj	50
50	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	55
51	not	not											RB	neg	50
52	the	the		dt	art								DT	det	53
53	claim	claim		nn									NN	attr	50
54	that	that		pro	dem	sg							DT	nsubj	55
55	's	be		vbmain	be	pres	simple	active					VBZ	conj	11
56	not	not											RB	neg	55
57	where	where		rb	othr								WRB	advmod	58
58	the	the											DT	dep	55
59	,	,											,	punct	60
60													_SP	dep	55
61	right	right											UH	intj	11
62	.	.											.	punct	11

#sentid = 778
0													_SP	dep	0
1	we	we		pro	1st								PRP	nsubj	3
2	've	've		vbaux									VBP	aux	3
3	got	get		vbmain	nmod	pres	simple	active					VBN	prep	48
4	the	the		dt	art								DT	det	5
5	value	value		nn									NN	dobj	3
6	-	-											HYPH	punct	7
7	added	add	edcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	edcls	ncomp		VBN	acl	5
8	is	be		vbmain	be	pres	simple	active					VBZ	dep	0
9	,	,											,	punct	8
10	the	the		dt	art								DT	det	11
11	claim	claim		nn									NN	nsubj	12
12	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	24
13	not	not											RB	neg	12
14	that	that		comp	comp_that								IN	mark	17
15	we	we		pro	1st								PRP	nsubj	17
16	're	be		vbaux									VBP	aux	17
17	coming	come	thatcls+vcomp	vbmain	phrsv	pres	prog	active	compcls	thatcls	vcomp		VBG	ccomp	12
18	up	up		rb	prtcle								RP	prt	17
19	with	with	in+advl	in	advl								IN	prep	17
20	better	well	attr+npremod	jj	attr								JJR	amod	21
21	models	model		nn	pl								NNS	pobj	19
22	,	,											,	punct	24
23	that	that		pro	dem	sg							DT	nsubj	24
24	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	csubj	42
25	not	not											RB	neg	24
26	what	what											WP	dobj	31
27	you	you		pro	2nd	sg							PRP	nsubj	29
28	're	be		vbaux									VBP	aux	29
29	claiming	claim	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	24
30	to	to		to									TO	aux	31
31	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	29
32	what	what											WP	dobj	41
33													_SP	dep	39
34	no	no											UH	intj	39
35	,	,											,	punct	39
36													_SP	dep	41
37	you	you		pro	2nd	sg							PRP	nsubj	39
38	're	be		vbaux									VBP	aux	39
39	claiming	claim		vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	csubj	42
40	to	to		to									TO	aux	41
41	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	39
42	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	8
43	come	come		vbmain	phrsv	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	42
44	up	up		rb	prtcle								RP	prt	43
45	with	with	in+advl	in	advl								IN	prep	43
46	better	well	attr+npremod	jj	attr								JJR	amod	48
47													_SP	dep	48
48	approximations	approximation		nn	pl	nom							NNS	pobj	45
49	.	.											.	punct	0

#sentid = 779
0													_SP	dep	4
1	no	no											UH	intj	4
2	but	but		cc	phrs								CC	cc	4
3	there	there											EX	expl	4
4	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	a	a											DT	dep	7
6	there	there											EX	expl	7
7	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	csubj	4
8	a	a		dt	art								DT	det	9
9	question	question		nn		nom							NN	attr	7
10	about	about	in+npostmod	in	nmod								IN	prep	9
11	how	how	rb+jjrbmod	rb	adjmod								WRB	advmod	12
12	sensitive	sensitive		jj	pred								JJ	acomp	20
13	,	,											,	punct	20
14	the	the		dt	art								DT	det	15
15	plans	plan		nn	pl								NNS	nsubj	20
16	you	you		pro	2nd	sg							PRP	nsubj	17
17	come	come	finitecls+rel	vbmain	phrsv	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	15
18	up	up		rb	prtcle								RP	prt	17
19	with	with	in+advl	in	advl								IN	prep	17
20	are	be		vbmain	be	pres	simple	active	compcls		incomp	compdel	VBP	pcomp	10
21	to	to	in+advl	in	advl								IN	prep	20
22	the	the		dt	art								DT	det	23
23	data	datum		nn	pl								NNS	pobj	21
24	upon	upon	in+advl	in	advl								IN	prep	28
25	which	which											WDT	pobj	24
26	they	they		pro	pl								PRP	nsubjpass	28
27	're	be		vbaux									VBP	auxpass	28
28	based	base	finitecls+rel	vbmain	vblex	pres	simple	pasv_agls	nmod_cls		rel	reldel	VBN	relcl	23

#sentid = 780
0	and	and											CC	ROOT	0

#sentid = 781
0	that	that		pro	dem	sg							DT	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	one	one											CD	attr	1
3	which	which											WDT	pobj	6
4	,	,											,	punct	11
5	only	only		rb	othr	ly							RB	advmod	6
6	by	by	in+advl	in	advl								IN	prep	11
7	sufficient	sufficient	attr+npremod	jj	attr								JJ	amod	8
8	testing	testing		nn		nom							NN	pobj	6
9	we	we		pro	1st								PRP	nsubj	11
10	might	might		vbaux	mod	pos							MD	aux	11
11	be	be	finitecls+rel	vbmain	be	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	2
12	able	able		jj	pred								JJ	acomp	11
13	to	to		to									TO	aux	14
14	get	get	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	12
15	a	a		dt	art								DT	det	16
16	handle	handle		nn									NN	dobj	14
17	on	on	in+npostmod	in	nmod								IN	prep	16
18	.	.											.	punct	1

#sentid = 782
0	and	and		cc	cls								CC	cc	3
1	the	the		dt	art								DT	det	2
2	hope	hope		nn									NN	nsubj	3
3	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	that	that		comp	comp_that								IN	mark	7
5	,	,											,	punct	7
6	yours	yours											PRP	nsubj	7
7	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	3
8	not	not											RB	neg	7
9	too	too	rb+jjrbmod	rb	adjmod								RB	advmod	10
10	sensitive	sensitive		jj	pred								JJ	acomp	7
11	but	but		cc	cls								CC	cc	3
12	,	,											,	punct	3
13	who	who											WP	nsubj	14
14	knows	know		vbmain	vblex	pres	simple	active					VBZ	conj	3
15	...	...											:	punct	14

#sentid = 783
0													_SP	dep	27
1	i	i		pro	1st	sg							PRP	nsubj	2
2	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	27
3	one	one		pro	other	pl							CD	nsubj	27
4	of	of		in	in_othr								IN	prep	3
5	the	the		dt	art								DT	det	6
6	challenges	challenge		nn	pl								NNS	pobj	4
7	with	with	in+npostmod	in	nmod								IN	prep	6
8	me	i		pro	1st	sg							PRP	nsubj	10
9	somehow	somehow	rb+advl	rb	advl								RB	advmod	10
10	running	run	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	7
11	,	,											,	punct	10
12	uh	uh											UH	intj	10
13	a	a		dt	art								DT	det	15
14	whole	whole	attr+npremod	jj	attr								JJ	amod	15
15	group	group		nn									NN	dobj	10
16	of	of	of+npostmod	in	nmod								IN	prep	15
17	simulations	simulation		nn	pl	nom							NNS	pobj	16
18	,	,											,	punct	10
19	on	on	in+advl	in	advl								IN	prep	10
20	,	,											,	punct	19
21	the	the		dt	art								DT	det	23
22	aircraft	aircraft	nn+npremod	nn			npremod						NN	compound	23
23	simulator	simulator		nn		nom							NN	pobj	19
24	that	that		pro	dem	sg							WDT	dobj	26
25	i	i		pro	1st	sg							PRP	nsubj	26
26	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBP	relcl	23
27	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	27
28	...	...											:	punct	27

#sentid = 784
0	uh	uh											UH	intj	7
1	quite	quite	rb+jjrbmod	rb	othr								RB	advmod	2
2	frankly	frankly	rb+advl	rb	advl	ly							RB	advmod	7
3	we	we		pro	1st								PRP	nsubj	7
4	have	have		vbaux									VBP	aux	7
5	n't	not											RB	neg	7
6	even	even	rb+advl	rb	advl		splaux						RB	advmod	7
7	been	be		vbmain	be	pres	perf	active					VBN	ROOT	7
8	able	able		jj	pred								JJ	acomp	7
9	to	to		to									TO	aux	11
10	accurately	accurately	rb+advl	rb	advl	ly	splaux						RB	advmod	11
11	characterize	characterize	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	8
12	worst	bad	attr+npremod	jj	attr								JJS	amod	14
13	-	-											HYPH	punct	14
14	case	case	nn+npremod	nn			npremod						NN	compound	16
15	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	16
16	times	time		nn	pl								NNS	dobj	11
17	because	because		cs	cos								IN	mark	20
18	the	the		dt	art								DT	det	19
19	simulators	simulator		nn	pl	nom							NNS	nsubj	20
20	run	run	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBP	advcl	7
21	on	on	in+advl	in	advl								IN	prep	20
22	UNIX	unix		nn		proper							NNP	pobj	21
23	.	.											.	punct	7

#sentid = 785
0	and	and		cc	cls								CC	cc	6
1	they	they		pro	pl								PRP	nsubj	6
2	have	have		vbaux									VBP	aux	6
3	since	since		cs	cs_othr								IN	mark	6
4	i	i		pro	1st	sg							PRP	nsubj	6
5	've	've		vbaux									VBP	aux	6
6	had	have		vbmain	vblex	pres	perf	active			other_advl		VBD	ROOT	6
7	them	they		pro	pl								PRP	dobj	6

#sentid = 786
0	,	,											,	ROOT	0

#sentid = 787
0	and	and											CC	ROOT	0

#sentid = 788
0	so	so		rb	link								RB	advmod	11
1	if	if		cs	cnd								IN	mark	4
2	someone	someone		nn	other	sg							NN	nsubj	4
3	else	else		rb	othr								RB	advmod	2
4	logs	log	finitecls+advl	vbmain	phrsv	pres	simple	active	advlcls		conditional		VBZ	advcl	11
5	in	in		rb	prtcle								RP	prt	4
6	then	then	rb+advl	rb	advl								RB	advmod	4
7	,	,											,	punct	11
8	the	the		dt	art								DT	det	9
9	models	model		nn	pl								NNS	nsubj	11
10	suddenly	suddenly	rb+advl	rb	advl	ly							RB	advmod	11
11	become	become		vbmain	vblex	pres	simple	active					VBP	ROOT	11
12	totally	totally	rb+jjrbmod	rb	adjmod	ly							RB	advmod	13
13	inaccurate	inaccurate		jj	pred								JJ	acomp	11
14	.	.											.	punct	11

#sentid = 789
0	and	and		cc	cls								CC	cc	26
1	,	,											,	punct	26
2													_SP	dep	26
3	so	so		rb	link								RB	advmod	26
4	,	,											,	punct	26
5	i	i		in	in_othr	sg							PRP	prep	4
6	...	...											:	punct	5
7	to	to		to									TO	aux	8
8	fight	fight	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	26
9	that	that		dt	dt_dem								DT	det	10
10	situation	situation		nn		nom							NN	dobj	8
11	,	,											,	punct	26
12	i	i		pro	1st	sg							PRP	nsubj	26
13	and	and		cc	phrs								CC	cc	12
14	everyone	everyone		nn									NN	conj	12
15	before	before	in+npostmod	in	nmod								IN	prep	14
16	me	i		pro	1st	sg							PRP	pobj	15
17	who	who		relpro	relpro_wh								WP	nsubj	20
18	has	have		vbaux									VBZ	aux	20
19	ever	ever	rb+advl	rb	advl		splaux						RB	advmod	20
20	used	use	finitecls+rel	vbmain	vblex	pres	perf	active	nmod_cls	whcls	rel		VBN	relcl	14
21	CIRCA	circa		nn		proper							NNP	dobj	20
22	,	,											,	punct	26
23	has	have		vbaux									VBZ	aux	26
24	basically	basically	rb+advl	rb	advl	ly	splaux						RB	advmod	26
25	,	,											,	punct	26
26	padded	pad		vbmain	vblex	pres	perf	active					VBN	ROOT	26
27	the	the		dt	art								DT	det	32
28	worst	bad	attr+npremod	jj	attr								JJS	amod	30
29	-	-											HYPH	punct	30
30	case	case	nn+npremod	nn			npremod						NN	compound	32
31	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	32
32	time	time		nn									NN	dobj	26
33	enough	enough	rb+advl	rb	advl								RB	advmod	26
34	that	that		comp	comp_that								IN	mark	43
35	,	,											,	punct	43
36	on	on	in+advl	in	advl								IN	prep	43
37	a	a		dt	art								DT	det	39
38	good	good	attr+npremod	jj	attr								JJ	amod	39
39	day	day		nn									NN	pobj	36
40	you	you		pro	2nd	sg							PRP	nsubj	43
41	wo	will		vbaux	mod								MD	aux	43
42	n't	not											RB	neg	43
43	get	get		vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls			VB	ccomp	33
44	that	that		dt	dt_dem								DT	det	45
45	behavior	behavior		nn		nom							NN	dobj	43
46	.	.											.	punct	26

#sentid = 790
0	um	um											UH	intj	35
1	,	,											,	punct	35
2	so	so		rb	link								RB	advmod	35
3	,	,											,	punct	35
4	the	the		dt	art								DT	det	5
5	thought	thought		nn									NN	nsubj	35
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	,	,											,	punct	6
8	somehow	somehow	rb+advl	rb	advl								RB	advmod	9
9	trying	try	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	6
10	to	to		to									TO	aux	13
11	,	,											,	punct	13
12	uh	uh											UH	intj	13
13	span	span		nn									NN	xcomp	9
14	,	,											,	punct	13
15	uh	uh											UH	intj	13
16	that	that		pro	dem	sg							DT	dobj	13
17	,	,											,	punct	13
18	that	that		dt	dt_dem								DT	det	19
19	sort	sort		nn									NN	npadvmod	13
20	of	of		in	nmod								IN	prep	19
21	actually	actually	rb+advl	rb	advl	ly							RB	advmod	22
22	varying	vary	ingcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	19
23	,	,											,	punct	19
24	resource	resource	nn+npremod	nn			npremod						NN	compound	25
25	capacity	capacity		nn		nom							NN	conj	19
26	and	and		cc	phrs								CC	cc	25
27	things	thing		nn	pl	nom							NNS	conj	25
28	like	like	in+npostmod	in	nmod								IN	prep	27
29	that	that		pro	dem	sg							DT	pobj	28
30	on	on	in+npostmod	in	nmod								IN	prep	25
31	that	that		dt	dt_dem								DT	det	32
32	kind	kind		nn									NN	pobj	30
33	of	of	of+npostmod	in	nmod								IN	prep	32
34	platform	platform		nn									NN	pobj	33
35	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	35
36	,	,											,	punct	35
37	not	not											RB	neg	38
38	something	something		nn		nom							NN	attr	35
39	that	that		pro	dem	sg							WDT	nsubj	43
40	i	i		pro	1st	sg							PRP	nsubj	41
41	find	find	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	38
42	to	to		to									TO	aux	43
43	be	be		vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	41
44	straightforward	straightforward		jj	pred								JJ	acomp	43
45	.	.											.	punct	35

#sentid = 791
0	now	now	rb+advl	rb	advl								RB	advmod	3
1	my	my		dt	poss								PRP$	poss	2
2	hope	hope		nn									NN	nsubj	3
3	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	that	that											IN	mark	5
5	by	by	in+advl	in	advl								IN	prep	3
6	moving	move	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	5
7	to	to	in+advl	in	advl								IN	prep	6
8	the	the		dt	art								DT	det	13
9	real	real	attr+npremod	jj	attr								JJ	amod	11
10	-	-											HYPH	punct	11
11	time	time	nn+npremod	nn			npremod						NN	compound	13
12	operating	operating	nn+npremod	nn		nom	npremod						NN	compound	13
13	system	system		nn									NN	pobj	7
14	,	,											,	punct	5
15	and	and		cc									CC	cc	5
16	,	,											,	punct	5
17	which	which											WDT	dobj	20
18	you	you		pro	2nd	sg							PRP	nsubj	20
19	can	can		vbaux	mod	pos							MD	aux	20
20	characterize	characterize		vbmain	vblex	vp_w_modal	simple	active					VB	conj	5
21	a	a		dt	art								DT	det	22
22	lot	lot		nn									NN	npadvmod	24
23	more	more	rb+jjrbmod	rb	othr								RBR	advmod	24
24	accurately	accurately	rb+advl	rb	advl	ly							RB	advmod	20
25	,	,											,	punct	5
26	that	that											IN	mark	30
27	we	we		pro	1st								PRP	nsubj	30
28	can	can		vbaux	mod	pos							MD	aux	30
29	even	even	rb+advl	rb	advl		splaux						RB	advmod	30
30	do	do		vbmain	vblex	vp_w_modal	simple	active					VB	conj	5
31	more	more	attr+npremod	jj	attr								JJR	amod	39
32	dummy	dummy	attr+npremod	jj	attr								JJ	amod	39
33	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	34
34	of	of											RB	nmod	39
35	,	,											,	punct	39
36	nonsensical	nonsensical	attr+npremod	jj	attr								JJ	amod	39
37	,	,											,	punct	39
38	feature	feature	nn+npremod	nn		nom	npremod						NN	compound	39
39	tests	test		nn	pl								NNS	dobj	30
40	and	and		cc	phrs								CC	cc	30
41	have	have		vbmain	vblex	nonfinite	simple	active					VB	conj	30
42	random	random	attr+npremod	jj	attr								JJ	amod	44
43	number	number	nn+npremod	nn		nom	npremod						NN	compound	44
44	generators	generator		nn	pl	nom							NNS	dobj	41
45	for	for	in+npostmod	in	nmod								IN	prep	44
46	tasks	task		nn	pl								NNS	pobj	45
47	and	and		cc	phrs								CC	cc	44
48	things	thing		nn	pl	nom							NNS	conj	44
49	like	like	in+npostmod	in	nmod								IN	prep	48
50	that	that		pro	dem	sg							DT	pobj	49
51	that	that		relpro	relpro_that	sg							WDT	nsubj	52
52	sit	sit	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	48
53	there	there	rb+advl	rb	advl								RB	advmod	52
54	and	and		cc	phrs								CC	cc	52
55	wait	wait		vbmain	prepv	pres	simple	active					VBP	conj	52
56	for	for	in+advl	in	advl								IN	prep	55
57	,	,											,	punct	56
58	varying	vary	attr+npremod	jj	attr	ing							VBG	amod	59
59	periods	period		nn	pl								NNS	pobj	56
60	of	of	of+npostmod	in	nmod								IN	prep	59
61	time	time		nn									NN	pobj	60
62	that	that		relpro	relpro_that	sg							WDT	nsubj	64
63	would	would		vbaux	mod	prd							MD	aux	64
64	show	show	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	59
65	us	we		pro	pl								PRP	dobj	64
66	when	when		rb	advl								WRB	advmod	68
67	we	we		pro	1st								PRP	nsubj	68
68	met	meet	finitecls+advl	vbmain	vblex	past	simple	active	advlcls	whcls			VBD	advcl	64
69	our	our		dt	poss								PRP$	poss	70
70	deadlines	deadline		nn	pl								NNS	dobj	68
71	and	and		cc	phrs								CC	cc	68
72	when	when		rb	othr								WRB	advmod	76
73	we	we		pro	1st								PRP	nsubj	74
74	did	do		vbaux									VBD	aux	72
75	n't	not											RB	neg	74
76	without	without											IN	conj	68
77	actually	actually	rb+advl	rb	advl	ly							RB	advmod	78
78	having	have	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	76
79	a	a		dt	art								DT	det	80
80	domain	domain		nn									NN	dobj	78
81	,	,											,	punct	80
82	to	to		to									TO	aux	83
83	work	work	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	64
84	in	in	in+advl	in	advl								IN	prep	83
85	,	,											,	punct	5
86	but	but		cc									CC	cc	5
87	that	that		pro	dem	sg							DT	nsubj	88
88	requires	require		vbmain	vblex	pres	simple	active					VBZ	conj	5
89	,	,											,	punct	88
90	that	that		comp	comp_that								IN	mark	95
91	CIRCA	circa		nn		proper							NNP	nsubjpass	95
92	first	first		rb	link								RB	advmod	95
93	be	be		vbaux									VB	auxpass	95
94	fully	fully	rb+advl	rb	advl	ly							RB	advmod	95
95	implemented	implement	thatcls+vcomp	vbmain	vblex	past	simple	pasv_agls	compcls	thatcls	vcomp		VBN	ccomp	88
96	on	on	in+advl	in	advl								IN	prep	95
97	,	,											,	punct	96
98	the	the		dt	art								DT	det	103
99	real	real	attr+npremod	jj	attr								JJ	amod	101
100	-	-											HYPH	punct	101
101	time	time	nn+npremod	nn			npremod						NN	compound	103
102	operating	operating	nn+npremod	nn		nom	npremod						NN	compound	103
103	system	system		nn									NN	pobj	96
104	.	.											.	punct	3

#sentid = 792
0	an-	an-											DT	ROOT	0
1	which	which		relpro	relpro_wh								WDT	nsubj	2
2	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	0
3	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	4
4	close	close		jj	pred								JJ	acomp	2
5	but	but		cc	phrs								CC	cc	4
6	not	not											RB	neg	7
7	quite	quite	rb+jjrbmod	rb	othr								RB	advmod	8
8	there	there											RB	conj	4
9	so	so		cc	cls								CC	cc	2
10	i	i		pro	1st	sg							PRP	nsubj	12
11	certainly	certainly	rb+advl	rb	advl	ly							RB	advmod	12
12	have	have		vbmain	vblex	pres	simple	active					VBP	conj	2
13	intentions	intention		nn	pl	nom							NNS	dobj	12
14	to	to		to									TO	aux	15
15	do	do	tocls+ncomp	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	ncomp		VB	acl	13
16	those	those		dt	dt_dem								DT	det	17
17	kind	kind		nn									NN	dobj	15
18	of	of	of+npostmod	in	nmod								IN	prep	17
19	tests	test		nn	pl								NNS	pobj	18
20	once	once		cs	cs_othr								IN	mark	22
21	we	we		pro	1st								PRP	nsubj	22
22	're	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBP	advcl	15
23	there	there	rb+advl	rb	advl								RB	advmod	22
24	,	,											,	punct	12
25	um	um											UH	intj	12
26	but	but		cc	cls								CC	cc	12
27	that	that		pro	dem	sg							DT	nsubj	30
28	will	will		vbaux	mod	prd							MD	aux	30
29	not	not											RB	neg	30
30	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	12
31	,	,											,	punct	30
32	with	with	in+advl	in	advl								IN	prep	30
33	respect	respect		nn									NN	pobj	32
34	to	to	in+npostmod	in	nmod								IN	prep	33
35	the	the		dt	art								DT	det	36
36	aircraft	aircraft		nn									NN	pobj	34
37	.	.											.	punct	30

#sentid = 793
0	so	so		rb	link								RB	advmod	16
1	,	,											,	punct	16
2	um	um											UH	intj	16
3	,	,											,	punct	16
4	hopefully	hopefully	rb+advl	rb	advl	ly							RB	advmod	6
5	that	that		pro	dem	sg							DT	nsubj	6
6	answers	answer		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	16
7	your	your		dt	poss								PRP$	poss	8
8	question	question		nn		nom							NN	dobj	6
9	a	a		dt	art								DT	det	10
10	bit	bit		nn									NN	npadvmod	11
11	better	well	rb+advl	rb	advl								RBR	advmod	6
12	,	,											,	punct	16
13	um	um											UH	intj	16
14	,	,											,	punct	16
15	it	it		pro	3rd	sg							PRP	nsubj	16
16	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	16
17	not	not											RB	neg	16
18	all	all	rb+jjrbmod	rb	adjmod								RB	advmod	20
19	that	that	rb+jjrbmod	rb	adjmod								RB	advmod	20
20	trivial	trivial		jj	pred								JJ	acomp	16
21	to	to		to									TO	aux	23
22	totally	totally	rb+advl	rb	advl	ly	splaux						RB	advmod	23
23	migrate	migrate	xtrapos+tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	16
24	,	,											,	punct	23
25	the	the		dt	art								DT	det	30
26	CIRCA	circa	nn+npremod	nn		proper	npremod						NNP	compound	30
27	plan	plan	nn+npremod	nn			npremod						NN	compound	29
28	-	-											HYPH	punct	29
29	execution	execution	nn+npremod	nn		nom	npremod						NN	compound	30
30	software	software		nn									NN	dobj	23
31	to	to	in+advl	in	advl								IN	prep	23
32	the	the		dt	art								DT	det	37
33	real	real	attr+npremod	jj	attr								JJ	amod	35
34	-	-											HYPH	punct	35
35	time	time	nn+npremod	nn			npremod						NN	compound	37
36	operating	operating	nn+npremod	nn		nom	npremod						NN	compound	37
37	system	system		nn									NN	pobj	31
38	.	.											.	punct	16

#sentid = 794
0	um	um											UH	intj	3
1	,	,											,	punct	3
2	we	we		pro	1st								PRP	nsubj	3
3	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	3
4	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	5
5	of	of		rb	othr								RB	advmod	10
6	a	a		dt	art								DT	det	10
7	special	special	attr+npremod	jj	attr								JJ	amod	9
8	-	-											HYPH	punct	9
9	purpose	purpose	nn+npremod	nn			npremod						NN	compound	10
10	version	version		nn									NN	dobj	3
11	that	that		relpro	relpro_that	sg							WDT	nsubj	12
12	works	work	finitecls+rel	vbmain	prepv	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	10
13	with	with	in+advl	in	advl								IN	prep	12
14	our	our		dt	poss								PRP$	poss	19
15	U	u		nn		proper	npremod						NNP	compound	19
16	-	-											HYPH	punct	19
17	A	a		nn		proper	npremod						NNP	compound	19
18	-	-											HYPH	punct	19
19	V	v		nn		proper							NNP	pobj	13
20	given	give	edcls+advl	vbmain	advl	nonfinite	simple	active		edcls			VBN	prep	3
21	that	that											IN	mark	23
22	it	it		pro	3rd	sg							PRP	nsubj	23
23	has	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBZ	pcomp	20
24	one	one											CD	nummod	25
25	processor	processor		nn		nom							NN	dobj	23
26	and	and		cc	phrs								CC	cc	25
27	no	no		dt									DT	det	28
28	more	more											JJR	conj	25
29	,	,											,	punct	28
30	um	um											UH	intj	28
31	,	,											,	punct	20
32	and	and		cc	phrs								CC	cc	20
33	given	give		vbmain	vblex	nonfinite	simple	active		edcls			VBN	conj	20
34	that	that											IN	mark	36
35	it	it		pro	3rd	sg							PRP	nsubj	36
36	has	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBZ	pcomp	33
37	a	a		dt	art								DT	det	39
38	specific	specific	attr+npremod	jj	attr								JJ	amod	39
39	set	set		nn									NN	dobj	36
40	of	of	of+npostmod	in	nmod								IN	prep	39
41	tasks	task		nn	pl								NNS	pobj	40
42	not	not											RB	neg	39
43	a	a		dt	art								DT	det	45
44	general	general	attr+npremod	jj	attr								JJ	amod	45
45	set	set	appos+npostmod	nn			nappos						NN	appos	39
46	.	.											.	punct	3

#sentid = 795
0	um	um											UH	intj	8
1	,	,											,	punct	0
2													_SP	dep	0
3	but	but		cc	phrs								CC	cc	8
4													_SP	dep	8
5	you	you		pro	2nd	sg							PRP	nsubj	8
6	've	've		vbaux									VBP	aux	8
7	just	just	rb+advl	rb	advl		splaux						RB	advmod	8
8	identified	identify		vbmain	vblex	pres	simple	active					VBN	ROOT	8
9	your	your		dt	poss								PRP$	poss	12
10	own	own	attr+npremod	jj	attr								JJ	amod	12
11	limited	limited	attr+npremod	jj	attr								JJ	amod	12
12	resources	resource		nn	pl								NNS	dobj	8
13	.	.											.	punct	8

#sentid = 796
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	0

#sentid = 797
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2	.	.											.	punct	1

#sentid = 798
0	but	but		cc	cls								CC	cc	10
1													_SP	dep	10
2	trying	try	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	10
3	to	to		to									TO	aux	4
4	meet	meet	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	2
5	deadlines	deadline		nn	pl								NNS	dobj	4
6													_SP	dep	10
7	we	we		pro	1st								PRP	nsubj	10
8	have	have		vbaux									VBP	aux	10
9	n't	not											RB	neg	10
10	been	be		vbmain	be	pres	perf	active	compcls		vcomp	compdel	VBN	ccomp	27
11	able	able		jj	pred								JJ	acomp	10
12	to	to		to									TO	aux	13
13	test	test	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	11
14	them	they		pro	pl								PRP	dobj	13
15	much	much	rb+advl	rb	advl								RB	advmod	13
16	because	because		cs	cos								IN	mark	21
17	we	we		pro	1st								PRP	nsubj	21
18	do	do		vbaux									VBP	aux	21
19	n't	not											RB	neg	21
20	even	even	rb+advl	rb	advl		splaux						RB	advmod	21
21	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VB	advcl	10
22	model	model		nn			npremod						NN	compound	23
23													_SP	dep	21
24	identification	identification		nn		nom							NN	dobj	21
25													_SP	dep	10
26	so	so		rb	link								CC	advmod	27
27	let	let		vbmain	vblex	nonfinite	simple	active					VB	ROOT	27
28	me	i		pro	1st	sg							PRP	nsubj	29
29	ask	ask		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	27
30	you	you		pro	2nd	sg							PRP	dative	29
31	something	something		nn	other	nom							NN	dobj	29
32	cuz	cuz		cs	cs_othr								IN	mark	34
33	you	you		pro	2nd	sg							PRP	nsubj	34
34	know	know	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	29
35	cuz	cuz		cs	cs_othr								IN	mark	67
36	the-	the-											DT	punct	67
37	all	all											PDT	predet	39
38	these	these		dt	dt_dem								DT	det	39
39	answers	answer		nn	pl	nom							NNS	nsubj	40
40	seem	seem		vbmain	in_othr	pres	simple	active					VBP	prep	36
41	to	to		to									TO	aux	45
42	c-	c-											XX	punct	45
43	always	always	rb+advl	rb	advl		splaux						RB	advmod	45
44	be	be		vbaux									VB	aux	45
45	coming	come	ingcls+vcomp	vbmain	vblex	nonfinite	prog	active	compcls	ingcls	vcomp		VBG	xcomp	40
46	back	back	rb+advl	rb	advl								RB	advmod	45
47	to	to	in+advl	in	advl								IN	prep	45
48	well	well											UH	intj	52
49	i	i		pro	1st	sg							PRP	nsubj	52
50	ca	can		vbaux	mod								MD	aux	52
51	n't	not											RB	neg	52
52	do	do		vbmain	vblex	vp_w_modal	simple	active					VB	meta	47
53	it	it		pro	3rd	sg							PRP	dobj	52
54	all	all											DT	appos	53
55	,	,											,	punct	52
56													_SP	dep	52
57	right	right											UH	intj	52
58	,	,											,	punct	57
59	yeah	yeah											UH	intj	57
60	,	,											,	meta	52
61													_SP	dep	52
62	together	together	rb+advl	rb	advl								RB	advmod	67
63	,	,											,	punct	67
64	there	there											EX	expl	67
65	's	be		vbaux									VBZ	aux	67
66	always	always	rb+advl	rb	advl		splaux						RB	advmod	67
67	going	go	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		other_advl		VBG	advcl	27
68	to	to		to									TO	aux	69
69	be	be	tocls+vcomp	vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	67
70	something	something		nn		nom							NN	attr	69
71	,	,											,	punct	70
72	well	well											UH	intj	70
73	that	that		relpro	relpro_that	sg							WDT	nsubj	74
74	's	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	70
75													_SP	dep	74
76	yeah	yeah											UH	intj	78
77	,	,											,	punct	78
78	mhm	mhm											UH	meta	74
79	.	.											.	punct	70
80													_SP	dep	27
81	going	go		vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	ccomp	27
82	to	to		to									TO	aux	83
83	be	be	tocls+vcomp	vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	81
84	true	true		jj	pred								JJ	acomp	83
85	forever	forever	rb+advl	rb	advl								RB	advmod	83
86	,	,											,	punct	81
87	actually	actually	rb+advl	rb	advl	ly							RB	advmod	81
88	,	,											,	punct	81
89	not	not											RB	neg	94
90	just	just	rb+advl	rb	advl								RB	advmod	94
91	the	the											DT	dep	94
92	,	,											,	punct	94
93	it	it		pro	3rd	sg							PRP	nsubj	94
94	's	be		vbmain	be	pres	simple	active					VBZ	dep	81
95	not	not											RB	neg	94
96	just	just		rb	othr								RB	advmod	98
97	the	the		dt	art								DT	det	98
98	limits	limit		nn	pl								NNS	attr	94
99	of	of	of+npostmod	in	nmod								IN	prep	98
100	the	the		dt	art								DT	det	101
101	dissertation	dissertation		nn		nom							NN	pobj	99
102	.	.											.	punct	27

#sentid = 799
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	1

#sentid = 800
0													_SP	dep	4
1	and	and		cc	phrs								CC	cc	4
2	,	,											,	punct	4
3	i	i		pro	1st	sg							PRP	nsubj	4
4	guess	guess		vbmain	vblex	pres	simple	active					VBP	ROOT	4
5	what	what											WP	pobj	8
6	the	the		dt	art								DT	det	7
7	committee	committee		nn		nom							NN	nsubj	8
8	keeps	keep		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	csubj	9
9	pushing	push		vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	csubj	14
10	,	,											,	punct	9
11	pushing	push		vbmain	phrsv	nonfinite	simple	active		ingcls			VBG	dep	9
12	back	back		rb	prtcle								RP	prt	11
13	on	on	in+advl	in	advl								IN	prep	11
14	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	4
15	,	,											,	punct	14
16	well	well											UH	intj	18
17	it	it		pro	3rd	sg							PRP	nsubj	18
18	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	14
19	still	still	rb+advl	rb	advl								RB	advmod	18
20	possible	possible		jj	pred								JJ	acomp	18
21	to	to		to									TO	aux	22
22	provide	provide	xtrapos+tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	18
23	,	,											,	punct	22
24	pieces	piece		nn	pl								NNS	dobj	22
25	of	of	of+npostmod	in	nmod								IN	prep	24
26	evidence	evidence		nn		nom							NN	pobj	25
27	,	,											,	punct	24
28													_SP	dep	24
29	right	right											UH	intj	18
30	.	.											.	punct	4

#sentid = 801
0													_SP	dep	10
1	her-	her-											:	punct	10
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	10
4	,	,											,	punct	3
5	about	about	in+advl	in	advl								IN	prep	10
6	aspects	aspect		nn	pl								NNS	pobj	5
7	,	,											,	punct	10
8	that	that		pro	dem	sg							WDT	nsubj	10
9	will	will		vbaux	mod	prd							MD	aux	10
10	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	10
11	,	,											,	punct	10
12													_SP	dep	10
13	right	right											UH	intj	10
14	.	.											.	punct	10

#sentid = 802
0													_SP	dep	2
1	admissible	admissible	attr+npremod	jj	attr								JJ	amod	2
2	evidence	evidence		nn		nom							NN	ROOT	2
3	even	even	rb+advl	rb	advl								RB	advmod	9
4	though	though		cs	con								IN	mark	9
5	,	,											,	punct	9
6	they	they		pro	pl								PRP	nsubj	9
7	do	do		vbaux									VBP	aux	9
8	n't	not											RB	neg	9
9	capture	capture	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		concessive		VB	advcl	2
10	some	some		dt									DT	det	11
11	aspect	aspect		nn									NN	dobj	9
12													_SP	dep	2
13	right	right											UH	intj	2
14	.	.											.	punct	2

#sentid = 803
0													_SP	dep	2
1	that	that		pro	dem	sg							DT	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	in	in	in+advl	in	advl								IN	prep	2
4	your	your		dt	poss								PRP$	poss	6
5	grand	grand		jj	attr								JJ	amod	6
6													_SP	dep	3
7	vision	vision		nn									NN	pobj	3
8	.	.											.	punct	2

#sentid = 804
0													_SP	dep	0
1	well	well											UH	intj	2
2	so	so		rb	othr								RB	advmod	0
3													_SP	dep	2
4	and	and		cc	phrs								CC	cc	7
5	you	you		pro	2nd	sg							PRP	nsubj	7
6	've	've		vbaux									VBP	aux	7
7	got	get		vbmain	vblex	pres	simple	active					VBN	conj	0
8	to	to		to									TO	aux	11
9	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	10
10	of	of	rb+advl	rb	advl		splaux						RB	advmod	11
11	embrace	embrace	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	7
12	that	that		pro	dem	sg							DT	dobj	11
13	i	i		pro	1st	sg							PRP	nsubj	14
14	think	think		vbmain	vblex	pres	simple	active					VBP	parataxis	16
15	to	to											TO	dep	16
16													_SP	dep	11
17	right	right											UH	intj	7
18	so	so		cs	cs_othr								IN	mark	41
19	the	the											DT	dep	41
20	,	,											,	punct	41
21	f-	f-											XX	dep	41
22	the	the		dt	art								DT	det	23
23	idea	idea		nn									NN	nsubj	41
24	with	with	in+npostmod	in	nmod								IN	prep	23
25	the	the		dt	art								DT	det	30
26	the	the		dt	art								DT	det	30
27	n-	n-											XX	nmod	30
28	the	the		dt	art								DT	det	30
29	next	next	attr+npremod	jj	attr								JJ	amod	30
30	generation	generation		nn		nom							NN	pobj	24
31	of	of	of+npostmod	in	nmod								IN	prep	30
32	CIRCA	circa	nn+npremod	nn		proper	npremod						NNP	compound	33
33	student	student		nn		nom							NN	pobj	31
34	that	that		relpro	relpro_that	sg							WDT	nsubj	36
35	's	be		vbaux									VBZ	aux	36
36	working	work	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls	thatcls	rel		VBG	relcl	30
37	here	here	rb+advl	rb	advl								RB	advmod	36
38	in	in		in	in_othr								IN	prep	37
39	the	the		dt	art								DT	det	40
40	lab	lab		nn									NN	pobj	38
41	is	be		vbmain	be	pres	simple	active			other_advl		VBZ	conj	0
42	that	that		comp	comp_that								IN	mark	45
43	he	he		pro	3rd	sg							PRP	nsubj	45
44	's	be		vbaux									VBZ	aux	45
45	comparing	compare	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls	thatcls	vcomp		VBG	ccomp	41
46	,	,											,	punct	45
47	our	our		dt	poss								PRP$	poss	50
48	current	current	attr+npremod	jj	attr								JJ	amod	50
49	stochastic	stochastic	attr+npremod	jj	attr								JJ	amod	50
50	model	model		nn									NN	dobj	45
51	with	with	in+advl	in	advl								IN	prep	45
52	,	,											,	punct	51
53	um	um											UH	intj	51
54	,	,											,	punct	51
55	uh	uh											UH	intj	51
56	the	the		dt	art								DT	det	59
57	,	,											,	punct	59
58	stochastic	stochastic	attr+npremod	jj	attr								JJ	amod	59
59	simulations	simulation		nn	pl	nom							NNS	pobj	51
60	that	that		pro	dem	sg							WDT	dobj	63
61	he	he		pro	3rd	sg							PRP	nsubj	63
62	's	be		vbaux									VBZ	aux	63
63	running	run	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel		VBG	relcl	59
64	based	base	edcls+advl	vbmain	advl	nonfinite	simple	active		edcls			VBN	prep	63
65	on	on	in+advl	in	advl								IN	prep	64
66	the	the		dt	art								DT	det	68
67	actual	actual	attr+npremod	jj	attr								JJ	amod	68
68	probabilities	probability		nn	pl	nom							NNS	pobj	65
69	and	and		cc	cls								CC	cc	45
70	that	that		pro	dem	sg							DT	nsubj	72
71	should	should		vbaux	mod	nec							MD	aux	72
72	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	45
73	able	able		jj	pred								JJ	acomp	72
74	to	to		to									TO	aux	75
75	yield	yield	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	73
76	some	some		dt									DT	det	78
77	comparative	comparative	attr+npremod	jj	attr								JJ	amod	78
78	results	result		nn	pl								NNS	dobj	75
79	of	of	of+npostmod	in	nmod								IN	prep	78
80	what	what		comp	comp_wh								WP	dobj	85
81	,	,											,	punct	85
82	you	you		pro	2nd	sg							PRP	nsubj	85
83	would	would		vbaux	mod	prd							MD	aux	85
84	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	85
85	see	see	whcls+incomp	vbmain	vblex	vp_w_modal	simple	active	compcls	whcls	incomp		VB	pcomp	79
86	,	,											,	punct	85
87	versus	versus	in+advl	in	advl								IN	prep	85
88	what	what		comp	comp_wh								WP	dobj	92
89	our	our		dt	poss								PRP$	poss	90
90	model	model		nn									NN	nsubj	92
91	's	be		vbaux									VBZ	aux	92
92	predicting	predict	whcls+incomp	vbmain	vblex	pres	prog	active	compcls	whcls	incomp		VBG	pcomp	87
93	and	and		cc	cls								CC	cc	72
94	he	he		pro	3rd	sg							PRP	nsubj	97
95	's	be		vbaux									VBZ	aux	97
96	,	,											,	punct	97
97	beginning	begin		vbmain	vblex	pres	prog	active					VBG	conj	72
98	to	to		to									TO	aux	99
99	characterize	characterize	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	97
100	that	that		dt	dt_dem								DT	det	101
101	error	error		nn		nom							NN	dobj	99
102	but	but		cc	cls								CC	cc	97
103	then	then		rb	link								RB	advmod	106
104	,	,											,	punct	106
105	that	that		pro	dem	sg							DT	nsubj	106
106	's	be		vbmain	be	pres	simple	active					VBZ	conj	97
107	not	not											RB	neg	106
108	my	my		dt	poss								PRP$	poss	109
109	work	work		nn									NN	attr	106
110	.	.											.	punct	41

#sentid = 805
0	and	and		cc	cls								CC	cc	5
1	,	,											,	punct	5
2	hopefully	hopefully	rb+advl	rb	advl	ly							RB	advmod	5
3	i	i		pro	1st	sg							PRP	nsubj	5
4	can	can		vbaux	mod	pos							MD	aux	5
5	reference	reference		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	5
6	that	that		dt	dt_dem								DT	det	7
7	work	work		nn									NN	dobj	5
8	in	in	in+advl	in	advl								IN	prep	5
9	the	the		dt	art								DT	det	10
10	future	future		nn		nom							NN	pobj	8
11	,	,											,	punct	5
12	um	um											UH	intj	5
13	,	,											,	punct	5
14	b-	b-											XX	dep	5
15	but	but		cc	cls								CC	cc	5
16	i	i		pro	1st	sg							PRP	nsubj	20
17	do	do		vbaux									VBP	aux	20
18	n't	not											RB	neg	20
19	necessarily	necessarily	rb+advl	rb	advl	ly	splaux						RB	advmod	20
20	see	see		vbmain	vblex	pres	simple	active					VB	conj	5
21	myself	myself		pro	1st	sg							PRP	nsubj	22
22	repeating	repeat		vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	ccomp	20
23	that	that		dt	dt_dem								DT	det	24
24	work	work		nn									NN	dobj	22
25	because	because		cs	cos								IN	mark	28
26	he	he		pro	3rd	sg							PRP	nsubj	28
27	's	be		vbaux									VBZ	aux	28
28	using	use	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		causative		VBG	advcl	22
29	exactly	exactly		rb	othr	ly							RB	advmod	32
30	the	the		dt	art								DT	det	32
31	same	same	attr+npremod	jj	attr								JJ	amod	32
32	model	model		nn									NN	dobj	28
33	.	.											.	punct	20

#sentid = 806
0	um	um											UH	intj	4
1	,	,											,	punct	4
2	i	i		pro	1st	sg							PRP	nsubj	4
3	do	do		vbaux									VBP	aux	4
4	see	see		vbmain	vblex	pres	simple	active					VB	ROOT	4
5	myself	myself		pro	1st	sg							PRP	nsubj	18
6	,	,											,	punct	10
7	i	i		pro	1st	sg							PRP	nsubj	8
8	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	10
9	i	i		pro	1st	sg							PRP	nsubj	10
10	hope	hope		vbmain	vblex	pres	simple	active					VBP	parataxis	18
11	before	before		cs	cs_othr								IN	mark	14
12	i	i		pro	1st	sg							PRP	nsubj	14
13	wo-	wo-		vbaux	mod								MD	aux	14
14	leave	leave	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	18
15	here	here	rb+advl	rb	advl								RB	advmod	14
16	,	,											,	punct	18
17	to	to		to									TO	aux	18
18	have	have		vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	4
19	,	,											,	punct	18
20	CIRCA	circa		nn		proper							NNP	nsubj	21
21	running	run		vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	ccomp	18
22	on	on	in+advl	in	advl								IN	prep	21
23	this	this		dt	dt_dem								DT	det	24
24	airplane	airplane		nn									NN	pobj	22
25	.	.											.	punct	4

#sentid = 807
0	which	which											WDT	nsubj	3
1	,	,											,	punct	3
2	would	would		vbaux	mod	prd							MD	aux	3
3	give	give		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	3
4	me	i		pro	1st	sg							PRP	dative	3
5	a	a		dt	art								DT	det	7
6	specific	specific	attr+npremod	jj	attr								JJ	amod	7
7	set	set		nn									NN	dobj	3
8	of	of	of+npostmod	in	nmod								IN	prep	7
9	limited	limit	attr+npremod	jj	attr	ed							VBN	amod	11
10	computational	computational	attr+npremod	jj	attr								JJ	amod	11
11	resources	resource		nn	pl								NNS	pobj	8
12	to	to		to									TO	aux	13
13	work	work	tocls+rel	vbmain	prepv	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	7
14	with	with	in+advl	in	advl								IN	prep	13
15	,	,											,	punct	7
16	and	and		cc	phrs								CC	cc	7
17	a	a		dt	art								DT	det	19
18	specific	specific	attr+npremod	jj	attr								JJ	amod	19
19	set	set		nn									NN	conj	7
20	of	of	of+npostmod	in	nmod								IN	prep	19
21	software	software		nn									NN	pobj	20
22	to	to		to									TO	aux	23
23	work	work	tocls+rel	vbmain	prepv	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	21
24	with	with	in+advl	in	advl								IN	prep	23
25	it	it		pro	3rd	sg							PRP	pobj	24
26	on	on	in+advl	in	advl								IN	prep	23
27	,	,											,	punct	3
28	but	but		cc	cls								CC	cc	3
29	,	,											,	punct	3
30	i	i		pro	1st	sg							PRP	nsubj	33
31	did	do		vbaux									VBD	aux	33
32	n't	not											RB	neg	33
33	see	see		vbmain	vblex	past	simple	active					VB	conj	3
34	myself	myself		pro	1st	sg							PRP	nsubj	35
35	spending	spend		vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	ccomp	33
36	the	the		dt	art								DT	det	39
37	next	next	attr+npremod	jj	attr								JJ	amod	39
38	two	two											CD	nummod	39
39	years	year		nn	pl								NNS	dobj	35
40	waiting	wait	ingcls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	35
41	for	for		cs	cs_othr								IN	mark	46
42	all	all											PDT	predet	44
43	those	those		dt	dt_dem								DT	det	44
44	processes	process		nn	pl	nom							NNS	nsubj	46
45	to	to		to									TO	aux	46
46	be	be	tocls+advl	vbmain	be	nonfinite	simple	active	advlcls	tocls	other_advl		VB	advcl	40
47	available	available		jj	pred								JJ	acomp	46
48	,	,											,	punct	33
49	so	so		cc	cls								CC	cc	33
50	that	that		pro	dem	sg							DT	nsubj	51
51	's	be		vbmain	be	pres	simple	active					VBZ	conj	33
52	why	why		comp	comp_wh								WRB	advmod	55
53	,	,											,	punct	55
54	i	i		pro	1st	sg							PRP	nsubj	55
55	want	want	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	51
56	to	to		to									TO	aux	57
57	leave	leave		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	55
58	now	now	rb+advl	rb	advl								RB	advmod	57
59	,	,											,	punct	33

#sentid = 808
0													_SP	dep	7
1	so	so		rb	link								RB	advmod	7
2	,	,											,	punct	7
3	um	um											UH	intj	7
4	,	,											,	punct	7
5	i	i		pro	1st	sg							PRP	nsubj	7
6	i	i		pro	1st	sg							PRP	nsubj	7
7	agree	agree		vbmain	vblex	pres	simple	active					VBP	ROOT	7
8	,	,											,	punct	7
9	and	and		cc	cls								CC	cc	7
10	,	,											,	punct	7
11	i	i		pro	1st	sg							PRP	nsubj	13
12	certainly	certainly	rb+advl	rb	advl	ly							RB	advmod	13
13	plan	plan		vbmain	vblex	pres	simple	active					VBP	conj	7
14	to	to		to									TO	aux	15
15	work	work	tocls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	13
16	on	on	in+advl	in	advl								IN	prep	15
17	it	it		pro	3rd	sg							PRP	pobj	16
18	.	.											.	punct	13

#sentid = 809
0	that	that		pro	dem	sg							DT	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	,	,											,	punct	1
3	probably	probably		rb	othr	ly							RB	advmod	5
4	the	the		dt	art								DT	det	5
5	best	good											JJS	attr	1
6	i	i		pro	1st	sg							PRP	nsubj	8
7	can	can		vbaux	mod	pos							MD	aux	8
8	say	say	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	5
9	now	now	rb+advl	rb	advl								RB	advmod	8
10	.	.											.	punct	1

#sentid = 810
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	0

#sentid = 811
0													_SP	dep	13
1	i	i		pro	1st	sg							PRP	nsubj	3
2	've	've		vbaux									VBP	aux	3
3	got	get		vbmain	in_othr	pres	simple	active					VBN	prep	0
4	to	to		to									TO	aux	5
5	leave	leave	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	3
6	shortly	shortly	rb+advl	rb	advl	ly							RB	advmod	5
7	so	so		cc	phrs								CC	cc	3
8													_SP	dep	3
9	okay	okay											UH	intj	13
10	,	,											,	punct	13
11	we	we		pro	1st								PRP	nsubj	13
12	've	've		vbaux									VBP	aux	13
13	got	get		vbmain	vblex	pres	simple	active					VBN	ROOT	13
14	all	all											PDT	predet	20
15	the	the		dt	art								DT	det	20
16	important	important	attr+npremod	jj	attr								JJ	amod	20
17	,	,											,	punct	20
18	at	at	rb+jjrbmod	rb	adjmod								IN	advmod	19
19	least	least	attr+npremod	jj	attr								JJS	amod	20
20	questions	question		nn	pl	nom							NNS	nsubj	21
21	asked	ask	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBN	ccomp	13
22	?	?											.	punct	13

#sentid = 812
0	correct	correct											JJ	ROOT	0
1	?	?											.	punct	0

#sentid = 813
0	(	(											-LRB-	punct	1
1	xx	xx											XX	ROOT	1
2	)	)											-RRB-	punct	1

#sentid = 814
0													_SP	dep	17
1	so	so		rb	link								RB	advmod	17
2	if	if		cs	cnd								IN	mark	6
3	any	any											DT	nsubj	6
4	of	of		in	in_othr								IN	prep	3
5	you	you		pro	2nd	sg							PRP	pobj	4
6	want	want	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	17
7	to	to		to									TO	aux	8
8	talk	talk		vbmain	prepv	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	6
9	to	to	in+advl	in	advl								IN	prep	8
10	me	i		pro	1st	sg							PRP	pobj	9
11	,	,											,	punct	17
12	later	later	rb+advl	rb	advl								RB	advmod	17
13	,	,											,	punct	17
14	i	i		pro	1st	sg							PRP	nsubj	17
15	'll	will		vbaux	mod								MD	aux	17
16	certainly	certainly	rb+advl	rb	advl	ly	splaux						RB	advmod	17
17	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	17
18	around	around	rb+advl	rb	advl								RB	advmod	17
19	...	...											:	punct	17

#sentid = 815
0													_SP	dep	9
1	okay	okay											UH	intj	9
2													_SP	dep	9
3	so	so		rb	link								RB	advmod	9
4													_SP	dep	5
5	thanks	thank		nn	pl								NNS	intj	9
6	a	a		dt	art								DT	det	7
7	lot	lot		nn									NN	npadvmod	5
8													_SP	dep	5
9	thank	thank		vbmain	vblex	pres	simple	active					VBP	ROOT	9
10	you	you		pro	2nd	sg							PRP	dobj	9
11													_SP	dep	9

#sentid = 816
0	and	and		cc	cls								CC	cc	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	'm	be		vbmain	be	pres	simple	active					VBP	ROOT	2
3	afraid	afraid		jj	pred								JJ	acomp	2
4	we	we		pro	1st								PRP	nsubj	5
5	have	have	thatcls+jcomp	vbmain	vblex	pres	simple	active	compcls		jcomp	compdel	VBP	ccomp	3
6	to	to											TO	xcomp	5
7	,	,											,	punct	2
8	(	(											-LRB-	punct	2
9	xx	xx											NFP	punct	2
10	)	)											-RRB-	punct	2
11													_SP	dep	2
12	(	(											-LRB-	punct	2
13	xx	xx											XX	punct	2
14	)	)											-RRB-	punct	2