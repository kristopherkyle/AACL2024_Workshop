#sentid = 0
0	okay	okay											UH	intj	12
1	,	,											,	punct	12
2	well	well											UH	intj	12
3	just	just	rb+advl	rb	advl								RB	advmod	7
4	to	to		to									TO	aux	7
5	um	um											UH	intj	7
6	,	,											,	punct	7
7	reiterate	reiterate	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	12
8	,	,											,	punct	7
9	last	last	attr+npremod	jj	attr								JJ	amod	10
10	time	time		nn									NN	npadvmod	12
11	we	we		pro	1st								PRP	nsubj	12
12	agreed	agree		vbmain	vblex	past	simple	active					VBD	ROOT	12
13	that	that		comp	comp_that								IN	mark	16
14	we	we		pro	1st								PRP	nsubj	16
15	'd	would		vbaux	mod								MD	aux	16
16	push	push	thatcls+vcomp	vbmain	phrsv	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	12
17	back	back		rb	prtcle								RP	prt	16
18	the	the		dt	art								DT	det	21
19	paper	paper	nn+npremod	nn		nom	npremod						NN	nmod	21
20	due	due	attr+npremod	jj	attr								JJ	amod	21
21	dates	date		nn	pl	nom							NNS	dobj	16
22	from	from	in+advl	in	advl								IN	prep	16
23	this	this		dt	dt_dem								DT	det	24
24	Wednesday	wednesday		nn		proper							NNP	pobj	22
25	to	to	in+advl	in	advl								IN	prep	16
26	,	,											,	punct	25
27	the	the		dt	art								DT	det	28
28	Monday	monday		nn		proper							NNP	pobj	25
29	after	after	in+npostmod	in	nmod								IN	prep	28
30	break	break		nn									NN	pobj	29
31	,	,											,	punct	16
32	so	so		cs	cs_othr								IN	mark	34
33	that	that		pro	dem	sg							DT	nsubj	34
34	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	16
35	Monday	monday		nn		proper							NNP	attr	34
36	,	,											,	punct	35
37	um	um											UH	intj	35
38	March	march		nn		proper	nappos						NNP	appos	35
39	eighth	eighth											JJ	nummod	38
40	,	,											,	punct	35
41	due	due		jj	attr								JJ	amod	35
42	in	in	in+jcomp	in	jcomp								IN	prep	41
43	class	class		nn									NN	pobj	42
44	um	um											UH	intj	35
45	,	,											,	punct	12
46	and	and		cc	phrs								CC	cc	12
47	are	be		vbmain	be	pres	simple	active					VBP	conj	12
48	there	there											EX	expl	47
49	any	any		dt									DT	det	50
50	questions	question		nn	pl	nom							NNS	attr	47
51	about	about	in+npostmod	in	nmod								IN	prep	50
52	those	those		pro	dem	pl							DT	pobj	51
53	,	,											,	punct	52
54	the	the		dt	art								DT	det	55
55	papers	paper	appos+npostmod	nn	pl	nom	nappos						NNS	appos	52
56	?	?											.	punct	47

#sentid = 1
0	(	(											-LRB-	punct	4
1	the	the		dt	art								DT	det	4
2	next	next	attr+npremod	jj	attr								JJ	amod	4
3	)	)											-RRB-	punct	4
4	papers	paper		nn	pl	nom							NNS	ROOT	4
5	that	that		relpro	relpro_that	sg							WDT	nsubj	6
6	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	4
7	due	due		jj	pred								JJ	acomp	6
8	?	?											.	punct	4

#sentid = 2
0	they	they		pro	pl								PRP	nsubj	2
1	're	be		vbaux									VBP	aux	2
2	gon	go											TO	ROOT	2
3	na	to		vbaux									TO	aux	4
4	be	be		vbmain	be	nonfinite	simple	active	compcls			compdel	VB	xcomp	2
5	a	a		dt	art								DT	det	7
6	little	little	attr+npremod	jj	attr								JJ	amod	7
7	bit	bit		nn									NN	npadvmod	8
8	longer	long		jj	pred								JJR	acomp	4
9	than	than	in+comparative	in	jcomp								IN	prep	8
10	the	the		dt	art								DT	det	11
11	ones	one		nn	pl	pl							NNS	pobj	9
12	from	from	in+npostmod	in	nmod								IN	prep	11
13	last	last	attr+npremod	jj	attr								JJ	amod	14
14	time	time		nn									NN	pobj	12
15	,	,											,	punct	4
16	and	and		cc	cls								CC	cc	4
17	i	i		pro	1st	sg							PRP	dep	20
18	w-	w-											XX	dep	20
19	i	i		pro	1st	sg							PRP	nsubj	20
20	want	want		vbmain	vblex	pres	simple	active					VBP	conj	4
21	to	to		to									TO	aux	22
22	reiterate	reiterate		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	20
23	that	that		comp	comp_that								IN	mark	25
24	i	i		pro	1st	sg							PRP	nsubj	25
25	'm	be		vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	28
26	,	,											,	punct	28
27	i	i		pro	1st	sg							PRP	nsubj	28
28	'm	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	22
29	glad	glad		jj	pred								JJ	acomp	28
30	to	to		to									TO	aux	31
31	meet	meet	tocls+jcomp	vbmain	prepv	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	29
32	with	with	in+advl	in	advl								IN	prep	31
33	people	people		nn	pl								NNS	pobj	32
34	if	if		cs	cnd								IN	mark	36
35	you	you		pro	2nd	sg							PRP	nsubj	36
36	want	want	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	31
37	to	to		to									TO	aux	38
38	come	come		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	36
39	to	to	in+advl	in	advl								IN	prep	38
40	my	my		dt	poss								PRP$	poss	42
41	office	office	nn+npremod	nn			npremod						NN	compound	42
42	hours	hour		nn	pl								NNS	pobj	39
43	today	today		nn									NN	npadvmod	38
44	after	after		in	nmod								IN	prep	43
45	class	class		nn									NN	pobj	44
46	or	or		cc	phrs								CC	cc	43
47	,	,											,	punct	38
48	this	this		dt	dt_dem								DT	det	49
49	week	week		nn									NN	conj	38
50	.	.											.	punct	20

#sentid = 3
0	so	so		rb	link								RB	advmod	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	'm	be		vbmain	be	pres	simple	active					VBP	ROOT	2
3	happy	happy		jj	pred								JJ	acomp	2
4	to	to		to									TO	aux	5
5	make	make	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	3
6	appointments	appointment		nn	pl	nom							NNS	dobj	5
7	.	.											.	punct	2

#sentid = 4
0	um	um											UH	intj	5
1	,	,											,	punct	5
2	and	and		cc	phrs								CC	cc	5
3	i	i		pro	1st	sg							PRP	nsubj	5
4	wanna	wanna		vbaux	mod								MD	aux	5
5	thank	thank		vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	15
6	you	you		pro	2nd	sg							PRP	nmod	7
7	guys	guy		nn	pl								NNS	dobj	5
8	for	for	in+advl	in	advl								IN	prep	5
9	filling	fill	ingcls+incomp	vbmain	phrsv	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	8
10	out	out		rb	prtcle								RP	prt	9
11	the	the		dt	art								DT	det	12
12	survey	survey		nn									NN	dobj	9
13	,	,											,	punct	15
14	it	it		pro	3rd	sg							PRP	nsubj	15
15	was	be		vbmain	be	past	simple	active					VBD	ROOT	15
16	really	really	rb+advl	rb	advl	ly							RB	advmod	15
17	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	18
18	helpful	helpful		jj	pred								JJ	acomp	15
19	.	.											.	punct	15

#sentid = 5
0	um	um											UH	intj	13
1	,	,											,	punct	13
2	a	a		dt	art								DT	det	3
3	couple	couple		nn									NN	nsubj	6
4	of	of	of+npostmod	in	nmod								IN	prep	3
5	things	thing		nn	pl	nom							NNS	pobj	4
6	came	come		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	13
7	out	out	in+advl	in	advl								IN	prep	6
8	of	of		in	in_othr								IN	prep	7
9	it	it		pro	3rd	sg							PRP	pobj	8
10	,	,											,	punct	13
11	um	um											UH	intj	13
12	one	one		pro	other	pl							CD	nsubj	13
13	was	be		vbmain	be	past	simple	active					VBD	ROOT	13
14	that	that		comp	comp_that								IN	mark	18
15	pretty	pretty	rb+jjrbmod	rb	othr								RB	advmod	16
16	much	much		rb	othr								RB	advmod	17
17	everybody	everybody		nn	other	sg							NN	nsubj	18
18	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls	thatcls	vcomp		VBD	ccomp	13
19	,	,											,	punct	18
20	in	in	in+advl	in	advl								IN	prep	18
21	favor	favor		nn		nom							NN	pobj	20
22	of	of	of+npostmod	in	nmod								IN	prep	21
23	doing	do	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	22
24	more	more	attr+npremod	jj	attr								JJR	amod	26
25	small	small	attr+npremod	jj	attr								JJ	amod	26
26	groups	group		nn	pl								NNS	dobj	23
27	.	.											.	punct	13

#sentid = 6
0	um	um											UH	intj	3
1	,	,											,	punct	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	was	be		vbmain	be	past	simple	active					VBD	ROOT	3
4	that	that		pro	dem	sg							DT	nsubj	5
5	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	3
6	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	7
7	popular	popular		jj	pred								JJ	acomp	5
8	.	.											.	punct	3

#sentid = 7
0	so	so		rb	link								RB	advmod	3
1	i	i		pro	1st	sg							PRP	nsubj	3
2	'm	be		vbaux									VBP	aux	3
3	gon	go		vbmain	vblex	pres	prog	active					VBG	ROOT	3
4	na	to		vbaux									VBG	aux	5
5	try	try		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	3
6	and	and		cc	phrs								CC	cc	5
7	make	make		vbmain	vblex	nonfinite	simple	active					VB	conj	5
8	sure	sure											JJ	ccomp	7
9	that	that		cs	cs_othr								IN	mark	11
10	we	we		pro	1st								PRP	nsubj	11
11	do	do	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBP	advcl	8
12	some	some											DT	dobj	11
13	of	of		in	in_othr								IN	prep	12
14	that	that		pro	dem	sg							DT	pobj	13
15	,	,											,	punct	11
16	at	at		rb	othr								IN	advmod	17
17	least	least	rb+jjrbmod	rb	othr								JJS	advmod	18
18	once	once		rb	othr								RB	advmod	20
19	every	every		dt									DT	det	20
20	time	time		nn									NN	npadvmod	11
21	in	in		rb	othr								IN	advmod	20
22	in	in		in	nmod								IN	prep	20
23	class	class		nn									NN	pobj	22
24	.	.											.	punct	3

#sentid = 8
0	and	and		cc	cls								CC	cc	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	that	that		pro	dem	sg							DT	nsubj	4
4	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	2
5	_	_											NFP	attr	4
6	you	you		pro	2nd	sg							PRP	nsubj	7
7	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	4
8	it	it		pro	3rd	sg							PRP	nsubj	9
9	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	18
10	something	something		nn		nom							NN	attr	9
11	i	i		pro	1st	sg							PRP	nsubj	14
12	've	've		vbaux									VBP	aux	14
13	been	be		vbaux									VBN	aux	14
14	noticing	notice	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel	reldel	VBG	relcl	10
15	too	too	rb+advl	rb	advl								RB	advmod	14
16	,	,											,	punct	9
17	it	it		pro	3rd	sg							PRP	nsubj	18
18	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	4
19	hard	hard		jj	pred								JJ	acomp	18
20	to	to		to									TO	aux	21
21	get	get	xtrapos+tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	18
22	people	people		nn	pl								NNS	nsubj	24
23	to	to		to									TO	aux	24
24	participate	participate		vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	21
25	when	when		rb	advl								WRB	advmod	27
26	we	we		pro	1st								PRP	nsubj	27
27	're	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBP	advcl	18
28	all	all											DT	dep	27
29	in	in	in+advl	in	advl								IN	prep	27
30	a	a		dt	art								DT	det	32
31	big	big	attr+npremod	jj	attr								JJ	amod	32
32	group	group		nn									NN	pobj	29
33	.	.											.	punct	2

#sentid = 9
0	um	um											UH	intj	2
1	and	and		cc	phrs								CC	cc	2
2	i	i		pro	1st	sg							PRP	nsubj	16
3	as	as		cs	cs_othr								IN	mark	5
4	i	i		pro	1st	sg							PRP	nsubj	5
5	said	say	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		other_advl		VBD	advcl	16
6	at	at	in+advl	in	advl								IN	prep	5
7	the	the		dt	art								DT	det	8
8	beginning	beginning		nn		nom							NN	pobj	6
9	of	of	of+npostmod	in	nmod								IN	prep	8
10	class	class		nn									NN	pobj	9
11	,	,											,	punct	16
12	a	a		dt	art								DT	det	13
13	couple	couple		nn									NN	nsubj	16
14	of	of	of+npostmod	in	nmod								IN	prep	13
15	people	people		nn	pl								NNS	pobj	14
16	mentioned	mention		vbmain	vblex	past	simple	active					VBD	ROOT	16
17	that	that		comp	comp_that								IN	mark	22
18	it	it		pro	3rd	sg							PRP	dep	22
19	,	,											,	punct	22
20	it	it		pro	3rd	sg							PRP	nsubj	22
21	might	might		vbaux	mod	pos							MD	aux	22
22	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	16
23	easier	easy		jj	pred								JJR	acomp	22
24	to	to		to									TO	aux	26
25	to	to		to									TO	aux	26
26	speak	speak	xtrapos+tocls+jcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	22
27	up	up		rb	prtcle								RP	prt	26
28	,	,											,	punct	26
29	in	in	in+advl	in	advl								IN	prep	26
30	the	the		dt	art								DT	det	33
31	whole	whole	attr+npremod	jj	attr								JJ	amod	33
32	class	class	nn+npremod	nn			npremod						NN	compound	33
33	setting	setting		nn		nom							NN	pobj	29
34	if	if		cs	cnd								IN	mark	38
35	we	we		pro	1st								PRP	nsubj	38
36	actually	actually	rb+advl	rb	advl	ly							RB	advmod	38
37	m-	m-											XX	punct	38
38	moved	move	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	22
39	closer	close	rb+jjrbmod	rb	othr								RBR	advmod	40
40	together	together	rb+advl	rb	advl								RB	advmod	38
41	.	.											.	punct	16

#sentid = 10
0	i	i		pro	1st	sg							PRP	nsubj	3
1	was	be		vbaux									VBD	aux	3
2	just	just	rb+advl	rb	advl		splaux						RB	advmod	3
3	wondering	wonder		vbmain	vblex	past	prog	active					VBG	ROOT	3
4	if	if		cs	cnd								IN	mark	18
5	,	,											,	punct	18
6	um	um											UH	intj	18
7	if	if		cs	cnd								IN	mark	10
8	people	people		nn	pl								NNS	nsubj	10
9	,	,											,	punct	10
10	thought	think	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	18
11	that	that		pro	dem	sg							DT	nsubj	12
12	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	10
13	a	a		dt	art								DT	det	15
14	good	good	attr+npremod	jj	attr								JJ	amod	15
15	idea	idea		nn									NN	attr	12
16	,	,											,	punct	18
17	we	we		pro	1st								PRP	nsubj	18
18	have	have		vbmain	vblex	pres	simple	active	compcls		conditional	compdel	VBP	ccomp	3
19	some	some		dt									DT	det	21
20	definite	definite	attr+npremod	jj	attr								JJ	amod	21
21	nos	no		nn	pl								NNS	dobj	18
22	.	.											.	punct	3

#sentid = 11
0	how	how		rb	othr								WRB	advmod	1
1	about	about											IN	dep	17
2	a	a		dt	art								DT	det	1
3	,	,											,	punct	5
4	how	how		rb	othr								WRB	advmod	5
5	about	about											IN	dep	17
6	a	a		dt	art								DT	det	7
7	show	show		nn									NN	pobj	5
8	of	of	of+npostmod	in	nmod								IN	prep	7
9	hands	hand		nn	pl								NNS	pobj	8
10	,	,											,	punct	5
11	um	um											UH	intj	5
12	,	,											,	punct	17
13	how	how	rb+jjrbmod	rb	adjmod								WRB	advmod	14
14	many	many	attr+npremod	jj	attr								JJ	amod	15
15	people	people		nn	pl								NNS	nsubj	17
16	would	would		vbaux	mod	prd							MD	aux	17
17	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	17
18	against	against	in+advl	in	advl								IN	prep	17
19	moving	move	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	18
20	,	,											,	punct	19
21	yeah	yeah											UH	intj	19
22	,	,											,	punct	19
23	closer	close		rb	othr								RBR	advmod	24
24	up	up	rb+advl	rb	advl								IN	advmod	19
25	to	to		in	in_othr								IN	prep	24
26	the	the		dt	art								DT	det	27
27	front	front		nn									NN	pobj	25
28	?	?											.	punct	17

#sentid = 12
0	couple	couple		nn									NN	ROOT	0
1	,	,											,	punct	0
2	a-	a-		nn									NN	conj	0
3	any	any		dt									DT	det	4
4	people	people		nn	pl								NNS	conj	0
5	,	,											,	punct	0
6	and	and		cc	phrs								CC	cc	0
7	how	how	rb+jjrbmod	rb	othr								WRB	advmod	8
8	many	many											JJ	dep	13
9	_	_											:	punct	13
10	you	you		pro	2nd	sg							PRP	nsubj	11
11	wanna	wanna		vbmain	vblex	pres	simple	active					VBP	parataxis	13
12	,	,											,	punct	13
13	wanna	wanna		vbmain	vblex	nonfinite	simple	active					VB	conj	0
14	try	try		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	13
15	that	that		pro	dem	sg							DT	dobj	14
16	again	again	rb+advl	rb	advl								RB	advmod	14
17	?	?											.	punct	14

#sentid = 13
0													_SP	dep	0
1	like	like											UH	intj	2
2	three	three											CD	appos	0
3	,	,											,	punct	2
4													_SP	dep	5
5	nos	nos	appos+npostmod	nn	pl	proper	nappos						NNPS	appos	2
6													_SP	dep	7
7	nos	no	appos+npostmod	nn	pl		nappos						NNS	appos	2
8	,	,											,	punct	7
9	yeah	yeah											UH	intj	7
10	.	.											.	punct	2

#sentid = 14
0													_SP	dep	1
1	everybody	everybody		nn									NN	ROOT	1
2	in	in	in+npostmod	in	nmod								IN	prep	1
3	the	the		dt	art								DT	det	4
4	class	class		nn									NN	pobj	2
5													_SP	dep	1
6	okay	okay											UH	intj	9
7	,	,											,	punct	9
8	what	what											WP	dep	9
9	about	about	in+npostmod	in	nmod								IN	prep	1
10	yeses	yes		nn	pl	nom							NNS	pobj	9
11	?	?											.	punct	9

#sentid = 15
0													_SP	dep	0

#sentid = 16
0	nos	nos		nn	pl	proper							NNPS	ROOT	0

#sentid = 17
0	(	(											-LRB-	ROOT	0

#sentid = 18
0	xx	xx											XX	ROOT	0
1	)	)											-RRB-	punct	0

#sentid = 19
0													_SP	dep	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	know	know		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	there	there											EX	expl	4
4	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	2
5	some	some		dt									DT	det	6
6	yeses	yes		nn	pl	nom							NNS	attr	4
7	out	out	rb+jjrbmod	rb	othr								RB	advmod	8
8	there	there	rb+advl	rb	advl								RB	advmod	4
9	.	.											.	punct	2

#sentid = 20
0	you	you		pro	2nd	sg							PRP	nsubj	3
1	do	do		vbaux									VBP	aux	3
2	n't	not											RB	neg	3
3	have	have		vbmain	vblex	pres	simple	active					VB	ROOT	3
4	to	to		to									TO	aux	5
5	be	be		vbmain	be	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	3
6	shy	shy		jj	pred								JJ	acomp	5
7	.	.											.	punct	3

#sentid = 21
0													_SP	dep	9
1	okay	okay											UH	intj	9
2	well	well											UH	intj	4
3	we	we		pro	1st								PRP	nsubj	4
4	have	have		vbaux									VBP	aux	9
5	,	,											,	punct	6
6	looks	look		vbmain	prepv	pres	simple	active					VBZ	dep	9
7	like	like		cs	cs_othr								IN	mark	9
8	we	we		pro	1st								PRP	nsubj	9
9	have	have		vbmain	vblex	pres	perf	active			other_advl		VBP	ROOT	9
10	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	11
11	of	of		rb	othr								RB	advmod	17
12	a	a		dt	art								DT	det	17
13	,	,											,	punct	17
14	um	um											UH	intj	15
15	a	a		dt	art								DT	det	17
16	sticking	sticking	nn+npremod	nn		nom	npremod						NN	compound	17
17	point	point		nn									NN	dobj	9
18	.	.											.	punct	9

#sentid = 22
0	people	people		nn	pl								NNS	nsubj	12
1	who	who		relpro	relpro_wh								WP	nsubj	2
2	want	want	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	0
3	to	to		to									TO	aux	4
4	say	say		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	2
5	yes	yes											UH	intj	4
6	are	be		vbaux									VBP	aux	12
7	n't	not											RB	neg	6
8	are	be		vbaux									VBP	aux	12
9	n't	not											RB	neg	12
10	uh	uh											UH	intj	12
11	,	,											,	punct	12
12	speaking	speak		vbmain	phrsv	pres	prog	active					VBG	ROOT	12
13	out	out		rb	prtcle								RP	prt	12
14	in	in	in+advl	in	advl								IN	prep	12
15	favor	favor		nn		nom							NN	pobj	14
16	of	of	of+npostmod	in	nmod								IN	prep	15
17	it	it		pro	3rd	sg							PRP	pobj	16
18	.	.											.	punct	12

#sentid = 23
0	so	so		rb	othr								RB	advmod	4
1	,	,											,	punct	4
2	we	we		pro	1st								PRP	nsubj	4
3	're	be		vbaux									VBP	aux	4
4	gon	go											TO	ROOT	4
5	na	to		vbaux									TO	aux	6
6	stay	stay		vbmain	vblex	nonfinite	simple	active	compcls			compdel	VB	xcomp	4
7	in	in	in+advl	in	advl								IN	prep	6
8	this	this		dt	dt_dem								DT	det	9
9	format	format		nn									NN	pobj	7
10	for	for	in+advl	in	advl								IN	prep	6
11	the	the											DT	pobj	10
12	,	,											,	punct	10
13	for	for		in	in_othr								IN	prep	10
14	the	the		dt	art								DT	det	15
15	time	time		nn									NN	pobj	13
16	being	be	ingcls+rel	vbmain	be	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	15
17	.	.											.	punct	6

#sentid = 24
0	uh	uh											UH	intj	3
1	i	i		pro	1st	sg							PRP	nsubj	3
2	might	might		vbaux	mod	pos							MD	aux	3
3	try	try		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	3
4	and	and		cc	phrs								CC	cc	3
5	force	force		vbmain	vblex	nonfinite	simple	active					VB	conj	3
6	you	you		pro	2nd	sg							PRP	dobj	5
7	a	a		dt	art								DT	det	9
8	little	little	attr+npremod	jj	attr								JJ	amod	9
9	bit	bit		nn									NN	npadvmod	11
10	later	later	rb+jjrbmod	rb	othr								RB	advmod	11
11	on	on	rb+advl	rb	advl								RB	advmod	5
12	.	.											.	punct	3

#sentid = 25
0	um	um											UH	intj	10
1	,	,											,	punct	10
2	uh	uh											UH	intj	6
3	another	another		dt									DT	det	6
4	,	,											,	punct	6
5	another	another		dt									DT	det	6
6	thing	thing		nn		nom							NN	nsubj	10
7	that	that		relpro	relpro_that	sg							WDT	nsubj	8
8	came	come	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls	thatcls	rel		VBD	relcl	6
9	out	out	rb+advl	rb	advl								RB	advmod	8
10	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	10
11	a	a		dt	art								DT	det	12
12	lot	lot		nn									NN	nsubj	16
13	of	of	of+npostmod	in	nmod								IN	prep	12
14	people	people		nn	pl								NNS	pobj	13
15	have	have		vbaux									VBP	aux	16
16	said	say	thatcls+vcomp	vbmain	vblex	pres	perf	active	compcls		vcomp	compdel	VBN	ccomp	10
17	they	they		pro	pl								PRP	nsubj	18
18	appreciated	appreciate	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	16
19	having	have	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	18
20	a	a		dt	art								DT	det	21
21	summary	summary		nn		nom							NN	dobj	19
22	of	of	of+npostmod	in	nmod								IN	prep	21
23	the	the		dt	art								DT	det	24
24	lecture	lecture		nn		nom							NN	pobj	22
25	,	,											,	punct	19
26	uh	uh											UH	intj	19
27	at	at	in+advl	in	advl								IN	prep	19
28	the	the		dt	art								DT	det	29
29	begi-	begi-		nn									NN	pobj	27
30	of	of	of+npostmod	in	nmod								IN	prep	29
31	the	the		dt	art								DT	det	32
32	readings	reading		nn	pl	nom							NNS	pobj	30
33	,	,											,	punct	27
34	at	at	in+advl	in	advl								IN	prep	19
35	the	the		dt	art								DT	det	36
36	beginning	beginning		nn		nom							NN	pobj	34
37	of	of	of+npostmod	in	nmod								IN	prep	36
38	of	of		in	in_othr								IN	prep	37
39	class	class		nn									NN	pobj	38
40	,	,											,	punct	16
41	and	and		cc	cls								CC	cc	16
42	so	so		cc	cls								CC	cc	16
43	i	i		pro	1st	sg							PRP	nsubj	45
44	'm	be		vbaux									VBP	aux	45
45	gon	go											TO	conj	16
46	na	to											TO	ccomp	10
47	be	be		vbaux									VB	aux	48
48	trying	try	ingcls+vcomp	vbmain	vblex	nonfinite	prog	active	compcls	ingcls			VBG	xcomp	46
49	to	to		to									TO	aux	50
50	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	48
51	some	some		dt									DT	det	52
52	more	more											JJR	dobj	50
53	of	of	in+jcomp	in	jcomp								IN	prep	52
54	that	that		pro	dem	sg							DT	pobj	53
55	,	,											,	punct	50
56	make	make		vbmain	vblex	nonfinite	simple	active					VB	dep	50
57	sure	sure		jj	pred								JJ	acomp	56
58	that	that		comp	comp_that								IN	mark	60
59	we	we		pro	1st								PRP	nsubj	60
60	go	go	thatcls+jcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	jcomp		VBP	csubj	57
61	over	over	in+advl	in	advl								IN	prep	60
62	the	the		dt	art								DT	det	63
63	structure	structure		nn		nom							NN	pobj	61
64	of	of	of+npostmod	in	nmod								IN	prep	63
65	the	the		dt	art								DT	det	66
66	readings	reading		nn	pl	nom							NNS	pobj	64
67	for	for	in+advl	in	advl								IN	prep	60
68	you	you		pro	2nd	sg							PRP	pobj	67
69	.	.											.	punct	48
70	um	um											UH	intj	78
71	,	,											,	punct	78
72	and	and		cc	phrs								CC	cc	78
73	also	also	rb+advl	rb	advl								RB	advmod	78
74	,	,											,	punct	78
75	maybe	maybe	rb+advl	rb	advl								RB	advmod	78
76	i	i		pro	1st	sg							PRP	nsubj	78
77	should	should		vbaux	mod	nec							MD	aux	78
78	emphasize	emphasize		vbmain	vblex	vp_w_modal	simple	active					VB	conj	10
79	you	you		pro	2nd	sg							PRP	nsubj	81
80	should	should		vbaux	mod	nec							MD	aux	81
81	try	try	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	78
82	and	and		cc	phrs								CC	cc	81
83	interrupt	interrupt		vbmain	vblex	nonfinite	simple	active					VB	conj	81
84	me	i		pro	1st	sg							PRP	dobj	83
85	,	,											,	punct	83
86	if	if		cs	cnd								IN	mark	88
87	you	you		pro	2nd	sg							PRP	nsubj	88
88	're	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBP	advcl	111
89	,	,											,	punct	88
90	i-	i-											XX	dep	88
91	during	during	in+advl	in	advl								IN	prep	111
92	the	the		dt	art								DT	det	93
93	lecture	lecture		nn		nom							NN	pobj	91
94	if	if		cs	cnd								IN	mark	96
95	you	you		pro	2nd	sg							PRP	nsubj	96
96	're	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBP	advcl	111
97	if	if		cs	cnd								IN	mark	99
98	you	you		pro	2nd	sg							PRP	nsubj	99
99	're	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBP	advcl	96
100	um	um											UH	intj	96
101	,	,											,	punct	111
102	if	if		cs	cnd								IN	mark	104
103	there	there											EX	expl	104
104	're	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBP	advcl	111
105	some	some		dt									DT	det	106
106	points	point		nn	pl								NNS	attr	104
107	of	of	of+npostmod	in	nmod								IN	prep	106
108	unclarity	unclarity		nn		nom							NN	pobj	107
109	,	,											,	punct	111
110	just	just	rb+advl	rb	advl								RB	advmod	111
111	jump	jump		vbmain	vblex	nonfinite	simple	active					VB	conj	83
112	in	in	rb+advl	rb	advl								RB	advmod	111
113	an-	an-		cc	phrs								CC	cc	111
114	and	and		cc	phrs								CC	cc	111
115	you	you		pro	2nd	sg							PRP	nsubj	116
116	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	117
117	yell	yell		vbmain	vblex	nonfinite	simple	active					VB	conj	111
118	,	,											,	punct	117
119	and	and		cc	phrs								CC	cc	117
120	let	let		vbmain	vblex	nonfinite	simple	active					VB	conj	117
121	me	i		pro	1st	sg							PRP	nsubj	122
122	know	know		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	120
123	.	.											.	punct	10

#sentid = 26
0	um	um											UH	intj	14
1	,	,											,	punct	14
2	other	other	attr+npremod	jj	attr								JJ	amod	5
3	,	,											,	punct	5
4	other	other	attr+npremod	jj	attr								JJ	amod	5
5	points	point		nn	pl								NNS	npadvmod	14
6	,	,											,	punct	14
7	um	um											UH	intj	14
8	,	,		in	in_othr								,	prep	7
9	as	as	in+advl	in	advl								IN	prep	14
10	for	for		in	in_othr								IN	prep	9
11	the	the		dt	art								DT	det	12
12	readings	reading		nn	pl	nom							NNS	pobj	10
13	there	there											EX	expl	14
14	was	be		vbmain	be	past	simple	active					VBD	ROOT	14
15	a	a		dt	art								DT	det	16
16	lot	lot		nn									NN	attr	14
17	of	of	of+npostmod	in	nmod								IN	prep	16
18	variation	variation		nn		nom							NN	pobj	17
19	.	.											.	punct	14

#sentid = 27
0	there	there											EX	expl	1
1	were	be		vbmain	be	past	simple	active					VBD	ROOT	1
2	some	some		dt									DT	det	3
3	people	people		nn	pl								NNS	attr	1
4	f-	f-											XX	dep	5
5	speaking	speak	ingcls+rel	vbmain	phrsv	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	3
6	out	out		rb	prtcle								RP	prt	5
7	in	in	in+advl	in	advl								IN	prep	5
8	favor	favor		nn		nom							NN	pobj	7
9	of	of	of+npostmod	in	nmod								IN	prep	8
10	just	just		rb	othr								RB	advmod	12
11	about	about		rb	othr								RB	advmod	12
12	everything	everything		nn	other	nom							NN	pobj	9
13	.	.											.	punct	1

#sentid = 28
0	um	um											UH	intj	4
1	,	,											,	punct	4
2	some	some		dt									DT	det	3
3	people	people		nn	pl								NNS	nsubj	4
4	wanted	want		vbmain	vblex	past	simple	active					VBD	ROOT	4
5	less	less											JJR	dobj	4
6	of	of	in+jcomp	in	jcomp								IN	prep	5
7	the	the		dt	art								DT	det	9
8	historical	historical	attr+npremod	jj	attr								JJ	amod	9
9	stuff	stuff		nn									NN	pobj	6
10	and	and		cc	phrs								CC	cc	5
11	more	more	rb+jjrbmod	rb	adjmod								JJR	advmod	12
12	modern	modern	attr+npremod	jj	attr								JJ	amod	13
13	stuff	stuff		nn									NN	conj	5
14	and	and		cc	cls								CC	cc	4
15	some	some		dt									DT	det	16
16	people	people		nn	pl								NNS	nsubj	17
17	wanted	want		vbmain	vblex	past	simple	active					VBD	conj	4
18	the	the		dt	art								DT	det	19
19	reverse	reverse		nn									NN	dobj	17
20	,	,											,	punct	17
21	but	but		cc	phrs								CC	cc	17
22	overall	overall	rb+advl	rb	advl								RB	advmod	24
23	there	there											EX	expl	24
24	was	be		vbmain	be	past	simple	active					VBD	conj	17
25	a	a		dt	art								DT	det	28
26	pretty	pretty	rb+jjrbmod	rb	adjmod								RB	advmod	27
27	good	good	attr+npremod	jj	attr								JJ	amod	28
28	spread	spread		nn									NN	attr	24
29	for	for	in+npostmod	in	nmod								IN	prep	28
30	uh	uh											UH	intj	29
31	what	what		comp	comp_wh								WP	dobj	33
32	people	people		nn	pl								NNS	nsubj	33
33	liked	like	whcls+incomp	vbmain	vblex	past	simple	active	compcls	whcls	incomp		VBD	pcomp	29
34	in	in	in+advl	in	advl								IN	prep	33
35	the	the		dt	art								DT	det	36
36	readings	reading		nn	pl	nom							NNS	pobj	34
37	.	.											.	punct	24

#sentid = 29
0	so	so		rb	link								RB	advmod	8
1	um	um											UH	intj	8
2	,	,											,	punct	8
3	um	um											UH	intj	8
4	and	and		cc	phrs								CC	cc	8
5	homework	homework		nn									NN	dep	8
6	most	most	attr+npremod	jj	attr								JJS	amod	7
7	people	people		nn	pl								NNS	nsubj	8
8	seemed	seem		vbmain	vblex	past	simple	active					VBD	ROOT	8
9	to	to		to									TO	aux	11
10	s-	s-											XX	dep	11
11	think	think		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	8
12	that	that		comp	comp_that								IN	mark	15
13	it	it		pro	3rd	sg							PRP	nsubj	15
14	was	be		vbaux									VBD	aux	15
15	helping	help	thatcls+vcomp	vbmain	vblex	past	prog	active	compcls	thatcls	vcomp		VBG	ccomp	11
16	a	a		dt	art								DT	det	17
17	bit	bit		nn									NN	npadvmod	15
18	.	.											.	punct	8

#sentid = 30
0	so	so		rb	link								RB	advmod	6
1	,	,											,	punct	6
2	i	i		pro	1st	sg							PRP	nsubj	3
3	th-	th-		vbmain	vblex	past	simple	active					VBD	dep	6
4	we	we		pro	1st								PRP	nsubj	6
5	'll	will		vbaux	mod								MD	aux	6
6	keep	keep		vbmain	phrsv	vp_w_modal	simple	active					VB	ROOT	6
7	on	on		rb	prtcle								RP	prt	6
8	with	with	in+advl	in	advl								IN	prep	6
9	that	that		pro	dem	sg							DT	pobj	8
10	.	.											.	punct	6

#sentid = 31
0	um	um											UH	intj	4
1	,	,											,	punct	4
2	we	we		pro	1st								PRP	nsubj	4
3	might	might		vbaux	mod	pos							MD	aux	4
4	try	try		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	4
5	and	and		cc	phrs								CC	cc	4
6	tone	tone		vbmain	phrsv	nonfinite	simple	active					VB	conj	4
7	down	down		rb	prtcle								RP	prt	6
8	the	the		dt	art								DT	det	10
9	the	the		dt	art								DT	det	10
10	number	number		nn		nom							NN	dobj	6
11	of	of	of+npostmod	in	nmod								IN	prep	10
12	questions	question		nn	pl	nom							NNS	pobj	11
13	for	for	in+advl	in	advl								IN	prep	6
14	,	,											,	punct	13
15	later	later	rb+jjrbmod	rb	othr								RB	advmod	16
16	on	on		rb	othr								RB	advmod	13
17	.	.											.	punct	4

#sentid = 32
0	so	so		rb	link								RB	advmod	12
1	but	but		cc	phrs								CC	cc	12
2	if	if		cs	cnd								IN	mark	4
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	12
5	more	more	attr+npremod	jj	attr								JJR	amod	6
6	suggestions	suggestion		nn	pl	nom							NNS	dobj	4
7	later	later	rb+jjrbmod	rb	othr								RB	advmod	8
8	on	on	rb+advl	rb	advl								RB	advmod	4
9	,	,											,	punct	12
10	please	please											UH	intj	12
11	do	do		vbaux									VB	aux	12
12	get	get		vbmain	phrsv	nonfinite	simple	active					VB	ROOT	12
13	back	back		rb	prtcle								RP	prt	12
14	to	to	in+advl	in	advl								IN	prep	12
15	me	i		pro	1st	sg							PRP	pobj	14
16	,	,											,	punct	12
17	okay	okay											UH	intj	12
18	?	?											.	punct	12

#sentid = 33
0	okay	okay											UH	intj	4
1	,	,											,	punct	4
2	um	um											UH	intj	4
3	i	i		pro	1st	sg							PRP	nsubj	4
4	wanted	want		vbmain	vblex	past	simple	active					VBD	ROOT	4
5	to	to		to									TO	aux	6
6	start	start		vbmain	phrsv	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	4
7	out	out		rb	prtcle								RP	prt	6
8	with	with	in+advl	in	advl								IN	prep	6
9	,	,											,	punct	8
10	just	just		rb	othr								RB	advmod	8
11	,	,											,	punct	8
12	outlining	outline	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	8
13	what	what											WP	attr	17
14	the	the		dt	art								DT	det	16
15	Dennett	dennett	nn+npremod	nn		proper	npremod						NNP	compound	16
16	reading	reading		nn		nom							NN	nsubj	17
17	was	be	whcls+vcomp	vbmain	be	past	simple	active	compcls	whcls	vcomp		VBD	ccomp	12
18	,	,											,	punct	17
19	the	the		dt	art								DT	det	20
20	structure	structure		nn		nom							NN	attr	17
21	of	of	of+npostmod	in	nmod								IN	prep	20
22	the	the		dt	art								DT	det	24
23	Dennett	dennett	nn+npremod	nn		proper	npremod						NNP	compound	24
24	reading	reading		nn		nom							NN	pobj	21
25	for	for	in+npostmod	in	nmod								IN	prep	20
26	you	you		pro	2nd	sg							PRP	pobj	25
27	,	,											,	punct	4
28	and	and		cc	phrs								CC	cc	4
29	then	then		rb	othr								RB	advmod	32
30	we	we		pro	1st								PRP	nsubj	32
31	're	be		vbaux									VBP	aux	32
32	gon	go		vbaux									TO	aux	35
33	na	to		vbaux									TO	aux	35
34	,	,											,	punct	35
35	break	break		vbmain	vblex	nonfinite	simple	active					VB	conj	4
36	u-	u-											PRP	dobj	35
37	break	break		nn									NN	dobj	35
38	down	down		rb	prtcle								RP	prt	37
39	into	into	in+advl	in	advl								IN	prep	35
40	small	small	attr+npremod	jj	attr								JJ	amod	41
41	groups	group		nn	pl								NNS	pobj	39
42	and	and		cc	phrs								CC	cc	35
43	discuss	discuss		vbmain	vblex	nonfinite	simple	active					VB	conj	35
44	it	it		pro	3rd	sg							PRP	dobj	43
45	in	in	in+advl	in	advl								IN	prep	43
46	the	the		dt	art								DT	det	48
47	second	second	attr+npremod	jj	attr								JJ	amod	48
48	half	half		nn									NN	pobj	45
49	of	of	of+npostmod	in	nmod								IN	prep	48
50	the	the		dt	art								DT	det	51
51	class	class		nn									NN	pobj	49
52	.	.											.	punct	35

#sentid = 34
0	so	so		rb	link								RB	advmod	20
1													_SP	dep	20
2	so	so		rb	link								RB	advmod	20
3	Dennett	dennett		nn		proper							NNP	npadvmod	20
4	,	,											,	punct	20
5	the	the		dt	art								DT	det	6
6	reason	reason		nn									NN	nsubj	20
7	i	i		pro	1st	sg							PRP	nsubj	9
8	was	be		vbaux									VBD	aux	9
9	giving	give	finitecls+rel	vbmain	vblex	past	prog	active	nmod_cls		rel	reldel	VBG	relcl	6
10	you	you		pro	2nd	sg							PRP	dative	9
11	this	this		dt	dt_dem								DT	det	18
12	this	this		dt	dt_dem								DT	det	18
13	particular	particular	attr+npremod	jj	attr								JJ	amod	18
14	um	um											UH	intj	18
15	,	,											,	punct	18
16	this	this		dt	dt_dem								DT	det	18
17	particular	particular	attr+npremod	jj	attr								JJ	amod	18
18	reading	reading		nn		nom							NN	dobj	9
19	now	now	rb+advl	rb	advl								RB	advmod	9
20	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	20
21	it	it		pro	3rd	sg							PRP	nsubj	22
22	gives	give	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	20
23	us	we		pro	pl								PRP	dative	22
24	a	a		dt	art								DT	det	25
25	way	way		nn									NN	dobj	22
26	of	of	of+npostmod	in	nmod								IN	prep	25
27	summing	sum	ingcls+incomp	vbmain	phrsv	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	26
28	up	up		rb	prtcle								RP	prt	27
29	some	some											DT	dobj	27
30	of	of		in	in_othr								IN	prep	29
31	the	the		dt	art								DT	det	32
32	issues	issue		nn	pl								NNS	pobj	30
33	that	that		pro	dem	sg							WDT	pobj	38
34	we	we		pro	1st								PRP	nsubj	37
35	've	've		vbaux									VBP	aux	37
36	been	be		vbaux									VBN	aux	37
37	talking	talk	finitecls+rel	vbmain	prepv	pres	prog	active	nmod_cls		rel	reldel	VBG	relcl	32
38	about	about	in+advl	in	advl								IN	prep	37
39	in	in	in+advl	in	advl								IN	prep	37
40	the	the		dt	art								DT	det	43
41	past	past	attr+npremod	jj	attr								JJ	amod	43
42	few	few	attr+npremod	jj	attr								JJ	amod	43
43	weeks	week		nn	pl								NNS	pobj	39
44	.	.											.	punct	20

#sentid = 35
0	um	um											UH	intj	2
1	,	,											,	punct	0
2	issues	issue		nn	pl								NNS	ROOT	2
3	about	about	in+npostmod	in	nmod								IN	prep	2
4	,	,											,	punct	3
5	um	um											UH	intj	3
6													_SP	dep	3
7	who	who											WP	dobj	9
8	i	i		pro	1st	sg							PRP	nsubj	9
9	am	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBP	advcl	16
10	at	at	in+advl	in	advl								IN	prep	9
11	a	a		dt	art								DT	det	13
12	particular	particular	attr+npremod	jj	attr								JJ	amod	13
13	time	time		nn									NN	pobj	10
14	,	,											,	punct	16
15	what	what											WP	nsubj	16
16	makes	make	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VBZ	pcomp	3
17	me	i		pro	1st	sg							PRP	nsubj	19
18	the	the		dt	art								DT	det	19
19	person	person		nn									NN	ccomp	16
20	that	that											WDT	dep	23
21	th-	th-											DT	nmod	23
22	particular	particular	attr+npremod	jj	attr								JJ	amod	23
23	person	person		nn									NN	attr	25
24	i	i		pro	1st	sg							PRP	nsubj	25
25	am	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	19
26	at	at	in+advl	in	advl								IN	prep	25
27	a	a		dt	art								DT	det	28
28	time	time		nn									NN	pobj	26
29	,	,											,	punct	3
30	which	which											WDT	dobj	33
31	we	we		pro	1st								PRP	nsubj	33
32	're	be		vbaux									VBP	aux	33
33	discussing	discuss	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel		VBG	relcl	2
34	under	under	in+advl	in	advl								IN	prep	33
35	the	the											DT	pobj	34
36	under	under		in	in_othr								IN	prep	35
37	the	the		dt	art								DT	det	38
38	heading	heading		nn		nom							NN	pobj	36
39	of	of	of+npostmod	in	nmod								IN	prep	38
40	,	,											,	punct	39
41	the	the		dt	art								DT	det	42
42	unity	unity		nn		nom							NN	pobj	39
43	of	of	of+npostmod	in	nmod								IN	prep	42
44	consciousness	consciousness		nn		nom							NN	pobj	43
45	.	.											.	punct	2

#sentid = 36
0													_SP	dep	27
1	so	so		rb	link								RB	advmod	17
2	we	we		pro	1st								PRP	nsubj	17
3	were	be		vbaux									VBD	aux	4
4													_SP	dep	17
5	so	so		rb	link								RB	advmod	17
6	,	,											,	punct	17
7	uh	uh											UH	intj	17
8	on	on	in+advl	in	advl								IN	prep	17
9	the	the		dt	art								DT	det	13
10	unity	unity	nn+npremod	nn		nom	npremod						NN	nmod	13
11	of	of	of+npostmod	in	nmod								IN	prep	10
12	consciousness	consciousness		nn		nom							NN	pobj	11
13	readings	reading		nn	pl	nom							NNS	pobj	8
14	we	we		pro	1st								PRP	nsubj	17
15	were	be		vbaux									VBD	aux	17
16	,	,											,	punct	17
17	talking	talk		vbmain	prepv	past	prog	active	compcls		vcomp	compdel	VBG	ccomp	27
18	about	about	in+advl	in	advl								IN	prep	17
19	Descartes	descartes		nn		proper	npremod						NNP	compound	20
20	Hume	hume		nn		proper							NNP	pobj	18
21	and	and		cc	phrs								CC	cc	20
22	Nagel	nagel		nn		proper							NNP	conj	20
23	,	,											,	punct	27
24	um	um											UH	intj	27
25	this	this		pro	dem	sg							DT	nsubj	27
26	also	also	rb+advl	rb	advl								RB	advmod	27
27	brings	bring		vbmain	vblex	pres	simple	active					VBZ	ROOT	27
28	together	together	rb+advl	rb	advl								RB	advmod	27
29	a	a		dt	art								DT	det	30
30	question	question		nn		nom							NN	dobj	27
31	about	about	in+npostmod	in	nmod								IN	prep	30
32	who	who											WP	attr	34
33	i	i		pro	1st	sg							PRP	nsubj	34
34	am	be	whcls+incomp	vbmain	be	pres	simple	active	compcls	whcls	incomp		VBP	pcomp	31
35	through	through	in+advl	in	advl								IN	prep	34
36	time	time		nn									NN	pobj	35
37	...	...											:	punct	35
38	or	or		cc									CC	cc	35
39	over	over											IN	conj	35
40	time	time		nn									NN	pobj	39
41													_SP	dep	30
42	which	which											WDT	dobj	46
43	we	we		pro	1st								PRP	nsubj	46
44	've	've		vbaux									VBP	aux	46
45	been	be		vbaux									VBN	aux	46
46	discussing	discuss	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel		VBG	relcl	30
47	under	under	in+advl	in	advl								IN	prep	46
48	the	the		dt	art								DT	det	49
49	rubric	rubric		nn									NN	pobj	47
50	of	of	of+npostmod	in	nmod								IN	prep	49
51	personal	personal	attr+npremod	jj	attr								JJ	amod	52
52	identity	identity		nn		nom							NN	pobj	50
53	.	.											.	punct	27

#sentid = 37
0	and	and		cc	cls								CC	cc	2
1	they	they		pro	pl								PRP	nsubj	2
2	're	be		vbmain	be	pres	simple	active					VBP	ROOT	2
3	uh	uh											UH	intj	2
4	,	,											,	punct	2
5	the	the		dt	art								DT	det	7
6	the	the		dt	art								DT	det	7
7	people	people		nn	pl								NNS	attr	2
8	that	that		pro	dem	sg							WDT	pobj	13
9	we	we		pro	1st								PRP	nsubj	12
10	've	've		vbaux									VBP	aux	12
11	been	be		vbaux									VBN	aux	12
12	looking	look	finitecls+rel	vbmain	prepv	pres	prog	active	nmod_cls		rel	reldel	VBG	relcl	7
13	at	at	in+advl	in	advl								IN	prep	12
14	are	be		vbmain	be	pres	simple	active					VBP	dep	2
15	Nagel	nagel		nn		proper							NNP	attr	14
16	,	,											,	punct	15
17	uh	uh											UH	intj	15
18	sorry	sorry											UH	intj	15
19	,	,											,	punct	15
20	Perry	perry		nn		proper	npremod						NNP	compound	23
21													_SP	dep	23
22	Perry	perry		nn		proper	npremod						NNP	compound	23
23	Williams	williams		nn		proper							NNP	conj	15
24	and	and		cc	phrs								CC	cc	23
25	um	um											UH	conj	23
26	,	,											,	punct	25
27	um	um											UH	intj	25
28	,	,											,	punct	25
29	Parfit	parfit		nn		proper							NNP	conj	25
30	.	.											.	punct	2

#sentid = 38
0	right	right											UH	ROOT	0
1	...	...											:	punct	0

#sentid = 39
0	and	and		cc	cls								CC	cc	5
1	,	,											,	punct	5
2	both	both											DT	nsubj	5
3	of	of		in	in_othr								IN	prep	2
4	these	these		pro	dem	pl							DT	pobj	3
5	are	be		vbmain	be	pres	simple	active					VBP	ROOT	5
6													_SP	dep	5
7	whoops	whoops											UH	intj	9
8	,	,											,	punct	9
9	excuse	excuse		vbmain	vblex	nonfinite	simple	active					VB	meta	6
10	me	i		pro	1st	sg							PRP	dobj	9
11	,	,											,	punct	9
12													_SP	dep	5
13	sorry	sorry											UH	intj	5
14													_SP	dep	5
15	uh	uh											UH	intj	23
16	,	,											,	punct	23
17	both	both											DT	nsubjpass	23
18	of	of		in	in_othr								IN	prep	17
19	these	these		pro	dem	pl							DT	pobj	18
20	,	,											,	punct	23
21	are	be		vbaux									VBP	aux	23
22	being	be		vbaux									VBG	auxpass	23
23	picked	pick		vbmain	phrsv	pres	simple	pasv_by					VBN	meta	5
24	up	up		rb	prtcle								RP	prt	23
25	by	by											IN	agent	23
26	,	,											,	punct	25
27	um	um											UH	intj	25
28	,	,											,	punct	25
29	both	both											DT	nsubjpass	35
30	of	of		in	in_othr								IN	prep	29
31	these	these		dt	dt_dem								DT	det	32
32	things	thing		nn	pl	nom							NNS	pobj	30
33	are	be		vbaux									VBP	aux	35
34	being	be		vbaux									VBG	auxpass	35
35	picked	pick	thatcls+vcomp	vbmain	phrsv	pres	simple	pasv_by	compcls		vcomp	compdel	VBN	ccomp	5
36	up	up		rb	prtcle								RP	prt	35
37	by	by											IN	agent	35
38	Dennett	dennett		nn		proper							NNP	pobj	37
39	,	,											,	punct	38
40	who	who		relpro	relpro_wh								WP	nsubj	42
41	's	be		vbaux									VBZ	aux	42
42	asking	ask	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls	whcls	rel		VBG	relcl	38
43	the	the		dt	art								DT	det	44
44	question	question		nn		nom							NN	dobj	42
45	,	,											,	punct	44
46	who	who		relpro	relpro_wh								WP	attr	47
47	am	be		vbmain	be	pres	simple	active	nmod_cls	whcls	ncomp		VBP	acl	44
48	i	i		pro	1st	sg							PRP	nsubj	47
49	?	?											.	punct	35

#sentid = 40
0	and	and		cc	cls								CC	cc	8
1	he	he		pro	3rd	sg							PRP	nsubj	2
2	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	8
3	he	he		pro	3rd	sg							PRP	nsubj	4
4	's	be		vbmain	be	pres	simple	active					VBZ	meta	8
5	uni-	uni-		jj	pred								XX	acomp	4
6	he	he		pro	3rd	sg							PRP	nsubj	8
7	's	be		vbaux									VBZ	aux	8
8	talking	talk		vbmain	vblex	pres	prog	active					VBG	ROOT	8
9	both	both											DT	preconj	10
10	about	about	in+advl	in	advl								IN	prep	8
11	who	who											WP	attr	13
12	you	you		pro	2nd	sg							PRP	nsubj	13
13	are	be		vbmain	be	pres	simple	active					VBP	pobj	10
14	at	at	in+advl	in	advl								IN	prep	13
15	a	a		dt	art								DT	det	17
16	particular	particular	attr+npremod	jj	attr								JJ	amod	17
17	time	time		nn									NN	pobj	14
18	,	,											,	punct	13
19	and	and		cc	cls								CC	cc	13
20	who	who											WP	pobj	23
21	you	you		pro	2nd	sg							PRP	nsubj	22
22	are	be		vbmain	be	pres	simple	active					VBP	conj	13
23	through	through	in+advl	in	advl								IN	prep	22
24	time	time		nn									NN	pobj	23
25	in	in	in+advl	in	advl								IN	prep	22
26	his	his		dt	poss	sg							PRP$	poss	27
27	examples	example		nn	pl								NNS	pobj	25
28	.	.											.	punct	8

#sentid = 41
0	and	and		cc	cls								CC	cc	35
1	,	,											,	punct	35
2	just	just	rb+advl	rb	advl								RB	advmod	4
3	to	to		to									TO	aux	4
4	give	give	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	35
5	us	we		pro	pl								PRP	dative	4
6	a	a											DT	dobj	4
7	,	,											,	punct	35
8	just	just	rb+advl	rb	advl								RB	advmod	10
9	to	to		to									TO	aux	10
10	remind	remind	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	35
11	you	you		pro	2nd	sg							PRP	dobj	10
12	the	the		dt	art								DT	det	14
13	various	various	attr+npremod	jj	attr								JJ	amod	14
14	kinds	kind		nn	pl								NNS	nsubj	35
15	of	of	of+npostmod	in	nmod								IN	prep	14
16	theory	theory		nn		nom							NN	pobj	15
17	that	that		pro	dem	sg							WDT	pobj	22
18	we	we		pro	1st								PRP	nsubj	21
19	've	've		vbaux									VBP	aux	21
20	been	be		vbaux									VBN	aux	21
21	looking	look	finitecls+rel	vbmain	prepv	pres	prog	active	nmod_cls		rel	reldel	VBG	relcl	14
22	at	at	in+advl	in	advl								IN	prep	21
23	here	here	rb+advl	rb	advl								RB	advmod	21
24	,	,											,	punct	14
25	both	both		rb	othr								CC	advmod	26
26	for	for	in+npostmod	in	nmod								IN	prep	14
27	the	the		dt	art								DT	det	28
28	unity	unity		nn		nom							NN	pobj	26
29	of	of	of+npostmod	in	nmod								IN	prep	28
30	consciousness	consciousness		nn		nom							NN	pobj	29
31	and	and		cc	phrs								CC	cc	28
32	personal	personal	attr+npremod	jj	attr								JJ	amod	33
33	identity	identity		nn		nom							NN	conj	28
34	,	,											,	punct	14
35	have	have		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	48
36	some	some		dt									DT	det	38
37	similar	similar	attr+npremod	jj	attr								JJ	amod	38
38	themes	theme		nn	pl								NNS	dobj	35
39	,	,											,	punct	48
40	um	um											UH	intj	48
41	,	,											,	punct	48
42	similar	similar	attr+npremod	jj	attr								JJ	amod	43
43	sorts	sort		nn	pl								NNS	nsubjpass	48
44	of	of	of+npostmod	in	nmod								IN	prep	43
45	theories	theory		nn	pl	nom							NNS	pobj	44
46	have	have		vbaux									VBP	aux	48
47	been	be		vbaux									VBN	auxpass	48
48	proposed	propose		vbmain	vblex	pres	perf	pasv_agls					VBN	ROOT	48
49	,	,											,	punct	48
50	so	so		cc	cls								CC	cc	48
51	,	,											,	punct	48
52	some	some		dt									DT	det	53
53	people	people		nn	pl								NNS	nsubj	55
54	have	have		vbaux									VBP	aux	55
55	thought	think		vbmain	vblex	pres	perf	active					VBN	conj	48
56	that	that		comp	comp_that								IN	mark	57
57	we	we		pro	1st								PRP	ccomp	55
58	a-	a-											XX	appos	57
59	what	what											WP	nsubj	60
60	explains	explain	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	78
61	who	who											WP	attr	63
62	you	you		pro	2nd	sg							PRP	nsubj	63
63	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	60
64	,	,											,	punct	78
65	what	what											WP	nsubj	66
66	makes	make		vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBZ	csubj	78
67	you	you		pro	2nd	sg							PRP	nsubj	70
68	the	the		dt	art								DT	det	70
69	particular	particular	attr+npremod	jj	attr								JJ	amod	70
70	individual	individual		nn		nom							NN	ccomp	66
71	that	that											WDT	attr	73
72	you	you		pro	2nd	sg							PRP	nsubj	73
73	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls		rel		VBP	relcl	70
74	at	at	in+advl	in	advl								IN	prep	73
75	a	a		dt	art								DT	det	77
76	particular	particular	attr+npremod	jj	attr								JJ	amod	77
77	time	time		nn									NN	pobj	74
78	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	55
79	that	that		comp	comp_that								IN	mark	81
80	you	you		pro	2nd	sg							PRP	nsubj	81
81	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	78
82	,	,											,	punct	81
83	a	a		dt	art								DT	det	86
84	distinctive	distinctive	attr+npremod	jj	attr								JJ	amod	86
85	immaterial	immaterial	attr+npremod	jj	attr								JJ	amod	86
86	soul	soul		nn									NN	dobj	81
87	,	,											,	punct	86
88	which	which		relpro	relpro_wh								WDT	nsubj	89
89	unifies	unify	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	86
90	your	your		dt	poss								PRP$	poss	91
91	consciousness	consciousness		nn		nom							NN	dobj	89
92	all	all											PDT	predet	95
93	your	your		dt	poss								PRP$	poss	95
94	conscious	conscious	attr+npremod	jj	attr								JJ	amod	95
95	experiences	experience	appos+npostmod	nn	pl	nom	nappos						NNS	appos	91
96	at	at	in+npostmod	in	nmod								IN	prep	95
97	a	a		dt	art								DT	det	98
98	time	time		nn									NN	pobj	96
99	and	and		cc	phrs								CC	cc	89
100	makes	make		vbmain	vblex	pres	simple	active					VBZ	conj	89
101	you	you		pro	2nd	sg							PRP	nsubj	104
102	the	the		dt	art								DT	det	104
103	very	very	attr+npremod	jj	attr								JJ	amod	104
104	person	person		nn									NN	ccomp	100
105	you	you		pro	2nd	sg							PRP	nsubj	106
106	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	104
107	from	from	in+advl	in	advl								IN	prep	106
108	the	the		dt	art								DT	det	110
109	m-	m-											XX	punct	110
110	moment	moment		nn		nom							NN	pobj	107
111	that	that		relpro	relpro_that								IN	mark	114
112	you	you		pro	2nd	sg							PRP	nsubjpass	114
113	are	be		vbaux									VBP	auxpass	114
114	born	bear	finitecls+rel	vbmain	vblex	pres	simple	pasv_agls	nmod_cls	thatcls	rel		VBN	relcl	110
115	to	to		in	in_othr								IN	prep	107
116	the	the		dt	art								DT	det	117
117	moment	moment		nn		nom							NN	pobj	115
118	that	that	rb+advl	rb	advl								WDT	advmod	122
119	you	you		pro	2nd	sg							PRP	nsubj	120
120	cease	cease	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	117
121	to	to		to									TO	aux	122
122	exist	exist	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	120
123	.	.											.	punct	55

#sentid = 42
0	um	um											UH	ROOT	0
1	...	...											:	punct	0

#sentid = 43
0	there	there											EX	expl	1
1	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	20
2	a	a		dt	art								DT	det	4
3	body	body	nn+npremod	nn			npremod						NN	compound	4
4	theory	theory		nn		nom							NN	attr	1
5	,	,											,	punct	4
6	and	and		cc	phrs								CC	cc	4
7	a	a		dt	art								DT	det	9
8	brain	brain	nn+npremod	nn			npremod						NN	compound	9
9	theory	theory		nn		nom							NN	conj	4
10	,	,											,	punct	1
11	what	what											WP	nsubj	12
12	makes	make		vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBZ	csubj	20
13	you	you		pro	2nd	sg							PRP	nsubj	16
14	the	the		dt	art								DT	det	16
15	very	very	attr+npremod	jj	attr								JJ	amod	16
16	person	person		nn									NN	ccomp	12
17	that	that											WDT	attr	19
18	you	you		pro	2nd	sg							PRP	nsubj	19
19	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls		rel		VBP	relcl	16
20	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	20
21	that	that		comp	comp_that								IN	mark	23
22	you	you		pro	2nd	sg							PRP	nsubj	23
23	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	20
24	this	this		dt	dt_dem								DT	det	27
25	particular	particular	attr+npremod	jj	attr								JJ	amod	27
26	ongoing	ongoing	attr+npremod	jj	attr								JJ	amod	27
27	body	body		nn									NN	dobj	23
28	,	,											,	punct	27
29	that	that		relpro	relpro_that	sg							WDT	nsubj	30
30	continues	continue	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	27
31	from	from	in+advl	in	advl								IN	prep	30
32	you-	you-											PRP	pobj	31
33	from	from	in+advl	in	advl								IN	prep	30
34	your	your		dt	poss								PRP$	poss	35
35	birth	birth		nn									NN	pobj	33
36	until	until		in	in_othr								IN	prep	33
37	your	your		dt	poss								PRP$	poss	38
38	death	death		nn									NN	pobj	36
39	,	,											,	punct	27
40	or	or		cc	phrs								CC	cc	27
41	this	this		dt	dt_dem								DT	det	43
42	particular	particular	attr+npremod	jj	attr								JJ	amod	43
43	brain	brain		nn									NN	conj	27
44	,	,											,	punct	27
45	um	um											UH	intj	27
46	and	and		cc	phrs								CC	cc	27
47	that	that		pro	dem	sg							DT	nsubj	49
48	might	might		vbaux	mod	pos							MD	aux	49
49	explain	explain		vbmain	vblex	vp_w_modal	simple	active					VB	conj	27
50	,	,											,	punct	49
51	and	and		cc	cls								CC	cc	49
52	particularly	particularly	rb+advl	rb	advl	ly							RB	advmod	56
53	the	the		dt	art								DT	det	54
54	brain	brain		nn									NN	nsubj	56
55	might	might		vbaux	mod	pos							MD	aux	56
56	explain	explain		vbmain	vblex	vp_w_modal	simple	active					VB	conj	49
57	the	the		dt	art								DT	det	58
58	unity	unity		nn		nom							NN	dobj	56
59	of	of	of+npostmod	in	nmod								IN	prep	58
60	your	your		dt	poss								PRP$	poss	61
61	consciousness	consciousness		nn		nom							NN	pobj	59
62	at	at	in+npostmod	in	nmod								IN	prep	58
63	a	a		dt	art								DT	det	65
64	particular	particular	attr+npremod	jj	attr								JJ	amod	65
65	time	time		nn									NN	pobj	62
66	,	,											,	punct	58
67	what	what		relpro	relpro_wh								WP	nsubj	68
68	makes	make	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	58
69	all	all											DT	nsubj	76
70	of	of		in	in_othr								IN	prep	69
71	your	your		dt	poss								PRP$	poss	73
72	f-	f-	attr+npremod	jj	attr								XX	amod	73
73	thoughts	thought		nn	pl								NNS	pobj	70
74	and	and		cc	phrs								CC	cc	73
75	feelings	feeling		nn	pl	nom							NNS	conj	73
76	belong	belong		vbmain	prepv	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	68
77	to	to	in+advl	in	advl								IN	prep	76
78	one	one											CD	nummod	80
79	particular	particular	attr+npremod	jj	attr								JJ	amod	80
80	person	person		nn									NN	pobj	77
81	.	.											.	punct	56

#sentid = 44
0	and	and		cc	cls								CC	cc	4
1	finally	finally		rb	link	ly							RB	advmod	4
2	um	um											UH	intj	4
3	there	there											EX	expl	4
4	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	,	,											,	punct	4
6	in	in	in+advl	in	advl								IN	prep	4
7	each	each											DT	pobj	6
8	of	of		in	in_othr								IN	prep	7
9	these	these		pro	dem	pl							DT	pobj	8
10	,	,											,	punct	4
11	each	each											DT	attr	4
12	of	of		in	in_othr								IN	prep	11
13	these	these		dt	dt_dem								DT	det	14
14	themes	theme		nn	pl								NNS	pobj	12
15	,	,											,	punct	4
16	(	(											-LRB-	punct	4
17	where	where		comp	comp_wh								WRB	advmod	20
18	)	)											-RRB-	punct	20
19	we	we		pro	1st								PRP	nsubj	20
20	looked	look	whcls+vcomp	vbmain	prepv	past	simple	active	compcls	whcls	vcomp		VBD	ccomp	4
21	at	at	in+advl	in	advl								IN	prep	20
22	one	one											CD	nummod	23
23	thinker	thinker		nn		nom							NN	pobj	21
24	who	who		relpro	relpro_wh								WP	nsubj	26
25	was	be		vbaux									VBD	aux	26
26	thinking	think	finitecls+rel	vbmain	vblex	past	prog	active	nmod_cls	whcls	rel		VBG	relcl	23
27	that	that		pro	dem	sg							IN	dobj	26
28	,	,											,	punct	26
29	claiming	claim	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	26
30	that	that		comp	comp_that								IN	mark	45
31	,	,											,	punct	45
32	what	what											WP	nsubj	33
33	unifies	unify		vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBZ	csubj	45
34	your	your		dt	poss								PRP$	poss	35
35	consciousness	consciousness		nn		nom							NN	dobj	33
36	in	in	in+advl	in	advl								IN	prep	33
37	,	,											,	punct	36
38	at	at		in	in_othr								IN	prep	36
39	a	a		dt	art								DT	det	40
40	time	time		nn									NN	pobj	38
41	and	and		cc									CC	cc	38
42	through	through											IN	conj	38
43	time	time		nn									NN	pobj	42
44	,	,											,	punct	36
45	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	29
46	not	not											RB	neg	45
47	any	any											DT	attr	45
48	of	of		in	in_othr								IN	prep	47
49	these	these		dt	dt_dem								DT	det	52
50	particular	particular	attr+npremod	jj	attr								JJ	amod	52
51	,	,											,	punct	52
52	items	item		nn	pl								NNS	pobj	48
53	these	these		dt	dt_dem								DT	det	55
54	particular	particular	attr+npremod	jj	attr								JJ	amod	55
55	objects	object	appos+npostmod	nn	pl		nappos						NNS	appos	52
56	,	,											,	punct	52
57	that	that		relpro	relpro_that								WDT	mark	59
58	that	that		relpro	relpro_that	sg							WDT	nsubj	59
59	last	last	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBP	relcl	52
60	through	through	in+advl	in	advl								IN	prep	59
61	time	time		nn									NN	pobj	60
62	,	,											,	punct	47
63	but	but		cc									CC	cc	47
64	rather	rather		rb	othr								RB	advmod	63
65	the	the		dt	art								DT	det	66
66	connections	connection		nn	pl	nom							NNS	conj	47
67	among	among	in+npostmod	in	nmod								IN	prep	66
68	your	your		dt	poss								PRP$	poss	69
69	thoughts	thought		nn	pl								NNS	pobj	67
70	and	and		cc	phrs								CC	cc	69
71	feelings	feeling		nn	pl	nom							NNS	conj	69
72	.	.											.	punct	4

#sentid = 45
0	so	so		rb	link								RB	advmod	20
1	,	,											,	punct	20
2	um	um											UH	intj	20
3	,	,											,	punct	20
4	basically	basically	rb+advl	rb	advl	ly							RB	advmod	20
5													_SP	dep	20
6	the	the		dt	art								DT	det	8
7	final	final	attr+npremod	jj	attr								JJ	amod	8
8	point	point		nn									NN	nsubj	20
9	,	,											,	punct	8
10	the	the		dt	art								DT	det	13
11	final	final	attr+npremod	jj	attr								JJ	amod	13
12	,	,											,	punct	13
13	theory	theory	appos+npostmod	nn		nom	nappos						NN	appos	8
14	that	that		pro	dem	sg							WDT	pobj	19
15	we	we		pro	1st								PRP	nsubj	18
16	've	've		vbaux									VBP	aux	18
17	been	be		vbaux									VBN	aux	18
18	looking	look	finitecls+rel	vbmain	prepv	pres	prog	active	nmod_cls		rel	reldel	VBG	relcl	13
19	at	at	in+advl	in	advl								IN	prep	18
20	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	20
21	that	that		comp	comp_that								IN	mark	33
22	you	you		pro	2nd	sg							PRP	dep	33
23	,	,											,	punct	33
24	what	what											WP	nsubj	25
25	makes	make		vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBZ	csubj	33
26	you	you		pro	2nd	sg							PRP	nsubj	29
27	the	the		dt	art								DT	det	29
28	very	very	attr+npremod	jj	attr								JJ	amod	29
29	person	person		nn									NN	ccomp	25
30	that	that											WDT	attr	32
31	you	you		pro	2nd	sg							PRP	nsubj	32
32	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls		rel		VBP	relcl	29
33	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	20
34	a	a		dt	art								DT	det	36
35	particular	particular	attr+npremod	jj	attr								JJ	amod	36
36	point	point		nn									NN	attr	33
37	of	of	of+npostmod	in	nmod								IN	prep	36
38	view	view		nn									NN	pobj	37
39	,	,											,	punct	36
40	that	that	rb+jjrbmod	rb	othr								RB	advmod	41
41	is	is	rb+advl	rb	advl								RB	advmod	43
42	,	,											,	punct	43
43	integrates	integrate		vbmain	vblex	pres	simple	active					VBZ	dep	33
44	various	various											JJ	dobj	43
45	of	of	in+jcomp	in	jcomp								IN	prep	44
46	your	your		dt	poss								PRP$	poss	47
47	thoughts	thought		nn	pl								NNS	pobj	45
48	and	and		cc	phrs								CC	cc	47
49	theor-	theor-		nn									NN	punct	50
50	feelings	feeling		nn	pl	nom							NNS	conj	47
51	with	with	in+advl	in	advl								IN	prep	43
52	each	each		dt									DT	det	53
53	other	other											JJ	pobj	51
54	.	.											.	punct	20

#sentid = 46
0	so	so		rb	link								RB	advmod	5
1	,	,											,	punct	5
2	for	for	in+advl	in	advl								IN	prep	5
3	instance	instance		nn		nom							NN	pobj	2
4	you	you		pro	2nd	sg							PRP	nsubj	5
5	remember	remember		vbmain	vblex	pres	simple	active					VBP	ROOT	5
6	Nagel	nagel		nn		proper							NNP	dobj	5
7	,	,											,	punct	5
8	that	that		pro	dem	sg							DT	nsubj	9
9	was	be		vbmain	in_othr	past	simple	active					VBD	prep	7
10	his	his		dt	poss	sg							PRP$	poss	11
11	view	view		nn									NN	attr	9
12	about	about	in+npostmod	in	nmod								IN	prep	11
13	what	what											WP	nsubj	14
14	makes	make		vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBZ	csubj	26
15	you	you		pro	2nd	sg							PRP	nsubj	20
16	the	the		dt	art								DT	det	20
17	very	very	rb+jjrbmod	rb	othr								RB	advmod	18
18	_	_											JJ	punct	20
19	one	one											CD	nummod	20
20	person	person		nn									NN	ccomp	14
21	at	at	in+npostmod	in	nmod								IN	prep	20
22	a	a		dt	art								DT	det	24
23	particular	particular	attr+npremod	jj	attr								JJ	amod	24
24	time	time		nn									NN	pobj	21
25	,	,											,	punct	26
26	is	be		vbmain	be	pres	simple	active	compcls		incomp	compdel	VBZ	pcomp	12
27	that	that		comp	comp_that								IN	mark	33
28	your	your		dt	poss								PRP$	poss	29
29	thoughts	thought		nn	pl								NNS	nsubjpass	33
30	and	and		cc	phrs								CC	cc	29
31	feelings	feeling		nn	pl	nom							NNS	conj	29
32	are	be		vbaux									VBP	auxpass	33
33	integrated	integrate	thatcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls	thatcls	vcomp		VBN	ccomp	26
34	in	in	in+advl	in	advl								IN	prep	33
35	a	a		dt	art								DT	det	37
36	particular	particular	attr+npremod	jj	attr								JJ	amod	37
37	way	way		nn									NN	pobj	34
38	.	.											.	punct	9

#sentid = 47
0	they	they		pro	pl								PRP	nsubj	2
1	can	can		vbaux	mod	pos							MD	aux	2
2	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	2
3	more	more	rb+advl	rb	advl								RBR	advmod	6
4	or	or		cc	phrs								CC	cc	3
5	less	less											RBR	conj	3
6	integrated	integrate		jj	pred	ed							VBN	acomp	2
7	,	,											,	punct	2
8	they	they		pro	pl								PRP	nsubj	10
9	could	could		vbaux	mod	pos							MD	aux	10
10	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	2
11	more	more		rb	othr								RBR	advmod	14
12	or	or		cc	phrs								CC	cc	11
13	less	less											RBR	conj	11
14	in	in	in+advl	in	advl								IN	prep	10
15	communication	communication		nn		nom							NN	pobj	14
16	with	with	in+npostmod	in	nmod								IN	prep	15
17	each	each		dt									DT	det	18
18	other	other											JJ	pobj	16
19	,	,											,	punct	10
20	but	but		cc	phrs								CC	cc	10
21	,	,											,	punct	10
22	um	um											UH	intj	10
23	,	,											,	punct	10
24	what	what											WP	nsubj	25
25	makes	make		vbmain	vblex	pres	simple	active					VBZ	dep	28
26	,	,											,	punct	28
27	what	what											WP	nsubj	28
28	makes	make		vbmain	in_othr	pres	simple	active					VBZ	prep	23
29	for	for	in+advl	in	advl								IN	prep	28
30	your	your		dt	poss								PRP$	poss	32
31	personal	personal	attr+npremod	jj	attr								JJ	amod	32
32	identity	identity		nn		nom							NN	pobj	29
33	at	at	in+advl	in	advl								IN	prep	28
34	a	a		dt	art								DT	det	36
35	particular	particular	attr+npremod	jj	attr								JJ	amod	36
36	time	time		nn									NN	pobj	33
37	,	,											,	punct	38
38	is	be		vbmain	be	pres	simple	active					VBZ	conj	10
39	just	just		rb	othr								RB	advmod	41
40	the	the		dt	art								DT	det	41
41	relations	relation		nn	pl	nom							NNS	attr	38
42	among	among	in+npostmod	in	nmod								IN	prep	41
43	your	your		dt	poss								PRP$	poss	44
44	thoughts	thought		nn	pl								NNS	pobj	42
45	and	and		cc	phrs								CC	cc	44
46	feelings	feeling		nn	pl	nom							NNS	conj	44
47	.	.											.	punct	38

#sentid = 48
0	and	and		cc	cls								CC	cc	5
1	similarly	similarly	rb+advl	rb	advl	ly							RB	advmod	5
2	,	,											,	punct	5
3	Derek	derek		nn		proper	npremod						NNP	compound	4
4	Parfit	parfit		nn		proper							NNP	nsubj	5
5	argued	argue		vbmain	vblex	past	simple	active					VBD	ROOT	5
6	that	that		comp	comp_that								IN	mark	33
7	through	through	in+advl	in	advl								IN	prep	33
8	time	time		nn									NN	pobj	7
9	,	,											,	punct	33
10	there	there											EX	expl	11
11	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	csubj	33
12	no	no		dt									DT	det	14
13	,	,											,	punct	14
14	hard	hard	attr+npremod	jj	attr								JJ	amod	20
15	and	and		cc	phrs								CC	cc	14
16	fast	fast											JJ	conj	14
17	yes	yes											UH	intj	14
18	or	or		cc									CC	cc	17
19	no	no											DT	conj	17
20	fact	fact		nn									NN	attr	11
21	about	about	in+npostmod	in	nmod								IN	prep	20
22	you	you		pro	2nd	sg							PRP	pobj	21
23	who	who											WP	attr	25
24	you	you		pro	2nd	sg							PRP	nsubj	25
25	are	be		vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	28
26	,	,											,	punct	28
27	it	it		pro	3rd	sg							PRP	nsubj	28
28	's	be		vbmain	be	pres	simple	active					VBZ	parataxis	20
29	,	,											,	punct	28
30	who	who											WP	attr	32
31	you	you		pro	2nd	sg							PRP	nsubj	32
32	are	be		vbmain	in_othr	pres	simple	active					VBP	prep	29
33	depends	depend	thatcls+vcomp	vbmain	prepv	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	5
34	on	on	in+advl	in	advl								IN	prep	33
35	how	how	rb+jjrbmod	rb	othr								WRB	advmod	36
36	well	well	rb+jjrbmod	rb	adjmod								RB	advmod	37
37	integrated	integrated		jj	pred								JJ	acomp	42
38	your	your		dt	poss								PRP$	poss	39
39	thoughts	thought		nn	pl								NNS	nsubj	42
40	and	and		cc	phrs								CC	cc	39
41	feelings	feeling		nn	pl	nom							NNS	conj	39
42	are	be		vbmain	be	pres	simple	active	compcls		incomp	compdel	VBP	pcomp	34
43	over	over	in+advl	in	advl								IN	prep	42
44	time	time		nn									NN	pobj	43
45	.	.											.	punct	5

#sentid = 49
0	the	the		dt	art								DT	det	3
1	more	more		rb	othr								JJR	advmod	3
2	psychological	psychological	attr+npremod	jj	attr								JJ	amod	3
3	connections	connection		nn	pl	nom							NNS	dep	23
4	you	you		pro	2nd	sg							PRP	nsubj	5
5	have	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	3
6	with	with	in+advl	in	advl								IN	prep	5
7	a	a		dt	art								DT	det	11
8	past	past	attr+npremod	jj	attr								JJ	amod	11
9	or	or		cc	phrs								CC	cc	8
10	future	future		nn		nom							NN	conj	8
11	person	person		nn									NN	pobj	6
12	,	,											,	punct	23
13	the	the	rb+jjrbmod	rb	adjmod								DT	advmod	14
14	more	more		jj	attr								JJR	amod	15
15	that	that											IN	dep	23
16	_	_											NFP	punct	23
17	the	the	rb+jjrbmod	rb	adjmod								DT	advmod	18
18	more	more		jj	attr								JJR	amod	20
19	you	you		pro	2nd	sg							PRP	nsubj	20
20	're	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	23
21	,	,											,	punct	20
22	you	you		pro	2nd	sg							PRP	nsubj	23
23	are	be		vbmain	be	pres	simple	active					VBP	ROOT	23
24	,	,											,	punct	23
25	quote	quote											UH	intj	26
26	unquote	unquote											UH	intj	23
27	identical	identical		jj	pred								JJ	acomp	23
28	with	with	in+jcomp	in	jcomp								IN	prep	27
29	that	that		dt	dt_dem								DT	det	30
30	person	person		nn									NN	pobj	28
31	,	,											,	punct	23
32	or	or		cc	cls								CC	cc	23
33	you	you		pro	2nd	sg							PRP	nsubj	34
34	're	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	41
35	more	more		jj	pred								RBR	acomp	34
36	the	the											DT	dep	34
37	,	,											,	punct	41
38	the	the		rb	othr								DT	advmod	39
39	more	more	rb+advl	rb	advl								JJR	advmod	41
40	you	you		pro	2nd	sg							PRP	nsubj	41
41	are	be		vbmain	be	pres	simple	active					VBP	conj	23
42	a	a		dt	art								DT	det	43
43	survivor	survivor		nn		nom							NN	attr	41
44	of	of	of+npostmod	in	nmod								IN	prep	43
45	that	that		dt	dt_dem								DT	det	46
46	person	person		nn									NN	pobj	44
47	.	.											.	punct	23

#sentid = 50
0	but	but		cc	cls								CC	cc	3
1	,	,											,	punct	3
2	there	there											EX	expl	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	no	no		dt									DT	det	12
5	hard	hard	attr+npremod	jj	attr								JJ	amod	12
6	and	and		cc	phrs								CC	cc	5
7	fast	fast											JJ	conj	5
8	yes	yes											UH	intj	12
9	or	or		cc									CC	cc	8
10	no	no											DT	conj	8
11	,	,											,	punct	12
12	answer	answer		nn		nom							NN	attr	3
13	to	to	in+npostmod	in	nmod								IN	prep	12
14	the	the		dt	art								DT	det	15
15	question	question		nn		nom							NN	pobj	13
16	of	of	of+npostmod	in	nmod								IN	prep	15
17	is	be		vbmain	be	pres	simple	active	compcls		incomp	compdel	VBZ	pcomp	16
18	that	that		dt	dt_dem								DT	det	19
19	person	person		nn									NN	nsubj	17
20	you	you		pro	2nd	sg							PRP	attr	17
21	?	?											.	punct	17
22	if	if		cs	cnd								IN	mark	25
23	the	the											DT	dep	25
24	,	,											,	punct	25
25	in	in	in+advl	in	advl								IN	prep	17
26	the	the		dt	art								DT	det	27
27	past	past		nn									NN	pobj	25
28	or	or		cc	phrs								CC	cc	27
29	the	the		dt	art								DT	det	30
30	future	future		nn		nom							NN	conj	27
31	.	.											.	punct	3

#sentid = 51
0	so	so		rb	link								RB	advmod	6
1	Nagel	nagel		nn		proper							NNP	nsubj	6
2	and	and		cc	phrs								CC	cc	1
3	Parfit	parfit		nn		proper							NNP	conj	1
4	are	be		vbaux									VBP	aux	6
5	both	both											DT	dep	6
6	taking	take		vbmain	vblex	pres	prog	active					VBG	ROOT	6
7	a	a		dt	art								DT	det	9
8	similar	similar	attr+npremod	jj	attr								JJ	amod	9
9	sort	sort		nn									NN	dobj	6
10	of	of	of+npostmod	in	nmod								IN	prep	9
11	line	line		nn									NN	pobj	10
12	on	on	in+npostmod	in	nmod								IN	prep	9
13	this	this		pro	dem	sg							DT	pobj	12
14	.	.											.	punct	6

#sentid = 52
0	and	and		cc	cls								CC	cc	5
1	in	in	in+advl	in	advl								IN	prep	5
2	fact	fact		nn									NN	pobj	1
3	,	,											,	punct	5
4	Dennett	dennett		nn		proper							NNP	nsubj	5
5	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	5
6	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	7
7	sympathetic	sympathetic		jj	pred								JJ	acomp	5
8	to	to	in+jcomp	in	jcomp								IN	prep	7
9	that	that		dt	dt_dem								DT	det	11
10	,	,											,	punct	11
11	line	line		nn									NN	pobj	8
12	,	,											,	punct	11
13	in	in	in+advl	in	advl								IN	prep	5
14	,	,											,	punct	13
15	um	um											UH	intj	13
16	,	,											,	punct	13
17	what	what		comp	comp_wh								WP	dobj	19
18	he	he		pro	3rd	sg							PRP	nsubj	19
19	does	do	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VBZ	pcomp	13
20	,	,											,	punct	5
21	though	though		cs	con								IN	mark	22
22	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		concessive		VBZ	advcl	5
23	he	he		pro	3rd	sg							PRP	attr	22
24	,	,											,	punct	26
25	he	he		pro	3rd	sg							PRP	nsubj	26
26	starts	start	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	22
27	by	by	in+advl	in	advl								IN	prep	26
28	giving	give	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	27
29	us	we		pro	pl								PRP	dative	28
30	this	this		dt	dt_dem								DT	det	35
31	,	,											,	punct	35
32	um	um											UH	intj	35
33	,	,											,	punct	35
34	thought	thought	nn+npremod	nn			npremod						NN	compound	35
35	experiment	experiment		nn		nom							NN	dobj	28
36	.	.											.	punct	5

#sentid = 53
0	well	well											UH	intj	3
1	,	,											,	punct	3
2	science	science	nn+npremod	nn		nom	npremod						NN	compound	3
3	fiction	fiction		nn		nom							NN	ROOT	3
4	.	.											.	punct	3

#sentid = 54
0	he	he		pro	3rd	sg							PRP	nsubj	1
1	says	say		vbmain	vblex	pres	simple	active					VBZ	ROOT	1
2	,	,											,	punct	1
3	he	he		pro	3rd	sg							PRP	nsubj	4
4	tells	tell	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	1
5	us	we		pro	pl								PRP	dative	4
6	a	a		dt	art								DT	det	7
7	story	story		nn		nom							NN	dobj	4
8	where	where		rb	advl								WRB	advmod	17
9	he	he		pro	3rd	sg							PRP	nsubjpass	17
10	is	be		vbaux									VBZ	auxpass	17
11	,	,											,	punct	17
12	he	he		pro	3rd	sg							PRP	nsubjpass	17
13	has	have		vbaux									VBZ	aux	17
14	been	be		vbaux									VBN	auxpass	17
15	uh	uh											UH	intj	14
16	,	,											,	punct	14
17	recruited	recruit	finitecls+rel	vbmain	vblex	pres	perf	pasv_by	nmod_cls	whcls	rel		VBN	relcl	7
18	by	by											IN	agent	17
19	NASA	nasa		nn		proper							NNP	pobj	18
20	for	for	in+advl	in	advl								IN	prep	17
21	this	this		dt	dt_dem								DT	det	27
22	supersonic	supersonic	attr+npremod	jj	attr								JJ	amod	27
23	,	,											,	punct	27
24	tunnelling	tunnel	attr+npremod	jj	attr	ing							VBG	amod	27
25	underground	underground	attr+npremod	jj	attr								JJ	amod	26
26	device	device	nn+npremod	nn			npremod						NN	compound	27
27	test	test		nn									NN	pobj	20
28	.	.											.	punct	1

#sentid = 55
0	right	right											JJ	ROOT	0
1	?	?											.	punct	0

#sentid = 56
0	this	this											DT	ROOT	0
1	...	...											:	punct	0

#sentid = 57
0	STUD	stud		nn		proper							NNP	nsubj	2
1	,	,											,	punct	2
2	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	his	his		dt	poss	sg							PRP$	poss	4
4	acronym	acronym		nn									NN	attr	2
5	.	.											.	punct	2

#sentid = 58
0	um	um											UH	intj	9
1	and	and		cc	phrs								CC	cc	9
2	h-	h-											XX	intj	9
3	what	what											WP	dobj	8
4	he	he		pro	3rd	sg							PRP	nsubjpass	6
5	's	be		vbaux									VBZ	auxpass	6
6	supposed	suppose		vbmain	vblex	pres	simple	pasv_agls	compcls		vcomp	compdel	VBN	csubj	9
7	to	to		to									TO	aux	8
8	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	6
9	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	9
10	,	,											,	punct	9
11	h-	h-											XX	dep	14
12	he	he		pro	3rd	sg							PRP	nsubjpass	14
13	's	be		vbaux									VBZ	auxpass	14
14	supposed	suppose	thatcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	9
15	to	to		to									TO	aux	17
16	,	,											,	punct	17
17	participate	participate	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	14
18	in	in	in+advl	in	advl								IN	prep	17
19	this	this		dt	dt_dem								DT	det	20
20	experiment	experiment		nn		nom							NN	pobj	18
21	where	where		rb	advl								WRB	advmod	30
22	he	he		pro	3rd	sg							PRP	nsubj	23
23	donates	donate	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	20
24	his	his		dt	poss	sg							PRP$	poss	25
25	brain	brain		nn									NN	dobj	23
26	,	,											,	punct	23
27	his	his		dt	poss	sg							PRP$	poss	28
28	brain	brain		nn									NN	nsubjpass	30
29	is	be		vbaux									VBZ	auxpass	30
30	separated	separate		vbmain	vblex	pres	simple	pasv_agls					VBN	conj	23
31	from	from	in+advl	in	advl								IN	prep	30
32	his	his		dt	poss	sg							PRP$	poss	33
33	body	body		nn									NN	pobj	31
34	,	,											,	punct	30
35	and	and		cc	cls								CC	cc	30
36	then	then		rb	link								RB	advmod	39
37	his	his		dt	poss	sg							PRP$	poss	38
38	body	body		nn									NN	nsubj	39
39	goes	go		vbmain	prepv	pres	simple	active					VBZ	conj	30
40	on	on	in+advl	in	advl								IN	prep	39
41	this	this		pro	dem	sg							DT	pobj	40
42	,	,											,	punct	41
43	this	this		dt	dt_dem								DT	det	44
44	mission	mission	appos+npostmod	nn			nappos						NN	appos	41
45	,	,											,	punct	44
46	to	to		to									TO	aux	47
47	dismantle	dismantle	tocls+ncomp	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	ncomp		VB	acl	44
48	a	a		dt	art								DT	det	49
49	missile	missile		nn									NN	dobj	47
50	underground	underground	rb+advl	rb	advl								RB	advmod	47
51	.	.											.	punct	9

#sentid = 59
0	right	right											JJ	ROOT	0
1	?	?											.	punct	0

#sentid = 60
0	um	um											UH	intj	14
1	,	,											,	punct	14
2	and	and		cc	phrs								CC	cc	14
3	,	,											,	punct	14
4	so	so		rb	othr								RB	advmod	5
5													_SP	dep	14
6	so	so		rb	link								RB	advmod	14
7	our	our		dt	poss								PRP$	poss	14
8	first	first											JJ	dep	14
9	,	,											,	punct	14
10	the	the		dt	art								DT	det	13
11	first	first	attr+npremod	jj	attr								JJ	amod	13
12	thought	thought	nn+npremod	nn			npremod						NN	compound	13
13	experiment	experiment		nn		nom							NN	nsubj	14
14	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	14
15	where	where		rb	advl								WRB	advmod	17
16	he	he		pro	3rd	sg							PRP	nsubj	17
17	asks	ask	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	14
18	us	we		pro	pl								PRP	dobj	17
19	he	he		pro	3rd	sg							PRP	nsubj	21
20	,	,											,	punct	21
21	tells	tell	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	17
22	us	we		pro	pl								PRP	dative	21
23	a	a		dt	art								DT	det	24
24	story	story		nn		nom							NN	dobj	21
25	where	where		rb	advl								WRB	advmod	32
26	his	his		dt	poss	sg							PRP$	poss	27
27	brain	brain		nn									NN	nsubjpass	32
28	and	and		cc	phrs								CC	cc	27
29	his	his		dt	poss	sg							PRP$	poss	30
30	body	body		nn									NN	conj	27
31	are	be		vbaux									VBP	auxpass	32
32	separated	separate	finitecls+rel	vbmain	vblex	pres	simple	pasv_agls	nmod_cls	whcls	rel		VBN	relcl	24
33	.	.											.	punct	14

#sentid = 61
0	and	and		cc	cls								CC	cc	3
1	we	we		pro	1st								PRP	nsubjpass	3
2	're	be		vbaux									VBP	auxpass	3
3	supposed	suppose		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	3
4	to	to		to									TO	aux	5
5	ask	ask	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	3
6	,	,											,	punct	5
7	okay	okay											UH	intj	10
8	,	,											,	punct	10
9	where	where		comp	comp_wh								WRB	advmod	10
10	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	5
11	you	you		pro	2nd	sg							PRP	nsubj	10
12	?	?											.	punct	5

#sentid = 62
0	where	where		rb	advl								WRB	advmod	5
1	,	,											,	punct	5
2	where	where		rb	advl								WRB	advmod	5
3	is	be		vbaux									VBZ	auxpass	5
4	Dennett	dennett		nn		proper							NNP	nsubjpass	5
5	located	locate		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	5
6	?	?											.	punct	5

#sentid = 63
0	once	once		cs	cs_othr								IN	mark	6
1	his	his		dt	poss	sg							PRP$	poss	2
2	brain	brain		nn									NN	nsubj	6
3	and	and		cc	phrs								CC	cc	2
4	his	his		dt	poss	sg							PRP$	poss	5
5	body	body		nn									NN	conj	2
6	are	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBP	advcl	12
7	in	in	in+advl	in	advl								IN	prep	6
8	separate	separate	attr+npremod	jj	attr								JJ	amod	9
9	locations	location		nn	pl	nom							NNS	pobj	7
10	,	,											,	punct	12
11	where	where		rb	advl								WRB	advmod	12
12	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	12
13	Dennett	dennett		nn		proper							NNP	nsubj	12
14	?	?											.	punct	12

#sentid = 64
0	and	and		cc	cls								CC	cc	2
1	this	this		pro	dem	sg							DT	nsubj	2
2	gives	give		vbmain	vblex	pres	simple	active					VBZ	ROOT	2
3	us	we		pro	pl								PRP	dative	2
4	a	a		dt	art								DT	det	5
5	way	way		nn									NN	dobj	2
6	,	,											,	punct	5
7	a	a											DT	appos	5
8	n-	n-											XX	nmod	11
9	a	a		dt	art								DT	det	11
10	new	new	attr+npremod	jj	attr								JJ	amod	11
11	way	way	appos+npostmod	nn			nappos						NN	appos	5
12	in	in	in+npostmod	in	nmod								IN	prep	11
13	to	to		in	in_othr								IN	prep	12
14	trying	try	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	13
15	to	to		to									TO	aux	16
16	decide	decide	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	14
17	among	among	in+advl	in	advl								IN	prep	16
18	these	these		dt	dt_dem								DT	det	20
19	various	various	attr+npremod	jj	attr								JJ	amod	20
20	theories	theory		nn	pl	nom							NNS	pobj	17
21	of	of	of+npostmod	in	nmod								IN	prep	20
22	personal	personal	attr+npremod	jj	attr								JJ	amod	23
23	identity	identity		nn		nom							NN	pobj	21
24	.	.											.	punct	2

#sentid = 65
0													_SP	dep	9
1	sorry	sorry											UH	intj	2
2	excuse	excuse		vbmain	vblex	nonfinite	simple	active	advlcls				VB	advcl	9
3	me	i		pro	1st	sg							PRP	dobj	2
4													_SP	dep	2
5	sorry	sorry											UH	intj	9
6	,	,											,	punct	5
7													_SP	dep	5
8	there	there											EX	expl	9
9	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	39
10	no	no		dt									DT	det	15
11													_SP	dep	15
12	other	other	attr+npremod	jj	attr								JJ	amod	15
13	um	um											UH	intj	15
14	,	,											,	punct	15
15	outlet	outlet		nn		nom							NN	attr	9
16	,	,											,	punct	15
17	um	um											UH	intj	15
18													_SP	dep	15
19	no	no											UH	intj	15
20	,	,											,	punct	19
21	maybe	maybe	rb+advl	rb	advl								RB	advmod	29
22	if	if		cs	cnd								IN	mark	24
23	we	we		pro	1st								PRP	nsubj	24
24	let	let	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	29
25	it	it		pro	3rd	sg							PRP	dobj	24
26	,	,											,	punct	29
27	if	if		cs	cnd								IN	mark	29
28	we	we		pro	1st								PRP	nsubj	29
29	push	push	finitecls+advl	vbmain	phrsv	pres	simple	active	advlcls		conditional		VBP	advcl	39
30	it	it		pro	3rd	sg							PRP	dobj	29
31	over	over		rb	prtcle								RP	prt	29
32	this	this		dt	dt_dem								DT	det	33
33	way	way		nn									NN	npadvmod	29
34	,	,											,	punct	39
35	yeah	yeah											UH	intj	39
36													_SP	dep	35
37	there	there	rb+advl	rb	advl								EX	advmod	39
38	we	we		pro	1st								PRP	nsubj	39
39	go	go		vbmain	vblex	pres	simple	active					VBP	ROOT	39
40	.	.											.	punct	39

#sentid = 66
0													_SP	dep	14
1	um	um											UH	intj	14
2	,	,											,	punct	14
3	and	and		cc	phrs								CC	cc	14
4	the	the		dt	art								DT	det	6
5	second	second	attr+npremod	jj	attr								JJ	amod	6
6	stage	stage		nn		nom							NN	nsubj	14
7	of	of	of+npostmod	in	nmod								IN	prep	6
8	the	the		dt	art								DT	det	10
9	,	,											,	punct	10
10	of	of											IN	pobj	7
11	,	,											,	punct	10
12	the	the		dt	art								DT	det	13
13	experiment	experiment		nn		nom							NN	pobj	10
14	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	14
15	he	he		pro	3rd	sg							PRP	dep	18
16	,	,											,	punct	18
17	he	he		pro	3rd	sg							PRP	nsubj	18
18	loses	lose	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	14
19	contact	contact		nn									NN	dobj	18
20	with	with	in+npostmod	in	nmod								IN	prep	19
21	his	his		dt	poss	sg							PRP$	poss	22
22	body	body		nn									NN	pobj	20
23	.	.											.	punct	14

#sentid = 67
0													_SP	dep	17
1	so	so		rb	link								RB	advmod	17
2	,	,											,	punct	17
3	his	his		dt	poss	sg							PRP$	poss	4
4	body	body		nn									NN	nsubj	17
5	,	,											,	punct	4
6	the	the		dt	art								DT	det	7
7	con-	con-	appos+npostmod	nn			nappos						NN	appos	4
8	the	the		dt	art								DT	det	10
9	radio	radio	nn+npremod	nn			npremod						NN	compound	10
10	connections	connection	appos+npostmod	nn	pl	nom	nappos						NNS	appos	4
11	between	between	in+npostmod	in	nmod								IN	prep	10
12	his	his		dt	poss	sg							PRP$	poss	13
13	brain	brain		nn									NN	pobj	11
14	and	and		cc	phrs								CC	cc	13
15	his	his		dt	poss	sg							PRP$	poss	16
16	body	body		nn									NN	conj	13
17	start	start		vbmain	vblex	pres	simple	active					VBP	ROOT	17
18	going	go	ingcls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	17
19	on	on	in+advl	in	advl								IN	prep	18
20	the	the		dt	art								DT	det	21
21	fritz	fritz		nn									NN	pobj	19
22	,	,											,	punct	18
23	and	and		cc	cls								CC	cc	17
24	all	all											DT	npadvmod	29
25	of	of		in	in_othr								IN	prep	24
26	the	the		dt	art								DT	det	27
27	sudden	sudden											JJ	pobj	25
28	he	he		pro	3rd	sg							PRP	nsubj	29
29	realizes	realize		vbmain	vblex	pres	simple	active					VBZ	conj	17
30	,	,											,	punct	29
31	you	you		pro	2nd	sg							PRP	nsubj	32
32	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	29
33	he	he		pro	3rd	sg							PRP	nsubj	34
34	thinks	think	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	29
35	for	for	in+advl	in	advl								IN	prep	34
36	a	a		dt	art								DT	det	37
37	moment	moment		nn		nom							NN	pobj	35
38	that	that		comp	comp_that								IN	mark	40
39	he	he		pro	3rd	sg							PRP	nsubj	40
40	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	34
41	about	about		jj	pred								JJ	acomp	40
42	to	to		to									TO	aux	43
43	die	die	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	41
44	and	and		cc	cls								CC	cc	34
45	then	then		rb	link								RB	advmod	47
46	he	he		pro	3rd	sg							PRP	nsubj	47
47	realizes	realize		vbmain	vblex	pres	simple	active					VBZ	conj	34
48	oh	oh											UH	intj	49
49	wait	wait		vbmain	vblex	nonfinite	simple	active					VB	meta	47
50	i	i		pro	1st	sg							PRP	nsubj	51
51	'm	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	47
52	,	,											,	punct	47
53	i	i		pro	1st	sg							PRP	nsubj	54
54	'm	be		vbmain	be	pres	simple	active	compcls		jcomp	compdel	VBP	ccomp	58
55	actually	actually	rb+advl	rb	advl	ly							RB	advmod	54
56	in	in	in+advl	in	advl								IN	prep	54
57	Houston	houston		nn		proper							NNP	pobj	56
58	right	right											JJ	ccomp	47
59	?	?											.	punct	58

#sentid = 68
0	i	i		pro	1st	sg							PRP	nsubj	1
1	'm	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	5
2	it	it		pro	3rd	sg							PRP	attr	1
3	,	,											,	punct	5
4	he	he		pro	3rd	sg							PRP	nsubj	5
5	thinks	think		vbmain	vblex	pres	simple	active					VBZ	ROOT	5
6	he	he		pro	3rd	sg							PRP	nsubj	7
7	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	5
8	in	in	in+advl	in	advl								IN	prep	7
9	the	the											DT	pobj	8
10	_	_											XX	pobj	8

#sentid = 69
0	at	at	in+advl	in	advl								IN	prep	7
1	that	that		dt	dt_dem								DT	det	2
2	point	point		nn									NN	pobj	0
3	,	,											,	punct	7
4	he	he		pro	3rd	sg							PRP	nsubj	7
5	no	no											RB	neg	6
6	longer	long	rb+advl	rb	advl								RBR	advmod	7
7	identifies	identify		vbmain	vblex	pres	simple	active					VBZ	ROOT	7
8	with	with	in+advl	in	advl								IN	prep	7
9	where	where		comp	comp_wh								WRB	advmod	11
10	he	he		pro	3rd	sg							PRP	nsubj	11
11	is	be	whcls+incomp	vbmain	be	pres	simple	active	compcls	whcls	incomp		VBZ	pcomp	8
12	at	at	in+advl	in	advl								IN	prep	11
13	the	the		dt	art								DT	det	15
14	,	,											,	punct	15
15	i-	i-											XX	pobj	12
16	where	where		rb	advl								WRB	advmod	19
17	his	his		dt	poss	sg							PRP$	poss	18
18	body	body		nn									NN	nsubj	19
19	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	15
20	which	which											WDT	nsubj	21
21	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	11
22	underground	underground	rb+advl	rb	advl								RB	advmod	21
23	,	,											,	punct	21
24	working	work	ingcls+advl	vbmain	prepv	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	21
25	on	on	in+advl	in	advl								IN	prep	24
26	this	this		dt	dt_dem								DT	det	27
27	missile	missile		nn									NN	pobj	25
28	,	,											,	punct	7
29	but	but		cc	cls								CC	cc	7
30	he	he		pro	3rd	sg							PRP	nsubj	31
31	identifies	identify		vbmain	vblex	pres	simple	active					VBZ	conj	7
32	with	with	in+advl	in	advl								IN	prep	31
33	hi-	hi-											XX	pobj	32
34	with	with	in+advl	in	advl								IN	prep	31
35	his	his		dt	poss	sg							PRP$	poss	36
36	brain	brain		nn									NN	pobj	34
37	back	back		rb	othr								RB	advmod	36
38	in	in		in	in_othr								IN	prep	37
39	Houston	houston		nn		proper							NNP	pobj	38
40	,	,											,	punct	36
41	in	in	in+npostmod	in	nmod								IN	prep	36
42	this	this		dt	dt_dem								DT	det	47
43	little	little	attr+npremod	jj	attr								JJ	amod	47
44	um	um											UH	intj	47
45	,	,											,	punct	47
46	metallic	metallic	attr+npremod	jj	attr								JJ	amod	47
47	tub	tub		nn									NN	pobj	41
48	,	,											,	punct	47
49	full	full		jj	attr								JJ	amod	47
50	of	of	in+jcomp	in	jcomp								IN	prep	49
51	electrodes	electrode		nn	pl								NNS	pobj	50
52	and	and		cc	cls								CC	cc	31
53	,	,											,	punct	31
54	so	so		cc	cls								CC	cc	31
55	at	at	in+advl	in	advl								IN	prep	65
56	that	that		dt	dt_dem								DT	det	57
57	point	point		nn									NN	pobj	55
58	he	he		pro	3rd	sg							PRP	nsubj	59
59	's	be		vbmain	be	pres	simple	active					VBZ	parataxis	65
60	he	he		pro	3rd	sg							PRP	nsubj	61
61	's	be		vbmain	be	pres	simple	active					VBZ	meta	65
62	um	um											UH	intj	61
63	,	,											,	punct	61
64	he	he		pro	3rd	sg							PRP	nsubj	65
65	comes	come		vbmain	phrsv	pres	simple	active					VBZ	conj	31
66	up	up		rb	prtcle								RP	prt	65
67	with	with	in+advl	in	advl								IN	prep	65
68	a	a		dt	art								DT	det	69
69	n-	n-											XX	nmod	72
70	a	a		dt	art								DT	det	72
71	new	new	attr+npremod	jj	attr								JJ	amod	72
72	kind	kind		nn									NN	pobj	67
73	of	of	of+npostmod	in	nmod								IN	prep	72
74	view	view		nn									NN	pobj	73
75	about	about	in+npostmod	in	nmod								IN	prep	74
76	where	where		rb	advl								WRB	advmod	78
77	he	he		pro	3rd	sg							PRP	nsubj	78
78	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	81
79	,	,											,	punct	81
80	which	which											WDT	nsubj	81
81	influences	influence	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VBZ	pcomp	75
82	,	,											,	punct	81
83	should	should		vbaux	mod	nec							MD	aux	84
84	influence	influence		vbmain	vblex	vp_w_modal	simple	active					VB	dep	81
85	his	his		dt	poss	sg							PRP$	poss	86
86	view	view		nn									NN	dobj	84
87	about	about	in+npostmod	in	nmod								IN	prep	86
88	,	,											,	punct	87
89	who	who											WP	attr	91
90	he	he		pro	3rd	sg							PRP	nsubj	91
91	is	be	whcls+incomp	vbmain	be	pres	simple	active	compcls	whcls	incomp		VBZ	pcomp	87
92	.	.											.	punct	65

#sentid = 70
0	what	what		dt									WP	det	1
1	kind	kind		nn									NN	dep	7
2	of	of	of+npostmod	in	nmod								IN	prep	1
3	a	a		dt	art								DT	det	4
4	thing	thing		nn		nom							NN	pobj	2
5	,	,											,	punct	7
6	he	he		pro	3rd	sg							PRP	nsubj	7
7	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	7
8	.	.											.	punct	7

#sentid = 71
0	um	um											UH	intj	5
1	,	,											,	punct	5
2	finally	finally		rb	link	ly							RB	advmod	5
3													_SP	dep	5
4	they	they		pro	pl								PRP	nsubj	5
5	give	give		vbmain	vblex	pres	simple	active					VBP	ROOT	5
6	him	he		pro	3rd	sg							PRP	dative	5
7	a	a		dt	art								DT	det	10
8	new	new	attr+npremod	jj	attr								JJ	amod	10
9	human	human	attr+npremod	jj	attr								JJ	amod	10
10	body	body		nn									NN	dobj	5
11	and	and		cc	cls								CC	cc	5
12	,	,											,	punct	5
13	and	and		cc	phrs								CC	cc	15
14	he	he		pro	3rd	sg							PRP	nsubj	15
15	gets	get		vbmain	prepv	pres	simple	active					VBZ	conj	5
16	at	at	in+advl	in	advl								IN	prep	15
17	the	the		dt	art								DT	det	19
18	same	same	attr+npremod	jj	attr								JJ	amod	19
19	time	time		nn									NN	pobj	16
20	a	a		dt	art								DT	det	23
21	spare	spare	attr+npremod	jj	attr								JJ	amod	23
22	computer	computer	nn+npremod	nn		nom	npremod						NN	compound	23
23	brain	brain		nn									NN	dobj	15
24	.	.											.	punct	15

#sentid = 72
0													_SP	dep	26
1	okay	okay											UH	intj	26
2	,	,											,	punct	26
3	and	and		cc									CC	cc	7
4	then	then		rb	othr								RB	advmod	7
5	,	,											,	punct	7
6	and	and		cc									CC	cc	7
7	at	at											IN	meta	26
8	the	the		dt	art								DT	det	10
9	very	very	attr+npremod	jj	attr								JJ	amod	10
10	end	end		nn									NN	pobj	7
11	,	,											,	punct	7
12	the	the		dt	art								DT	det	13
13	brain	brain	nn+npremod	nn			npremod						NN	nmod	17
14	in-	in-	in+npostmod	in	nmod								IN	prep	13
15	the	the		dt	art								DT	det	17
16	two	two											CD	nummod	17
17	sort	sort		nn									NN	pobj	7
18	of	of	of+npostmod	in	nmod								IN	prep	17
19	brains	brain		nn	pl								NNS	pobj	18
20	that	that		relpro	relpro_that	sg							WDT	nsubj	22
21	are	be		vbaux									VBP	aux	22
22	controlling	control	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls	thatcls	rel		VBG	relcl	17
23	this	this		dt	dt_dem								DT	det	24
24	body	body		nn									NN	dobj	22
25	,	,											,	punct	26
26	become	become		vbmain	vblex	pres	simple	active					VBP	ROOT	26
27	_	_											NFP	punct	26
28	go	go		vbmain	vblex	nonfinite	simple	active					VB	dep	26
29	out	out	in+advl	in	advl								IN	prep	28
30	of	of		in	in_othr								IN	prep	29
31	sync	sync		nn									NN	pobj	30
32	,	,											,	punct	26
33	and	and		cc	cls								CC	cc	26
34	um	um											UH	intj	38
35	,	,											,	punct	34
36	so	so		rb	link								RB	advmod	38
37	it	it		pro	3rd	sg							PRP	nsubj	38
38	looks	look		vbmain	prepv	pres	simple	active					VBZ	conj	26
39	like	like		cs	cs_othr								IN	mark	47
40	w-	w-											XX	dep	47
41	at	at	in+advl	in	advl								IN	prep	47
42	that	that		dt	dt_dem								DT	det	43
43	point	point		nn									NN	pobj	41
44	,	,											,	punct	47
45	he	he		pro	3rd	sg							PRP	nsubjpass	47
46	's	be		vbaux									VBZ	auxpass	47
47	got	get	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls		other_advl		VBN	advcl	38
48	,	,											,	punct	47
49	two	two											CD	nummod	50
50	brains	brain		nn	pl								NNS	dobj	47
51	and	and		cc	phrs								CC	cc	50
52	one	one											CD	nummod	53
53	body	body		nn									NN	conj	50
54	.	.											.	punct	26

#sentid = 73
0													_SP	dep	5
1	so	so		rb	link								RB	advmod	5
2	,	,											,	punct	5
3	he	he		pro	3rd	sg							PRP	nsubj	5
4	's	be		vbaux									VBZ	aux	5
5	giving	give		vbmain	vblex	pres	prog	active					VBG	ROOT	5
6	us	we		pro	pl								PRP	dative	5
7	a	a		dt	art								DT	det	8
8	range	range		nn									NN	dobj	5
9	of	of	of+npostmod	in	nmod								IN	prep	8
10	puzzle	puzzle	nn+npremod	nn			npremod						NN	compound	11
11	cases	case		nn	pl								NNS	pobj	9
12	to	to	in+npostmod	in	nmod								IN	prep	8
13	,	,											,	punct	12
14	to	to											IN	pcomp	12
15	um	um											UH	intj	14
16	,	,											,	punct	5
17	and	and		cc	phrs								CC	cc	5
18	in	in	in+advl	in	advl								IN	prep	23
19	each	each		dt									DT	det	20
20	stage	stage		nn		nom							NN	pobj	18
21	we	we		pro	1st								PRP	nsubjpass	23
22	're	be		vbaux									VBP	auxpass	23
23	asked	ask		vbmain	vblex	pres	simple	pasv_agls					VBN	conj	5
24	,	,											,	punct	23
25	well	well											UH	intj	28
26	,	,											,	punct	28
27	where	where		comp	comp_wh								WRB	advmod	28
28	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	23
29	he	he		pro	3rd	sg							PRP	nsubj	28
30	?	?											.	punct	23

#sentid = 74
0	where	where		rb	advl								WRB	advmod	1
1	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	Dennett	dennett		nn		proper							NNP	nsubj	1
3	?	?											.	punct	1

#sentid = 75
0	and	and		cc	cls								CC	cc	3
1	he	he		pro	3rd	sg							PRP	nsubj	3
2	's	be		vbaux									VBZ	aux	3
3	trying	try		vbmain	vblex	pres	prog	active					VBG	ROOT	3
4	to	to											TO	dep	8
5	,	,											,	punct	8
6	he	he		pro	3rd	sg							PRP	nsubj	8
7	's	be		vbaux									VBZ	aux	8
8	trying	try	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	xcomp	3
9	to	to		to									TO	aux	12
10	,	,											,	punct	12
11	uh	uh											UH	intj	12
12	pump	pump	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	8
13	our	our		dt	poss								PRP$	poss	14
14	intuitions	intuition		nn	pl	nom							NNS	dobj	12
15	in	in	in+advl	in	advl								IN	prep	12
16	this	this		dt	dt_dem								DT	det	17
17	way	way		nn									NN	pobj	15
18	,	,											,	punct	12
19	get	get		vbmain	vblex	nonfinite	simple	active					VB	dep	12
20	us	we		pro	pl								PRP	nsubj	21
21	thinking	think		vbmain	prepv	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	ccomp	19
22	about	about	in+advl	in	advl								IN	prep	21
23	this	this		dt	dt_dem								DT	det	24
24	case	case		nn									NN	pobj	22
25	from	from	in+advl	in	advl								IN	prep	21
26	a	a		dt	art								DT	det	28
27	new	new	attr+npremod	jj	attr								JJ	amod	28
28	angle	angle		nn									NN	pobj	25
29	.	.											.	punct	8

#sentid = 76
0	this	this		dt	dt_dem								DT	det	1
1	question	question		nn		nom							NN	nsubjpass	8
2	about	about	in+npostmod	in	nmod								IN	prep	1
3	where	where		comp	comp_wh								WRB	advmod	6
4	am	be		vbaux									VBP	auxpass	6
5	i	i		pro	1st	sg							PRP	nsubjpass	6
6	located	locate	whcls+incomp	vbmain	vblex	pres	simple	pasv_agls	compcls	whcls	incomp		VBN	pcomp	2
7	is	be		vbaux									VBZ	auxpass	8
8	supposed	suppose		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	8
9	to	to		to									TO	aux	10
10	help	help	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	8
11	us	we		pro	pl								PRP	dobj	10
12	,	,											,	punct	10
13	help	help		vbmain	vblex	nonfinite	simple	active					VB	dep	10
14	us	we		pro	pl								PRP	nsubj	15
15	come	come		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	13
16	to	to	in+advl	in	advl								IN	prep	15
17	some	some		dt									DT	det	18
18	sort	sort		nn									NN	pobj	16
19	of	of	of+npostmod	in	nmod								IN	prep	18
20	decision	decision		nn									NN	pobj	19
21	about	about	in+npostmod	in	nmod								IN	prep	20
22	what	what											WP	attr	28
23	kind	kind		nn									NN	dep	28
24	of	of	of+npostmod	in	nmod								IN	prep	23
25	thing	thing		nn		nom							NN	pobj	24
26	,	,											,	punct	28
27	Dennett	dennett		nn		proper							NNP	nsubj	28
28	is	be	whcls+incomp	vbmain	be	pres	simple	active	compcls	whcls	incomp		VBZ	pcomp	21
29	,	,											,	punct	28
30	that	that		dt	dt_dem								DT	det	32
31	individual	individual	attr+npremod	jj	attr								JJ	amod	32
32	thing	thing		nn		nom							NN	attr	28
33	.	.											.	punct	8

#sentid = 77
0	um	um											UH	intj	4
1	,	,											,	punct	4
2	and	and		cc	phrs								CC	cc	4
3	he	he		pro	3rd	sg							PRP	nsubj	4
4	proposes	propose		vbmain	vblex	pres	simple	active					VBZ	ROOT	4
5	,	,											,	punct	4
6	a	a		dt	art								DT	det	7
7	number	number		nn		nom							NN	dobj	4
8	of	of	of+npostmod	in	nmod								IN	prep	7
9	different	different	attr+npremod	jj	attr								JJ	amod	10
10	solutions	solution		nn	pl	nom							NNS	pobj	8
11	to	to	in+npostmod	in	nmod								IN	prep	10
12	this	this		pro	dem	sg							DT	pobj	11
13	.	.											.	punct	4

#sentid = 78
0	and	and		cc	cls								CC	cc	5
1	this	this		pro	dem	sg							DT	nsubj	5
2	what	what											WP	pobj	10
3	i	i		pro	1st	sg							PRP	nsubj	5
4	'd	would		vbaux	mod								MD	aux	5
5	like	like		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	5
6	to	to		to									TO	aux	9
7	,	,											,	punct	9
8	to	to		to									TO	aux	9
9	discuss	discuss	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	5
10	in	in	in+advl	in	advl								IN	prep	9
11	small	small	attr+npremod	jj	attr								JJ	amod	12
12	groups	group		nn	pl								NNS	pobj	10
13	about	about	in+advl	in	advl								IN	prep	9
14	how	how	rb+jjrbmod	rb	adjmod								WRB	advmod	16
15	,	,											,	punct	16
16	plausible	plausible		jj	pred								JJ	acomp	21
17	each	each											DT	nsubj	21
18	of	of		in	in_othr								IN	prep	17
19	these	these		dt	dt_dem								DT	det	20
20	solutions	solution		nn	pl	nom							NNS	pobj	18
21	is	be		vbmain	be	pres	simple	active	compcls		incomp	compdel	VBZ	pcomp	13
22	.	.											.	punct	5

#sentid = 79
0	okay	okay											UH	intj	12
1	,	,											,	punct	12
2	so	so		rb	link								RB	advmod	12
3	,	,											,	punct	12
4	around	around	in+advl	in	advl								IN	prep	12
5	about	about		in	in_othr								IN	prep	4
6	page	page		nn		nom							NN	pobj	5
7	two	two											CD	pobj	4
8	-	-											HYPH	punct	7
9	twenty	twenty											CD	pobj	4
10	,	,											,	punct	12
11	he	he		pro	3rd	sg							PRP	nsubj	12
12	says	say		vbmain	vblex	pres	simple	active					VBZ	ROOT	12
13	,	,											,	punct	12
14	maybe	maybe	rb+advl	rb	advl								RB	advmod	16
15	he	he		pro	3rd	sg							PRP	nsubj	16
16	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	12
17	,	,											,	punct	20
18	he	he		pro	3rd	sg							PRP	nsubjpass	20
19	is	be		vbaux									VBZ	auxpass	20
20	located	locate	thatcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	16
21	,	,											,	punct	20
22	wherever	wherever		rb	advl								WRB	advmod	26
23	his	his		dt	poss	sg							PRP$	poss	24
24	brain	brain		nn									NN	nsubjpass	26
25	is	be		vbaux									VBZ	auxpass	26
26	located	locate	whcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls	whcls	vcomp		VBN	ccomp	16
27	,	,											,	punct	26
28	um	um											UH	intj	26
29	,	,											,	punct	26
30													_SP	dep	26
31	huh	huh											UH	intj	26
32	?	?											.	punct	16
33													_SP	dep	12
34	no	no											UH	intj	12
35	no	no											UH	intj	34
36	wherever	wherever		rb	advl								WRB	advmod	40
37	his	his		dt	poss	sg							PRP$	poss	38
38	body	body		nn									NN	nsubjpass	40
39	is	be		vbaux									VBZ	auxpass	40
40	located	locate	whcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls	whcls	vcomp		VBN	ccomp	12
41	.	.											.	punct	12

#sentid = 80
0	his	his		dt	poss	sg							PRP$	poss	1
1	body	body		nn									NN	dep	4
2	,	,											,	punct	4
3	he	he		pro	3rd	sg							PRP	nsubj	4
4	calls	call		vbmain	vblex	pres	simple	active					VBZ	ROOT	4
5	his	his		dt	poss	sg							PRP$	poss	6
6	body	body		nn									NN	dobj	4
7	,	,											,	punct	4
8	Hamlet	hamlet		nn		proper							NNP	oprd	4
9	and	and		cc	phrs								CC	cc	8
10	his	his		dt	poss	sg							PRP$	poss	11
11	brain	brain		nn									NN	nsubj	12
12	Yorick	yorick		nn		proper							NNP	conj	8
13	.	.											.	punct	4

#sentid = 81
0													_SP	dep	5
1	um	um											UH	intj	5
2	so	so		rb	link								RB	advmod	5
3	,	,											,	punct	5
4	he	he		pro	3rd	sg							PRP	nsubj	5
5	says	say		vbmain	vblex	pres	simple	active					VBZ	ROOT	5
6	okay	okay											UH	intj	10
7	,	,											,	punct	10
8	maybe	maybe	rb+advl	rb	advl								RB	advmod	10
9	i	i		pro	1st	sg							PRP	nsubj	10
10	am	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	5
11	where	where		rb	advl								WRB	advmod	14
12	my	my		dt	poss								PRP$	poss	13
13	body	body		nn									NN	nsubj	14
14	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	10
15	.	.											.	punct	5

#sentid = 82
0	in	in	in+advl	in	advl								IN	prep	7
1	that	that		dt	dt_dem								DT	det	2
2	case	case		nn									NN	pobj	0
3	,	,											,	punct	7
4	my	my		dt	poss								PRP$	poss	5
5	body	body		nn									NN	nsubj	7
6	,	,											,	punct	7
7	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	7
8	me	i		pro	1st	sg							PRP	attr	7
9	...	...											:	punct	7

#sentid = 83
0													_SP	dep	4
1	and	and		cc	phrs								CC	cc	4
2	then	then		rb	link								RB	advmod	4
3	he	he		pro	3rd	sg							PRP	nsubj	4
4	thinks	think		vbmain	vblex	pres	simple	active					VBZ	ROOT	4
5	well	well											UH	intj	38
6	,	,											,	punct	38
7	maybe	maybe	rb+advl	rb	advl								RB	advmod	11
8	,	,											,	punct	11
9	maybe	maybe	rb+advl	rb	advl								RB	advmod	11
10	it	it		pro	3rd	sg							PRP	nsubj	11
11	's	be		vbmain	in_othr	pres	simple	active					VBZ	prep	6
12	th-	th-											XX	attr	11
13	it	it		pro	3rd	sg							PRP	nsubj	14
14	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	20
15	the	the		dt	art								DT	det	16
16	opposite	opposite		nn		nom							NN	attr	14
17	,	,											,	punct	20
18	maybe	maybe	rb+advl	rb	advl								RB	advmod	20
19	it	it		pro	3rd	sg							PRP	nsubj	20
20	's	be		vbmain	be	pres	simple	active					VBZ	attr	11
21	not	not											RB	neg	20
22	my	my		dt	poss								PRP$	poss	23
23	body	body		nn									NN	attr	20
24	that	that		pro	dem	sg							WDT	nsubj	25
25	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	20
26	me	i		pro	1st	sg							PRP	attr	25
27	,	,											,	punct	20
28	because	because		cs	cos								IN	mark	38
29	f-	f-											XX	punct	38
30	you	you		pro	2nd	sg							PRP	nsubj	31
31	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	38
32	after	after	rb+jjrbmod	rb	othr								RB	advmod	33
33	all	all	rb+advl	rb	advl								RB	advmod	38
34	,	,											,	punct	38
35	could	could		vbaux	mod	pos							MD	aux	38
36	n't	not											RB	neg	38
37	i	i		pro	1st	sg							PRP	nsubj	38
38	get	get		vbmain	vblex	vp_w_modal	simple	active	compcls		causative	compdel	VB	ccomp	4
39	a	a		dt	art								DT	det	41
40	body	body	nn+npremod	nn			npremod						NN	compound	41
41	transplant	transplant		nn		nom							NN	dobj	38
42	.	.											.	punct	4

#sentid = 84
0	um	um											UH	intj	4
1	,	,											,	punct	4
2	so	so		rb	othr								RB	advmod	4
3	maybe	maybe		rb	othr								RB	advmod	4
4	my	my											PRP$	ROOT	4
5	_	_											XX	punct	4

#sentid = 85
0	and	and		cc	cls								CC	cc	4
1	then	then		rb	link								RB	advmod	4
2	he	he		pro	3rd	sg							PRP	nsubj	3
3	says	say		vbmain	vblex	pres	simple	active					VBZ	parataxis	4
4	suggests	suggest		vbmain	vblex	pres	simple	active					VBZ	ROOT	4
5	second	second	attr+npremod	jj	attr								JJ	amod	6
6	suggestion	suggestion		nn		nom							NN	dobj	4
7	's	be		vbmain	be	pres	simple	active	nmod_cls		ncomp		VBZ	acl	6
8	maybe	maybe	rb+advl	rb	advl								RB	advmod	11
9	my	my		dt	poss								PRP$	poss	10
10	brain	brain		nn									NN	nsubj	11
11	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	20
12	me	i		pro	1st	sg							PRP	attr	11
13	...	...											:	punct	20
14	wherever	wherever		rb	advl								WRB	advmod	18
15	,	,											,	punct	18
16	my	my		dt	poss								PRP$	poss	17
17	brain	brain		nn									NN	nsubj	18
18	is	be		vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	20
19	there	there											EX	preconj	18
20	am	be		vbmain	be	pres	simple	active	nmod_cls		ncomp		VBP	acl	6
21	i.	i.											.	punct	4

#sentid = 86
0	but	but		cc	cls								CC	cc	2
1	he	he		pro	3rd	sg							PRP	nsubj	2
2	finds	find		vbmain	vblex	pres	simple	active					VBZ	ROOT	2
3	this	this		pro	dem	sg							DT	nsubj	4
4	hard	hard											JJ	ccomp	2
5	to	to		to									TO	aux	6
6	believe	believe	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	4
7	because	because		cs	cos								IN	mark	18
8	as	as		cs	cs_othr								IN	mark	11
9	he	he		pro	3rd	sg							PRP	nsubj	11
10	's	be		vbaux									VBZ	aux	11
11	sitting	sit	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		other_advl		VBG	advcl	18
12	there	there	rb+advl	rb	advl								RB	advmod	11
13	,	,											,	punct	18
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	18
16	he	he		pro	3rd	sg							PRP	nsubjpass	18
17	's	be		vbaux									VBZ	auxpass	18
18	got	get	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls		causative		VBN	advcl	4
19	his	his		dt	poss	sg							PRP$	poss	20
20	brain	brain		nn									NN	dobj	18
21	in	in	in+advl	in	advl								IN	prep	18
22	in	in		in	in_othr								IN	prep	21
23	a	a											DT	pobj	22
24	in	in		in	in_othr								IN	prep	22
25	a	a		dt	art								DT	det	26
26	vat	vat		nn									NN	pobj	24
27	,	,											,	punct	18
28	and	and		cc	cls								CC	cc	18
29	his	his		dt	poss	sg							PRP$	poss	31
30	his	his		dt	poss	sg							PRP$	poss	31
31	body	body		nn									NN	nsubj	33
32	is	be		vbaux									VBZ	aux	33
33	walking	walk		vbmain	vblex	pres	prog	active					VBG	conj	18
34	all	all	rb+jjrbmod	rb	othr								RB	advmod	35
35	over	over	rb+advl	rb	advl								RB	advmod	33
36	and	and		cc	cls								CC	cc	33
37	he	he		pro	3rd	sg							PRP	nsubj	38
38	thinks	think		vbmain	vblex	pres	simple	active					VBZ	conj	33
39	well	well											UH	intj	44
40	,	,											,	punct	44
41	i	i		pro	1st	sg							PRP	nsubj	44
42	ca	can		vbaux	mod								MD	aux	44
43	n't	not											RB	neg	44
44	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	38
45	where	where		rb	advl								WRB	advmod	48
46	my	my		dt	poss								PRP$	poss	47
47	brain	brain		nn									NN	nsubj	48
48	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	44
49	.	.											.	punct	2

#sentid = 87
0	you	you		pro	2nd	sg							PRP	nsubj	1
1	put	put		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	my	my		dt	poss								PRP$	poss	3
3	brain	brain		nn									NN	dobj	1
4	in	in	in+advl	in	advl								IN	prep	1
5	prison	prison		nn									NN	pobj	4
6	,	,											,	punct	1
7	and	and		cc	cls								CC	cc	1
8	i	i		pro	1st	sg							PRP	nsubj	11
9	do	do		vbaux									VBP	aux	11
10	n't	not											RB	neg	11
11	care	care		vbmain	vblex	pres	simple	active					VB	conj	1
12	.	.											.	punct	11

#sentid = 88
0	i	i		pro	1st	sg							PRP	nsubj	1
1	seem	seem		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	9
2	to	to		to									TO	aux	3
3	be	be		vbmain	be	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	1
4	you	you		pro	2nd	sg							PRP	attr	3
5	,	,											,	punct	9
6	you	you		pro	2nd	sg							PRP	nsubj	7
7	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	9
8	it	it		pro	3rd	sg							PRP	nsubj	9
9	seems	seem		vbmain	vblex	pres	simple	active					VBZ	ROOT	9
10	obvious	obvious											JJ	oprd	9
11	that	that		comp	comp_that								IN	mark	15
12	where	where		comp	comp_wh								WRB	advmod	14
13	i	i		pro	1st	sg							PRP	nsubj	14
14	am	be		vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	csubj	15
15	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	9
16	,	,											,	punct	15
17	the	the		dt	art								DT	det	18
18	place	place	appos+npostmod	nn			nappos						NN	appos	13
19	where	where		rb	advl								WRB	advmod	21
20	i	i		pro	1st	sg							PRP	nsubj	21
21	see	see	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	18
22	feel	feel		vbmain	vblex	nonfinite	simple	active					VB	dep	23
23	hear	hear		vbmain	vblex	pres	simple	active					VBP	dep	21
24	touch	touch		nn									NN	nsubj	25
25	talk	talk		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	23
26	,	,											,	punct	18
27	you	you		pro	2nd	sg							PRP	nsubj	28
28	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	18
29	where	where		comp	comp_wh								WRB	advmod	32
30	my	my		dt	poss								PRP$	poss	31
31	body	body		nn									NN	nsubj	32
32	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	28
33	.	.											.	punct	9

#sentid = 89
0	so	so		rb	link								RB	advmod	3
1	,	,											,	punct	3
2	he	he		pro	3rd	sg							PRP	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	not	not											RB	neg	3
5	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	6
6	satisfied	satisfied		jj	pred								JJ	acomp	3
7	with	with	in+jcomp	in	jcomp								IN	prep	6
8	the	the		dt	art								DT	det	10
9	second	second	attr+npremod	jj	attr								JJ	amod	10
10	solution	solution		nn		nom							NN	pobj	7
11	either	either	rb+advl	rb	advl								RB	advmod	3
12	.	.											.	punct	3

#sentid = 90
0	a	a		dt	art								DT	det	2
1	third	third	attr+npremod	jj	attr								JJ	amod	2
2	solution	solution		nn		nom							NN	nsubj	3
3	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4													_SP	dep	3
5	i	i		pro	1st	sg							PRP	nsubj	6
6	am	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	3
7	wherever	wherever		rb	advl								WRB	advmod	12
8	my	my		dt	poss								PRP$	poss	9
9	point	point		nn									NN	nsubj	12
10	of	of	of+npostmod	in	nmod								IN	prep	9
11	view	view		nn									NN	pobj	10
12	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	6
13	.	.											.	punct	3

#sentid = 91
0	that	that	rb+jjrbmod	rb	othr								DT	advmod	1
1	is	is	rb+advl	rb	advl								RB	advmod	20
2	,	,											,	punct	20
3	wherever	wherever		rb	advl								WRB	advmod	5
4	it	it		pro	3rd	sg							PRP	nsubj	5
5	seems	seem	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	20
6	,	,											,	punct	5
7	to	to	in+advl	in	advl								IN	prep	5
8	me	i		pro	1st	sg							PRP	pobj	7
9	that	that											IN	mark	10
10	i	i	in+npostmod	in	nmod	sg							PRP	prep	8
11	,	,											,	punct	20
12	s-	s-											XX	dep	20
13	wherever	wherever											WRB	nsubj	14
14	seems	seem		vbmain	vblex	pres	simple	active					VBZ	dep	20
15	like	like		cs	cs_othr								IN	mark	20
16	here	here	rb+advl	rb	advl								RB	advmod	20
17	,	,											,	punct	20
18	to	to	in+advl	in	advl								IN	prep	20
19	me	i		pro	1st	sg							PRP	pobj	18
20	is	be		vbmain	be	pres	simple	active			other_advl		VBZ	ROOT	20
21	where	where		comp	comp_wh								WRB	advmod	23
22	i	i		pro	1st	sg							PRP	nsubj	23
23	am	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	20
24	.	.											.	punct	20

#sentid = 92
0	so	so		rb	othr								RB	advmod	2
1	,	,											,	punct	2
2	um	um											UH	ROOT	2
3	,	,											,	punct	2
4	if	if		cs	cnd								IN	mark	6
5	it	it		pro	3rd	sg							PRP	nsubj	6
6	seems	seem	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBZ	advcl	2
7	to	to	in+advl	in	advl								IN	prep	6
8	you	you		pro	2nd	sg							PRP	pobj	7
9	that	that		comp	comp_that								IN	mark	12
10	you	you		pro	2nd	sg							PRP	nsubj	12
11	're	be		vbaux									VBP	aux	12
12	walking	walk	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls	thatcls	vcomp		VBG	ccomp	6
13	around	around	in+advl	in	advl								IN	prep	12
14	,	,											,	punct	13
15	the	the		dt	art								DT	det	16
16	labs	lab		nn	pl								NNS	pobj	13
17	at	at	in+npostmod	in	nmod								IN	prep	16
18	Houston	houston		nn		proper							NNP	pobj	17
19	and	and		cc	cls								CC	cc	12
20	it	it		pro	3rd	sg							PRP	nsubj	23
21	does	do		vbaux									VBZ	aux	23
22	n't	not											RB	neg	23
23	seem	seem		vbmain	vblex	pres	simple	active					VB	conj	12
24	to	to	in+advl	in	advl								IN	prep	23
25	you	you		pro	2nd	sg							PRP	pobj	24
26	that	that		comp	comp_that								IN	mark	28
27	you	you		pro	2nd	sg							PRP	nsubj	28
28	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	23
29	in	in	in+advl	in	advl								IN	prep	28
30	this	this		dt	dt_dem								DT	det	31
31	tank	tank		nn									NN	pobj	29
32	of	of	of+npostmod	in	nmod								IN	prep	31
33	,	,											,	punct	32
34	nutrients	nutrient		nn	pl	nom							NNS	pobj	32
35	,	,											,	punct	32
36	floating	float	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	32
37	in	in	in+advl	in	advl								IN	prep	36
38	a	a		dt	art								DT	det	39
39	tank	tank		nn									NN	pobj	37
40	of	of	of+npostmod	in	nmod								IN	prep	39
41	r-	r-	nn+npremod	nn			npremod						NN	compound	42
42	nutrients	nutrient		nn	pl	nom							NNS	pobj	40
43	,	,											,	punct	6
44	and	and		cc	cls								CC	cc	6
45	that	that		pro	dem	sg							DT	nsubj	46
46	's	be		vbmain	be	pres	simple	active					VBZ	conj	6
47	the	the		dt	art								DT	det	48
48	way	way		nn									NN	attr	46
49	it	it		pro	3rd	sg							PRP	nsubj	50
50	seems	seem	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	48
51	to	to	in+advl	in	advl								IN	prep	50
52	Dennett	dennett		nn		proper							NNP	pobj	51
53	,	,											,	punct	50
54	when	when		rb	advl								WRB	advmod	58
55	his	his		dt	poss	sg							PRP$	poss	56
56	brain	brain		nn									NN	nsubjpass	58
57	is	be		vbaux									VBZ	auxpass	58
58	separated	separate	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls	whcls			VBN	advcl	50
59	from	from	in+advl	in	advl								IN	prep	58
60	his	his		dt	poss	sg							PRP$	poss	61
61	body	body		nn									NN	pobj	59
62	.	.											.	punct	46

#sentid = 93
0	well	well											UH	intj	4
1	then	then		rb	link								RB	advmod	4
2	,	,											,	punct	4
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	just	just	rb+advl	rb	advl								RB	advmod	4
6	in	in	in+advl	in	advl								IN	prep	4
7	virtue	virtue		nn									NN	pobj	6
8	of	of	of+npostmod	in	nmod								IN	prep	7
9	the	the		dt	art								DT	det	10
10	fact	fact		nn									NN	pobj	8
11	that	that		cs	cs_othr								IN	mark	13
12	it	it		pro	3rd	sg							PRP	nsubj	13
13	seems	seem	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBZ	advcl	30
14	to	to	in+advl	in	advl								IN	prep	13
15	you	you		pro	2nd	sg							PRP	pobj	14
16	that	that		cs	cs_othr								IN	mark	19
17	you	you		pro	2nd	sg							PRP	nsubj	19
18	're	be		vbaux									VBP	aux	19
19	walking	walk	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls				VBG	advcl	25
20	around	around	rb+advl	rb	advl								RB	advmod	19
21	that	that		comp	comp_that								IN	mark	25
22	that	that		comp	comp_that								IN	mark	25
23	you	you		pro	2nd	sg							PRP	nsubj	25
24	are	be		vbaux									VBP	aux	25
25	walking	walk	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls	thatcls	vcomp		VBG	ccomp	13
26	around	around	rb+advl	rb	advl								RB	advmod	25
27	,	,											,	punct	30
28	you	you		pro	2nd	sg							PRP	nsubjpass	30
29	're	be		vbaux									VBP	auxpass	30
30	located	locate		vbmain	vblex	pres	simple	pasv_agls	nmod_cls		ncomp	reldel	VBN	acl	10
31	where	where		rb	advl								WRB	advmod	33
32	it	it		pro	3rd	sg							PRP	nsubj	33
33	seems	seem	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	30
34	to	to	in+advl	in	advl								IN	prep	33
35	you	you		pro	2nd	sg							PRP	pobj	34
36	that	that		comp	comp_that								IN	mark	39
37	you	you		pro	2nd	sg							PRP	nsubjpass	39
38	're	be		vbaux									VBP	auxpass	39
39	located	locate	thatcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls	thatcls	vcomp		VBN	ccomp	33
40	.	.											.	punct	4

#sentid = 94
0	um	um											UH	intj	3
1	,	,											,	punct	3
2	he	he		pro	3rd	sg							PRP	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	not	not											RB	neg	3
5	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	6
6	satisfied	satisfied		jj	pred								JJ	acomp	3
7	with	with	in+jcomp	in	jcomp								IN	prep	6
8	that	that		dt	dt_dem								DT	det	9
9	one	one		nn	other	pl							NN	pobj	7
10	either	either	rb+advl	rb	advl								RB	advmod	3
11	.	.											.	punct	3

#sentid = 95
0	um	um											UH	intj	3
1	,	,											,	punct	3
2	he	he		pro	3rd	sg							PRP	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	a	a		dt	art								DT	det	6
5	little	little	attr+npremod	jj	attr								JJ	amod	6
6	bit	bit		nn									NN	npadvmod	7
7	worried	worried		jj	pred								JJ	acomp	3
8	about	about	in+jcomp	in	jcomp								IN	prep	7
9	it	it		pro	3rd	sg							PRP	pobj	8
10	,	,											,	punct	3
11	partly	partly	rb+advl	rb	advl	ly							RB	advmod	14
12	because	because		cs	cos								IN	mark	14
13	he	he		pro	3rd	sg							PRP	nsubj	14
14	thinks	think	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBZ	advcl	3
15	well	well											UH	intj	20
16	,	,											,	punct	20
17	ca	can		vbaux	mod								MD	aux	20
18	n't	not											RB	neg	20
19	i	i		pro	1st	sg							PRP	nsubj	20
20	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	14
21	wrong	wrong		jj	pred								JJ	acomp	20
22	about	about	in+jcomp	in	jcomp								IN	prep	21
23	where	where		comp	comp_wh								WRB	advmod	26
24	,	,											,	punct	26
25	i	i		pro	1st	sg							PRP	nsubj	26
26	am	be	whcls+incomp	vbmain	be	pres	simple	active	compcls	whcls	incomp		VBP	pcomp	22
27	?	?											.	punct	20

#sentid = 96
0	ca	can		vbaux	mod								MD	aux	8
1	n't	not											RB	neg	8
2	it	it		pro	3rd	sg							PRP	nsubj	3
3	be	be		vbmain	be	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	8
4	,	,											,	punct	8
5	ca	can		vbaux	mod								MD	aux	8
6	n't	not											RB	neg	8
7	i	i		pro	1st	sg							PRP	nsubj	8
8	make	make		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	8
9	mistakes	mistake		nn	pl								NNS	dobj	8
10	about	about	in+npostmod	in	nmod								IN	prep	9
11	this	this		pro	dem	sg							DT	pobj	10
12	?	?											.	punct	8

#sentid = 97
0	and	and		cc	cls								CC	cc	3
1	you	you		pro	2nd	sg							PRP	nsubj	3
2	could	could		vbaux	mod	pos							MD	aux	3
3	think	think		vbmain	prepv	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	7
4	about	about	in+advl	in	advl								IN	prep	3
5	,	,											,	punct	7
6	he	he		pro	3rd	sg							PRP	nsubj	7
7	mentions	mention		vbmain	vblex	pres	simple	active					VBZ	ROOT	7
8	these	these		dt	dt_dem								DT	det	9
9	illusions	illusion		nn	pl								NNS	dobj	7
10	that	that		pro	dem	sg							WDT	dobj	13
11	you	you		pro	2nd	sg							PRP	nsubj	13
12	can	can		vbaux	mod	pos							MD	aux	13
13	have	have	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel		VB	relcl	9
14	,	,											,	punct	13
15	with	with	in+advl	in	advl								IN	prep	13
16	um	um											UH	intj	15
17	,	,											,	punct	19
18	you	you		pro	2nd	sg							PRP	nsubj	19
19	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	15
20	,	,											,	punct	19
21	simulated	simulate	attr+npremod	jj	attr	ed							VBN	amod	24
22	mechanical	mechanical	attr+npremod	jj	attr								JJ	amod	24
23	,	,											,	punct	24
24	arms	arm		nn	pl								NNS	pobj	15
25	and	and		cc	phrs								CC	cc	24
26	so	so	rb+jjrbmod	rb	othr								RB	advmod	27
27	on	on											RB	conj	24
28	.	.											.	punct	7

#sentid = 98
0	where	where		rb	advl								WRB	advmod	29
1	you	you		pro	2nd	sg							PRP	nsubj	3
2	actually	actually	rb+advl	rb	advl	ly							RB	advmod	3
3	feel	feel		vbmain	vblex	pres	simple	active					VBP	ROOT	3
4	the	the		dt	art								DT	det	5
5	tension	tension		nn									NN	dobj	3
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	the	the											DT	pcomp	6
8	um	um											UH	intj	6
9	,	,											,	punct	6
10	of	of	of+npostmod	in	nmod								IN	prep	5
11	the	the		dt	art								DT	det	13
12	the	the		dt	art								DT	det	13
13	resistance	resistance		nn		nom							NN	pobj	10
14	of	of	of+npostmod	in	nmod								IN	prep	13
15	the	the		dt	art								DT	det	16
16	object	object		nn									NN	pobj	14
17	you	you		pro	2nd	sg							PRP	nsubj	19
18	're	be		vbaux									VBP	aux	19
19	trying	try	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel	reldel	VBG	relcl	16
20	to	to		to									TO	aux	21
21	move	move	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	19
22	,	,											,	punct	3
23	and	and		cc	cls								CC	cc	3
24	you	you		pro	2nd	sg							PRP	nsubj	26
25	can	can		vbaux	mod	pos							MD	aux	26
26	s-	s-											XX	dep	29
27	you	you		pro	2nd	sg							PRP	nsubj	29
28	can	can		vbaux	mod	pos							MD	aux	29
29	feel	feel		vbmain	vblex	vp_w_modal	simple	active					VB	conj	3
30	the	the		dt	art								DT	det	36
31	um	um											UH	intj	36
32	,	,											,	punct	36
33	um	um											UH	intj	32
34	,	,											,	punct	36
35	the	the		dt	art								DT	det	36
36	drag	drag		nn									NN	dobj	29
37	and	and		cc	phrs								CC	cc	36
38	pull	pull		nn									NN	conj	36
39	of	of	of+npostmod	in	nmod								IN	prep	36
40	of	of											IN	pobj	39
41	,	,											,	punct	36
42	the	the		dt	art								DT	det	44
43	mechanical	mechanical	attr+npremod	jj	attr								JJ	amod	44
44	devices	device	appos+npostmod	nn	pl		nappos						NNS	appos	36
45	that	that		pro	dem	sg							WDT	dobj	48
46	you	you		pro	2nd	sg							PRP	nsubj	48
47	're	be		vbaux									VBP	aux	48
48	manipulating	manipulate	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel		VBG	relcl	44
49	,	,											,	punct	29
50	and	and		cc	cls								CC	cc	29
51	you	you		pro	2nd	sg							PRP	nsubj	52
52	project	project		vbmain	vblex	pres	simple	active					VBP	conj	29
53	yourself	yourself		pro	2nd								PRP	dobj	52
54	into	into	in+advl	in	advl								IN	prep	52
55	the	the		dt	art								DT	det	57
56	mechanical	mechanical	attr+npremod	jj	attr								JJ	amod	57
57	device	device		nn									NN	pobj	54
58	.	.											.	punct	3

#sentid = 99
0	but	but		cc	cls								CC	cc	7
1	,	,											,	punct	3
2	he	he		pro	3rd	sg							PRP	nsubj	3
3	says	say		vbmain	vblex	pres	simple	active					VBZ	parataxis	7
4	,	,											,	punct	3
5	that	that		pro	dem	sg							DT	nsubj	7
6	would	would		vbaux	mod	prd							MD	aux	7
7	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	7
8	just	just	rb+advl	rb	advl								RB	advmod	11
9	,	,											,	punct	11
10	a	a		dt	art								DT	det	11
11	seeming	seem		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	attr	7
12	.	.											.	punct	7

#sentid = 100
0	even	even	rb+advl	rb	advl								RB	advmod	3
1	if	if		cs	cnd								IN	mark	3
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	identified	identify	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	52
4	fully	fully	rb+advl	rb	advl	ly							RB	advmod	3
5	with	with	in+advl	in	advl								IN	prep	3
6	this	this		dt	dt_dem								DT	det	10
7	mechanical	mechanical	attr+npremod	jj	attr								JJ	amod	10
8	these	these		dt	dt_dem								DT	det	10
9	mechanical	mechanical	attr+npremod	jj	attr								JJ	amod	10
10	arms	arm		nn	pl								NNS	pobj	5
11	,	,											,	punct	52
12	if	if		cs	cnd								IN	mark	14
13	you	you		pro	2nd	sg							PRP	nsubj	14
14	are	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBP	advcl	52
15	in	in	in+advl	in	advl								IN	prep	14
16	a	a		dt	art								DT	det	17
17	body	body		nn									NN	pobj	15
18	,	,											,	punct	17
19	you	you		pro	2nd	sg							PRP	nsubj	20
20	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	17
21	sitting	sit	ingcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	17
22	on	on	in+advl	in	advl								IN	prep	21
23	,	,											,	punct	22
24	say	say											UH	intj	17
25	a	a		dt	art								DT	det	26
26	boat	boat	appos+npostmod	nn			nappos						NN	appos	17
27	and	and		cc	cls								CC	cc	14
28	you	you		pro	2nd	sg							PRP	nsubj	30
29	're	be		vbaux									VBP	aux	30
30	manipulating	manipulate		vbmain	vblex	pres	prog	active					VBG	conj	14
31	mechanical	mechanical	attr+npremod	jj	attr								JJ	amod	32
32	arms	arm		nn	pl								NNS	dobj	30
33	undersea	undersea	rb+advl	rb	advl								RB	advmod	30
34	,	,											,	punct	30
35	under	under	in+advl	in	advl								IN	prep	30
36	the	the											DT	pobj	35
37	,	,											,	punct	30
38	in	in	in+advl	in	advl								IN	prep	30
39	a	a											DT	pobj	38
40	in	in		in	in_othr								IN	prep	38
41	a	a		dt	art								DT	det	42
42	device	device		nn									NN	pobj	40
43	that	that		relpro	relpro_that	sg							WDT	nsubj	45
44	's	be		vbaux									VBZ	aux	45
45	crawling	crawl	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls	thatcls	rel		VBG	relcl	42
46	on	on	in+advl	in	advl								IN	prep	45
47	the	the		dt	art								DT	det	49
48	ocean	ocean	nn+npremod	nn			npremod						NN	compound	49
49	floor	floor		nn		nom							NN	pobj	46
50	,	,											,	punct	52
51	it	it		pro	3rd	sg							PRP	nsubj	52
52	seems	seem		vbmain	vblex	pres	simple	active					VBZ	ROOT	52
53	right	right											JJ	oprd	52
54	to	to		to									TO	aux	55
55	say	say	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	52
56	that	that		comp	comp_that								IN	mark	60
57	,	,											,	punct	60
58	it	it		pro	3rd	sg							PRP	nsubj	60
59	may	may		vbaux	mod	pos							MD	aux	60
60	seem	seem	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	55
61	to	to	in+advl	in	advl								IN	prep	60
62	you	you		pro	2nd	sg							PRP	pobj	61
63	that	that		cs	cs_othr								IN	mark	65
64	you	you		pro	2nd	sg							PRP	nsubj	65
65	are	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBP	advcl	69
66	,	,											,	punct	69
67	that	that		cs	cs_othr								IN	mark	69
68	you	you		pro	2nd	sg							PRP	nsubj	69
69	're	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBP	advcl	60
70	down	down	rb+advl	rb	advl								RB	advmod	69
71	on	on		in	in_othr								IN	prep	70
72	the	the		dt	art								DT	det	74
73	ocean	ocean	nn+npremod	nn			npremod						NN	compound	74
74	floor	floor		nn		nom							NN	pobj	71
75	.	.											.	punct	52

#sentid = 101
0	but	but		cc	cls								CC	cc	15
1	in	in	in+advl	in	advl								IN	prep	15
2	fact	fact		nn									NN	pobj	1
3	,	,											,	punct	15
4	you	you		pro	2nd	sg							PRP	nsubj	15
5	really	really	rb+advl	rb	advl	ly							RB	advmod	15
6	are	be		vbaux									VBP	aux	15
7	,	,											,	punct	15
8	up	up	rb+advl	rb	advl		splaux						RB	advmod	15
9	on	on		in	in_othr								IN	prep	8
10	the	the											DT	pobj	9
11	on	on		in	in_othr								IN	prep	8
12	the	the		dt	art								DT	det	13
13	boat	boat		nn									NN	pobj	11
14	,	,											,	punct	15
15	manipulating	manipulate		vbmain	vblex	pres	prog	active					VBG	ROOT	15
16	these	these		dt	dt_dem								DT	det	17
17	things	thing		nn	pl	nom							NNS	dobj	15
18	.	.											.	punct	15

#sentid = 102
0	so	so		rb	link								RB	advmod	3
1	,	,											,	punct	3
2	he	he		pro	3rd	sg							PRP	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	worried	worried		jj	pred								JJ	acomp	3
5	that	that		comp	comp_that								IN	mark	23
6	the	the											DT	dep	23
7	,	,											,	punct	23
8	wherever	wherever		rb	advl								WRB	advmod	23
9	,	,											,	punct	23
10	the	the		dt	art								DT	det	11
11	view	view		nn									NN	nsubj	23
12	that	that		relpro	relpro_that								IN	mark	17
13	your	your		dt	poss								PRP$	poss	14
14	point	point		nn									NN	nsubj	17
15	of	of	of+npostmod	in	nmod								IN	prep	14
16	view	view		nn									NN	pobj	15
17	is	be	thatcls+ncomp	vbmain	be	pres	simple	active	nmod_cls	thatcls	ncomp		VBZ	acl	11
18	where	where		comp	comp_wh								WRB	advmod	20
19	you	you		pro	2nd	sg							PRP	nsubj	20
20	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	17
21	,	,											,	punct	23
22	must	must		vbaux	mod	nec							MD	aux	23
23	be	be		vbmain	be	vp_w_modal	simple	active	compcls	whcls	jcomp		VB	ccomp	4
24	wrong	wrong		jj	pred								JJ	acomp	23
25	because	because		cs	cos								IN	mark	28
26	you	you		pro	2nd	sg							PRP	nsubj	28
27	can	can		vbaux	mod	pos							MD	aux	28
28	be	be	finitecls+advl	vbmain	be	vp_w_modal	simple	active	advlcls		causative		VB	advcl	23
29	wrong	wrong		jj	pred								JJ	acomp	28
30	about	about	in+jcomp	in	jcomp								IN	prep	29
31	,	,											,	punct	30
32	um	um											UH	intj	30
33	you	you		pro	2nd	sg							PRP	nsubj	35
34	can	can		vbaux	mod	pos							MD	aux	35
35	have	have	thatcls+jcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		jcomp	compdel	VB	ccomp	4
36	these	these		dt	dt_dem								DT	det	37
37	illusions	illusion		nn	pl								NNS	dobj	35
38	about	about	in+npostmod	in	nmod								IN	prep	37
39	where	where		comp	comp_wh								WRB	advmod	41
40	you	you		pro	2nd	sg							PRP	nsubj	41
41	are	be	whcls+incomp	vbmain	be	pres	simple	active	compcls	whcls	incomp		VBP	pcomp	38
42	.	.											.	punct	3

#sentid = 103
0	um	um											UH	intj	15
1	so	so		rb	link								RB	advmod	15
2	,	,											,	punct	15
3	then	then		rb	link								RB	advmod	15
4	around	around	in+advl	in	advl								IN	prep	15
5	uh	uh											UH	intj	4
6	,	,											,	punct	4
7	page	page		nn		nom							NN	pobj	4
8	two	two											CD	nummod	7
9	-	-											HYPH	punct	7
10	twenty	twenty											CD	nummod	7
11	-	-											HYPH	punct	7
12	one	one											CD	nummod	7
13	,	,											,	punct	15
14	he	he		pro	3rd	sg							PRP	nsubj	15
15	comes	come		vbmain	phrsv	pres	simple	active					VBZ	ROOT	15
16	up	up		rb	prtcle								RP	prt	15
17	with	with	in+advl	in	advl								IN	prep	15
18	a	a		dt	art								DT	det	20
19	new	new	attr+npremod	jj	attr								JJ	amod	20
20	idea	idea		nn									NN	pobj	17
21	.	.											.	punct	15

#sentid = 104
0	this	this		pro	dem	sg							DT	nsubj	1
1	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	as	as		cs	cs_othr								IN	mark	7
3	his	his		dt	poss	sg							PRP$	poss	5
4	b-	b-	nn+npremod	nn			npremod						NN	compound	5
5	body	body		nn									NN	nsubj	7
6	is	be		vbaux									VBZ	aux	7
7	flying	fly	finitecls+advl	vbmain	phrsv	pres	prog	active	advlcls		other_advl		VBG	advcl	1
8	off	off		rb	prtcle								RP	prt	7
9	to	to		cs	cs_othr								TO	mark	11
10	to	to		to									TO	aux	11
11	go	go	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls	other_advl		VB	advcl	7
12	recover	recover		vbmain	vblex	nonfinite	simple	active	advlcls				VB	advcl	11
13	the	the		dt	art								DT	det	14
14	m-	m-											XX	dobj	12
15	the	the		dt	art								DT	det	16
16	missile	missile		nn									NN	dobj	12
17	.	.											.	punct	1

#sentid = 105
0	he	he		pro	3rd	sg							PRP	nsubj	1
1	says	say		vbmain	vblex	pres	simple	active					VBZ	ROOT	1
2	okay	okay											UH	intj	1
3	.	.											.	punct	1

#sentid = 106
0	i	i		pro	1st	sg							PRP	nsubj	2
1	'm	be		vbaux									VBP	aux	2
2	getting	get		vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	19
3	used	used		jj	pred								JJ	acomp	2
4	to	to	in+jcomp	in	jcomp								IN	prep	3
5	this	this		pro	dem	sg							DT	pobj	4
6	now	now	rb+advl	rb	advl								RB	advmod	2
7	,	,											,	punct	19
8	it	it		pro	3rd	sg							PRP	nsubj	9
9	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	19
10	not	not											RB	neg	9
11	such	such											PDT	predet	14
12	a	a		dt	art								DT	det	14
13	great	great	attr+npremod	jj	attr								JJ	amod	14
14	conundrum	conundrum		nn									NN	attr	9
15	,	,											,	punct	19
16	i	i		pro	1st	sg							PRP	nsubj	19
17	do	do		vbaux									VBP	aux	19
18	n't	not											RB	neg	19
19	have	have		vbmain	vblex	pres	simple	active					VB	ROOT	19
20	to	to		to									TO	aux	21
21	choose	choose		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	19
22	,	,											,	punct	21
23	between	between	in+advl	in	advl								IN	prep	21
24	,	,											,	punct	23
25	the	the		dt	art								DT	det	26
26	location	location		nn		nom							NN	pobj	23
27	of	of	of+npostmod	in	nmod								IN	prep	26
28	my	my		dt	poss								PRP$	poss	29
29	body	body		nn									NN	pobj	27
30	and	and		cc	phrs								CC	cc	26
31	the	the		dt	art								DT	det	32
32	location	location		nn		nom							NN	conj	26
33	of	of	of+npostmod	in	nmod								IN	prep	32
34	my	my		dt	poss								PRP$	poss	35
35	brain	brain		nn									NN	pobj	33
36	.	.											.	punct	19

#sentid = 107
0	i	i		pro	1st	sg							PRP	nsubj	3
1	can	can		vbaux	mod	pos							MD	aux	3
2	just	just	rb+advl	rb	advl		splaux						RB	advmod	3
3	think	think		vbmain	prepv	vp_w_modal	simple	active					VB	ROOT	3
4	of	of	in+advl	in	advl								IN	prep	3
5	myself	myself		pro	1st	sg							PRP	pobj	4
6	as	as		cs	cs_othr								IN	mark	7
7	composed	compose	edcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	edcls	other_advl		VBN	advcl	3
8	of	of	in+advl	in	advl								IN	prep	7
9	both	both											CC	preconj	10
10	body	body		nn									NN	pobj	8
11	and	and		cc	phrs								CC	cc	10
12	brain	brain		nn									NN	conj	10
13	.	.											.	punct	3

#sentid = 108
0	so	so		rb	link								RB	advmod	11
1	,	,											,	punct	11
2	i	i		pro	1st	sg							PRP	nsubj	11
3	'm	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	11
4	,	,											,	punct	6
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	11
7	,	,											,	punct	6
8	part	part		nn									NN	nsubj	11
9	of	of	of+npostmod	in	nmod								IN	prep	8
10	me	i		pro	1st	sg							PRP	pobj	9
11	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	11
12	in	in	in+advl	in	advl								IN	prep	11
13	Houston	houston		nn		proper							NNP	pobj	12
14	.	.											.	punct	11

#sentid = 109
0	and	and		cc	cls								CC	cc	4
1	part	part		nn									NN	nsubj	4
2	of	of	of+npostmod	in	nmod								IN	prep	1
3	me	i		pro	1st	sg							PRP	pobj	2
4	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	_	_											NFP	punct	4
6	where	where		rb	advl								WRB	advmod	7
7	was	be		vbaux									VBD	aux	9
8	he	he		pro	3rd	sg							PRP	nsubj	9
9	flying	fly	thatcls+vcomp	vbmain	vblex	past	prog	active	compcls		vcomp	compdel	VBG	ccomp	4
10	off	off	rb+advl	rb	advl								RB	advmod	9
11	to	to		in	in_othr								IN	prep	10
12	Phoenix	phoenix		nn		proper							NNP	pobj	11
13	?	?											.	punct	4

#sentid = 110
0	someplace	someplace											RB	ROOT	0
1	else	else	rb+jjrbmod	rb	othr								RB	advmod	0
2	.	.											.	punct	0

#sentid = 111
0	so	so		rb	link								RB	advmod	4
1	y-	y-											XX	dep	0
2	and	and		cc	phrs								CC	cc	4
3	i	i		pro	1st	sg							PRP	nsubj	4
4	'm	be		vbmain	be	pres	simple	active					VBP	ROOT	4
5	in	in	in+advl	in	advl								IN	prep	4
6	both	both		dt									DT	det	7
7	places	place		nn	pl								NNS	pobj	5
8	.	.											.	punct	4

#sentid = 112
0	i	i		pro	1st	sg							PRP	nsubj	1
1	'm	be		vbmain	be	pres	simple	active					VBP	ROOT	1
2	partly	partly		rb	othr	ly							RB	advmod	3
3	in	in	in+advl	in	advl								IN	prep	1
4	one	one											CD	nummod	5
5	place	place		nn									NN	pobj	3
6	and	and		cc									CC	cc	3
7	partly	partly		rb	othr	ly							RB	advmod	8
8	in	in											IN	conj	3
9	the	the		dt	art								DT	det	11
10	other	other	attr+npremod	jj	attr								JJ	amod	11
11	place	place		nn									NN	pobj	8
12	.	.											.	punct	1

#sentid = 113
0	so	so	rb+jjrbmod	rb	othr								RB	advmod	2
1													_SP	dep	0
2	so	so		rb	link								RB	advmod	10
3	,	,											,	punct	10
4	on	on	in+advl	in	advl								IN	prep	10
5	this	this		dt	dt_dem								DT	det	6
6	view	view		nn									NN	pobj	4
7	i	i		pro	1st	sg							PRP	nsubj	10
8	do	do		vbaux									VBP	aux	10
9	n't	not											RB	neg	10
10	have	have		vbmain	vblex	pres	simple	active					VB	ROOT	10
11	to	to		to									TO	aux	12
12	choose	choose		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	10
13	.	.											.	punct	10

#sentid = 114
0	i	i		pro	1st	sg							PRP	nsubjpass	2
1	'm	be		vbaux									VBP	auxpass	2
2	composed	compose		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	2
3	of	of	in+advl	in	advl								IN	prep	2
4	both	both											CC	preconj	6
5	my	my		dt	poss								PRP$	poss	6
6	body	body		nn									NN	pobj	3
7	and	and		cc	phrs								CC	cc	6
8	my	my		dt	poss								PRP$	poss	9
9	brain	brain		nn									NN	conj	6
10	...	...											:	punct	2

#sentid = 115
0	it	it		pro	3rd	sg							PRP	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	like	like	in+advl	in	advl								IN	prep	1
3	,	,											,	punct	2
4	uh	uh											UH	intj	2
5	a	a		dt	art								DT	det	10
6	great	great	attr+npremod	jj	attr								JJ	amod	10
7	big	big	attr+npremod	jj	attr								JJ	amod	10
8	scattered	scatter	attr+npremod	jj	attr	ed							VBN	amod	10
9	,	,											,	punct	10
10	device	device		nn									NN	pobj	2
11	.	.											.	punct	1

#sentid = 116
0	we	we		pro	1st								PRP	nsubj	3
1	can	can		vbmain	vblex	vp_w_modal	simple	active					MD	dep	3
2	we	we		pro	1st								PRP	nsubj	3
3	're	be		vbmain	be	pres	simple	active					VBP	ROOT	3
4	familiar	familiar		jj	pred								JJ	acomp	3
5	with	with	in+jcomp	in	jcomp								IN	prep	4
6	various	various	attr+npremod	jj	attr								JJ	amod	9
7	,	,											,	punct	9
8	um	um											UH	intj	9
9	machines	machine		nn	pl								NNS	pobj	5
10	that	that		relpro	relpro_that	sg							WDT	nsubjpass	13
11	can	can		vbaux	mod	pos							MD	aux	13
12	be	be		vbaux									VB	auxpass	13
13	located	locate	finitecls+rel	vbmain	vblex	vp_w_modal	simple	pasv_agls	nmod_cls	thatcls	rel		VBN	relcl	9
14	in	in	in+advl	in	advl								IN	prep	13
15	different	different	attr+npremod	jj	attr								JJ	amod	16
16	places	place		nn	pl								NNS	pobj	14
17	.	.											.	punct	3

#sentid = 117
0	you	you		pro	2nd	sg							PRP	nsubj	1
1	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	a	a		dt	art								DT	det	4
3	power	power	nn+npremod	nn		nom	npremod						NN	compound	4
4	plant	plant		nn		nom							NN	dobj	1
5	and	and		cc	phrs								CC	cc	1
6	um	um											UH	intj	11
7	,	,											,	punct	11
8	it	it		pro	3rd	sg							PRP	nsubjpass	11
9	might	might		vbaux	mod	pos							MD	aux	11
10	be	be		vbaux									VB	auxpass	11
11	connected	connect		vbmain	phrsv	vp_w_modal	simple	pasv_agls					VBN	conj	1
12	up	up		rb	prtcle								RP	prt	11
13	with	with	in+advl	in	advl								IN	prep	11
14	some	some		dt									DT	det	19
15	other	other	attr+npremod	jj	attr								JJ	amod	19
16	,	,											,	punct	19
17	power	power		nn		nom							NN	npadvmod	18
18	generating	generate	attr+npremod	jj	attr	ing							VBG	amod	19
19	source	source		nn									NN	pobj	13
20	,	,											,	punct	11
21	and	and		cc	cls								CC	cc	11
22	both	both											DT	nsubj	28
23	of	of		in	in_othr								IN	prep	22
24	them	they		pro	pl								PRP	pobj	23
25	,	,											,	punct	28
26	together	together	rb+advl	rb	advl								RB	advmod	28
27	,	,											,	punct	28
28	constitute	constitute		vbmain	vblex	pres	simple	active					VBP	conj	11
29	the	the		dt	art								DT	det	33
30	power	power		nn		nom							NN	npadvmod	32
31	-	-											HYPH	punct	32
32	generating	generate	attr+npremod	jj	attr	ing							VBG	amod	33
33	machine	machine		nn									NN	dobj	28
34	.	.											.	punct	28

#sentid = 118
0	or	or		cc	cls								CC	cc	4
1	,	,											,	punct	4
2	you	you		pro	2nd	sg							PRP	nsubj	4
3	can	can		vbaux	mod	pos							MD	aux	4
4	think	think		vbmain	prepv	vp_w_modal	simple	active					VB	ROOT	4
5	of	of	in+advl	in	advl								IN	prep	4
6	a	a		dt	art								DT	det	8
7	,	,											,	punct	8
8	one	one		pro	other	pl							CD	pobj	5
9	of	of		in	in_othr								IN	prep	8
10	those	those		dt	dt_dem								DT	det	14
11	little	little	attr+npremod	jj	attr								JJ	amod	14
12	s-	s-											XX	nmod	14
13	tiny	tiny	attr+npremod	jj	attr								JJ	amod	14
14	sailboats	sailboat		nn	pl								NNS	pobj	9
15	that	that		pro	dem	sg							WDT	dobj	18
16	it	it		pro	3rd	sg							PRP	nsubjpass	18
17	's	be		vbaux									VBZ	auxpass	18
18	controlled	control	finitecls+rel	vbmain	vblex	pres	simple	pasv_by	nmod_cls		rel		VBN	relcl	14
19	by	by											IN	agent	18
20	a	a		dt	art								DT	det	25
21	remote	remote	attr+npremod	jj	attr								JJ	amod	22
22	control	control	nn+npremod	nn			npremod						NN	nmod	25
23	uh	uh											UH	intj	25
24	,	,											,	punct	25
25	operator	operator		nn		nom							NN	pobj	19
26	.	.											.	punct	4

#sentid = 119
0	well	well											UH	intj	17
1	,	,											,	punct	17
2	the	the		dt	art								DT	det	5
3	,	,											,	punct	5
4	the	the		dt	art								DT	det	5
5	device	device		nn									NN	nsubjpass	17
6	,	,											,	punct	5
7	you	you		pro	2nd	sg							PRP	nsubj	8
8	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	5
9	the	the		dt	art								DT	det	10
10	sail	sail	appos+npostmod	nn			nappos						NN	appos	5
11	,	,											,	punct	10
12	the	the		dt	art								DT	det	14
13	mechanical	mechanical	attr+npremod	jj	attr								JJ	amod	14
14	sailboat	sailboat	appos+npostmod	nn			nappos						NN	appos	5
15	,	,											,	punct	17
16	is	be		vbaux									VBZ	auxpass	17
17	located	locate		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	17
18	both	both											CC	preconj	19
19	in	in	in+advl	in	advl								IN	prep	17
20	the	the		dt	art								DT	det	21
21	hand	hand		nn									NN	pobj	19
22	of	of	of+npostmod	in	nmod								IN	prep	21
23	the	the		dt	art								DT	det	24
24	person	person		nn									NN	pobj	22
25	who	who		relpro	relpro_wh								WP	nsubj	27
26	's	be		vbaux									VBZ	aux	27
27	manipulating	manipulate	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls	whcls	rel		VBG	relcl	24
28	it	it		pro	3rd	sg							PRP	dobj	27
29	,	,											,	punct	19
30	and	and		cc									CC	cc	19
31	,	,											,	punct	19
32	partly	partly		rb	othr	ly							RB	advmod	19
33	,	,											,	punct	19
34	on	on											IN	conj	19
35	th-	th-											XX	pobj	34
36	on	on		in	in_othr								IN	prep	34
37	the	the		dt	art								DT	det	38
38	l-	l-											XX	meta	41
39	um	um											UH	intj	41
40	the	the		dt	art								DT	det	41
41	pond	pond		nn									NN	pobj	36
42	where	where		rb	advl								WRB	advmod	49
43	the	the		dt	art								DT	det	44
44	sailboat	sailboat		nn									NN	nsubjpass	49
45	is	be		vbaux									VBZ	aux	49
46	being	be		vbaux									VBG	auxpass	49
47	,	,											,	punct	49
48	uh	uh											UH	intj	49
49	driven	drive	finitecls+rel	vbmain	vblex	pres	simple	pasv_agls	nmod_cls	whcls	rel		VBN	relcl	41
50	around	around	in+advl	in	advl								IN	prep	49
51	.	.											.	punct	17

#sentid = 120
0	the	the		dt	art								DT	det	1
1	device	device		nn									NN	nsubj	2
2	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	14
3	in	in	in+advl	in	advl								IN	prep	14
4	,	,											,	punct	3
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	3
7	it	it		pro	3rd	sg							PRP	nsubj	8
8	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	14
9	a	a		dt	art								DT	det	11
10	scattered	scatter	attr+npremod	jj	attr	ed							VBN	amod	11
11	device	device		nn									NN	attr	8
12	,	,											,	punct	14
13	it	it		pro	3rd	sg							PRP	nsubj	14
14	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	14
15	in	in	in+advl	in	advl								IN	prep	14
16	two	two											CD	nummod	17
17	places	place		nn	pl								NNS	pobj	15
18	.	.											.	punct	14

#sentid = 121
0	similarly	similarly	rb+advl	rb	advl	ly							RB	advmod	2
1	he	he		pro	3rd	sg							PRP	nsubj	2
2	thinks	think		vbmain	vblex	pres	simple	active					VBZ	ROOT	2
3	okay	okay											UH	intj	6
4	,	,											,	punct	6
5	i	i		pro	1st	sg							PRP	nsubj	6
6	'm	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	2
7	both	both		dt									DT	det	8
8	brain	brain		nn									NN	attr	6
9	and	and		cc	phrs								CC	cc	8
10	body	body		nn									NN	conj	8
11	.	.											.	punct	2

#sentid = 122
0	so	so		rb	link								RB	advmod	4
1	i	i		pro	1st	sg							PRP	nsubj	4
2	do	do		vbaux									VBP	aux	4
3	n't	not											RB	neg	4
4	have	have		vbmain	vblex	pres	simple	active					VB	ROOT	4
5	to	to		to									TO	aux	6
6	choose	choose		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	4
7	...	...											:	punct	4

#sentid = 123
0	but	but		cc	cls								CC	cc	3
1	,	,											,	punct	3
2	he	he		pro	3rd	sg							PRP	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	meta	7
4	no-	no-											RB	punct	3
5	he	he		pro	3rd	sg							PRP	nsubj	7
6	's	's											POS	dep	7
7	fails	fail		vbmain	vblex	pres	simple	active					VBZ	ROOT	7
8	to	to		to									TO	aux	10
9	be	be		vbaux									VB	auxpass	10
10	satisfied	satisfy	tocls+vcomp	vbmain	vblex	nonfinite	simple	pasv_agls	compcls	tocls	vcomp		VBN	xcomp	7
11	with	with	in+advl	in	advl								IN	prep	10
12	that	that		pro	dem	sg							DT	pobj	11
13	,	,											,	punct	7
14	after	after		cs	cs_othr								IN	mark	18
15	,	,											,	punct	18
16	his	his		dt	poss	sg							PRP$	poss	17
17	body	body		nn									NN	nsubj	18
18	goes	go	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	7
19	,	,											,	punct	18
20	on	on	in+advl	in	advl								IN	prep	18
21	the	the		dt	art								DT	det	22
22	fritz	fritz		nn									NN	pobj	20
23	.	.											.	punct	7

#sentid = 124
0	so	so		rb	link								RB	advmod	15
1	around	around	in+advl	in	advl								IN	prep	15
2	page	page		nn		nom							NN	pobj	1
3	two	two											CD	nummod	2
4	-	-											HYPH	punct	2
5	twenty	twenty											CD	nummod	2
6	-	-											HYPH	punct	2
7	four	four											CD	nummod	2
8	,	,											,	punct	10
9	he	he		pro	3rd	sg							PRP	nsubj	10
10	says	say		vbmain	vblex	pres	simple	active					VBZ	parataxis	15
11	,	,											,	punct	10
12	his	his		dt	poss	sg							PRP$	poss	14
13	his	his		dt	poss	sg							PRP$	poss	14
14	body	body		nn									NN	nsubj	15
15	starts	start		vbmain	vblex	pres	simple	active					VBZ	ROOT	15
16	losing	lose	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	15
17	contact	contact		nn									NN	dobj	16
18	with	with	in+npostmod	in	nmod								IN	prep	17
19	his	his		dt	poss	sg							PRP$	poss	20
20	brain	brain		nn									NN	pobj	18
21	,	,											,	punct	16
22	and	and		cc	phrs								CC	cc	15
23	you	you		pro	2nd	sg							PRP	nsubj	24
24	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	32
25	one	one											CD	npadvmod	32
26	by	by		in	in_othr								IN	prep	25
27	one	one		pro	other	pl							CD	pobj	26
28	the	the		dt	art								DT	det	29
29	connections	connection		nn	pl	nom							NNS	nsubjpass	32
30	are	be		vbaux									VBP	auxpass	32
31	,	,											,	punct	32
32	severed	sever		vbmain	vblex	pres	simple	pasv_agls					VBN	conj	15
33	and	and		cc	cls								CC	cc	32
34	he	he		pro	3rd	sg							PRP	nsubj	36
35	's	's											POS	dep	36
36	gets	get		vbmain	vblex	pres	simple	active					VBZ	conj	32
37	this	this		dt	dt_dem								DT	det	38
38	feeling	feeling		nn		nom							NN	dobj	36
39	of	of	of+npostmod	in	nmod								IN	prep	38
40	complete	complete											JJ	pobj	39
41	,	,											,	punct	40
42	panic	panic		nn									NN	conj	40
43	,	,											,	punct	42
44	and	and		cc	phrs								CC	cc	42
45	um	um											UH	intj	42
46	,	,											,	punct	45
47	and	and		cc									CC	cc	45
48	disorientation	disorientation		nn		nom							NN	conj	45
49	,	,											,	punct	36
50	and	and		cc	cls								CC	cc	36
51	,	,											,	punct	36
52	he	he		pro	3rd	sg							PRP	nsubj	54
53	's	be		vbmain	be	pres	simple	active					VBZ	dep	54
54	thinks	think		vbmain	vblex	pres	simple	active					VBZ	conj	36
55	he	he		pro	3rd	sg							PRP	nsubj	56
56	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	54
57	about	about		jj	pred								JJ	acomp	56
58	to	to		to									TO	aux	59
59	die	die	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	57
60	and	and		cc	cls								CC	cc	54
61	then	then		rb	link								RB	advmod	63
62	he	he		pro	3rd	sg							PRP	nsubj	63
63	realizes	realize		vbmain	vblex	pres	simple	active					VBZ	conj	54
64	wait	wait		vbmain	vblex	nonfinite	simple	active	advlcls				VB	advcl	83
65	a	a		dt	art								DT	det	66
66	second	second		nn									NN	npadvmod	64
67	,	,											,	punct	83
68	i	i		pro	1st	sg							PRP	nsubj	69
69	'm	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	83
70	not	not											RB	neg	69
71	in	in	in+advl	in	advl								IN	prep	69
72	Phoenix	phoenix		nn		proper							NNP	pobj	71
73	at	at	rb+jjrbmod	rb	othr								RB	advmod	74
74	all	all	rb+advl	rb	advl								RB	advmod	69
75	,	,											,	punct	83
76	i	i		pro	1st	sg							PRP	nsubj	77
77	'm	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	83
78	back	back	rb+advl	rb	advl								RB	advmod	77
79	in	in		in	in_othr								IN	prep	78
80	Houston	houston		nn		proper							NNP	pobj	79
81	,	,											,	punct	83
82	i	i		pro	1st	sg							PRP	nsubj	83
83	am	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	63
84	my	my		dt	poss								PRP$	poss	85
85	brain	brain		nn									NN	attr	83
86	,	,											,	punct	83
87	in	in	in+advl	in	advl								IN	prep	83
88	this	this		dt	dt_dem								DT	det	92
89	little	little	attr+npremod	jj	attr								JJ	amod	92
90	,	,											,	punct	92
91	hermetic	hermetic	attr+npremod	jj	attr								JJ	amod	92
92	vat	vat		nn									NN	pobj	87
93	.	.											.	punct	15

#sentid = 125
0	um	um											UH	intj	3
1	,	,											,	punct	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	where	where		rb	advl								WRB	advmod	7
5	i	i		pro	1st	sg							PRP	nsubjpass	7
6	'm	be		vbaux									VBP	auxpass	7
7	located	locate	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls	whcls			VBN	advcl	3
8	.	.											.	punct	3

#sentid = 126
0	and	and		cc	cls								CC	cc	8
1	then	then		rb	link								RB	advmod	8
2	he	he		pro	3rd	sg							PRP	dep	8
3	,	,											,	punct	8
4	he	he		pro	3rd	sg							PRP	nsubj	8
5	's	be		vbaux									VBZ	aux	8
6	not	not											RB	neg	8
7	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	8
8	reverting	revert		vbmain	vblex	pres	prog	active					VBG	ROOT	8
9	to	to	in+advl	in	advl								IN	prep	8
10	the	the		dt	art								DT	det	12
11	brain	brain	nn+npremod	nn			npremod						NN	compound	12
12	theory	theory		nn		nom							NN	pobj	9
13	at	at	in+advl	in	advl								IN	prep	8
14	that	that		dt	dt_dem								DT	det	15
15	point	point		nn									NN	pobj	13
16	.	.											.	punct	8

#sentid = 127
0	he	he		pro	3rd	sg							PRP	nsubj	1
1	thinks	think		vbmain	vblex	pres	simple	active					VBZ	ROOT	1
2	he	he		pro	3rd	sg							PRP	nsubjpass	5
3	's	be		vbaux									VBZ	auxpass	5
4													_SP	dep	5
5	made	make	thatcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	1
6	a	a		dt	art								DT	det	9
7	big	big	attr+npremod	jj	attr								JJ	amod	9
8	philosophical	philosophical	attr+npremod	jj	attr								JJ	amod	9
9	discovery	discovery		nn		nom							NN	dobj	5
10	.	.											.	punct	1

#sentid = 128
0	he	he		pro	3rd	sg							PRP	nsubj	1
1	thinks	think		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	8
2	that	that		comp	comp_that								IN	mark	3
3	he	he		pro	3rd	sg							PRP	ccomp	1
4	's	's											POS	case	3
5	,	,											,	punct	8
6	his	his		dt	poss	sg							PRP$	poss	7
7	idea	idea		nn									NN	nsubj	8
8	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	8
9	that	that		comp	comp_that								IN	mark	13
10	somehow	somehow	rb+advl	rb	advl								RB	advmod	13
11	,	,											,	punct	13
12	he	he		pro	3rd	sg							PRP	nsubj	13
13	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	8
14	a	a		dt	art								DT	det	15
15	kind	kind		nn									NN	attr	13
16	of	of	of+npostmod	in	nmod								IN	prep	15
17	immaterial	immaterial	attr+npremod	jj	attr								JJ	amod	18
18	soul	soul		nn									NN	pobj	16
19	.	.											.	punct	8

#sentid = 129
0	but	but		cc	cls								CC	cc	3
1	he	he		pro	3rd	sg							PRP	nsubjpass	3
2	's	be		vbaux									VBZ	auxpass	3
3	got	get		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	3
4	a	a		dt	art								DT	det	12
5	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	6
6	special	special	attr+npremod	jj	attr								JJ	amod	12
7	,	,											,	punct	12
8	understanding	understanding	nn+npremod	nn		nom	npremod						NN	nmod	12
9	of	of	of+npostmod	in	nmod								IN	prep	8
10	this	this		pro	dem	sg							DT	pobj	9
11	,	,											,	punct	12
12	soul	soul		nn									NN	dobj	3
13	.	.											.	punct	3

#sentid = 130
0	he	he		pro	3rd	sg							PRP	nsubj	1
1	calls	call		vbmain	vblex	pres	simple	active					VBZ	ROOT	1
2	it	it		pro	3rd	sg							PRP	dobj	1
3	,	,											,	punct	1
4	um	um											UH	intj	1
5	,	,											,	punct	1
6	his	his		dt	poss	sg							PRP$	poss	10
7	s-	s-											XX	punct	10
8	uh	uh											UH	intj	10
9	,	,											,	punct	10
10	center	center		nn		nom							NN	oprd	1
11	of	of	of+npostmod	in	nmod								IN	prep	10
12	gravity	gravity		nn		nom							NN	pobj	11
13	.	.											.	punct	1

#sentid = 131
0													_SP	dep	6
1	and	and		cc	phrs								CC	cc	6
2	,	,											,	punct	6
3	w-	w-											XX	dep	6
4	what	what											WP	dep	6
5	he	he		pro	3rd	sg							PRP	nsubj	6
6	seems	seem		vbmain	vblex	pres	simple	active					VBZ	ROOT	6
7	to	to		to									TO	aux	8
8	mean	mean		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	6
9	by	by	in+advl	in	advl								IN	prep	8
10	that	that		pro	dem	sg							DT	pobj	9
11	is	be		vbmain	be	pres	simple	active					VBZ	meta	6
12	,	,											,	punct	11
13	that	that		comp	comp_that								IN	mark	19
14	,	,											,	punct	19
15	h-	h-		in	in_othr								XX	prep	14
16	h-	h-											XX	nmod	15
17	and	and		cc	cls								CC	cc	19
18	he	he		pro	3rd	sg							PRP	nsubj	19
19	wants	want	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	11
20	to	to		to									TO	aux	21
21	espouse	espouse		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	19
22	purely	purely	rb+jjrbmod	rb	adjmod	ly							RB	advmod	23
23	physicalistic	physicalistic	attr+npremod	jj	attr								JJ	amod	24
24	principles	principle		nn	pl								NNS	dobj	21
25	here	here	rb+advl	rb	advl								RB	advmod	21
26	,	,											,	punct	19
27	but	but		cc	cls								CC	cc	19
28	,	,											,	punct	19
29	so	so		cc	cls								RB	cc	19
30	he	he		pro	3rd	sg							PRP	nsubj	31
31	thinks	think		vbmain	vblex	pres	simple	active					VBZ	conj	19
32	that	that		comp	comp_that								IN	mark	35
33	he	he		pro	3rd	sg							PRP	nsubjpass	35
34	's	be		vbaux									VBZ	auxpass	35
35	located	locate	thatcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls	thatcls	vcomp		VBN	ccomp	31
36	where	where		comp	comp_wh								WRB	advmod	42
37	one	one		pro	other	pl							CD	nsubj	42
38	of	of		in	in_othr								IN	prep	37
39	his	his		dt	poss	sg							PRP$	poss	41
40	physical	physical	attr+npremod	jj	attr								JJ	amod	41
41	parts	part		nn	pl								NNS	pobj	38
42	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	35
43	.	.											.	punct	6

#sentid = 132
0	remember	remember		vbmain	vblex	nonfinite	simple	active					VB	ROOT	0
1	Descartes	descartes		nn		proper							NNP	dobj	0
2	,	,											,	punct	1
3	who	who		relpro	relpro_wh								WP	nsubj	4
4	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	1
5	,	,											,	punct	1
6	who	who		relpro	relpro_wh								WP	nsubj	7
7	had	have	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls	whcls	rel		VBD	relcl	1
8	a	a											DT	dobj	7
9	,	,											,	punct	1
10	an	an		dt									DT	det	12
11	immaterial	immaterial	attr+npremod	jj	attr								JJ	amod	12
12	conception	conception		nn		nom							NN	nsubj	16
13	of	of	of+npostmod	in	nmod								IN	prep	12
14	the	the		dt	art								DT	det	15
15	soul	soul		nn									NN	pobj	13
16	thought	think	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	0
17	that	that		comp	comp_that								IN	mark	24
18	,	,											,	punct	24
19	um	um											UH	intj	24
20	,	,											,	punct	24
21	souls	soul		nn	pl								NNS	nsubj	24
22	did	do		vbaux									VBD	aux	24
23	n't	not											RB	neg	24
24	have	have	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls	thatcls	vcomp		VB	ccomp	16
25	to	to		to									TO	aux	27
26	be	be		vbaux									VB	auxpass	27
27	located	locate		vbmain	vblex	nonfinite	simple	pasv_agls	compcls		vcomp	compdel	VBN	xcomp	24
28	anywhere	anywhere	rb+advl	rb	advl								RB	advmod	27
29	in	in		in	in_othr								IN	prep	28
30	space	space		nn									NN	pobj	29
31	...	...											:	punct	0

#sentid = 133
0	Dennett	dennett		nn		proper							NNP	nsubj	5
1	,	,											,	punct	5
2	this	this											DT	intj	5
3	,	,											,	punct	5
4	lemme	lemme											UH	intj	5
5	put	put		vbmain	vblex	past	simple	active					VBD	ROOT	5
6	this	this		pro	dem	sg							DT	dobj	5
7	in	in	in+advl	in	advl								IN	prep	5
8	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	9
9	of	of	in+advl	in	advl								RB	prep	5
10	quotation	quotation	nn+npremod	nn		nom	npremod						NN	compound	11
11	marks	mark		nn	pl								NNS	pobj	9
12	.	.											.	punct	5

#sentid = 134
0	Dennett	dennett	s+gen	dt	poss	proper	sgen						NNP	poss	2
1	's	's											POS	case	0
2	idea	idea		nn									NN	nsubj	6
3	of	of	of+npostmod	in	nmod								IN	prep	2
4	a	a		dt	art								DT	det	5
5	soul	soul		nn									NN	pobj	3
6	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	6
7	different	different		jj	pred								JJ	acomp	6
8	.	.											.	punct	6

#sentid = 135
0	he	he		pro	3rd	sg							PRP	nsubj	1
1	thinks	think		vbmain	prepv	pres	simple	active					VBZ	ROOT	1
2	of	of	in+advl	in	advl								IN	prep	1
3	it	it		pro	3rd	sg							PRP	pobj	2
4	,	,											,	punct	1
5	as	as	in+advl	in	advl								IN	prep	1
6	something	something		nn	other	nom							NN	pobj	5
7	like	like	in+npostmod	in	nmod								IN	prep	6
8	a	a		dt	art								DT	det	9
9	point	point		nn									NN	pobj	7
10	of	of	of+npostmod	in	nmod								IN	prep	9
11	view	view		nn									NN	pobj	10
12	.	.											.	punct	1

#sentid = 136
0	but	but		cc	phrs								CC	cc	3
1	not	not											RB	neg	3
2	the	the		dt	art								DT	det	3
3	kind	kind		nn									NN	ROOT	3
4	of	of	of+npostmod	in	nmod								IN	prep	3
5	point	point		nn									NN	pobj	4
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	view	view		nn									NN	pobj	6
8	that	that		pro	dem	sg							WDT	dobj	13
9	he	he		pro	3rd	sg							PRP	dep	13
10	he	he		pro	3rd	sg							PRP	dep	13
11	,	,											,	punct	13
12	he	he		pro	3rd	sg							PRP	nsubj	13
13	mentioned	mention		vbmain	vblex	past	simple	active					VBD	parataxis	32
14	a-	a-											DT	dobj	13
15	at	at	in+advl	in	advl								IN	prep	13
16	the	the		dt	art								DT	det	17
17	beginning	beginning		nn		nom							NN	pobj	15
18	,	,											,	punct	13
19	at	at	in+advl	in	advl								IN	prep	13
20	number	number		nn		nom							NN	pobj	19
21	three	three											CD	nummod	20
22	here	here		rb	othr								RB	advmod	20
23	,	,											,	punct	13
24	his	his		dt	poss	sg							PRP$	poss	25
25	idea	idea		nn									NN	nsubj	32
26	o-	o-	in+npostmod	in	nmod								XX	prep	25
27	of	of	of+npostmod	in	nmod								IN	prep	25
28	a	a		dt	art								DT	det	29
29	center	center		nn		nom							NN	pobj	27
30	of	of	of+npostmod	in	nmod								IN	prep	29
31	gravity	gravity		nn		nom							NN	pobj	30
32	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	3
33	,	,											,	punct	32
34	like	like	in+advl	in	advl								IN	prep	32
35	a	a		dt	art								DT	det	36
36	point	point		nn									NN	pobj	34
37	of	of	of+npostmod	in	nmod								IN	prep	36
38	view	view		nn									NN	pobj	37
39	but	but		cc	cls								CC	cc	32
40	you	you		pro	2nd	sg							PRP	nsubj	42
41	can	can		vbaux	mod	pos							MD	aux	42
42	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	32
43	wrong	wrong		jj	pred								JJ	acomp	42
44	about	about	in+jcomp	in	jcomp								IN	prep	43
45	it	it		pro	3rd	sg							PRP	pobj	44
46	.	.											.	punct	3

#sentid = 137
0	so	so		rb	link								RB	advmod	2
1	he	he		pro	3rd	sg							PRP	nsubj	2
2	thinks	think		vbmain	vblex	pres	simple	active					VBZ	ROOT	2
3	,	,											,	punct	2
4	right	right	rb+advl	rb	advl								RB	advmod	23
5	after	after		cs	cs_othr								IN	mark	23
6	,	,											,	punct	23
7	after	after	in+advl	in	advl								IN	prep	23
8	his	his		dt	poss	sg							PRP$	poss	9
9	disconnections	disconnection		nn	pl	nom							NNS	pobj	7
10	after	after		cs	cs_othr								IN	mark	13
11	his	his		dt	poss	sg							PRP$	poss	12
12	body	body		nn									NN	nsubj	13
13	starts	starts		vbaux									VBZ	aux	15
14	getting	getting		vbaux									VBG	auxpass	15
15	disconnected	disconnect	finitecls+rel	vbmain	vblex	pres	simple	pasv_agls	nmod_cls		rel		VBN	relcl	9
16	from	from	in+advl	in	advl								IN	prep	15
17	his	his		dt	poss	sg							PRP$	poss	18
18	brain	brain		nn									NN	pobj	16
19	,	,											,	punct	23
20	he	he		pro	3rd	sg							PRP	nsubj	23
21	's	be		vbaux									VBZ	aux	23
22	still	still	rb+advl	rb	advl		splaux						RB	advmod	23
23	thinking	think	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		other_advl		VBG	advcl	38
24	that	that		comp	comp_that								IN	mark	26
25	he	he		pro	3rd	sg							PRP	nsubj	26
26	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	23
27	in	in	in+advl	in	advl								IN	prep	26
28	Houston	houston		nn		proper							NNP	pobj	27
29	,	,											,	punct	38
30	i	i		pro	1st	sg							PRP	nsubj	31
31	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	38
32	,	,											,	punct	38
33	no	no											UH	intj	38
34	,	,											,	punct	38
35	he	he		pro	3rd	sg							PRP	nsubj	38
36	's	be		vbaux									VBZ	aux	38
37	still	still	rb+advl	rb	advl		splaux						RB	advmod	38
38	thinking	think	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	2
39	that	that		comp	comp_that								IN	mark	41
40	he	he		pro	3rd	sg							PRP	nsubj	41
41	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	38
42	in	in	in+advl	in	advl								IN	prep	41
43	Phoenix	phoenix		nn		proper							NNP	pobj	42
44	underground	underground		rb	othr								RB	advmod	43
45	.	.											.	punct	2

#sentid = 138
0	but	but		cc	cls								CC	cc	6
1	,	,											,	punct	6
2	then	then		rb	link								RB	advmod	6
3	he	he		pro	3rd	sg							PRP	dep	6
4	_	_											XX	punct	6
5	it	it		pro	3rd	sg							PRP	nsubj	6
6	occurs	occur		vbmain	prepv	pres	simple	active					VBZ	ROOT	6
7	to	to	in+advl	in	advl								IN	prep	6
8	him	he		pro	3rd	sg							PRP	pobj	7
9	,	,											,	punct	6
10	that	that		comp	comp_that								IN	mark	12
11	he	he		pro	3rd	sg							PRP	nsubj	12
12	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	6
13	wrong	wrong		jj	pred								JJ	acomp	12
14	about	about	in+jcomp	in	jcomp								IN	prep	13
15	that	that		pro	dem	sg							DT	pobj	14
16	,	,											,	punct	6
17	and	and		cc	cls								CC	cc	6
18	he	he		pro	3rd	sg							PRP	nsubj	19
19	corrects	correct		vbmain	vblex	pres	simple	active					VBZ	conj	6
20	himself	himself		pro	3rd	sg							PRP	dobj	19
21	.	.											.	punct	19

#sentid = 139
0	he	he		pro	3rd	sg							PRP	nsubj	1
1	says	say		vbmain	vblex	pres	simple	active					VBZ	ROOT	1
2	,	,											,	punct	1
3	no	no											UH	intj	4
4	wait	wait		vbmain	vblex	nonfinite	simple	active					VB	advmod	1
5	i	i		pro	1st	sg							PRP	nsubj	8
6	ca	can		vbaux	mod								MD	aux	8
7	n't	not											RB	neg	8
8	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	4
9	in	in	in+advl	in	advl								IN	prep	8
10	,	,											,	punct	9
11	Phoenix	phoenix		nn		proper							NNP	pobj	9
12	underground	underground		rb	othr								RB	advmod	11
13	.	.											.	punct	1

#sentid = 140
0	that	that		dt	dt_dem								DT	det	1
1	body	body		nn									NN	ROOT	1
2	_	_											NFP	punct	1

#sentid = 141
0	i	i		pro	1st	sg							PRP	nsubj	3
1	do	do		vbaux									VBP	aux	3
2	n't	not											RB	neg	3
3	have	have		vbmain	vblex	pres	simple	active					VB	ROOT	3
4	any	any		dt									DT	det	5
5	sort	sort		nn									NN	dobj	3
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	um	um											UH	intj	6
8	,	,											,	punct	6
9	connection	connection		nn		nom							NN	pobj	6
10	with	with	in+npostmod	in	nmod								IN	prep	9
11	that	that		dt	dt_dem								DT	det	12
12	body	body		nn									NN	pobj	10
13	anymore	anymore	rb+advl	rb	advl								RB	advmod	3
14	.	.											.	punct	3

#sentid = 142
0	he	he		pro	3rd	sg							PRP	nsubj	1
1	remembers	remember		vbmain	vblex	pres	simple	active					VBZ	ROOT	1
2	that	that		comp	comp_that								IN	mark	5
3	his	his		dt	poss	sg							PRP$	poss	4
4	brain	brain		nn									NN	nsubj	5
5	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	1
6	back	back	rb+advl	rb	advl								RB	advmod	5
7	in	in		in	in_othr								IN	prep	6
8	Houston	houston		nn		proper							NNP	pobj	7
9	,	,											,	punct	1
10	and	and		cc	cls								CC	cc	1
11	then	then		rb	link								RB	advmod	16
12	he	he		pro	3rd	sg							PRP	nsubj	16
13	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	14
14	of	of	rb+advl	rb	advl								RB	advmod	16
15	i-	i-											XX	punct	16
16	reidentifies	reidentifie		vbmain	vblex	pres	simple	active					VBZ	conj	1
17	himself	himself		pro	3rd	sg							PRP	dobj	16
18	with	with	in+advl	in	advl								IN	prep	16
19	the	the		dt	art								DT	det	20
20	brain	brain		nn									NN	pobj	18
21	.	.											.	punct	16

#sentid = 143
0	he	he		pro	3rd	sg							PRP	nsubj	1
1	starts	start		vbmain	vblex	pres	simple	active					VBZ	ROOT	1
2	thinking	think	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	1
3	okay	okay											UH	intj	7
4	,	,											,	punct	7
5	i	i		pro	1st	sg							PRP	nsubj	7
6	must	must		vbaux	mod	nec							MD	aux	7
7	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	2
8	that	that		dt	dt_dem								DT	det	9
9	brain	brain		nn									NN	attr	7
10	.	.											.	punct	1

#sentid = 144
0	and	and		cc	cls								CC	cc	7
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	7
3	not	not											RB	neg	2
4	just	just	rb+advl	rb	advl								RB	advmod	2
5	,	,											,	punct	7
6	it	it		pro	3rd	sg							PRP	nsubj	7
7	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	7
8	not	not											RB	neg	7
9	just	just	rb+advl	rb	advl								RB	advmod	7
10	that	that		comp	comp_that								IN	mark	12
11	he	he		pro	3rd	sg							PRP	nsubj	12
12	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls	thatcls	vcomp		VBD	ccomp	7
13	that	that		dt	dt_dem								DT	det	14
14	brain	brain		nn									NN	attr	12
15	when	when		rb	advl								WRB	advmod	17
16	he	he		pro	3rd	sg							PRP	nsubj	17
17	thinks	think	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	12
18	it	it		pro	3rd	sg							PRP	dobj	17
19	.	.											.	punct	7

#sentid = 145
0	so	so		rb	link								RB	advmod	30
1	,	,											,	punct	30
2	as	as		rb	othr								RB	advmod	3
3	soon	soon	rb+advl	rb	advl								RB	advmod	20
4	as	as		cs	cs_othr								IN	mark	7
5	the	the		dt	art								DT	det	6
6	thought	thought		nn									NN	nsubj	7
7	occurs	occur	finitecls+advl	vbmain	prepv	pres	simple	active	advlcls		other_advl		VBZ	advcl	3
8	to	to	in+advl	in	advl								IN	prep	7
9	him	he		pro	3rd	sg							PRP	pobj	8
10	,	,											,	punct	20
11	oh	oh											UH	intj	14
12	i	i		pro	1st	sg							PRP	nsubj	14
13	must	must		vbaux	mod	nec							MD	aux	14
14	be	be		vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	20
15	the	the		dt	art								DT	det	16
16	brain	brain		nn									NN	attr	14
17	,	,											,	punct	20
18	i	i		pro	1st	sg							PRP	nsubj	20
19	must	must		vbaux	mod	nec							MD	aux	20
20	be	be		vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	30
21	where	where		rb	advl								WRB	advmod	24
22	the	the		dt	art								DT	det	23
23	brain	brain		nn									NN	nsubj	24
24	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	20
25	,	,											,	punct	20
26	that	that											IN	mark	30
27	that	that		pro	dem	sg							DT	nsubj	30
28	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	29
29	of	of	rb+advl	rb	advl								RB	advmod	30
30	switches	switch		vbmain	vblex	pres	simple	active					VBZ	ROOT	30
31	his	his		dt	poss	sg							PRP$	poss	32
32	location	location		nn		nom							NN	dobj	30
33	.	.											.	punct	30

#sentid = 146
0	his	his		dt	poss	sg							PRP$	poss	1
1	idea	idea		nn									NN	nsubj	2
2	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	no	no											UH	intj	25
4	,	,											,	punct	25
5	as	as		rb	othr								RB	advmod	6
6	soon	soon	rb+advl	rb	advl								RB	advmod	12
7	as	as		cs	cs_othr								IN	mark	10
8	the	the		dt	art								DT	det	9
9	connections	connection		nn	pl	nom							NNS	nsubj	10
10	start	start		vbaux									VBP	aux	12
11	being	be		vbaux									VBG	auxpass	12
12	severed	sever	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls				VBN	advcl	25
13	between	between	in+advl	in	advl								IN	prep	12
14	the	the		dt	art								DT	det	15
15	body	body		nn									NN	pobj	13
16	and	and		cc	phrs								CC	cc	15
17	the	the		dt	art								DT	det	18
18	brain	brain		nn									NN	conj	15
19	,	,											,	punct	25
20	he	he		pro	3rd	sg							PRP	nsubj	25
21	should	should		vbaux	mod	nec							MD	aux	25
22	have	have		vbaux									VB	aux	25
23	been	be		vbaux									VBN	aux	25
24	,	,											,	punct	25
25	locating	locate	thatcls+vcomp	vbmain	vblex	vp_w_modal	perfprog	active	compcls		vcomp	compdel	VBG	ccomp	2
26	himself	himself		pro	3rd	sg							PRP	dobj	25
27	and	and		cc	phrs								CC	cc	25
28	identifying	identify		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	25
29	with	with	in+advl	in	advl								IN	prep	28
30	himself	himself		pro	3rd	sg							PRP	pobj	29
31	when	when		rb	othr								WRB	advmod	33
32	,	,											,	punct	33
33	as	as											IN	advcl	28
34	,	,											,	punct	33
35	the	the		dt	art								DT	det	36
36	brain	brain		nn									NN	conj	33
37	in	in	in+npostmod	in	nmod								IN	prep	36
38	Houston	houston		nn		proper							NNP	pobj	37
39	.	.											.	punct	2

#sentid = 147
0	so	so		rb	link								RB	advmod	5
1	the	the		dt	art								DT	det	2
2	center	center		nn		nom							NN	nsubj	5
3	of	of	of+npostmod	in	nmod								IN	prep	2
4	gravity	gravity		nn		nom							NN	pobj	3
5	looks	look		vbmain	prepv	pres	simple	active					VBZ	ROOT	5
6	like	like	in+advl	in	advl								IN	prep	5
7	,	,											,	punct	6
8	something	something		nn	other	nom							NN	pobj	6
9	like	like	in+npostmod	in	nmod								IN	prep	8
10	a	a		dt	art								DT	det	12
11	corrected	correct	attr+npremod	jj	attr	ed							VBN	amod	12
12	point	point		nn									NN	pobj	9
13	of	of	of+npostmod	in	nmod								IN	prep	12
14	view	view		nn									NN	pobj	13
15	.	.											.	punct	5

#sentid = 148
0													_SP	dep	3
1	so	so		rb	link								RB	advmod	3
2	it	it		pro	3rd	sg							PRP	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	like	like	in+advl	in	advl								IN	prep	3
5	three	three											CD	pobj	4
6	except	except		cs	cs_othr								IN	mark	9
7	it	it		pro	3rd	sg							PRP	nsubjpass	9
8	's	be		vbaux									VBZ	auxpass	9
9	corrected	correct	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls		other_advl		VBN	advcl	3
10	for	for	in+advl	in	advl								IN	prep	9
11	these	these		dt	dt_dem								DT	det	13
12	possible	possible	attr+npremod	jj	attr								JJ	amod	13
13	errors	error		nn	pl	nom							NNS	pobj	10
14	that	that		pro	dem	sg							WDT	dobj	17
15	you	you		pro	2nd	sg							PRP	nsubj	17
16	can	can		vbaux	mod	pos							MD	aux	17
17	make	make	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel		VB	relcl	13
18	about	about	in+advl	in	advl								IN	prep	17
19	where	where		comp	comp_wh								WRB	advmod	21
20	you	you		pro	2nd	sg							PRP	nsubj	21
21	identify	identify	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VBP	pcomp	18
22	yourself	yourself		pro	2nd								PRP	dobj	21
23	w-	w-											XX	dep	24
24	identify	identify		vbmain	vblex	pres	simple	active					VBP	dep	21
25	yourself	yourself		pro	2nd								PRP	dobj	24
26	.	.											.	punct	3

#sentid = 149
0	so	so		rb	link								RB	advmod	12
1	,	,											,	punct	12
2	each	each											DT	nsubj	12
3	of	of		in	in_othr								IN	prep	2
4	these	these		pro	dem	pl							DT	pobj	3
5	,	,											,	punct	4
6	options	option	appos+npostmod	nn	pl	nom	nappos						NNS	appos	4
7	that	that		pro	dem	sg							WDT	dobj	9
8	he	he		pro	3rd	sg							PRP	nsubj	9
9	lays	lay	finitecls+rel	vbmain	phrsv	pres	simple	active	nmod_cls		rel		VBZ	relcl	6
10	out	out		rb	prtcle								RP	prt	9
11	,	,											,	punct	2
12	presents	present		vbmain	vblex	pres	simple	active					VBZ	ROOT	12
13	one	one											CD	nummod	14
14	way	way		nn									NN	dobj	12
15	of	of	of+npostmod	in	nmod								IN	prep	14
16	reacting	react	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	15
17	to	to	in+advl	in	advl								IN	prep	16
18	the	the		dt	art								DT	det	27
19	brain	brain	nn+npremod	nn			npremod						NN	nmod	27
20	and	and		cc	phrs								CC	cc	19
21	body	body		nn									NN	conj	19
22	,	,											,	punct	19
23	separate	separate	attr+npremod	jj	attr								JJ	amod	27
24	brain	brain	nn+npremod	nn			npremod						NN	nmod	27
25	and	and		cc	phrs								CC	cc	24
26	body	body		nn									NN	conj	24
27	scenario	scenario		nn									NN	pobj	17
28	.	.											.	punct	12

#sentid = 150
0	and	and		cc	cls								CC	cc	10
1	what	what											WP	dobj	6
2	i	i		pro	1st	sg							PRP	nsubj	4
3	'd	would		vbaux	mod								MD	aux	4
4	like	like		vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	csubj	10
5	to	to		to									TO	aux	6
6	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	4
7	,	,											,	punct	10
8	um	um											UH	intj	10
9	,	,											,	punct	10
10	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	10
11	to	to		to									TO	aux	13
12	,	,											,	punct	13
13	break	break	tocls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	10
14	down	down		rb	prtcle								RP	prt	13
15	into	into	in+advl	in	advl								IN	prep	13
16	smaller	small	attr+npremod	jj	attr								JJR	amod	17
17	groups	group		nn	pl								NNS	pobj	15
18	and	and		cc	phrs								CC	cc	13
19	see	see		vbmain	vblex	nonfinite	simple	active					VB	conj	13
20	if	if		cs	cnd								IN	mark	23
21	we	we		pro	1st								PRP	nsubj	23
22	can	can		vbaux	mod	pos							MD	aux	23
23	think	think		vbmain	prepv	vp_w_modal	simple	active	compcls		conditional	compdel	VB	ccomp	19
24	of	of	in+advl	in	advl								IN	prep	23
25	,	,											,	punct	23
26	see	see		vbmain	vblex	nonfinite	simple	active					VB	dep	23
27	if	if		cs	cnd								IN	mark	30
28	you	you		pro	2nd	sg							PRP	nsubj	30
29	can	can		vbaux	mod	pos							MD	aux	30
30	decide	decide		vbmain	vblex	vp_w_modal	simple	active	compcls		conditional	compdel	VB	ccomp	26
31	whether	whether		cs	cs_othr								IN	mark	44
32	_	_											NFP	punct	44
33	what	what											WP	dobj	35
34	you	you		pro	2nd	sg							PRP	nsubj	35
35	think	think	finitecls+advl	vbmain	prepv	pres	simple	active	advlcls				VBP	advcl	44
36	of	of	in+advl	in	advl								IN	prep	35
37	each	each											DT	pobj	36
38	of	of		in	in_othr								IN	prep	37
39	these	these		dt	dt_dem								DT	det	40
40	scenarios	scenario		nn	pl								NNS	pobj	38
41	,	,											,	punct	44
42	which	which		dt									WDT	det	43
43	one	one		pro	other	pl							CD	nsubj	44
44	is	be		vbmain	be	pres	simple	active	compcls		other_advl	compdel	VBZ	ccomp	30
45	the	the		dt	art								DT	det	47
46	most	most	rb+jjrbmod	rb	othr								RBS	advmod	47
47	plausible	plausible											JJ	attr	44
48	.	.											.	punct	10

#sentid = 151
0	for	for	in+advl	in	advl								IN	prep	4
1	each	each		dt									DT	det	2
2	one	one		nn	other	pl							NN	pobj	0
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	get	get		vbmain	vblex	pres	simple	active					VBP	ROOT	4
5	to	to	in+advl	in	advl								IN	prep	4
6	a	a											DT	pobj	5
7	,	,											,	punct	6
8	a	a		dt	art								DT	det	10
9	different	different	attr+npremod	jj	attr								JJ	amod	10
10	decision	decision		nn									NN	pobj	5
11	about	about	in+npostmod	in	nmod								IN	prep	10
12	,	,											,	punct	11
13	where	where		comp	comp_wh								WRB	advmod	15
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	are	be	whcls+incomp	vbmain	be	pres	simple	active	compcls	whcls	incomp		VBP	pcomp	11
16	,	,											,	punct	15
17	if	if		cs	cnd								IN	mark	19
18	you	you		pro	2nd	sg							PRP	nsubj	19
19	're	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBP	advcl	15
20	Dennett	dennett		nn		proper							NNP	attr	19
21	.	.											.	punct	4

#sentid = 152
0	the	the		dt	art								DT	det	2
1	first	first	attr+npremod	jj	attr								JJ	amod	2
2	one	one		nn	other	pl							NN	nsubj	3
3	locates	locate		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	40
4	you	you		pro	2nd	sg							PRP	dobj	3
5	with	with	in+advl	in	advl								IN	prep	3
6	the	the											DT	pobj	5
7	,	,											,	punct	5
8	with	with		in	in_othr								IN	prep	5
9	your	your		dt	poss								PRP$	poss	10
10	body	body		nn									NN	pobj	8
11	,	,											,	punct	40
12	the	the		dt	art								DT	det	14
13	second	second	attr+npremod	jj	attr								JJ	amod	14
14	one	one		nn	other	pl							NN	nsubj	15
15	locates	locate		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	40
16	you	you		pro	2nd	sg							PRP	dobj	15
17	wherever	wherever		rb	advl								WRB	advmod	20
18	your	your		dt	poss								PRP$	poss	19
19	brain	brain		nn									NN	nsubj	20
20	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	15
21	,	,											,	punct	40
22	the	the		dt	art								DT	det	24
23	third	third	attr+npremod	jj	attr								JJ	amod	24
24	one	one		nn	other	pl							NN	nsubj	25
25	locates	locate		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	40
26	where	where		rb	othr								WRB	advmod	27
27	you	you		pro	2nd	sg							PRP	dep	32
28	,	,											,	punct	32
29	wherever	wherever		rb	advl								WRB	advmod	32
30	you	you		pro	2nd	sg							PRP	nsubj	32
31	currently	currently	rb+advl	rb	advl	ly							RB	advmod	32
32	think	think	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	25
33	you	you		pro	2nd	sg							PRP	nsubj	34
34	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	32
35	,	,											,	punct	40
36	the	the		dt	art								DT	det	38
37	fourth	fourth	attr+npremod	jj	attr								JJ	amod	38
38	one	one		nn	other	pl							NN	nsubj	40
39	,	,											,	punct	40
40	says	say		vbmain	vblex	pres	simple	active					VBZ	ROOT	40
41	that	that		comp	comp_that								IN	mark	43
42	you	you		pro	2nd	sg							PRP	nsubj	43
43	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	40
44	,	,											,	punct	43
45	anyplace	anyplace		nn									NN	ccomp	40
46	where	where		rb	advl								WRB	advmod	51
47	any	any		dt									DT	det	48
48	part	part		nn									NN	nsubj	51
49	of	of	of+npostmod	in	nmod								IN	prep	48
50	you	you		pro	2nd	sg							PRP	pobj	49
51	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	45
52	.	.											.	punct	40

#sentid = 153
0	so	so		rb	link								RB	advmod	17
1	,	,											,	punct	17
2	if	if		cs	cnd								IN	mark	5
3	you	you		pro	2nd	sg							PRP	nsubjpass	5
4	're	be		vbaux									VBP	auxpass	5
5	composed	compose	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls		conditional		VBN	advcl	17
6	of	of	in+advl	in	advl								IN	prep	5
7	two	two											CD	nummod	8
8	parts	part		nn	pl								NNS	pobj	6
9	,	,											,	punct	8
10	a	a		dt	art								DT	det	11
11	body	body	appos+npostmod	nn			nappos						NN	appos	8
12	and	and		cc	phrs								CC	cc	11
13	a	a		dt	art								DT	det	14
14	brain	brain		nn									NN	conj	11
15	,	,											,	punct	17
16	you	you		pro	2nd	sg							PRP	nsubj	17
17	're	be		vbmain	be	pres	simple	active					VBP	ROOT	17
18	both	both											DT	dep	17
19	places	place		nn	pl								NNS	attr	17
20	.	.											.	punct	17

#sentid = 154
0	and	and		cc	cls								CC	cc	6
1	the	the		dt	art								DT	det	3
2	fifth	fifth	attr+npremod	jj	attr								JJ	amod	3
3	one	one		nn	other	pl							NN	nsubj	4
4	has	have		vbaux									VBZ	aux	6
5	,	,											,	punct	6
6	locates	locate		vbmain	vblex	pres	perf	active					VBZ	ROOT	6
7	you	you		pro	2nd	sg							PRP	dobj	6
8	,	,											,	punct	6
9	wherever	wherever		rb	advl								WRB	advmod	15
10	your	your		dt	poss								PRP$	poss	11
11	point	point		nn									NN	nsubj	15
12	of	of	of+npostmod	in	nmod								IN	prep	11
13	view	view		nn									NN	pobj	12
14	should	should		vbaux	mod	nec							MD	aux	15
15	be	be	finitecls+advl	vbmain	be	vp_w_modal	simple	active	advlcls	whcls			VB	advcl	6
16	.	.											.	punct	6

#sentid = 155
0	and	and		cc	cls								CC	cc	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	a	a		dt	art								DT	det	5
4	little	little	attr+npremod	jj	attr								JJ	amod	5
5	bit	bit		nn									NN	npadvmod	6
6	mysterious	mysterious		jj	pred								JJ	acomp	2
7	how	how	rb+jjrbmod	rb	othr								WRB	advmod	8
8	exactly	exactly	rb+advl	rb	advl	ly							RB	advmod	11
9	we	we		pro	1st								PRP	nsubjpass	11
10	're	be		vbaux									VBP	auxpass	11
11	supposed	suppose	xtrapos+thatcls+jcomp	vbmain	vblex	pres	simple	pasv_agls	compcls		jcomp	compdel	VBN	ccomp	2
12	to	to		to									TO	aux	13
13	decide	decide	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	11
14	where	where		comp	comp_wh								WRB	advmod	20
15	your	your		dt	poss								PRP$	poss	16
16	point	point		nn									NN	nsubj	20
17	of	of	of+npostmod	in	nmod								IN	prep	16
18	view	view		nn									NN	pobj	17
19	should	should		vbaux	mod	nec							MD	aux	20
20	be	be	whcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls	whcls	vcomp		VB	ccomp	13
21	.	.											.	punct	2

#sentid = 156
0	but	but		cc	cls								CC	cc	2
1	he	he		pro	3rd	sg							PRP	nsubj	2
2	thinks	think		vbmain	vblex	pres	simple	active					VBZ	ROOT	2
3	he	he		pro	3rd	sg							PRP	nsubj	4
4	has	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	2
5	an	an		dt									DT	det	6
6	answer	answer		nn		nom							NN	dobj	4
7	in	in	in+advl	in	advl								IN	prep	4
8	this	this		dt	dt_dem								DT	det	9
9	kind	kind		nn									NN	pobj	7
10	of	of	of+npostmod	in	nmod								IN	prep	9
11	,	,											,	punct	10
12	in	in		in	in_othr								IN	prep	10
13	this	this		dt	dt_dem								DT	det	14
14	case	case		nn									NN	pobj	12
15	.	.											.	punct	2

#sentid = 157
0	so	so		rb	link								RB	advmod	9
1	,	,											,	punct	9
2	what	what											WP	dobj	7
3	i	i		pro	1st	sg							PRP	nsubj	5
4	'd	would		vbaux	mod								MD	aux	5
5	like	like		vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	csubj	9
6	to	to		to									TO	aux	7
7	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	5
8	now	now	rb+advl	rb	advl								RB	advmod	7
9	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	9
10	,	,											,	punct	15
11	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	csubj	15
12	our	our		dt	poss								PRP$	poss	14
13	habitual	habitual	attr+npremod	jj	attr								JJ	amod	14
14	thing	thing		nn		nom							NN	dobj	11
15	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	9
16	to	to		to									TO	aux	18
17	,	,											,	punct	18
18	break	break	tocls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	15
19	down	down		rb	prtcle								RP	prt	18
20	into	into	in+advl	in	advl								IN	prep	18
21	groups	group		nn	pl								NNS	pobj	20
22	of	of	of+npostmod	in	nmod								IN	prep	21
23	,	,											,	punct	22
24	four	four											CD	pobj	22
25	or	or		cc									CC	cc	24
26	five	five											CD	conj	24
27	at	at	in+npostmod	in	nmod								IN	prep	21
28	each	each											DT	pobj	27
29	of	of		in	in_othr								IN	prep	28
30	the	the		dt	art								DT	det	31
31	corners	corner		nn	pl	nom							NNS	pobj	29
32	and	and		cc	phrs								CC	cc	18
33	um	um											UH	intj	18
34	,	,											,	punct	18
35	discuss	discuss		vbmain	vblex	nonfinite	simple	active					VB	conj	18
36	this	this		pro	dem	sg							DT	dobj	35
37	.	.											.	punct	9

#sentid = 158
0	before	before		cs	cs_othr								IN	mark	2
1	we	we		pro	1st								PRP	nsubj	2
2	go	go		vbmain	prepv	pres	simple	active			other_advl		VBP	ROOT	2
3	on	on		rb	prtcle								RP	prt	2
4	to	to	in+advl	in	advl								IN	prep	2
5	talking	talk	ingcls+incomp	vbmain	prepv	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	4
6	about	about	in+advl	in	advl								IN	prep	5
7	,	,											,	punct	6
8	the	the		dt	art								DT	det	9
9	cases	case		nn	pl								NNS	pobj	6
10	at	at	in+npostmod	in	nmod								IN	prep	9
11	the	the		dt	art								DT	det	12
12	end	end		nn									NN	pobj	10
13	,	,											,	punct	9
14	which	which		relpro	relpro_wh								WDT	nsubj	18
15	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	16
16	of	of	rb+jjrbmod	rb	adjmod								RB	advmod	17
17	complicated	complicated	attr+npremod	jj	attr								JJ	amod	18
18	matters	matter		nn	pl	nom							NNS	relcl	9
19	,	,											,	punct	9
20	where	where		rb	advl								WRB	advmod	23
21	he	he		pro	3rd	sg							PRP	nsubjpass	23
22	's	be		vbaux									VBZ	auxpass	23
23	got	get	finitecls+rel	vbmain	vblex	pres	simple	pasv_agls	nmod_cls	whcls	rel		VBN	relcl	9
24	_	_											NFP	punct	23
25	because	because		cs	cos								IN	mark	30
26	in	in	in+advl	in	advl								IN	prep	30
27	those	those		dt	dt_dem								DT	det	28
28	cases	case		nn	pl								NNS	pobj	26
29	Dennett	dennett		nn		proper							NNP	nsubj	30
30	gets	get	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBZ	advcl	2
31	this	this		dt	dt_dem								DT	det	34
32	extra	extra	attr+npremod	jj	attr								JJ	amod	34
33	,	,											,	punct	34
34	body	body		nn									NN	dobj	30
35	extra	extra		jj	attr								JJ	amod	34
36	,	,											,	punct	34
37	this	this		dt	dt_dem								DT	det	39
38	new	new	attr+npremod	jj	attr								JJ	amod	39
39	body	body	appos+npostmod	nn			nappos						NN	appos	34
40	with	with	in+npostmod	in	nmod								IN	prep	39
41	this	this		dt	dt_dem								DT	det	44
42	extra	extra	attr+npremod	jj	attr								JJ	amod	44
43	spare	spare	attr+npremod	jj	attr								JJ	amod	44
44	brain	brain		nn									NN	pobj	40
45	.	.											.	punct	2

#sentid = 159
0	but	but		cc	cls								CC	cc	8
1	in	in	in+advl	in	advl								IN	prep	8
2	those	those		dt	dt_dem								DT	det	3
3	cases	case		nn	pl								NNS	pobj	1
4	too	too	rb+advl	rb	advl								RB	advmod	8
5	,	,											,	punct	8
6	we	we		pro	1st								PRP	nsubj	8
7	're	be		vbaux									VBP	aux	8
8	gon	go		vbaux									VBG	aux	10
9	na	to		vbaux									VBG	aux	10
10	have	have		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	15
11	to	to											TO	xcomp	10
12	,	,											,	punct	15
13	we	we		pro	1st								PRP	nsubj	15
14	're	be		vbaux									VBP	aux	15
15	gon	go		vbmain	vblex	pres	prog	active					VBG	ROOT	15
16	na	to		vbaux									VBG	aux	17
17	have	have		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	15
18	to	to		to									TO	aux	19
19	take	take		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	17
20	a	a		dt	art								DT	det	21
21	look	look		nn									NN	dobj	19
22	at	at	in+npostmod	in	nmod								IN	prep	21
23	these	these		dt	dt_dem								DT	det	24
24	sorts	sort		nn	pl								NNS	pobj	22
25	of	of	of+npostmod	in	nmod								IN	prep	24
26	theories	theory		nn	pl	nom							NNS	pobj	25
27	and	and		cc	phrs								CC	cc	19
28	figure	figure		vbmain	phrsv	nonfinite	simple	active					VB	conj	19
29	out	out		rb	prtcle								RP	prt	28
30	which	which		dt									WDT	det	31
31	one	one		pro	other	pl							CD	nsubj	33
32	,	,											,	punct	33
33	does	do	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	28
34	best	good	attr+npremod	jj	attr								JJS	amod	35
35	justice	justice		nn									NN	dobj	33
36	,	,											,	punct	33
37	to	to	in+advl	in	advl								IN	prep	33
38	that	that		dt	dt_dem								DT	det	39
39	kind	kind		nn									NN	pobj	37
40	of	of	of+npostmod	in	nmod								IN	prep	39
41	case	case		nn									NN	pobj	40
42	.	.											.	punct	17

#sentid = 160
0	okay	okay											UH	intj	5
1	,	,											,	punct	5
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	wanna	wanna		vbmain	vblex	pres	simple	active					VBP	parataxis	5
4	,	,											,	punct	5
5	break	break		vbmain	phrsv	nonfinite	simple	active					VB	ROOT	5
6	down	down		rb	prtcle								RP	prt	5
7	?	?											.	punct	5

#sentid = 161
0													_SP	dep	12
1	um	um											UH	intj	12
2	,	,											,	punct	12
3	why	why		rb	advl								WRB	advmod	12
4	do	do		vbaux									VBP	aux	12
5	n't	not											RB	neg	12
6	why	why		rb	advl		splaux						WRB	advmod	12
7	do	do		vbaux									VBP	aux	12
8	n't	not											RB	neg	12
9	you	you		pro	2nd	sg							PRP	nmod	11
10	two	two											CD	nummod	11
11	groups	group		nn	pl								NNS	nsubj	12
12	break	break		vbmain	prepv	pres	simple	active					VB	ROOT	12
13	into	into	in+advl	in	advl								IN	prep	12
14	,	,											,	punct	13
15	two	two											CD	nummod	17
16	separate	separate	attr+npremod	jj	attr								JJ	amod	17
17	ones	one		nn	pl	pl							NNS	pobj	13
18	?	?											.	punct	12

#sentid = 162
0													_SP	dep	4
1	alright	alright											UH	intj	4
2	,	,											,	punct	4
3	we	we		pro	1st								PRP	nsubj	4
4	got	get		vbmain	vblex	past	simple	active					VBD	ROOT	4
5	our	our		dt	poss								PRP$	poss	7
6													_SP	dep	7
7	four	four											CD	dobj	4
8	right	right	rb+jjrbmod	rb	othr								RB	advmod	9
9	here	here	rb+advl	rb	advl								RB	advmod	4
10													_SP	dep	4
11	just	just	rb+advl	rb	advl								RB	advmod	12
12	split	split	edcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	edcls	ncomp		VBN	acl	7
13	in	in	in+advl	in	advl								IN	prep	12
14	the	the		dt	art								DT	det	15
15	middle	middle		nn									NN	pobj	13
16	there	there	rb+advl	rb	advl								RB	advmod	12
17	.	.											.	punct	4

#sentid = 163
0													_SP	dep	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	thought	think		vbmain	vblex	past	simple	active					VBD	ROOT	2
3	this	this		pro	dem	sg							DT	nsubj	4
4	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	2
5	the	the		dt	art								DT	det	6
6	best	good											JJS	attr	4
7	,	,											,	punct	6
8	the	the		dt	art								DT	det	10
9	best	good	attr+npremod	jj	attr								JJS	amod	10
10	reading	reading	appos+npostmod	nn		nom	nappos						NN	appos	6
11													_SP	dep	15
12	yeah	yeah											UH	intj	15
13	,	,											,	punct	15
14	it	it		pro	3rd	sg							PRP	nsubj	15
15	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	2
16	yeah	yeah											UH	intj	15
17	.	.											.	punct	2

#sentid = 164
0	yeah	yeah											UH	ROOT	0
1	.	.											.	punct	0

#sentid = 165
0	it	it		pro	3rd	sg							PRP	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	(	(											-LRB-	punct	1
3	xx	xx											XX	dep	1
4	)	)											-RRB-	punct	1
5													_SP	dep	1
6	it	it		pro	3rd	sg							PRP	nsubj	7
7	's	be		vbmain	be	pres	simple	active					VBZ	dep	1
8	because	because		cs	cos								IN	mark	12
9	(	(											-LRB-	punct	12
10	it	it		pro	3rd	sg							PRP	nsubj	12
11	)	)											-RRB-	punct	12
12	gave	give	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		causative		VBD	advcl	7
13	so	so	rb+jjrbmod	rb	adjmod								RB	advmod	14
14	many	many	attr+npremod	jj	attr								JJ	amod	16
15	different	different	attr+npremod	jj	attr								JJ	amod	16
16	things	thing		nn	pl	nom							NNS	dobj	12
17	to	to		to									TO	aux	18
18	think	think	tocls+rel	vbmain	prepv	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	16
19	about	about	in+advl	in	advl								IN	prep	18
20	,	,											,	punct	12
21	instead	instead		rb	othr								RB	advmod	22
22	of	of	in+advl	in	advl								IN	prep	1
23	,	,											,	punct	22
24													_SP	dep	1
25	(	(											-LRB-	punct	37
26	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	27
27	of	of	rb+advl	rb	advl								RB	advmod	37
28	you	you		pro	2nd	sg							PRP	nsubj	29
29	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	27
30	)	)											-RRB-	punct	29
31													_SP	dep	37
32	i	i		pro	1st	sg							PRP	dep	37
33	h-	h-											XX	dep	37
34	(	(											-LRB-	punct	37
35	it	it		pro	3rd	sg							PRP	nsubj	37
36	)	)											-RRB-	punct	37
37	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	1
38	more	more		rb	othr								RBR	advmod	39
39	like	like	in+advl	in	advl								IN	prep	37
40	life	life		nn									NN	npadvmod	42
41	-	-											HYPH	punct	42
42	like	like		jj	attr								JJ	amod	39
43	.	.											.	punct	1

#sentid = 166
0													_SP	dep	3
1	yeah	yeah											UH	intj	3
2													_SP	dep	3
3	like	like											IN	ROOT	3
4	life	life		nn									NN	npadvmod	6
5	-	-											HYPH	punct	6
6	like	like	attr+npremod	jj	attr								JJ	amod	7
7	terms	term		nn	pl								NNS	pobj	3
8													_SP	dep	3

#sentid = 167
0	(	(											-LRB-	punct	12
1	xx	xx											XX	dep	12
2	)	)											-RRB-	dep	12
3													_SP	dep	12
4	you	you		pro	2nd	sg							PRP	nsubj	12
5	could	could		vbaux	mod	pos							MD	aux	12
6	unders-	unders-											XX	dep	12
7	yeah	yeah											UH	intj	12
8	you	you		pro	2nd	sg							PRP	nsubj	12
9	could	could		vbaux	mod	pos							MD	aux	12
10	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	11
11	of	of	rb+advl	rb	advl		splaux						RB	advmod	12
12	understand	understand		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	12
13	where	where		rb	advl								WRB	advmod	16
14	he	he		pro	3rd	sg							PRP	nsubj	16
15	was	be		vbaux									VBD	aux	16
16	going	go	finitecls+advl	vbmain	vblex	past	prog	active	advlcls	whcls			VBG	advcl	12
17	better	well	rb+advl	rb	advl								RBR	advmod	16
18	.	.											.	punct	12

#sentid = 168
0													_SP	dep	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	thought	think		vbmain	vblex	past	simple	active					VBD	ROOT	2
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	made	make	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	2
5	sense	sense		nn									NN	dobj	4
6	too	too	rb+advl	rb	advl								RB	advmod	4
7	.	.											.	punct	2

#sentid = 169
0	i	i		pro	1st	sg							PRP	nsubj	1
1	agreed	agree		vbmain	prepv	past	simple	active					VBD	ROOT	1
2	with	with	in+advl	in	advl								IN	prep	1
3	him	he		pro	3rd	sg							PRP	pobj	2
4	.	.											.	punct	1

#sentid = 170
0													_SP	dep	8
1	which	which		dt									WDT	det	2
2	one	one		pro	other	pl							CD	dobj	8
3	of	of		in	in_othr								IN	prep	2
4	those	those		pro	dem	pl							DT	pobj	3
5	,	,											,	punct	8
6	do	do		vbaux									VBP	aux	8
7	you	you		pro	2nd	sg							PRP	nsubj	8
8	think	think		vbmain	vblex	pres	simple	active					VB	ROOT	8
9													_SP	dep	11
10	it	it		pro	3rd	sg							PRP	nsubj	11
11	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	8
12	?	?											.	punct	8

#sentid = 171
0													_SP	dep	2
1	all	all		dt									DT	det	2
2	five	five											CD	dep	9
3	but	but		cc									CC	cc	2
4	the	the		dt	art								DT	det	6
5	fifth	fifth	attr+npremod	jj	attr								JJ	amod	6
6	one	one		nn									NN	conj	2
7	,	,											,	punct	9
8	i	i		pro	1st	sg							PRP	nsubj	9
9	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	9
10	he	he		pro	3rd	sg							PRP	dep	13
11	d-	d-											XX	dep	13
12	i	i		pro	1st	sg							PRP	nsubj	13
13	think	think	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	9
14	he	he		pro	3rd	sg							PRP	nsubj	15
15	disproves	disprove	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	13
16	all	all											PDT	predet	18
17	the	the		dt	art								DT	det	18
18	others	other		nn	pl	nom							NNS	dobj	15
19	.	.											.	punct	9

#sentid = 172
0	(	(											-LRB-	ROOT	0
1	xx	xx		in	in_othr								XX	prep	0
2	)	)											-RRB-	punct	6
3													_SP	dep	6
4	the	the		dt	art								DT	det	6
5	first	first	attr+npremod	jj	attr								JJ	amod	6
6	one	one	appos+npostmod	nn			nappos						NN	appos	1
7	.	.											.	punct	6

#sentid = 173
0													_SP	dep	7
1	yeah	yeah											UH	intj	7
2	i	i		pro	1st	sg							PRP	dep	7
3	,	,											,	punct	7
4	i	i		pro	1st	sg							PRP	nsubj	7
5	do	do		vbaux									VBP	aux	7
6	n't	not											RB	neg	7
7	agree	agree		vbmain	prepv	pres	simple	active					VB	ROOT	7
8	with	with	in+advl	in	advl								IN	prep	7
9	the	the		dt	art								DT	det	12
10													_SP	dep	12
11	first	first		jj	attr								JJ	amod	12
12	two	two											CD	pobj	8
13													_SP	dep	7
14	when	when		rb	advl								WRB	advmod	17
15	he	he		pro	3rd	sg							PRP	nsubj	17
16	's	be		vbaux									VBZ	aux	17
17	going	go	finitecls+advl	vbmain	prepv	pres	prog	active	advlcls	whcls			VBG	advcl	7
18	through	through	in+advl	in	advl								IN	prep	17
19	all	all											DT	pobj	18
20	of	of		in	in_othr								IN	prep	19
21	them	they		pro	pl								PRP	pobj	20
22	?	?											.	punct	7

#sentid = 174
0													_SP	dep	3
1	yeah	yeah											UH	intj	3
2	,	,											,	punct	3
3	yeah	yeah											UH	ROOT	3
4													_SP	dep	3

#sentid = 175
0	the	the		dt	art								DT	det	2
1	first	first	attr+npremod	jj	attr								JJ	amod	2
2	one	one		nn									NN	dep	14
3	with	with	in+npostmod	in	nmod								IN	prep	2
4	the	the		dt	art								DT	det	5
5	body	body		nn									NN	pobj	3
6	,	,											,	punct	14
7	thing	thing		nn		nom							NN	dep	14
8	you	you		pro	2nd	sg							PRP	nsubj	9
9	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	7
10	,	,											,	punct	14
11	i	i		pro	1st	sg							PRP	nsubj	12
12	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	14
13	i	i		pro	1st	sg							PRP	nsubj	14
14	think	think		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	84
15	,	,											,	punct	14
16	all	all											PDT	predet	19
17	the	the		dt	art								DT	det	19
18	other	other	attr+npremod	jj	attr								JJ	amod	19
19	people	people		nn	pl								NNS	nsubj	31
20	who	who		relpro	relpro_wh								WP	nsubj	22
21	've	've		vbaux									VBP	aux	22
22	looked	look	finitecls+rel	vbmain	prepv	pres	simple	active	nmod_cls	whcls	rel		VBN	relcl	19
23	at	at	in+advl	in	advl								IN	prep	22
24	it	it		pro	3rd	sg							PRP	pobj	23
25	have	have		vbaux									VBP	aux	31
26	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	27
27	of	of	rb+advl	rb	advl		splaux						RB	advmod	31
28													_SP	dep	31
29	yeah	yeah											UH	intj	28
30													_SP	dep	28
31	disputed	dispute	thatcls+vcomp	vbmain	vblex	pres	perf	active	compcls		vcomp	compdel	VBN	ccomp	14
32	that	that		comp	comp_that								IN	mark	39
33	,	,											,	punct	39
34	maybe	maybe	rb+advl	rb	advl								RB	advmod	39
35	cuz	cuz		cs	cs_othr								IN	mark	39
36	,	,											,	punct	39
37	the	the		dt	art								DT	det	38
38	body	body		nn									NN	nsubj	39
39	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	31
40	there	there	rb+advl	rb	advl								RB	advmod	39
41	,	,											,	punct	39
42	and	and		cc	cls								CC	cc	39
43	then	then		rb	link								RB	advmod	46
44	like	like											UH	intj	46
45	it	it		pro	3rd	sg							PRP	nsubj	46
46	loses	lose		vbmain	vblex	pres	simple	active					VBZ	conj	39
47	attachment	attachment		nn		nom							NN	dobj	46
48	from	from	in+npostmod	in	nmod								IN	prep	47
49	the	the		dt	art								DT	det	50
50	brain	brain		nn									NN	pobj	48
51	it	it		pro	3rd	sg							PRP	nsubj	55
52	's	be		vbaux									VBZ	aux	55
53	,	,											,	punct	55
54	just	just		rb	othr								RB	advmod	55
55	gon	go		vbaux									TO	aux	57
56	na	to		vbaux									TO	aux	57
57	sit	sit		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	31
58	there	there	rb+advl	rb	advl								RB	advmod	57
59	so	so		rb	link								RB	advmod	84
60	,	,											,	punct	84
61													_SP	dep	84
62	right	right											UH	intj	84
63													_SP	dep	84
64	that	that		pro	dem	sg							DT	nsubj	67
65	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	66
66	of	of	rb+advl	rb	advl								RB	advmod	67
67	proves	prove		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	84
68	(	(											-LRB-	punct	67
69	xx	xx											XX	intj	67
70	)	)											-RRB-	punct	67
71	then	then	rb+advl	rb	advl								RB	advmod	67
72	the	the		dt	art								DT	det	73
73	brain	brain		nn									NN	dobj	67
74	,	,											,	punct	84
75													_SP	dep	84
76	that	that		pro	dem	sg							DT	nsubj	77
77	was	be		vbmain	be	past	simple	active					VBD	parataxis	84
78	the	the		dt	art								DT	det	79
79	one	one		nn									NN	attr	77
80	we	we		pro	1st								PRP	nsubj	82
81	always	always	rb+advl	rb	advl								RB	advmod	82
82	talk	talk	finitecls+rel	vbmain	prepv	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	79
83	about	about	in+advl	in	advl								IN	prep	82
84	was	be		vbmain	be	past	simple	active					VBD	ROOT	84
85	kinda	kinda		rb	othr								RB	advmod	86
86	like	like											IN	intj	84
87	you	you		pro	2nd	sg							PRP	nsubj	88
88	need	need	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	84
89	the	the		dt	art								DT	det	90
90	brain	brain		nn									NN	dobj	88
91	and	and		cc	phrs								CC	cc	90
92	the	the		dt	art								DT	det	93
93	bo-	bo-		nn									NN	conj	90
94	like	like		cs	cs_othr								IN	mark	96
95	they	they		pro	pl								PRP	nsubj	96
96	work	work	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	84
97	together	together	rb+advl	rb	advl								RB	advmod	96
98	.	.											.	punct	84

#sentid = 176
0													_SP	dep	15
1	uhuh	uhuh											UH	intj	15
2	,	,											,	punct	15
3	at	at		rb	othr								IN	advmod	4
4	least	least		rb	othr								JJS	advmod	5
5	without	without		in	in_othr								IN	prep	12
6	the	the		dt	art								DT	det	7
7	body	body		nn									NN	pobj	5
8	the	the		dt	art								DT	det	9
9	brain	brain		nn									NN	nsubj	12
10	's	be		vbaux									VBZ	aux	12
11	not	not											RB	neg	12
12	gon	go		vbaux									TO	aux	15
13	na	to		vbaux									TO	aux	15
14	(	(											-LRB-	punct	15
15	do	do		vbmain	vblex	nonfinite	simple	active					VB	ROOT	15
16	)	)											-RRB-	punct	15
17	very	very	rb+jjrbmod	rb	othr								RB	advmod	18
18	much	much	rb+advl	rb	advl								JJ	advmod	15
19	either	either	rb+advl	rb	advl								RB	advmod	15
20	.	.											.	punct	15

#sentid = 177
0	so	so											RB	ROOT	0
1	,	,											,	punct	0
2													_SP	dep	0
3	yeah	yeah											UH	intj	2
4	.	.											.	punct	0

#sentid = 178
0													_SP	dep	7
1	yeah	yeah											UH	intj	7
2	,	,											,	punct	7
3	i-	i-		in	in_othr								PRP	prep	2
4	it	it		pro	3rd	sg							PRP	nsubj	7
5	wo	will		vbaux	mod								MD	aux	7
6	n't	not											RB	neg	7
7	do	do		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	7
8	anything	anything		nn	other	nom							NN	dobj	7
9	.	.											.	punct	7

#sentid = 179
0													_SP	dep	23
1	i	i		pro	1st	sg							PRP	nsubj	4
2	do	do		vbaux									VBP	aux	4
3	n't	not											RB	neg	4
4	know	know		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	23
5	,	,											,	punct	23
6	the	the		dt	art								DT	det	8
7	last	last		jj	attr								JJ	amod	8
8	three	three											CD	dep	23
9	,	,											,	punct	23
10													_SP	dep	23
11	yeah	yeah											UH	intj	23
12	they	they		pro	pl								PRP	dep	23
13	all	all											DT	appos	12
14	sorta	sorta		rb	othr								RB	advmod	15
15													_SP	dep	12
16	i	i		pro	1st	sg							PRP	nsubj	17
17	ca	can		vbmain	vblex	vp_w_modal	simple	active					MD	parataxis	15
18	n't	not											RB	neg	17
19	_	_											NFP	punct	17
20	like	like											UH	intj	23
21	they	they		pro	pl								PRP	nsubj	23
22	all	all											DT	appos	21
23	seem	seem		vbmain	vblex	pres	simple	active					VBP	ROOT	23
24	somewhat	somewhat	rb+jjrbmod	rb	othr								RB	advmod	26
25	,	,											,	punct	26
26	plaus-	plaus-											JJ	oprd	23
27	like	like											UH	intj	26
28	you	you		pro	2nd	sg							PRP	nsubj	30
29	could	could		vbaux	mod	pos							MD	aux	30
30	work	work		vbmain	prepv	vp_w_modal	simple	active					VB	dep	38
31	with	with	in+advl	in	advl								IN	prep	30
32	,	,											,	punct	38
33	(	(											-LRB-	punct	38
34	that	that		comp	comp_that								IN	mark	38
35	)	)											-RRB-	punct	38
36	you	you		pro	2nd	sg							PRP	nsubj	38
37	could	could		vbaux	mod	pos							MD	aux	38
38	work	work		vbmain	prepv	vp_w_modal	simple	active	compcls	thatcls			VB	ccomp	27
39	with	with	in+advl	in	advl								IN	prep	38
40	'em	them											PRP	pobj	39
41	.	.											.	punct	23

#sentid = 180
0													_SP	dep	0
1	see	see		vbmain	vblex	nonfinite	simple	active					VB	preconj	0
2	the	the		dt	art								DT	det	6
3	point	point		nn			npremod						NN	nmod	6
4	of	of	of+npostmod	in	nmod								IN	prep	3
5	view	view		nn									NN	pobj	4
6	one	one		pro	other	pl							CD	dobj	1
7	i	i		pro	1st	sg							PRP	nsubj	8
8	think	think	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	6
9	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	8
10	good	good		jj	pred								JJ	acomp	9
11	except	except		in	in_othr								IN	prep	6
12	for	for		in	in_othr								IN	prep	11
13													_SP	dep	12
14	yeah	yeah											UH	intj	12
15													_SP	dep	12
16	when	when		rb	advl								WRB	advmod	18
17	he	he		pro	3rd	sg							PRP	nsubj	18
18	throws	throw	finitecls+advl	vbmain	phrsv	pres	simple	active	advlcls	whcls			VBZ	advcl	30
19	in	in		rb	prtcle								RP	prt	18
20	like	like											UH	intj	18
21	,	,											,	punct	18
22	your	your		dt	poss								PRP$	poss	23
23	point	point		nn									NN	dobj	18
24	of	of	of+npostmod	in	nmod								IN	prep	23
25	view	view		nn									NN	pobj	24
26	(	(											-LRB-	punct	30
27	it	it		pro	3rd	sg							PRP	nsubj	30
28	can	can		vbaux	mod	pos							MD	aux	30
29	)	)											-RRB-	punct	30
30	be	be		vbmain	be	vp_w_modal	simple	active	compcls		incomp	compdel	VB	pcomp	12
31	wrong	wrong		jj	pred								JJ	acomp	30
32	.	.											.	punct	6

#sentid = 181
0	you	you		pro	2nd	sg							PRP	nsubj	1
1	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	49
4	basically	basically	rb+advl	rb	advl	ly							RB	advmod	3
5													_SP	dep	6
6	is	is											XX	dep	3
7	that	that		pro	dem	sg							DT	nsubj	8
8	is	is											RB	parataxis	6
9	that	that											DT	dep	3
10	(	(											-LRB-	punct	9
11	all	all											DT	appos	9
12	he	he		pro	3rd	sg							PRP	nsubj	13
13	said	say	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel	reldel	VBD	relcl	11
14	to	to	in+advl	in	advl								IN	prep	13
15	)	)											-RRB-	punct	9
16	(	(											-LRB-	punct	9
17	xx	xx											XX	nmod	9
18	)	)											-RRB-	punct	9
19													_SP	dep	3
20	yeah	yeah											UH	intj	29
21	like	like											UH	intj	29
22	i	i		pro	1st	sg							PRP	nsubj	23
23	do	do		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	29
24	n't	n't		vbmain	vblex	pres	simple	active					VBP	neg	23
25	,	,											,	punct	29
26	i	i		pro	1st	sg							PRP	nsubj	29
27	do	do		vbaux									VBP	aux	29
28	n't	not											RB	neg	29
29	get	get		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	42
30	like	like											UH	intj	29
31	,	,											,	punct	29
32	between	between	in+advl	in	advl								IN	prep	29
33	like	like											UH	intj	32
34	three	three											CD	pobj	32
35	and	and		cc									CC	cc	34
36	five	five											CD	conj	34
37	,	,											,	punct	29
38	i	i		pro	1st	sg							PRP	nsubj	42
39	do	do		vbaux									VBP	aux	42
40	n't	not											RB	neg	42
41	(	(											-LRB-	punct	42
42	agree	agree		vbmain	prepv	pres	simple	active					VB	dep	3
43	with	with	in+advl	in	advl								IN	prep	42
44	)	)											-RRB-	punct	42
45	that	that											DT	dep	42
46													_SP	dep	49
47	well	well											UH	intj	49
48	he	he		pro	3rd	sg							PRP	nsubj	49
49	used	use		vbmain	vblex	past	simple	active					VBD	ROOT	49
50	an	an		dt									DT	det	51
51	example	example		nn									NN	dobj	49
52	with	with	in+npostmod	in	nmod								IN	prep	51
53	three	three											CD	pobj	52
54	,	,											,	punct	51
55	about	about	in+npostmod	in	nmod								IN	prep	51
56	like	like											UH	intj	55
57	,	,											,	punct	55
58	i	i		pro	1st	sg							PRP	nsubj	59
59	think	think		vbmain	vblex	pres	simple	active					VBP	parataxis	55
60	it	it		pro	3rd	sg							PRP	nsubj	61
61	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	59
62	like	like											UH	intj	61
63	something	something		nn		nom							NN	attr	61
64	about	about	in+npostmod	in	nmod								IN	prep	63
65	watching	watch	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	64
66	a	a		dt	art								DT	det	67
67	movie	movie		nn									NN	dobj	65
68	,	,											,	punct	55
69													_SP	dep	55
70	oh	oh											UH	intj	72
71	yeah	yeah											UH	intj	72
72	yeah	yeah											UH	intj	55
73													_SP	dep	55
74	like	like											UH	intj	55
75	you	you		pro	2nd	sg							PRP	nsubj	76
76	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	79
77	like	like											UH	intj	79
78	you	you		pro	2nd	sg							PRP	nsubj	79
79	think	think		vbmain	vblex	pres	simple	active	compcls		incomp	compdel	VBP	pcomp	55
80	,	,											,	punct	55
81	like	like											UH	intj	55
82	like	like											UH	intj	55
83	how	how		comp	comp_wh								WRB	advmod	85
84	you	you		pro	2nd	sg							PRP	nsubj	85
85	scream	scream	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VBP	pcomp	55
86	if	if		cs	cnd								IN	mark	100
87	like	like											UH	intj	88
88	something	something		nn		nom							NN	dep	100
89	,	,											,	punct	100
90													_SP	dep	100
91	yeah	yeah											UH	intj	94
92	,	,											,	punct	94
93	you	you		pro	2nd	sg							PRP	nsubj	94
94	're	be		vbmain	be	pres	simple	active					VBP	parataxis	100
95	not	not											RB	neg	94
96													_SP	dep	94
97	you	you		pro	2nd	sg							PRP	nsubj	98
98	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	100
99	bad	bad											JJ	nsubj	100
100	happens	happen	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBZ	advcl	85
101	cuz	cuz	in+advl	in	advl								IN	prep	85
102	that	that		pro	dem	sg							DT	nsubj	103
103	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBZ	advcl	85
104	like	like											UH	intj	103
105													_SP	dep	103
106	you	you		pro	2nd	sg							PRP	nsubj	109
107	do	do		vbaux									VBP	aux	109
108	n't	not											RB	neg	109
109	remember	remember		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	112
110													_SP	dep	109
111	you	you		pro	2nd	sg							PRP	nsubj	112
112	think	think	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBP	advcl	103
113	that	that		comp	comp_that								IN	mark	121
114	you	you		pro	2nd	sg							PRP	nsubj	121
115	you	you		pro	2nd	sg							PRP	nsubj	116
116	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	121
117	your	your		dt	poss								PRP$	poss	118
118	point	point		nn									NN	nsubj	121
119	of	of	of+npostmod	in	nmod								IN	prep	118
120	view	view		nn									NN	pobj	119
121	changes	change	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	112
122	.	.											.	punct	49

#sentid = 182
0													_SP	dep	1
1	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	121
2	that	that		pro	dem	sg							DT	dobj	1
3	like	like											UH	intj	1
4	what	what											WP	dep	8
5	the	the		dt	art								DT	det	6
6	ro-	ro-											XX	dep	8
7	like	like											UH	intj	8
8	robotics	robotic		nn	pl								NNS	dobj	13
9	(	(											-LRB-	punct	8
10	xx	xx											XX	nmod	8
11	)	)											-RRB-	punct	8
12													_SP	dep	8
13	yeah	yeah											UH	intj	1
14													_SP	dep	1
15	(	(											-LRB-	punct	16
16	working	work		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	meta	1
17	)	)											-RRB-	punct	16
18	on	on	in+advl	in	advl								IN	prep	16
19	machines	machine		nn	pl								NNS	pobj	18
20													_SP	dep	27
21	oh	oh											UH	intj	27
22	,	,											,	punct	21
23	yeah	yeah											UH	intj	21
24													_SP	dep	27
25	kinda	kinda	rb+advl	rb	advl								RB	advmod	27
26	can	can		vbaux	mod	pos							MD	aux	27
27	feel	feel		vbmain	prepv	vp_w_modal	simple	active					VB	dep	1
28	like	like		cs	cs_othr								IN	mark	30
29	you	you		pro	2nd	sg							PRP	nsubj	30
30	're	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBP	advcl	27
31	,	,											,	punct	30
32	that	that											DT	dep	30
33	,	,											,	punct	30
34													_SP	dep	30
35	right	right											UH	intj	1
36													_SP	dep	1
37	(	(											-LRB-	punct	39
38	i	i		pro	1st	sg							PRP	nsubj	39
39	see	see		vbmain	vblex	pres	simple	active					VBP	parataxis	1
40	that	that		pro	dem	sg							DT	dobj	39
41	)	)											-RRB-	punct	39
42													_SP	dep	1
43	i	i		pro	1st	sg							PRP	nsubj	44
44	agree	agree		vbmain	vblex	pres	simple	active					VBP	parataxis	1
45	i	i		pro	1st	sg							PRP	nsubj	46
46	see	see	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	1
47	it	it		pro	3rd	sg							PRP	dobj	46
48	as	as	in+advl	in	advl								IN	prep	46
49	being	be	ingcls+incomp	vbmain	be	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	48
50	i	i		pro	1st	sg							PRP	nsubj	51
51	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	53
52	it	it		pro	3rd	sg							PRP	nsubj	53
53	's	be		vbmain	be	pres	simple	active					VBZ	dep	49
54	defin-	defin-		jj	pred								JJ	acomp	53
55	(	(											-LRB-	punct	53
56	different	different		jj	pred								JJ	acomp	53
57	,	,											-RRB-	punct	53
58	)	)											-RRB-	punct	49
59	you	you		pro	2nd	sg							PRP	nsubj	60
60	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	49
61	,	,											,	punct	49
62	so	so		cc	cls								CC	cc	46
63	i	i		pro	1st	sg							PRP	nsubj	66
64	do	do		vbaux									VBP	aux	66
65	n't	not											RB	neg	66
66	know	know		vbmain	vblex	pres	simple	active					VB	conj	46
67	how	how	rb+jjrbmod	rb	adjmod								WRB	advmod	68
68	strong	strong		jj	pred								JJ	acomp	72
69	that	that		dt	dt_dem								DT	det	70
70	example	example		nn									NN	nsubj	72
71	would	would		vbaux	mod	prd							MD	aux	72
72	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	66
73	to	to											TO	dep	76
74	,	,											,	punct	76
75	i	i		pro	1st	sg							PRP	nsubj	76
76	guess	guess	xtrapos+thatcls+jcomp	vbmain	vblex	pres	simple	active	compcls		jcomp	compdel	VBP	xcomp	72
77													_SP	dep	76
78	i	i		pro	1st	sg							PRP	nsubj	79
79	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	81
80	how	how		rb	othr								WRB	advmod	81
81	c-	c-											XX	dep	84
82													_SP	dep	84
83	(	(											-LRB-	punct	84
84	defer	defer		vbmain	vblex	nonfinite	simple	active					VB	meta	76
85	me	i		pro	1st	sg							PRP	dobj	84
86	from	from	in+advl	in	advl								IN	prep	84
87	his	his		dt	poss	sg							PRP$	poss	88
88	example	example		nn									NN	pobj	86
89	)	)											-RRB-	punct	84
90													_SP	dep	1
91	but	but		cc	cls								CC	cc	1
92	like	like											UH	intj	101
93	,	,											,	punct	101
94	in	in	in+advl	in	advl								IN	prep	101
95	that	that		dt	dt_dem								DT	det	96
96	example	example		nn									NN	pobj	94
97	like	like											UH	intj	101
98	why	why		rb	advl								WRB	advmod	101
99	does	do		vbaux									VBZ	aux	101
100	it	it		pro	3rd	sg							PRP	nsubj	101
101	matter	matter		vbmain	vblex	pres	simple	active					VB	conj	1
102	where	where		comp	comp_wh								WRB	advmod	106
103	you	you		pro	2nd	sg							PRP	nsubj	106
104	,	,											,	punct	106
105	actually	actually	rb+advl	rb	advl	ly							RB	advmod	106
106	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	101
107	,	,											,	punct	101
108	if	if		cs	cnd								IN	mark	111
109	like	like											UH	intj	111
110	you	you		pro	2nd	sg							PRP	nsubj	111
111	think	think	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	101
112	that	that		comp	comp_that								IN	mark	114
113	you	you		pro	2nd	sg							PRP	nsubj	114
114	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	111
115	somewhere	somewhere	rb+advl	rb	advl								RB	advmod	114
116	,	,											,	punct	121
117	(	(											-LRB-	punct	121
118	like	like											UH	intj	121
119	)	)											-RRB-	punct	121
120	you	you		pro	2nd	sg							PRP	nsubj	121
121	're	be		vbmain	be	pres	simple	active					VBP	ROOT	121
122	there	there	rb+advl	rb	advl								RB	advmod	121
123	.	.											.	punct	121

#sentid = 183
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2													_SP	dep	1
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	0
5	?	?											.	punct	4

#sentid = 184
0													_SP	dep	10
1	uh	uh											UH	intj	0
2	huh	huh											UH	intj	1
3													_SP	dep	10
4	yeah	yeah											UH	intj	10
5	,	,											,	punct	10
6	i	i		pro	1st	sg							PRP	nsubj	10
7	do	do		vbaux									VBP	aux	10
8	n't	not											RB	neg	10
9	i	i		pro	1st	sg							PRP	nsubj	10
10	agree	agree		vbmain	prepv	pres	simple	active					VBP	ROOT	10
11	with	with	in+advl	in	advl								IN	prep	10
12	four	four											CD	pobj	11
13	somewhat	somewhat	rb+jjrbmod	rb	othr								RB	advmod	14
14	too	too	rb+advl	rb	advl								RB	advmod	10
15	i	i		pro	1st	sg							PRP	nsubj	16
16	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	10
17	,	,											,	punct	10
18													_SP	dep	10
19	i	i		pro	1st	sg							PRP	nsubj	20
20	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	22
21	it	it		pro	3rd	sg							PRP	nsubj	22
22	's	be		vbmain	be	pres	simple	active					VBZ	dep	10
23	not	not											RB	neg	22
24	plausible	plausible		jj	pred								JJ	acomp	22
25	but	but		cc	cls								CC	cc	22
26	i	i		pro	1st	sg							PRP	nsubj	27
27	agree	agree		vbmain	vblex	pres	simple	active					VBP	conj	22
28	.	.											.	punct	10

#sentid = 185
0													_SP	dep	6
1	i	i		pro	1st	sg							PRP	dep	6
2	i	i		pro	1st	sg							PRP	meta	1
3	like	like											UH	intj	2
4	i	i		pro	1st	sg							PRP	dep	6
5	like	like											UH	intj	4
6	four	four											CD	ROOT	6
7	.	.											.	punct	6

#sentid = 186
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2	.	.											.	punct	1

#sentid = 187
0	like	like											UH	intj	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	covers	cover		vbmain	vblex	pres	simple	active					VBZ	ROOT	2
3													_SP	dep	2
4	both	both											DT	dobj	2
5													_SP	dep	2
6	because	because		cs	cos								IN	mark	7
7	th-	th-											XX	dep	2
8	then	then		rb	link								RB	advmod	12
9	like	like											UH	intj	12
10	they	they		pro	pl								PRP	nsubj	12
11	'll	will		vbaux	mod								MD	aux	12
12	bring	bring		vbmain	phrsv	vp_w_modal	simple	active					VB	meta	2
13	up	up		rb	prtcle								RP	prt	12
14	the	the		dt	art								DT	det	15
15	points	point		nn	pl								NNS	dobj	12
16	that	that		relpro	relpro_that								IN	mark	28
17	like	like											UH	intj	25
18	,	,											,	punct	25
19	um	um											UH	intj	25
20	,	,											,	punct	25
21	your	your		dt	poss								PRP$	poss	22
22	body	body		nn									NN	nsubj	25
23	and	and		cc	phrs								CC	cc	22
24	brain	brain		nn									NN	conj	22
25	are	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	28
26	separate	separate		jj	pred								JJ	acomp	25
27	that	that		relpro	relpro_that	sg							DT	nsubj	28
28	's	be	thatcls+ncomp	vbmain	be	pres	simple	active	nmod_cls	thatcls	ncomp		VBZ	acl	15
29	two	two											CD	nummod	31
30	different	different	attr+npremod	jj	attr								JJ	amod	31
31	things	thing		nn	pl	nom							NNS	attr	28
32													_SP	dep	12
33	yeah	yeah											UH	intj	2
34													_SP	dep	2
35	so	so		rb	link								RB	advmod	39
36	,	,											,	punct	39
37	then	then		rb	link								RB	advmod	39
38	what	what											WP	attr	39
39	are	be		vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	43
40	you	you		pro	2nd	sg							PRP	nsubj	39
41	,	,											,	punct	43
42	what	what											WP	attr	43
43	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	2
44	your	your		dt	poss								PRP$	poss	45
45	identity	identity		nn		nom							NN	nsubj	43
46	?	?											.	punct	43

#sentid = 188
0													_SP	dep	4
1	but	but		cc	phrs								CC	cc	4
2	still	still	rb+advl	rb	advl								RB	advmod	4
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	makes	make		vbmain	vblex	pres	simple	active					VBZ	ROOT	4
5	it	it		pro	3rd	sg							PRP	nsubj	7
6	like	like											UH	intj	7
7	nice	nice											JJ	ccomp	4
8	and	and		cc	phrs								CC	cc	7
9													_SP	dep	7
10	easy	easy											JJ	conj	7
11													_SP	dep	4
12	but	but		cc									CC	cc	14
13	i	i		pro	1st	sg							PRP	nsubj	14
14													_SP	dep	4
15	just	just	rb+advl	rb	advl								RB	advmod	17
16	to	to		to									TO	aux	17
17	be	be		vbmain	be	nonfinite	simple	active		tocls			VB	meta	4
18	like	like											UH	intj	17
19													_SP	dep	17
20	i	i		pro	1st	sg							PRP	nsubj	23
21	still	still	rb+advl	rb	advl								RB	advmod	23
22													_SP	dep	23
23	like	like	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	17
24	it	it		pro	3rd	sg							PRP	dobj	23
25													_SP	dep	4
26	but	but		cc									CC	cc	29
27	then	then		rb	othr								RB	advmod	29
28	what	what											WP	dep	29
29	about	about											IN	meta	4
30	like	like											UH	intj	29
31	,	,											,	punct	29
32	when	when		rb	advl								WRB	advmod	40
33	his	his		dt	poss	sg							PRP$	poss	34
34	body	body		nn									NN	nsubj	35
35	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBZ	advcl	29
36	dead	dead		jj	pred								JJ	acomp	35
37	,	,											,	punct	35
38	and	and		cc	cls								CC	cc	35
39	it	it		pro	3rd	sg							PRP	nsubj	40
40	's	be		vbmain	be	pres	simple	active					VBZ	conj	35
41	just	just		rb	othr								RB	advmod	43
42	his	his		dt	poss	sg							PRP$	poss	43
43	brain	brain		nn									NN	attr	40
44	?	?											.	punct	29

#sentid = 189
0													_SP	dep	5
1	then	then		rb	link								RB	advmod	5
2	half	half		nn									NN	nsubj	5
3	of	of	of+npostmod	in	nmod								IN	prep	2
4	him	he		pro	3rd	sg							PRP	pobj	3
5	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	5
6	dead	dead		jj	pred								JJ	acomp	5
7	.	.											.	punct	5

#sentid = 190
0													_SP	dep	6
1	i	i		pro	1st	sg							PRP	nsubj	2
2	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	6
3	i	i		pro	1st	sg							PRP	dep	6
4	,	,											,	punct	6
5	i	i		pro	1st	sg							PRP	nsubj	6
6	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	6
7	you	you		pro	2nd	sg							PRP	nsubj	10
8	could	could		vbaux	mod	pos							MD	aux	10
9													_SP	dep	10
10	modify	modify	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	6
11	four	four											CD	dobj	10
12	,	,											,	punct	10
13	and	and		cc	phrs								CC	cc	10
14	say	say		vbmain	vblex	nonfinite	simple	active					VB	conj	10
15													_SP	dep	14
16	see	see		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	14
17	the	the		dt	art								DT	det	19
18	tough	tough	attr+npremod	jj	attr								JJ	amod	19
19	thing	thing		nn		nom							NN	dep	24
20	i-	i-											PRP	punct	24
21	the	the		dt	art								DT	det	23
22	tough	tough	attr+npremod	jj	attr								JJ	amod	23
23	thing	thing		nn		nom							NN	nsubj	24
24	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	pcomp	16
25	um	um											UH	intj	24
26	,	,											,	punct	24
27	like	like											UH	intj	24
28	physically	physically	rb+advl	rb	advl	ly							RB	advmod	34
29	does	do		vbaux									VBZ	aux	34
30	n't	not											RB	neg	34
31	a	a		dt	art								DT	det	32
32	brain	brain		nn									NN	nsubj	34
33	only	only	rb+advl	rb	advl	ly	splaux						RB	advmod	34
34	work	work	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	24
35	if	if		cs	cnd								IN	mark	38
36	it	it		pro	3rd	sg							PRP	nsubj	38
37	's	be		vbaux									VBZ	aux	38
38	gon	go											TO	advcl	34
39	na	to		vbaux									TO	aux	40
40	have	have		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	14
41	a	a		dt	art								DT	det	42
42	body	body		nn									NN	dobj	40
43	with	with	in+npostmod	in	nmod								IN	prep	42
44	it	it		pro	3rd	sg							PRP	pobj	43
45	?	?											.	punct	14

#sentid = 191
0													_SP	dep	0
1	not	not											RB	neg	2
2	in	in		in	in_othr								IN	prep	0
3	the	the		dt	art								DT	det	4
4	story	story		nn		nom							NN	pobj	2
5	.	.											.	punct	0

#sentid = 192
0													_SP	dep	8
1	right	right											UH	intj	8
2	,	,											,	punct	8
3	but	but		cc	phrs								CC	cc	8
4	i-	i-											PRP	punct	8
5	no	no											UH	intj	8
6	i	i		pro	1st	sg							PRP	nsubj	8
7	'm	be		vbaux									VBP	aux	8
8	wondering	wonder		vbmain	vblex	pres	prog	active					VBG	ROOT	8
9	like	like											UH	intj	8
10	in	in	in+advl	in	advl								IN	prep	17
11	real	real	attr+npremod	jj	attr								JJ	amod	12
12	life	life		nn									NN	pobj	10
13	like	like											UH	intj	17
14	,	,											,	punct	17
15	do	do		vbaux									VBP	aux	17
16	you	you		pro	2nd	sg							PRP	nsubj	17
17	need	need		vbmain	vblex	pres	simple	active	compcls		vcomp		VB	ccomp	8
18	a	a		dt	art								DT	det	19
19	body	body		nn									NN	dobj	17
20	for	for		cs	cs_othr								IN	mark	24
21	the	the		dt	art								DT	det	22
22	brain	brain		nn									NN	nsubj	24
23	to	to		to									TO	aux	24
24	work	work	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls	other_advl		VB	advcl	17
25	?	?											.	punct	8

#sentid = 193
0	like	like											UH	intj	4
1	will	will		vbaux	mod	prd							MD	aux	4
2	there	there											EX	expl	4
3	still	still	rb+advl	rb	advl		splaux						RB	advmod	4
4	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	4
5	like	like											UH	intj	4
6	,	,											,	punct	4
7	electrical	electrical	attr+npremod	jj	attr								JJ	amod	8
8	transmissions	transmission		nn	pl								NNS	attr	4
9	or	or		cc	phrs								CC	cc	8
10	whatever	whatever											WDT	conj	8
11	going	go	ingcls+rel	vbmain	prepv	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	8
12	on	on		rb	prtcle								RP	prt	11
13	?	?											.	punct	4

#sentid = 194
0													_SP	dep	19
1	well	well											UH	intj	8
2	there	there											EX	expl	3
3	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	8
4	no	no											DT	attr	3
5	,	,											,	punct	8
6	there	there											EX	expl	8
7	would	would		vbaux	mod	prd							MD	aux	8
8	be	be		vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	19
9	no	no		dt									DT	det	10
10	blood	blood		nn									NN	attr	8
11													_SP	dep	8
12	to	to		to									TO	aux	13
13	send	send	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	8
14	things	thing		nn	pl	nom							NNS	dobj	13
15	to	to	in+advl	in	advl								IN	prep	13
16	,	,											,	punct	19
17	i	i		pro	1st	sg							PRP	nsubj	19
18	'm	be		vbaux									VBP	aux	19
19	assuming	assume		vbmain	vblex	pres	prog	active					VBG	ROOT	19
20	you	you		pro	2nd	sg							PRP	nsubj	22
21	can	can		vbaux	mod	pos							MD	aux	22
22	find	find	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	19
23	like	like											UH	intj	22
24	some	some		dt									DT	det	25
25	kind	kind		nn									NN	dobj	22
26	of	of	of+npostmod	in	nmod								IN	prep	25
27	vat	vat		nn									NN	pobj	26
28	to	to		to									TO	aux	29
29	put	put	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	27
30	it	it		pro	3rd	sg							PRP	dobj	29
31	in	in	in+advl	in	advl								IN	prep	29
32	,	,											,	punct	29
33	to	to		to									TO	aux	34
34	keep	keep		vbmain	vblex	nonfinite	simple	active		tocls			VB	dep	29
35	nutrients	nutrient		nn	pl	nom							NNS	dobj	34
36	in	in	in+advl	in	advl								IN	prep	34
37	.	.											.	punct	19

#sentid = 195
0	that	that		pro	dem	sg							DT	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	why	why		rb	advl								WRB	advmod	7
3	i	i		pro	1st	sg							PRP	nsubj	7
4	do	do		vbaux									VBP	aux	7
5	n't	not											RB	neg	7
6	,	,											,	punct	7
7	know	know	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	1
8	,	,											,	punct	7
9	because	because	in+advl	in	advl								IN	prep	1
10	,	,											,	punct	9
11													_SP	dep	1
12	that	that											IN	mark	14
13	i	i		pro	1st	sg							PRP	nsubj	14
14													_SP	dep	20
15	not	not											RB	neg	20
16	that	that											DT	dep	20
17	(	(											-LRB-	punct	20
18	would	would		vbaux	mod	prd							MD	aux	20
19	)	)											-RRB-	punct	20
20	ask	ask		vbmain	vblex	vp_w_modal	simple	active					VB	dep	1
21	.	.											.	punct	1

#sentid = 196
0													_SP	dep	0
1	i	i		pro	1st	sg							PRP	dep	0

#sentid = 197
0	_	_											XX	ROOT	0

#sentid = 198
0	in	in	in+advl	in	advl								IN	prep	11
1	terms	term		nn	pl								NNS	pobj	0
2	of	of	of+npostmod	in	nmod								IN	prep	1
3	the	the		dt	art								DT	det	4
4	story	story		nn		nom							NN	pobj	2
5	,	,											,	punct	11
6													_SP	dep	11
7	uh	uh											UH	intj	11
8	huh	huh											UH	intj	7
9													_SP	dep	7
10	it	it		pro	3rd	sg							PRP	nsubj	11
11	works	work		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	27
12													_SP	dep	11
13	the	the		dt	art								DT	det	14
14	brain	brain		nn									NN	npadvmod	11
15	the	the		dt	art								DT	det	16
16	brain	brain	appos+npostmod	nn			nappos						NN	appos	14
17	like	like		cs	cs_othr								IN	mark	19
18	it	it		pro	3rd	sg							PRP	nsubj	19
19	works	work	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	11
20													_SP	dep	11
21	assuming	assume	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	27
22	we	we		pro	1st								PRP	nsubj	24
23	can	can		vbaux	mod	pos							MD	aux	24
24	function	function	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	21
25	,	,											,	punct	27
26	that	that		pro	dem	sg							DT	nsubj	27
27	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	27
28	what	what											WP	pobj	33
29	we	we		pro	1st								PRP	nsubj	30
30	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	27
31	to	to		to									TO	aux	32
32	go	go		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	30
33	with	with	in+advl	in	advl								IN	prep	32
34	.	.											.	punct	27

#sentid = 199
0													_SP	dep	3
1	no	no											UH	intj	3
2	i	i		pro	1st	sg							PRP	nsubj	3
3	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	3
4	you	you		pro	2nd	sg							PRP	nsubj	6
5	could	could		vbaux	mod	pos							MD	aux	6
6	modify	modify	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	3
7	four	four											CD	dobj	6
8	and	and		cc	phrs								CC	cc	6
9	like	like											UH	intj	16
10	,	,											,	punct	16
11	if	if		cs	cnd								IN	mark	13
12	it	it		pro	3rd	sg							PRP	nsubj	13
13	was	be	finitecls+advl	vbmain	be	past	simple	active	advlcls		conditional		VBD	advcl	16
14	_	_											XX	punct	13
15	could	could		vbaux	mod	pos							MD	aux	16
16	be	be	finitecls+advl	vbmain	be	vp_w_modal	simple	active	advlcls				VB	advcl	3
17	like	like											UH	intj	16
18	any	any		dt									DT	det	19
19	combination	combination		nn		nom							NN	attr	16
20	of	of	of+npostmod	in	nmod								IN	prep	19
21	the	the		dt	art								DT	det	22
22	two	two											CD	pobj	20
23	or	or		cc	phrs								CC	cc	19
24	some-	some-		dt									DT	det	27
25	i	i		pro	1st	sg							PRP	nsubj	26
26	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	27
27	something	something		nn		nom							NN	conj	19
28	like	like	in+npostmod	in	nmod								IN	prep	27
29	that	that		pro	dem	sg							DT	pobj	28
30	?	?											.	punct	16

#sentid = 200
0													_SP	dep	6
1	mhm	mhm											UH	intj	6
2													_SP	dep	6
3	like	like											UH	intj	6
4	it	it		pro	3rd	sg							PRP	nsubj	6
5	can	can		vbaux	mod	pos							MD	aux	6
6	be	be		vbmain	be	vp_w_modal	simple	active					VB	parataxis	80
7	both	both											DT	attr	6
8	,	,											,	punct	6
9	or	or		cc	cls								CC	cc	6
10	it	it		pro	3rd	sg							PRP	nsubj	12
11	can	can		vbaux	mod	pos							MD	aux	12
12	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	6
13	just	just		rb	othr								RB	advmod	14
14	one	one											CD	attr	12
15	that	that		relpro	relpro_that	sg							WDT	nsubj	17
16	just	just	rb+advl	rb	advl								RB	advmod	17
17	ba-	ba-	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	14
18	that	that		relpro	relpro_that	sg							WDT	nsubj	22
19	basically	basically	rb+advl	rb	advl	ly							RB	advmod	22
20	just	just	rb+advl	rb	advl								RB	advmod	22
21	like	like											UH	intj	22
22	throws	throw	finitecls+rel	vbmain	phrsv	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	14
23	all	all		dt									DT	det	24
24	four	four											CD	dobj	22
25	of	of		in	in_othr								IN	prep	24
26	'em	them											PRP	pobj	25
27	in	in		rb	prtcle								RP	prt	22
28	,	,											,	punct	22
29													_SP	dep	22
30	together	together	rb+advl	rb	advl								RB	advmod	22
31													_SP	dep	22
32	that	that		relpro	relpro_that								IN	mark	37
33	that	that		dt	dt_dem								DT	det	34
34	kind	kind		nn	advl								NN	advmod	37
35	of	of	rb+advl	rb	advl								RB	advmod	37
36	,	,											,	punct	37
37	pushes	push	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	14
38	a	a		dt	art								DT	det	40
39	little	little	attr+npremod	jj	attr								JJ	amod	40
40	bit	bit		nn									NN	npadvmod	41
41	more	more	rb+advl	rb	advl								RBR	advmod	37
42	towards	towards	in+advl	in	advl								IN	prep	37
43	the	the		dt	art								DT	det	45
44	last	last	attr+npremod	jj	attr								JJ	amod	45
45	one	one		nn	other	pl							NN	pobj	42
46	because	because		cs	cos								IN	mark	65
47	,	,											,	punct	65
48													_SP	dep	65
49	i	i		pro	1st	sg							PRP	nsubj	52
50	do	do		vbaux									VBP	aux	52
51	n't	not											RB	neg	52
52	get	get		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	65
53	what	what											WP	dep	55
54	the	the		dt	art								DT	det	55
55													_SP	dep	59
56	little	little											JJ	dep	59
57	,	,											,	punct	59
58	the	the		dt	art								DT	det	59
59	last	last											JJ	ccomp	52
60													_SP	dep	65
61	um	um											UH	intj	65
62	,	,											,	punct	65
63	i	i		pro	1st	sg							PRP	nsubj	65
64	i	i		pro	1st	sg							PRP	nsubj	65
65	think	think	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VBP	advcl	37
66													_SP	dep	65
67	yeah	yeah											UH	intj	69
68	,	,											,	punct	69
69	me	i		pro	1st	sg							PRP	meta	65
70	neither	neither											RB	appos	69
71													_SP	dep	6
72	(	(											-LRB-	punct	76
73	i	i		pro	1st	sg							PRP	nsubj	76
74	do	do		vbaux									VBP	aux	76
75	n't	not											RB	neg	76
76	know	know		vbmain	vblex	pres	simple	active					VB	parataxis	6
77	)	)											-RRB-	punct	76
78													_SP	dep	6
79	i	i		pro	1st	sg							PRP	nsubj	80
80	see	see		vbmain	vblex	pres	simple	active					VBP	ROOT	80
81	the	the		dt	art								DT	det	83
82	last	last	attr+npremod	jj	attr								JJ	amod	83
83	one	one		nn	other	pl							NN	dobj	80
84	as	as	in+advl	in	advl								IN	prep	80
85	being	be	ingcls+incomp	vbmain	be	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	84
86	,	,											,	punct	85
87	kinda	kinda		rb	othr								RB	advmod	90
88	like	like											UH	intj	87
89	,	,											,	punct	87
90	three	three											CD	attr	85
91	and	and		cc									CC	cc	90
92	four	four											CD	conj	90
93	but	but		cc	phrs								CC	cc	85
94	,	,											,	punct	85
95	knowing	know		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	85
96	like	like											UH	intj	95
97	being	be	ingcls+vcomp	vbmain	be	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	95
98	the	the		dt	art								DT	det	100
99	right	right		jj	attr								JJ	amod	100
100	one	one											CD	attr	97
101	.	.											.	punct	80

#sentid = 201
0	like	like											UH	ROOT	0
1													_SP	dep	0
2	the	the		dt	art								DT	det	3
3	three	three											CD	dep	0
4													_SP	dep	3
5	but	but		cc	phrs								CC	cc	9
6	how	how		rb	advl								WRB	advmod	9
7	do	do		vbaux									VBP	aux	9
8	you	you		pro	2nd	sg							PRP	nsubj	9
9	know	know		vbmain	vblex	pres	simple	active					VB	conj	0
10	which	which											WDT	nsubj	11
11	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	9
12	the	the		dt	art								DT	det	14
13	right	right	attr+npremod	jj	attr								JJ	amod	14
14	one	one		nn									NN	attr	11
15	if	if		cs	cnd								IN	mark	17
16	you	you		pro	2nd	sg							PRP	nsubj	17
17	think	think	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	9
18													_SP	dep	17
19	you	you		pro	2nd	sg							PRP	nsubj	20
20													_SP	dep	22
21	you	you		pro	2nd	sg							PRP	nsubj	22
22	do	do		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	27
23	n't	not											RB	neg	22
24	you	you		pro	2nd	sg							PRP	nsubj	27
25	do	do		vbaux									VBP	aux	27
26	n't	not											RB	neg	27
27	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	9
28	to	to		to									TO	aux	29
29	know	know		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	27
30	,	,											,	punct	27
31	but	but		cc	cls								CC	cc	27
32	you	you		pro	2nd	sg							PRP	nsubj	34
33	just	just	rb+advl	rb	advl								RB	advmod	34
34	are	be		vbmain	be	pres	simple	active					VBP	conj	27
35	the	the		dt	art								DT	det	37
36	right	right		jj	attr								JJ	amod	37
37	one	one											CD	attr	34
38	.	.											.	punct	9

#sentid = 202
0													_SP	dep	0
1	cuz	cuz	in+advl	in	advl								IN	prep	23
2	like	like											UH	intj	23
3													_SP	dep	23
4	in	in	in+advl	in	advl								IN	prep	23
5	three	three											CD	pobj	4
6	if	if		cs	cnd								IN	mark	23
7													_SP	dep	23
8	there	there											EX	expl	9
9	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	23
10	no	no		dt									DT	det	11
11	reason	reason		nn									NN	attr	9
12	why	why		rb	advl								WRB	advmod	15
13													_SP	dep	15
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	think	think	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	11
16	you	you		pro	2nd	sg							PRP	nsubj	17
17	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	15
18	in	in	in+advl	in	advl								IN	prep	17
19	that	that		dt	dt_dem								DT	det	20
20	place	place		nn									NN	pobj	18
21	,	,											,	punct	23
22	how	how		rb	advl								WRB	advmod	23
23	do	do	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls	conditional		VBP	advcl	0
24	you	you		pro	2nd	sg							PRP	nsubj	23
25	?	?											.	punct	23

#sentid = 203
0													_SP	dep	3
1	how	how		rb	advl								WRB	advmod	3
2	how	how		rb	advl								WRB	advmod	3
3	are	be		vbmain	be	pres	simple	active					VBP	ROOT	3
4	you	you		pro	2nd	sg							PRP	nsubj	3
5	not	not											RB	neg	3
6	?	?											.	punct	3

#sentid = 204
0													_SP	dep	0
1	cuz	cuz		cs	cs_othr								IN	mark	5
2	i	i		pro	1st	sg							PRP	nsubj	5
3	do	do		vbaux									VBP	aux	5
4	n't	not											RB	neg	5
5	think	think		vbmain	in_othr	pres	simple	active			other_advl		VB	prep	0
6	even	even	rb+advl	rb	advl								RB	advmod	15
7	like	like											UH	intj	6
8	,	,											,	punct	15
9	with	with	in+advl	in	advl								IN	prep	15
10	his	his		dt	poss	sg							PRP$	poss	13
11	movie	movie	nn+npremod	nn			npremod						NN	compound	12
12	theater	theater	nn+npremod	nn		nom	npremod						NN	compound	13
13	example	example		nn									NN	pobj	9
14	i	i		pro	1st	sg							PRP	nsubj	15
15	mean	mean	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	5
16	yeah	yeah											UH	intj	17
17	you	you		pro	2nd	sg							PRP	meta	15
18	(	(											-LRB-	punct	17
19	xx	xx											XX	nmod	17
20	)	)											-RRB-	punct	17
21	you	you		pro	2nd	sg							PRP	meta	17
22	_	_											NFP	punct	17
23	or	or		cc	phrs								CC	cc	17
24	whatever	whatever											WDT	conj	17
25	but	but		cc	cls								CC	cc	5
26	,	,											,	punct	29
27	no	no		dt									DT	det	28
28	one	one		nn	other	pl							NN	nsubj	29
29	thinks	think		vbmain	vblex	pres	simple	active					VBZ	conj	5
30	they	they		pro	pl								PRP	nsubj	31
31	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	29
32	actually	actually	rb+advl	rb	advl	ly							RB	advmod	31
33	in	in	in+advl	in	advl								IN	prep	31
34	the	the		dt	art								DT	det	35
35	movie	movie		nn									NN	pobj	33
36	.	.											.	punct	29

#sentid = 205
0	it	it		pro	3rd	sg							PRP	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	like	like		cs	cs_othr								IN	mark	13
3	you	you		pro	2nd	sg							PRP	nsubj	6
4													_SP	dep	6
5	still	still	rb+advl	rb	advl								RB	advmod	6
6	know	know		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	13
7	that	that		comp	comp_that								IN	mark	10
8	you	you		pro	2nd	sg							PRP	nsubj	10
9	're	be		vbaux									VBP	aux	10
10	sitting	sit	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls	thatcls	vcomp		VBG	ccomp	6
11	there	there	rb+advl	rb	advl								RB	advmod	10
12	it	it		pro	3rd	sg							PRP	nsubj	13
13	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	1
14	still	still	rb+advl	rb	advl								RB	advmod	13
15	(	(											-LRB-	punct	13
16	xx	xx											XX	dep	21
17	)	)											-RRB-	dep	21
18	point	point		nn									NN	nsubj	21
19	of	of	of+npostmod	in	nmod								IN	prep	18
20	view	view		nn									NN	pobj	19
21	is	be		vbmain	be	pres	simple	active					VBZ	dep	13
22	st-	st-											XX	dep	21
23	(	(											-LRB-	punct	13
24	like	like											UH	intj	13
25	)	)											-RRB-	punct	13
26													_SP	dep	13
27	maybe	maybe		rb	othr								RB	advmod	28
28	you	you		pro	2nd	sg							PRP	dep	48
29	,	,											,	punct	48
30	maybe	maybe	rb+advl	rb	advl								RB	advmod	32
31	you	you		pro	2nd	sg							PRP	nsubj	32
32	do	do		vbmain	vblex	pres	simple	active					VBP	parataxis	48
33	like	like											UH	intj	32
34	,	,											,	punct	48
35	unle	unle											XX	dep	48
36	-	-											:	punct	48
37	unless	unless		cs	cnd								IN	mark	40
38	you	you		pro	2nd	sg							PRP	nsubj	40
39	actually	actually	rb+advl	rb	advl	ly							RB	advmod	40
40	think	think	finitecls+advl	vbmain	prepv	pres	simple	active	advlcls		conditional		VBP	advcl	48
41	about	about	in+advl	in	advl								IN	prep	40
42	it	it		pro	3rd	sg							PRP	pobj	41
43	like	like											UH	intj	48
44	,	,											,	punct	48
45	you	you		pro	2nd	sg							PRP	nsubj	48
46	might	might		vbaux	mod	pos							MD	aux	48
47	be	be		vbaux									VB	aux	48
48	believing	believe		vbmain	vblex	vp_w_modal	prog	active					VBG	dep	13
49	that	that		pro	dem	sg							IN	dobj	48
50													_SP	dep	1
51	you	you		pro	2nd	sg							PRP	nsubj	52
52	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	1
53	there	there	rb+advl	rb	advl								RB	advmod	52
54													_SP	dep	1
55	yeah	yeah											UH	intj	58
56	there	there											EX	expl	58
57	could	could		vbaux	mod	pos							MD	aux	58
58	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	1
59	a	a		dt	art								DT	det	60
60	time	time		nn									NN	attr	58
61	where	where		rb	othr								WRB	advmod	71
62	you	you		pro	2nd	sg							PRP	nsubj	67
63	actually	actually	rb+advl	rb	advl	ly							RB	advmod	67
64	like	like											UH	intj	67
65	,	,											,	punct	67
66	just	just	rb+advl	rb	advl								RB	advmod	67
67	slip	slip	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	60
68	into	into	in+advl	in	advl								IN	prep	67
69	it	it		pro	3rd	sg							PRP	pobj	68
70	or	or		cc	phrs								CC	cc	67
71	whatever	whatever											WDT	conj	67
72	and	and		cc	phrs								CC	cc	67
73	you	you		pro	2nd	sg							PRP	nsubj	74
74	think	think		vbmain	vblex	pres	simple	active					VBP	conj	67
75	you	you		pro	2nd	sg							PRP	nsubj	76
76	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	74
77	in	in	in+advl	in	advl								IN	prep	76
78	the	the		dt	art								DT	det	79
79													_SP	dep	77
80	movie	movie		nn									NN	pobj	77
81	and	and		cc	phrs								CC	cc	74
82	then	then											RB	dep	58
83													_SP	dep	58
84	and	and		cc	cls								CC	cc	58
85	then	then		rb	link								RB	advmod	87
86	you	you		pro	2nd	sg							PRP	nsubj	87
87	think	think		vbmain	prepv	pres	simple	active					VBP	conj	58
88	about	about	in+advl	in	advl								IN	prep	87
89	it	it		pro	3rd	sg							PRP	pobj	88
90	and	and		cc	cls								CC	cc	87
91	you	you		pro	2nd	sg							PRP	nsubj	92
92	're	be		vbmain	be	pres	simple	active					VBP	conj	87
93	right	right	rb+jjrbmod	rb	othr								RB	advmod	94
94	there	there	rb+advl	rb	advl								RB	advmod	92
95													_SP	dep	1
96	yeah	yeah											UH	intj	1
97	but	but		cc									CC	cc	96
98	then	then		rb	link								RB	advmod	101
99	if	if		cs	cnd								IN	mark	101
100	someone	someone		nn	other	sg							NN	nsubj	101
101	asked	ask		vbmain	vblex	past	simple	active	compcls		conditional	compdel	VBD	ccomp	1
102	you	you		pro	2nd	sg							PRP	dobj	101
103	while	while		cs	con								IN	mark	106
104	you	you		pro	2nd	sg							PRP	nsubj	106
105	were	be		vbaux									VBD	aux	106
106	sitting	sit	finitecls+advl	vbmain	vblex	past	prog	active	advlcls		concessive		VBG	advcl	101
107	there	there	rb+advl	rb	advl								RB	advmod	106
108	,	,											,	punct	101
109	where	where		comp	comp_wh								WRB	advmod	110
110	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	101
111	you	you		pro	2nd	sg							PRP	nsubj	110
112	?	?											.	punct	110

#sentid = 206
0													_SP	dep	0

#sentid = 207
0	you	you		pro	2nd	sg							PRP	nsubj	4
1	're	be		vbaux									VBP	aux	4
2	not	not											RB	neg	4
3													_SP	dep	4
4	gon	go		vbmain	vblex	pres	prog	active					VBG	ROOT	4
5	na	to		vbaux									TO	aux	6
6	be	be		vbmain	be	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	4
7	like	like											UH	intj	6
8													_SP	dep	6
9	yeah	yeah											UH	intj	6
10	but	but		cc	cls								CC	cc	6
11	,	,											,	punct	6
12	if	if		cs	cnd								IN	mark	16
13	someo-	someo-											XX	dep	16
14	if	if		cs	cnd								IN	mark	16
15	someone	someone		nn	other	sg							NN	nsubj	16
16	asks	ask		vbmain	vblex	pres	simple	active			conditional		VBZ	conj	6
17	you	you		pro	2nd	sg							PRP	dobj	16
18	that	that		pro	dem	sg							DT	nsubj	19
19	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	16
20	a	a		dt	art								DT	det	21
21	little	little											JJ	npadvmod	22
22	different	different		jj	pred								JJ	acomp	19
23	that	that		comp	comp_that								IN	mark	34
24	what	what											WP	dobj	27
25	you	you		pro	2nd	sg							PRP	nsubj	27
26	're	be		vbaux									VBP	aux	27
27													_SP	dep	34
28	yeah	yeah											UH	preconj	27
29													_SP	dep	27
30	experiencing	experience		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	dep	27
31	,	,											,	punct	30
32	yeah	yeah											UH	intj	27
33													_SP	dep	27
34	thinking	think		vbmain	vblex	nonfinite	simple	active	compcls	ingcls	jcomp		VBG	ccomp	22
35	during	during	in+advl	in	advl								IN	prep	34
36	it	it		pro	3rd	sg							PRP	pobj	35
37	yeah	yeah											UH	intj	6
38	.	.											.	punct	4

#sentid = 208
0													_SP	dep	9
1	um	um											UH	intj	9
2	,	,											,	punct	9
3	any	any											DT	nsubj	9
4	of	of		in	in_othr								IN	prep	3
5	the	the		dt	art								DT	det	8
6													_SP	dep	8
7	last	last		jj	attr								JJ	amod	8
8	three	three											CD	pobj	4
9	work	work		vbmain	prepv	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	18
10	for	for	in+advl	in	advl								IN	prep	9
11	me	i		pro	1st	sg							PRP	pobj	10
12													_SP	dep	18
13	once	once	rb+jjrbmod	rb	othr								RB	advmod	14
14	again	again	rb+advl	rb	advl								RB	advmod	18
15	we	we		pro	1st								PRP	nsubj	18
16	have	have		vbaux									VBP	aux	18
17	n't	not											RB	neg	18
18	proved	prove		vbmain	vblex	pres	perf	active					VBN	ROOT	18
19	anything	anything		nn	other	nom							NN	dobj	18
20													_SP	dep	18
21	i	i		pro	1st	sg							PRP	nsubj	22
22	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	18
23	.	.											.	punct	18

#sentid = 209
0													_SP	dep	4
1	what	what											WP	dobj	4
2	did	do		vbaux									VBD	aux	4
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	get	get		vbmain	vblex	past	simple	active					VB	ROOT	4
5	on	on	in+advl	in	advl								IN	prep	4
6	the	the		dt	art								DT	det	8
7	last	last	attr+npremod	jj	attr								JJ	amod	8
8	one	one		nn	other	pl							NN	pobj	5
9	?	?											.	punct	4

#sentid = 210
0	like	like											UH	intj	4
1	what	what											WP	dobj	4
2	did	do		vbaux									VBD	aux	4
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	think	think		vbmain	vblex	past	simple	active					VB	ROOT	4
5													_SP	dep	4
6	about	about	in+advl	in	advl								IN	prep	4
7	(	(											-LRB-	punct	6
8	xx	xx											XX	pobj	6
9	)	)											-RRB-	punct	6
10													_SP	dep	4
11	the	the		dt	art								DT	det	13
12	fifth	fifth	attr+npremod	jj	attr								JJ	amod	13
13	thing	thing		nn		nom							NN	dobj	4
14	?	?											.	punct	4

#sentid = 211
0													_SP	dep	4
1	yeah	yeah											UH	intj	4
2													_SP	dep	4
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	kinda	kinda	rb+jjrbmod	rb	adjmod								RB	advmod	6
6	weird	weird		jj	pred								JJ	acomp	4
7	.	.											.	punct	4

#sentid = 212
0	like	like											UH	intj	5
1	,	,											,	punct	5
2	i	i		pro	1st	sg							PRP	nsubj	3
3	st-	st-											XX	dep	5
4	i	i		pro	1st	sg							PRP	nsubj	5
5	think	think		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	9
6	it	it		pro	3rd	sg							PRP	nsubj	7
7	r-	r-											XX	ccomp	5
8	it	it		pro	3rd	sg							PRP	nsubj	9
9	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	9
10	kinda	kinda	rb+jjrbmod	rb	adjmod								RB	advmod	11
11	hard	hard		jj	pred								JJ	acomp	9
12	to	to		to									TO	aux	14
13	t-	t-											XX	dep	14
14	draw	draw	xtrapos+tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	9
15	the	the		dt	art								DT	det	16
16	line	line		nn									NN	dobj	14
17	between	between	in+npostmod	in	nmod								IN	prep	16
18	three	three											CD	pobj	17
19	and	and		cc									CC	cc	18
20	five	five											CD	conj	18
21	.	.											.	punct	9

#sentid = 213
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2	.	.											.	punct	0

#sentid = 214
0													_SP	dep	25
1	but	but		cc	phrs								CC	cc	7
2	i	i		pro	1st	sg							PRP	nsubj	4
3	can	can		vbaux	mod	pos							MD	aux	4
4	s-	s-											XX	dep	7
5	i	i		pro	1st	sg							PRP	nsubj	7
6	can	can		vbaux	mod	pos							MD	aux	7
7	see	see		vbmain	in_othr	vp_w_modal	simple	active					VB	prep	0
8	where	where		comp	comp_wh								WRB	advmod	11
9	he	he		pro	3rd	sg							PRP	nsubj	11
10	's	be		vbaux									VBZ	aux	11
11	going	go	whcls+vcomp	vbmain	vblex	pres	prog	active	compcls	whcls	vcomp		VBG	ccomp	7
12	with	with	in+advl	in	advl								IN	prep	11
13	three	three											CD	pobj	12
14	like	like											UH	intj	25
15	,	,											,	punct	25
16	like	like											UH	intj	25
17	,	,											,	punct	25
18	before	before		cs	cs_othr								IN	mark	20
19	you	you		pro	2nd	sg							PRP	nsubj	20
20	get	get	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	25
21	to	to	in+advl	in	advl								IN	prep	20
22	five	five											CD	pobj	21
23	,	,											,	punct	25
24	i	i		pro	1st	sg							PRP	nsubj	25
25	believe	believe		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	45
26	that	that		comp	comp_that								IN	mark	28
27	he	he		pro	3rd	sg							PRP	nsubj	28
28	dis-	dis-											XX	ccomp	25
29	like	like											UH	intj	32
30	that	that											IN	mark	32
31	he	he		pro	3rd	sg							PRP	nsubj	32
32	disproved	disprove		vbmain	vblex	past	simple	active					VBD	meta	25
33	three	three											CD	dobj	32
34	,	,											,	punct	25
35	like	like											UH	intj	25
36	with	with	in+advl	in	advl								IN	prep	25
37	his	his		dt	poss	sg							PRP$	poss	39
38	robotics	robotics	nn+npremod	nn			npremod						NN	compound	39
39	example	example		nn									NN	pobj	36
40	,	,											,	punct	45
41	(	(											-LRB-	punct	45
42	then	then		rb	link								RB	advmod	45
43	)	)											-RRB-	punct	45
44	i	i		pro	1st	sg							PRP	nsubj	45
45	thought	think		vbmain	vblex	past	simple	active					VBD	ROOT	45
46	he	he		pro	3rd	sg							PRP	nsubj	47
47	disproved	disprove	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	45
48	three	three											CD	dobj	47
49	but	but		cc	cls								CC	cc	45
50	then	then		rb	link								RB	advmod	53
51	,	,											,	punct	53
52	he	he		pro	3rd	sg							PRP	nsubj	53
53	comes	come		vbmain	vblex	pres	simple	active					VBZ	conj	45
54	back	back	rb+advl	rb	advl								RB	advmod	53
55	to	to		in	in_othr								IN	prep	54
56	it	it		pro	3rd	sg							PRP	pobj	55
57	,	,											,	punct	53
58	again	again	rb+advl	rb	advl								RB	advmod	53
59	and	and		cc	cls								CC	cc	53
60	it	it		pro	3rd	sg							PRP	nsubj	61
61	s-	s-											XX	conj	53
62	it	it		pro	3rd	sg							PRP	nsubj	63
63	seems	seem		vbmain	vblex	pres	simple	active					VBZ	conj	53
64	like	like		cs	cs_othr								IN	mark	68
65	he	he		pro	3rd	sg							PRP	nsubj	68
66	's	be		vbaux									VBZ	aux	68
67	just	just	rb+advl	rb	advl		splaux						RB	advmod	68
68	going	go	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		other_advl		VBG	advcl	63
69	back	back	rb+advl	rb	advl								RB	advmod	68
70	to	to		in	in_othr								IN	prep	69
71	the	the		dt	art								DT	det	74
72	same	same	attr+npremod	jj	attr								JJ	amod	74
73	,	,											,	punct	74
74	theory	theory		nn		nom							NN	pobj	70
75	to	to	in+advl	in	advl								IN	prep	68
76	me	i		pro	1st	sg							PRP	pobj	75
77	.	.											.	punct	45

#sentid = 215
0													_SP	dep	4
1	yeah	yeah											UH	intj	4
2	i	i		pro	1st	sg							PRP	nsubj	4
3	,	,											,	punct	4
4	wish	wish		vbmain	vblex	pres	simple	active					VBP	ROOT	4
5	i	i		pro	1st	sg							PRP	nsubj	6
6	knew	know	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	4
7	more	more											JJR	dobj	6
8	about	about	in+jcomp	in	jcomp								IN	prep	7
9	the	the		dt	art								DT	det	10
10	distinction	distinction		nn		nom							NN	pobj	8
11	between	between	in+npostmod	in	nmod								IN	prep	10
12	the	the		dt	art								DT	det	13
13	two	two											CD	pobj	11
14	.	.											.	punct	4

#sentid = 216
0													_SP	dep	2
1	like	like											UH	intj	2
2	really	really	rb+advl	rb	advl	ly							RB	advmod	20
3	,	,											,	punct	2
4													_SP	dep	12
5	how	how	rb+jjrbmod	rb	adjmod								WRB	advmod	6
6	much	much	attr+npremod	jj	attr								JJ	amod	7
7	time	time		nn									NN	dobj	12
8	do	do		vbaux									VBP	aux	12
9	we	we		pro	1st								PRP	nsubj	12
10	(	(											-LRB-	punct	12
11	have	have		vbaux									VB	aux	12
12	left	leave		vbmain	in_othr	pres	perf	active					VBN	prep	3
13	?	?											-RRB-	punct	12
14	)	)											-RRB-	punct	12
15													_SP	dep	20
16	so	so		rb	link								RB	advmod	20
17	why	why		rb	advl								WRB	advmod	20
18	'd	have		vbaux									VBD	aux	20
19	he	he		pro	3rd	sg							PRP	nsubj	20
20	use	use		vbmain	vblex	past	perf	active					VB	ROOT	20
21	all	all		dt									DT	det	23
22	Shakespeare	shakespeare	nn+npremod	nn		proper	npremod						NNP	compound	23
23	names	name		nn	pl								NNS	dobj	20
24	in	in	in+advl	in	advl								IN	prep	20
25	it	it		pro	3rd	sg							PRP	pobj	24
26	?	?											.	punct	20

#sentid = 217
0	(	(											-LRB-	punct	1
1	xx	xx											XX	ROOT	1
2	)	)											-RRB-	punct	1

#sentid = 218
0													_SP	dep	3
1	hm	hm											UH	intj	0
2													_SP	dep	3
3	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	that	that		pro	dem	sg							DT	nsubj	3
5	relevant	relevant		jj	pred								JJ	acomp	3
6	?	?											.	punct	3

#sentid = 219
0	maybe	maybe	rb+advl	rb	advl								RB	advmod	2
1	that	that		pro	dem	sg							DT	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	an	an		dt									DT	det	9
4	underlying	underlie		jj	attr	ing							VBG	amod	9
5	,	,											,	punct	9
6													_SP	dep	9
7	it	it		pro	3rd	sg							PRP	nsubj	9
8	could	could		vbaux	mod	pos							MD	aux	9
9	be	be		vbmain	be	vp_w_modal	simple	active					VB	attr	2
10													_SP	dep	9
11	subplot	subplot											XX	dep	9
12													_SP	dep	9

#sentid = 220
0	it	it		pro	3rd	sg							PRP	nsubj	2
1	could	could		vbaux	mod	pos							MD	aux	2
2	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	2
3	.	.											.	punct	2

#sentid = 221
0													_SP	dep	0
1	see	see											UH	intj	4
2	i	i		pro	1st	sg							PRP	nsubj	4
3	just	just	rb+advl	rb	advl								RB	advmod	4
4	do	do		vbmain	in_othr	pres	simple	active					VBP	prep	0
5	n't	not											RB	neg	4
6	_	_											.	punct	4

#sentid = 222
0	i	i		pro	1st	sg							PRP	nsubj	3
1	do	do		vbaux									VBP	aux	3
2	n't	not											RB	neg	3
3	know	know		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	16
4	what	what											WP	dep	5
5	it	it		pro	3rd	sg							PRP	nsubj	6
6	me-	me-											PRP	ccomp	3
7	like	like											UH	intj	9
8	connected	connect	attr+npremod	jj	attr	ed							VBN	amod	9
9	point	point		nn									NN	dep	16
10	of	of	of+npostmod	in	nmod								IN	prep	9
11	view	view		nn									NN	pobj	10
12	,	,											,	punct	16
13	i	i		pro	1st	sg							PRP	nsubj	16
14	do	do		vbaux									VBP	aux	16
15	n't	not											RB	neg	16
16	know	know		vbmain	vblex	pres	simple	active					VB	ROOT	16
17	what	what											WP	dep	23
18	that	that											DT	dep	23
19	,	,											,	punct	23
20	what	what											WP	dep	23
21	that	that		pro	dem	sg							DT	nsubjpass	23
22	's	be		vbaux									VBZ	auxpass	23
23	supposed	suppose	thatcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	16
24	to	to		to									TO	aux	25
25	be	be	tocls+vcomp	vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	23
26	.	.											.	punct	16

#sentid = 223
0	like	like											UH	intj	1
1	for	for											IN	ROOT	1
2	nu-	nu-		nn		proper							NNP	punct	1
3	five	five											CD	pobj	1
4	?	?											.	punct	1

#sentid = 224
0													_SP	dep	1
1	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	that	that		pro	dem	sg							DT	nsubj	1
3	,	,											,	punct	1
4	um	um											UH	intj	1
5													_SP	dep	1
6	yeah	yeah											UH	intj	1
7													_SP	dep	1
8	like	like											UH	intj	10
9	she	she		pro	3rd	sg							PRP	nsubj	10
10	said	say		vbmain	vblex	past	simple	active					VBD	meta	1
11	connected	connect		vbmain	vblex	nonfinite	simple	active		edcls			VBN	dep	1
12													_SP	dep	1
13	point	point		nn									NN	dep	1
14	of	of	of+npostmod	in	nmod								IN	prep	13
15	view	view		nn									NN	pobj	14
16													_SP	dep	1
17	corrected	correct		vbmain	vblex	nonfinite	simple	active		edcls			VBN	dep	1
18													_SP	dep	1
19	oh	oh											UH	intj	1
20	,	,											,	punct	1
21													_SP	dep	1
22	corrected	correct		vbmain	vblex	nonfinite	simple	active		edcls			VBN	dep	1
23	.	.											.	punct	1

#sentid = 225
0													_SP	dep	0
1	corrected	correct		vbmain	vblex	nonfinite	simple	active		edcls			VBN	dep	0
2	?	?											.	punct	1

#sentid = 226
0													_SP	dep	0
1	corrected	correct		vbmain	vblex	nonfinite	simple	active		edcls			VBN	dep	0
2	.	.											.	punct	1

#sentid = 227
0													_SP	dep	6
1	alright	alright											UH	intj	6
2	,	,											,	punct	6
3	okay	okay											UH	intj	6
4	(	(											-LRB-	punct	6
5	i	i		pro	1st	sg							PRP	nsubj	6
6	got	get		vbmain	vblex	past	simple	active					VBD	ROOT	6
7	that	that		pro	dem	sg							DT	nsubj	8
8	wrong	wrong											JJ	ccomp	6
9	.	.											.	punct	6
10	)	)											.	punct	6

#sentid = 228
0													_SP	dep	4
1	but	but		cc	phrs								CC	cc	4
2	,	,											,	punct	4
3	what	what											WP	attr	4
4	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	the	the		dt	art								DT	det	6
6	difference	difference		nn		nom							NN	nsubj	4
7	between	between	in+npostmod	in	nmod								IN	prep	6
8	that	that		pro	dem	sg							DT	pobj	7
9	and	and		cc									CC	cc	8
10	change	change		nn									NN	conj	8
11	?	?											.	punct	4

#sentid = 229
0													_SP	dep	0
1	does	do		vbaux									VBZ	aux	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	mean	mean		vbmain	in_othr	pres	simple	active					VB	prep	0
4	that	that		comp	comp_that								IN	mark	9
5	you	you		pro	2nd	sg							PRP	nsubj	9
6	ca	can		vbaux	mod								MD	aux	9
7	n't	not											RB	neg	9
8	(	(											-LRB-	punct	9
9	get	get	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	3
10	it	it		pro	3rd	sg							PRP	dobj	9
11	)	)											-RRB-	punct	9
12													_SP	dep	16
13	yeah	yeah											UH	intj	16
14	,	,											,	punct	16
15	that	that		pro	dem	sg							DT	nsubj	16
16	's	be		dt	be	pres	simple	active					VBZ	det	0
17	why	why		comp	comp_wh								WRB	advmod	22
18	i	i		pro	1st	sg							PRP	nsubj	22
19	do	do		vbaux									VBP	aux	22
20	n't	not											RB	neg	22
21	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	22
22	think	think	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VB	ccomp	16
23	that	that		comp	comp_that								IN	mark	26
24													_SP	dep	26
25	that	that		pro	dem	sg							DT	nsubj	26
26	means	mean	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	22
27	it	it		pro	3rd	sg							PRP	nsubj	29
28	can	can		vbaux	mod	pos							MD	aux	29
29	change	change	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	26
30	right	right		dt									JJ	det	0
31	?	?											.	punct	30

#sentid = 230
0													_SP	dep	0
1	yeah	yeah		in	in_othr								UH	prep	0
2													_SP	dep	1
3	what	what											WP	dep	2
4	?	?											.	punct	3

#sentid = 231
0													_SP	dep	4
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	can	can		vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	MD	ccomp	4
3	,	,											,	punct	4
4	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	it	it		pro	3rd	sg							PRP	nsubj	4
6	that	that		comp	comp_that								IN	mark	8
7	it	it		pro	3rd	sg							PRP	nsubj	8
8	means	mean	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	4
9	it	it		pro	3rd	sg							PRP	nsubj	11
10	can	can		vbaux	mod	pos							MD	aux	11
11	change	change	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	8
12	?	?											.	punct	4

#sentid = 232
0													_SP	dep	3
1	it	it		pro	3rd	sg							PRP	nsubj	3
2	can	can		vbaux	mod	pos							MD	aux	3
3	change	change		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	3
4	but	but		cc	cls								CC	cc	3
5	,	,											,	punct	3
6	you	you		pro	2nd	sg							PRP	nsubj	7
7	're	be		vbmain	be	pres	simple	active					VBP	conj	3
8	like	like											UH	intj	7
9													_SP	dep	7
10	it	it		pro	3rd	sg							PRP	nsubj	12
11	could	could		vbaux	mod	pos							MD	aux	12
12	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	7
13	wrong	wrong		jj	pred								JJ	acomp	12
14	with	with	in+jcomp	in	jcomp								IN	prep	13
15	where	where		comp	comp_wh								WRB	advmod	19
16	you	you		pro	2nd	sg							PRP	nsubj	17
17	think	think		vbmain	vblex	pres	simple	active	compcls		incomp	compdel	VBP	pcomp	14
18	you	you		pro	2nd	sg							PRP	nsubj	19
19	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	17
20	.	.											.	punct	7

#sentid = 233
0													_SP	dep	10
1	i	i		pro	1st	sg							PRP	nsubj	2
2	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	10
3	the	the		dt	art								DT	det	5
4	only	only	attr+npremod	jj	attr								JJ	amod	5
5	thing	thing		nn		nom							NN	nsubj	10
6	i	i		pro	1st	sg							PRP	nsubj	8
7	can	can		vbaux	mod	pos							MD	aux	8
8	think	think	finitecls+rel	vbmain	prepv	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	5
9	of	of	in+advl	in	advl								IN	prep	8
10	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	10
11	that	that		comp	comp_that								IN	mark	25
12	like	like											UH	intj	25
13	,	,											,	punct	25
14	in	in	in+advl	in	advl								IN	prep	25
15	the	the		dt	art								DT	det	17
16	robotics	robotic	nn+npremod	nn	pl		npremod						NNS	compound	17
17	example	example		nn									NN	pobj	14
18	,	,											,	punct	25
19	you	you		pro	2nd	sg							PRP	nsubj	25
20	cou-	cou-											XX	dep	25
21	ma-	ma-											XX	dep	25
22	like	like											UH	intj	25
23	you	you		pro	2nd	sg							PRP	nsubj	25
24	may	may		vbaux	mod	pos							MD	aux	25
25	think	think	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	10
26	you	you		pro	2nd	sg							PRP	nsubj	30
27	're	be		vbaux									VBP	aux	30
28	like	like											UH	intj	30
29	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	30
30	handling	handle	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	25
31	the	the		dt	art								DT	det	34
32													_SP	dep	34
33	radioactive	radioactive	attr+npremod	jj	attr								JJ	amod	34
34	material	material		nn		nom							NN	dobj	30
35													_SP	dep	34
36	like	like											UH	intj	34
37													_SP	dep	34
38	or	or		cc	phrs								CC	cc	34
39	whatever	whatever											WDT	conj	34
40													_SP	dep	10
41	like	like											UH	intj	47
42	i	i		pro	1st	sg							PRP	nsubj	43
43	th-	th-											XX	dep	47
44	like	like											UH	intj	47
45	you	you		pro	2nd	sg							PRP	nsubj	47
46	can	can		vbaux	mod	pos							MD	aux	47
47	feel	feel	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	10
48	(	(											-LRB-	punct	47
49	like	like											UH	intj	47
50	)	)											-RRB-	punct	47
51	like	like											UH	intj	47
52	,	,											,	punct	47
53	the	the		dt	art								DT	det	56
54	different	different	attr+npremod	jj	attr								JJ	amod	56
55	like	like											UH	intj	56
56	thing	thing		nn		nom							NN	dobj	47
57	(	(											-LRB-	punct	47
58	xx	xx											XX	dep	47
59	)	)											-RRB-	punct	47
60	but	but		cc	cls								CC	cc	10
61	do	do		vbaux									VBP	aux	64
62	you	you		pro	2nd	sg							PRP	nsubj	64
63	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	64
64	think	think		vbmain	vblex	pres	simple	active					VB	conj	10
65	that	that		comp	comp_that								IN	mark	67
66	you	you		pro	2nd	sg							PRP	nsubj	67
67	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	64
68	?	?											.	punct	64

#sentid = 234
0													_SP	dep	4
1	yeah	yeah											UH	intj	4
2	,	,											,	punct	4
3	that	that		pro	dem	sg							DT	nsubj	4
4	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	what	what		comp	comp_wh								WP	dobj	9
6													_SP	dep	9
7	i	i		pro	1st	sg							PRP	nsubj	9
8	'm	be		vbaux									VBP	aux	9
9	saying	say	whcls+vcomp	vbmain	vblex	pres	prog	active	compcls	whcls	vcomp		VBG	ccomp	4
10	.	.											.	punct	4

#sentid = 235
0	like	like											UH	intj	3
1													_SP	dep	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	why	why		comp	comp_wh								WRB	advmod	6
5	i	i		pro	1st	sg							PRP	nsubj	6
6	'm	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	3
7	not	not											RB	neg	6
8	sure	sure		jj	pred								JJ	acomp	6
9	i	i		pro	1st	sg							PRP	nsubj	10
10	see	see	thatcls+jcomp	vbmain	vblex	pres	simple	active	compcls		jcomp	compdel	VBP	ccomp	8
11	it	it		pro	3rd	sg							PRP	dobj	10
12	more	more	rb+advl	rb	advl								RBR	advmod	10
13	in	in	in+advl	in	advl								IN	prep	10
14	that	that		dt	dt_dem								DT	det	15
15	one	one		nn	other	pl							NN	pobj	13
16	than	than	in+advl	in	advl								IN	prep	10
17	in	in		in	in_othr								IN	prep	16
18	the	the		dt	art								DT	det	20
19	movie	movie	nn+npremod	nn			npremod						NN	compound	20
20	one	one		nn	other	pl							NN	pobj	17
21	.	.											.	punct	3

#sentid = 236
0													_SP	dep	6
1	yeah	yeah											UH	intj	6
2													_SP	dep	6
3	i	i		pro	1st	sg							PRP	nsubj	6
4	do	do		vbaux									VBP	aux	6
5	n't	not											RB	neg	6
6	know	know		vbmain	vblex	pres	simple	active					VB	ROOT	6
7	why	why											WRB	ccomp	6
8													_SP	dep	6

#sentid = 237
0	but	but		cc	cls								CC	cc	17
1	,	,											,	punct	17
2													_SP	dep	17
3	cuz	cuz		cs	cs_othr								IN	mark	17
4	like	like											UH	intj	17
5	,	,											,	punct	17
6	(	(											-LRB-	punct	17
7	i	i		pro	1st	sg							PRP	nsubj	10
8	do	do		vbaux									VBP	aux	10
9	n't	not											RB	neg	10
10	know	know		vbmain	vblex	pres	simple	active					VB	parataxis	17
11	)	)											-RRB-	punct	10
12	no	no		dt									DT	det	13
13	one	one		nn	other	pl							NN	nsubj	15
14	's	be		vbaux									VBZ	aux	15
15	gon	go		vbaux									TO	aux	17
16	na	to		vbaux									TO	aux	17
17	be	be		vbmain	be	nonfinite	simple	active			other_advl		VB	ROOT	17
18	like	like											UH	intj	17
19	,	,											,	punct	17
20	(	(											-LRB-	punct	17
21	we	we		pro	1st								PRP	nsubj	23
22	're	be		vbaux									VBP	aux	23
23	moving	move	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	17
24	this	this		dt	dt_dem								DT	det	25
25	stuff	stuff		nn									NN	dobj	23
26	ar-	ar-	rb+advl	rb	advl								XX	advmod	23
27	)	)											-RRB-	punct	23
28	you	you		pro	2nd	sg							PRP	nsubj	29
29	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	23
30													_SP	dep	17
31	what	what		comp	comp_wh								WP	dobj	33
32	i	i		pro	1st	sg							PRP	nsubj	33
33	mean	mean	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	17
34	?	?											.	punct	17

#sentid = 238
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2	.	.											.	punct	1

#sentid = 239
0	i	i		pro	1st	sg							PRP	nsubj	1
1	guess	guess		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	i	i		pro	1st	sg							PRP	nsubj	5
3	do	do		vbaux									VBP	aux	5
4	n't	not											RB	neg	5
5	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	1
6	enough	enough	attr+npremod	jj	attr								JJ	amod	7
7	experience	experience		nn		nom							NN	dobj	5
8													_SP	dep	7
9	in	in	in+npostmod	in	nmod								IN	prep	7
10	the	the		dt	art								DT	det	12
11	robotics	robotic	nn+npremod	nn	pl		npremod						NNS	compound	12
12	field	field		nn									NN	pobj	9
13	.	.											.	punct	1

#sentid = 240
0													_SP	dep	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	know	know		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	,	,											,	punct	2
4	yeah	yeah											UH	intj	2
5	.	.											.	punct	2

#sentid = 241
0	maybe	maybe	rb+advl	rb	advl								RB	advmod	18
1	if	if		cs	cnd								IN	mark	4
2	you	you		pro	2nd	sg							PRP	nsubj	4
3	're	be		vbaux									VBP	aux	4
4	doing	do	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		conditional		VBG	advcl	18
5	it	it		pro	3rd	sg							PRP	dobj	4
6	for	for	in+advl	in	advl								IN	prep	4
7	like	like											UH	intj	6
8	,	,											,	punct	6
9	five	five											CD	nummod	10
10	hours	hour		nn	pl								NNS	pobj	6
11	in	in	in+npostmod	in	nmod								IN	prep	10
12	a	a		dt	art								DT	det	13
13	row	row		nn									NN	pobj	11
14	by	by	in+advl	in	advl								IN	prep	4
15	the	the		dt	art								DT	det	16
16	end	end		nn									NN	pobj	14
17	you	you		pro	2nd	sg							PRP	nsubj	18
18	're	be		vbmain	be	pres	simple	active					VBP	ROOT	18
19	just	just	rb+advl	rb	advl								RB	advmod	18
20	like	like											UH	intj	18
21	,	,											,	punct	18
22													_SP	dep	18
23	one	one											CD	dep	18
24	with	with	in+advl	in	advl								IN	prep	18
25	the	the		dt	art								DT	det	26
26	machine	machine		nn									NN	pobj	24
27	.	.											.	punct	18

#sentid = 242
0													_SP	dep	6
1	so	so		rb	othr								RB	advmod	6
2	what	what											WP	dobj	4
3	we	we		pro	1st								PRP	nsubj	4
4	say	say		vbmain	vblex	pres	simple	active					VBP	dep	6
5	the	the		dt	art								DT	det	6
6	three	three											CD	ROOT	6
7	or	or		cc									CC	cc	6
8	five	five											CD	conj	6
9	?	?											.	punct	6

#sentid = 243
0													_SP	dep	6
1	yeah	yeah											UH	intj	3
2	it	it		pro	3rd	sg							PRP	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	meta	6
4	re-	re-											XX	dep	3
5	it	it		pro	3rd	sg							PRP	nsubj	6
6	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	6
7	hard	hard		jj	pred								JJ	acomp	6
8	to	to		to									TO	aux	9
9	tell	tell	xtrapos+tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	6
10	,	,											,	punct	12
11	i	i		pro	1st	sg							PRP	nsubj	12
12	think	think		vbmain	vblex	pres	simple	active					VBP	meta	6
13	,	,											,	punct	12
14	between	between	in+advl	in	advl								IN	prep	6
15	three	three											CD	pobj	14
16	and	and		cc									CC	cc	15
17	five	five											CD	conj	15
18	.	.											.	punct	6

#sentid = 244
0													_SP	dep	0
1	mhm	mhm											UH	intj	0

#sentid = 245
0													_SP	dep	0

#sentid = 246
0	i	i		pro	1st	sg							PRP	nsubj	3
1	do	do		vbaux									VBP	aux	3
2	n't	not											RB	neg	3
3	understand	understand		vbmain	vblex	pres	simple	active					VB	ROOT	3
4	like	like											UH	intj	3
5	,	,											,	punct	3
6	at	at											IN	dep	15
7	the	the		dt	art								DT	det	8
8	end	end		nn									NN	pobj	6
9	,	,											,	punct	6
10	when	when		rb	advl								WRB	advmod	23
11	he	he		pro	3rd	sg							PRP	nsubj	15
12	like	like											UH	intj	15
13	,	,											,	punct	15
14	he	he		pro	3rd	sg							PRP	nsubj	15
15	woke	wake	thatcls+vcomp	vbmain	phrsv	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	3
16	up	up		rb	prtcle								RP	prt	15
17	out	out	in+advl	in	advl								IN	prep	15
18	of	of		in	in_othr								IN	prep	17
19	the	the		dt	art								DT	det	20
20	coma	coma		nn									NN	pobj	18
21	and	and		cc	cls								CC	cc	15
22	he	he		pro	3rd	sg							PRP	nsubj	23
23	was	be		vbmain	be	past	simple	active					VBD	conj	15
24	li-	li-											XX	dep	23
25	and	and		cc	phrs								CC	cc	23
26													_SP	dep	23
27	yeah	yeah											UH	intj	23
28													_SP	dep	23
29	the	the		dt	art								DT	det	31
30	other	other	attr+npremod	jj	attr								JJ	amod	31
31	brain	brain		nn									NN	dep	23
32													_SP	dep	23
33	i	i		pro	1st	sg							PRP	nsubj	34
34	think	think		vbmain	vblex	pres	simple	active					VBP	parataxis	32
35													_SP	dep	23
36	like	like											UH	intj	23
37													_SP	dep	23
38	we	we		pro	1st								PRP	nsubj	40
39	were	be		vbaux									VBD	aux	40
40	gon	go		vbaux									TO	aux	42
41	na	to		vbaux									TO	aux	42
42	do	do		vbmain	vblex	nonfinite	simple	active					VB	dep	23
43	that	that		pro	dem	sg							DT	dobj	42
44	,	,											,	punct	42
45	next	next	rb+advl	rb	advl								RB	advmod	42
46	.	.											.	punct	3

#sentid = 247
0													_SP	dep	0
1	in	in		in	in_othr								IN	prep	0
2	another	another		dt									DT	det	6
3	(	(											-LRB-	punct	6
4	xx	xx											XX	punct	3
5	)	)											-RRB-	punct	3
6													_SP	dep	1

#sentid = 248
0	it	it		pro	3rd	sg							PRP	nsubj	1
1	was	be		vbmain	be	past	simple	active					VBD	ROOT	1
2	like	like		cs	cs_othr								UH	mark	4
3	there	there											EX	expl	4
4	were	be	finitecls+advl	vbmain	be	past	simple	active	advlcls		other_advl		VBD	advcl	1
5	the	the		dt	art								DT	det	6
6	two	two											CD	attr	4
7	b-	b-											XX	dep	4
8	cuz	cuz		cs	cs_othr								IN	mark	11
9	remember	remember		vbmain	vblex	nonfinite	simple	active					VB	intj	11
10	it	it		pro	3rd	sg							PRP	nsubj	11
11	was	be		vbmain	be	past	simple	active			other_advl		VBD	dep	4
12	like	like											UH	intj	11
13	,	,											,	punct	11
14	you	you		pro	2nd	sg							PRP	nsubj	16
15	could	could		vbaux	mod	pos							MD	aux	16
16	s-	s-		vbmain	vblex	vp_w_modal	simple	active					VB	meta	11
17	(	(											-LRB-	punct	19
18	he	he		pro	3rd	sg							PRP	nsubj	19
19	had	have		vbmain	vblex	past	simple	active					VBD	meta	11
20	)	)											-RRB-	punct	19
21	the	the		dt	art								DT	det	23
22	two	two											CD	nummod	23
23	brains	brain		nn	pl								NNS	dobj	19
24	and	and		cc	cls								CC	cc	1
25	you	you		pro	2nd	sg							PRP	nsubj	27
26	could	could		vbaux	mod	pos							MD	aux	27
27	switch	switch		vbmain	vblex	vp_w_modal	simple	active					VB	conj	1
28	back	back	rb+advl	rb	advl								RB	advmod	27
29	and	and		cc	phrs								CC	cc	28
30	forth	forth											RB	conj	28
31	between	between		in	in_othr								IN	prep	28
32	the	the		dt	art								DT	det	33
33	two	two											CD	pobj	31
34	of	of		in	in_othr								IN	prep	33
35	'em	them											PRP	pobj	34
36	,	,											,	punct	27
37													_SP	dep	27
38	right	right											UH	intj	27
39													_SP	dep	1
40	and	and		cc	phrs								CC	cc	43
41	he	he		pro	3rd	sg							PRP	nsubj	43
42	never	never											RB	neg	43
43	knew	know		vbmain	vblex	past	simple	active					VBD	conj	1
44	which	which		dt									WDT	det	45
45	one	one		nn	other	pl							NN	nsubj	46
46	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	43
47	like	like											UH	intj	46
48	his	his		dt	poss	sg							PRP$	poss	50
49	real	real	attr+npremod	jj	attr								JJ	amod	50
50	brain	brain		nn									NN	attr	46
51	and	and		cc	cls								CC	cc	46
52	which	which		dt									WDT	det	53
53	one	one		pro	other	pl							CD	nsubj	54
54	was	be		vbmain	be	past	simple	active					VBD	conj	46
55	the	the		dt	art								DT	det	57
56	other	other	attr+npremod	jj	attr								JJ	amod	57
57	one	one		nn									NN	attr	54
58	.	.											.	punct	43

#sentid = 249
0													_SP	dep	0
1	right	right											UH	intj	0

#sentid = 250
0													_SP	dep	13
1	and	and		cc	phrs								CC	cc	13
2	so	so		rb	link								RB	advmod	13
3	then	then		rb	link								RB	advmod	13
4	like	like											UH	intj	13
5	,	,											,	punct	13
6	what	what											WP	nsubj	7
7	happened	happen		vbmain	in_othr	past	simple	active					VBD	prep	5
8	like	like											UH	intj	9
9	something	something		nn		nom							NN	meta	7
10	ha-	ha-											XX	meta	7
11	like	like											UH	intj	13
12	he	he		pro	3rd	sg							PRP	nsubj	13
13	said	say		vbmain	vblex	past	simple	active					VBD	ROOT	13
14	that	that		cs	cs_othr								IN	mark	16
15	there	there											EX	expl	16
16	was	be	finitecls+advl	vbmain	be	past	simple	active	advlcls				VBD	advcl	13
17	like	like											UH	intj	28
18	a	a											DT	parataxis	28
19	,	,											,	punct	28
20													_SP	dep	24
21	like	like											UH	intj	24
22	,	,											,	punct	24
23	he	he		pro	3rd	sg							PRP	nsubj	24
24	thought	think		vbmain	vblex	past	simple	active					VBD	parataxis	28
25													_SP	dep	24
26	that	that		comp	comp_that								IN	mark	28
27	there	there											EX	expl	28
28	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls	thatcls	vcomp		VBD	ccomp	16
29	a	a		dt	art								DT	det	31
30	,	,											,	punct	31
31	complication	complication		nn		nom							NN	attr	28
32	that	that		relpro	relpro_that	sg							WDT	nsubj	33
33	altered	alter	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls	thatcls	rel		VBD	relcl	31
34	the	the		dt	art								DT	det	36
35													_SP	dep	36
36	one	one		nn	other	pl							NN	dobj	33
37	of	of	of+npostmod	in	nmod								IN	prep	36
38	'em	them											PRP	pobj	37
39	.	.											.	punct	13

#sentid = 251
0													_SP	dep	8
1	where	where		rb	othr								WRB	advmod	5
2	yeah	yeah											UH	intj	4
3	where	where		rb	othr								WRB	advmod	4
4	they	they		pro	pl								PRP	dep	5
5	where	where											WRB	advcl	8
6	,	,											,	punct	8
7	they	they		pro	pl								PRP	nsubj	8
8	ended	end		vbmain	phrsv	past	simple	active					VBD	ROOT	8
9	up	up		rb	prtcle								RP	prt	8
10	splitting	split	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	8
11	kinda	kinda	rb+advl	rb	advl								RB	advmod	10
12	the	the		dt	art								DT	det	14
13	two	two											CD	nummod	14
14	brains	brain		nn	pl								NNS	dobj	10
15	,	,											,	punct	10
16	like	like											UH	intj	10
17													_SP	dep	8
18	so	so											RB	meta	8
19	(	(											-LRB-	punct	22
20	that	that											IN	mark	22
21	it	it		pro	3rd	sg							PRP	nsubj	22
22	was	be		vbmain	be	past	simple	active					VBD	meta	8
23	like	like											UH	intj	22
24	)	)											-RRB-	punct	22
25	(	(											-LRB-	punct	22
26	xx	xx											XX	dep	22
27	)	)											-RRB-	punct	22
28	each	each		dt									DT	det	29
29	other	other											JJ	appos	21
30													_SP	dep	8
31	it	it		pro	3rd	sg							PRP	nsubj	32
32	was	be		vbmain	be	past	simple	active					VBD	meta	8
33	like	like											UH	intj	32
34	a	a		dt	art								DT	det	35
35	complication	complication		nn		nom							NN	attr	32
36													_SP	dep	8
37	so	so											RB	xcomp	8
38	then	then	rb+jjrbmod	rb	othr								RB	advmod	37
39	like	like											UH	intj	42
40	when	when		rb	othr								WRB	advmod	42
41	it	it		pro	3rd	sg							PRP	nsubj	42
42	would	would		vbaux	mod	prd							MD	aux	43
43													_SP	dep	8

#sentid = 252
0	and	and		cc	cls								CC	cc	28
1	then	then		rb	link								RB	advmod	28
2	he	he		pro	3rd	sg							PRP	nsubj	28
3	when	when		rb	advl								WRB	advmod	28
4	he	he		pro	3rd	sg							PRP	nsubj	28
5	like	like											UH	intj	28
6													_SP	dep	28
7	randomly	randomly	rb+jjrbmod	rb	othr	ly							RB	advmod	11
8	it	it		pro	3rd	sg							PRP	nsubj	11
9	like	like											UH	intj	11
10	would	would		vbaux	mod	prd							MD	aux	11
11	randomly	randomly		rb	othr	ly							RB	advmod	14
12													_SP	dep	11
13	kinda	kinda		rb	othr								RB	advmod	14
14	switch-	switch-		in	in_othr								XX	prep	6
15													_SP	dep	19
16	oh	oh											UH	intj	19
17	right	right											UH	intj	19
18	he	he		pro	3rd	sg							PRP	nsubj	19
19	flipped	flip		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	28
20	the	the		dt	art								DT	det	21
21	s-	s-											XX	dobj	19
22													_SP	dep	28
23	or	or		cc	phrs								CC	cc	28
24	he	he		pro	3rd	sg							PRP	nsubj	28
25	did	do		vbaux									VBD	aux	28
26													_SP	dep	28
27	he	he		pro	3rd	sg							PRP	nsubj	28
28	switched	switch		vbmain	vblex	past	simple	active					VBD	ROOT	28
29	it	it		pro	3rd	sg							PRP	dobj	28
30	.	.											.	punct	28

#sentid = 253
0	and	and		cc	cls								CC	cc	6
1	then	then		rb	link								RB	advmod	6
2	it	it		pro	3rd	sg							PRP	nsubj	6
3	was	be		vbaux									VBD	aux	6
4	like	like											UH	intj	3
5													_SP	dep	3
6	switched	switch		vbmain	vblex	past	simple	active					VBD	ROOT	6
7	it	it		pro	3rd	sg							PRP	dobj	6
8	.	.											.	punct	6

#sentid = 254
0	but	but		cc	cls								CC	cc	4
1	he	he		pro	3rd	sg							PRP	nsubj	4
2	did	do		vbaux									VBD	aux	4
3	n't	not											RB	neg	4
4	know	know		vbmain	vblex	past	simple	active					VB	ROOT	4
5	which	which											WDT	nsubj	6
6	was	be	whcls+vcomp	vbmain	be	past	simple	active	compcls	whcls	vcomp		VBD	ccomp	4
7	which	which											WDT	attr	6
8	.	.											.	punct	4

#sentid = 255
0													_SP	dep	29
1	yeah	yeah											UH	intj	29
2	cuz	cuz		cs	cs_othr								IN	mark	5
3	he	he		pro	3rd	sg							PRP	nsubj	5
4	never	never											RB	neg	5
5	knew	know		vbmain	vblex	past	simple	active	compcls		other_advl	compdel	VBD	ccomp	29
6	what	what											WP	nsubj	7
7	was	be	whcls+vcomp	vbmain	be	past	simple	active	compcls	whcls	vcomp		VBD	ccomp	5
8	his	his		dt	poss	sg							PRP$	poss	9
9													_SP	dep	7
10	original	original		nn		nom							NN	attr	7
11	and	and		cc	cls								CC	cc	7
12	what	what		dt									WP	det	13
13	one	one		pro	other	pl							CD	nsubj	14
14	was	be		vbmain	be	past	simple	active					VBD	conj	7
15	the	the		dt	art								DT	det	17
16	created	create	attr+npremod	jj	attr	ed							VBN	amod	17
17	one	one		nn									NN	attr	14
18	,	,											,	punct	29
19													_SP	dep	29
20	uh	uh											UH	intj	29
21	huh	huh											UH	intj	29
22	,	,											,	punct	29
23	they	they		pro	pl								PRP	nsubjpass	26
24	were	be		vbaux									VBD	auxpass	26
25	n't	not											RB	neg	26
26	marked	mark		vbmain	vblex	past	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	29
27	,	,											,	punct	29
28	it	it		pro	3rd	sg							PRP	nsubj	29
29	was	be		vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	41
30	this	this		dt	dt_dem								DT	det	31
31	brain	brain		nn									NN	attr	29
32	or	or		cc	phrs								CC	cc	31
33	this	this		dt	dt_dem								DT	det	34
34	brain	brain		nn									NN	conj	31
35													_SP	dep	29
36	so	so		rb	link								RB	advmod	41
37	before	before		cs	cs_othr								IN	mark	41
38	he	he		pro	3rd	sg							PRP	nsubj	41
39	'd	would		vbaux	mod								MD	aux	41
40	always	always	rb+advl	rb	advl		splaux						RB	advmod	41
41	switch	switch		vbmain	vblex	vp_w_modal	simple	active			other_advl		VB	ROOT	41
42	it	it		pro	3rd	sg							PRP	dobj	41
43	,	,											,	punct	41
44	and	and		cc	cls								CC	cc	41
45	then	then		rb	link								RB	advmod	50
46	,	,											,	punct	50
47	a	a		dt	art								DT	det	48
48	complication	complication		nn		nom							NN	nsubj	50
49													_SP	dep	48
50	happened	happen		vbmain	vblex	past	simple	active					VBD	conj	41
51	.	.											.	punct	50

#sentid = 256
0													_SP	dep	5
1	uh	uh											UH	intj	5
2	huh	huh											UH	intj	1
3	it	it		pro	3rd	sg							PRP	nsubj	5
4	kinda	kinda	rb+advl	rb	advl								RB	advmod	5
5	seemed	seem		vbmain	vblex	past	simple	active					VBD	ROOT	5
6	like	like		cs	cs_othr								IN	mark	15
7	,	,											,	punct	15
8	like	like		cs	cs_othr								IN	mark	15
9	one	one		pro	other	pl							CD	nsubj	15
10	of	of		in	in_othr								IN	prep	9
11	the	the		dt	art								DT	det	12
12	brains	brain		nn	pl								NNS	pobj	10
13	,	,											,	punct	15
14	was	be		vbaux									VBD	aux	15
15	telling	tell	finitecls+advl	vbmain	vblex	past	prog	active	advlcls		other_advl		VBG	advcl	5
16	the	the		dt	art								DT	det	17
17	story	story		nn		nom							NN	dobj	15
18	,	,											,	punct	5
19													_SP	dep	5
20	it	it		pro	3rd	sg							PRP	nsubj	21
21	was	be		vbmain	be	past	simple	active					VBD	meta	5
22													_SP	dep	21
23	and	and		cc	phrs								CC	cc	37
24	then	then		rb	link								RB	advmod	37
25	especially	especially	rb+jjrbmod	rb	othr	ly							RB	advmod	27
26	right	right	rb+jjrbmod	rb	othr								RB	advmod	27
27	then	then		rb	othr								RB	advmod	32
28	i-	i-											PRP	punct	32
29	but	but		cc	phrs								CC	cc	32
30	the	the		dt	art								DT	det	32
31	other	other	attr+npremod	jj	attr								JJ	amod	32
32	one	one		nn	other	pl							NN	nsubj	37
33	,	,											,	punct	32
34													_SP	dep	32
35	had	have		vbaux									VBD	aux	37
36	been	be		vbaux									VBN	aux	37
37	hiding	hide		vbmain	vblex	past	perfprog	active					VBG	parataxis	5
38													_SP	dep	37
39	knew	know		vbmain	vblex	past	simple	active					VBD	dep	37
40	knew	know		vbmain	vblex	past	simple	active					VBD	dep	37
41	that	that		comp	comp_that								IN	mark	43
42	they	they		pro	pl								PRP	nsubj	43
43	were	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls	thatcls	vcomp		VBD	ccomp	40
44	different	different		jj	pred								JJ	acomp	43
45	,	,											,	punct	43
46	or	or		cc	phrs								CC	cc	43
47	was	be		vbmain	be	past	simple	active					VBD	conj	43
48	more	more	rb+jjrbmod	rb	othr								RBR	advmod	49
49	contr-	contr-											JJ	punct	5
50	wanted	want		vbmain	vblex	past	simple	active	nmod_cls		ncomp		VBD	acl	17
51	more	more	attr+npremod	jj	attr								JJR	amod	52
52	control	control		nn									NN	dobj	50
53	,	,											,	punct	5
54	but	but		cc	phrs								CC	cc	5
55													_SP	dep	5
56	yeah	yeah											UH	intj	5
57													_SP	dep	56
58	but	but		cc									CC	cc	56

#sentid = 257
0	the	the		dt	art								DT	det	1
1	one	one		nn									NN	ROOT	1
2	that	that		relpro	relpro_that	sg							WDT	nsubj	4
3	was	be		vbaux									VBD	aux	4
4	telling	tell	finitecls+rel	vbmain	vblex	past	prog	active	nmod_cls	thatcls	rel		VBG	relcl	1
5													_SP	dep	4
6	everything	everything		nn	other	nom							NN	dobj	4
7													_SP	dep	1
8	cuz	cuz	in+npostmod	in	nmod								IN	prep	1
9	then	then		rb	link								RB	advmod	10
10	remember	remember		vbmain	vblex	nonfinite	simple	active	compcls		incomp	compdel	VB	pcomp	8
11	the	the		dt	art								DT	det	12
12	one	one		nn	other	pl							NN	nsubj	16
13	at	at	in+npostmod	in	nmod								IN	prep	12
14	the	the		dt	art								DT	det	15
15	end	end		nn									NN	pobj	13
16	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	10
17	like	like											UH	intj	16
18	,	,											,	punct	16
19	i	i		pro	1st	sg							PRP	nsubj	20
20	know	know	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	16
21	that	that		comp	comp_that								IN	mark	23
22	you	you		pro	2nd	sg							PRP	nsubj	23
23	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	20
24	in	in	rb+jjrbmod	rb	othr								RB	advmod	25
25	there	there	rb+advl	rb	advl								RB	advmod	23
26	and	and		cc	phrs								CC	cc	20
27													_SP	dep	1
28	uh	uh											UH	intj	27
29	huh	huh											UH	intj	28
30	.	.											.	punct	1

#sentid = 258
0	and	and		cc	cls								CC	cc	5
1	the	the		dt	art								DT	det	3
2	second	second	attr+npremod	jj	attr								JJ	amod	3
3	one	one		nn	other	pl							NN	nsubj	5
4	was	be		vbaux									VBD	aux	5
5	thinking	think		vbmain	vblex	past	prog	active					VBG	ROOT	5
6	,	,											,	punct	5
7	it	it		pro	3rd	sg							PRP	nsubj	8
8	's	be		vbmain	be	pres	simple	active					VBZ	dep	10
9	it	it		pro	3rd	sg							PRP	nsubj	10
10	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	5
11	like	like		cs	cs_othr								IN	mark	14
12	i	i		pro	1st	sg							PRP	nsubjpass	14
13	'm	be		vbaux									VBP	auxpass	14
14	trapped	trap	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls		other_advl		VBN	advcl	10
15	and	and		cc	phrs								CC	cc	14
16	i	i		pro	1st	sg							PRP	nsubj	17
17	wanna	wanna		vbaux									VBP	aux	18
18	get	get		vbmain	phrsv	pres	simple	active					VB	conj	14
19	out	out		rb	prtcle								RP	prt	18
20													_SP	dep	10
21	yeah	yeah											UH	intj	10
22	...	...											:	punct	5

#sentid = 259
0													_SP	dep	7
1	but	but		cc	phrs								CC	cc	7
2	did	do		vbaux									VBD	aux	7
3	,	,											,	punct	7
4	the	the		dt	art								DT	det	6
5	first	first	attr+npremod	jj	attr								JJ	amod	6
6	one	one		nn	other	pl							NN	nsubj	7
7	know	know		vbmain	vblex	past	simple	active					VB	ROOT	7
8	that	that		comp	comp_that								IN	mark	10
9	they	they		pro	pl								PRP	nsubj	10
10	were	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls	thatcls	vcomp		VBD	ccomp	7
11	different	different		jj	pred								JJ	acomp	10
12	?	?											.	punct	7

#sentid = 260
0													_SP	dep	61
1	the	the		dt	art								DT	det	2
2	first	first		jj	attr								JJ	amod	6
3	,	,											,	punct	6
4													_SP	dep	5
5	no	no											UH	intj	6
6													_SP	dep	0
7	when	when		rb	advl								WRB	advmod	11
8	he	he		pro	3rd	sg							PRP	nsubj	11
9	was	be		vbaux									VBD	aux	11
10	first	first		rb	link		splaux						RB	advmod	11
11	telling	tell	finitecls+advl	vbmain	vblex	past	prog	active	advlcls	whcls			VBG	advcl	18
12	the	the		dt	art								DT	det	13
13	story	story		nn		nom							NN	dobj	11
14	he	he		pro	3rd	sg							PRP	nsubj	18
15													_SP	dep	18
16	did	do		vbaux									VBD	aux	18
17	n't	not											RB	neg	18
18	know	know		vbmain	vblex	past	simple	active					VB	meta	6
19													_SP	dep	18
20	yeah	yeah											UH	intj	26
21	,	,											,	punct	26
22	i	i		pro	1st	sg							PRP	nsubj	26
23	i	i		pro	1st	sg							PRP	nsubj	26
24	do	do		vbaux									VBP	aux	26
25	n't	not											RB	neg	26
26	think	think		vbmain	vblex	pres	simple	active					VB	meta	18
27	he	he		pro	3rd	sg							PRP	nsubj	29
28													_SP	dep	29
29	brought	bring	thatcls+vcomp	vbmain	phrsv	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	18
30	up	up		rb	prtcle								RP	prt	29
31	that	that		comp	comp_that								IN	mark	33
32	they	they		pro	pl								PRP	nsubj	33
33	were	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls	thatcls	vcomp		VBD	ccomp	29
34	different	different		jj	pred								JJ	acomp	33
35	until	until	in+advl	in	advl								IN	prep	18
36	after	after		in	in_othr								IN	prep	35
37	the	the		dt	art								DT	det	38
38	story	story		nn		nom							NN	pobj	36
39													_SP	dep	18
40	and	and		cc	phrs								CC	cc	54
41	,	,											,	punct	44
42	right	right											UH	intj	44
43	,	,											,	punct	42
44	no	no											UH	intj	54
45													_SP	dep	44
46	so	so		rb	link								RB	advmod	54
47	maybe	maybe	rb+advl	rb	advl								RB	advmod	54
48	the	the		dt	art								DT	det	50
49	first	first	attr+npremod	jj	attr								JJ	amod	50
50	one	one		nn	other	pl							NN	nsubj	54
51	did	do		vbaux									VBD	aux	54
52	n't	not											RB	neg	54
53	even	even	rb+advl	rb	advl		splaux						RB	advmod	54
54	know	know		vbmain	vblex	past	simple	active					VB	meta	0
55													_SP	dep	61
56	right	right											UH	intj	61
57	,	,											,	punct	61
58	i	i		pro	1st	sg							PRP	nsubj	61
59	do	do		vbaux									VBP	aux	61
60	n't	not											RB	neg	61
61	think	think		vbmain	vblex	pres	simple	active					VB	parataxis	144
62	he	he		pro	3rd	sg							PRP	nsubj	63
63	did	do	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	61
64													_SP	dep	61
65	yeah	yeah											UH	intj	61
66	,	,											,	punct	65
67	cuz	cuz		cs	cs_othr								IN	mark	73
68	like	like											UH	intj	73
69	the	the		dt	art								DT	det	70
70	last	last											JJ	npadvmod	73
71	,	,											,	punct	73
72	i	i		pro	1st	sg							PRP	nsubj	73
73	think	think	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	61
74	that	that		comp	comp_that								IN	mark	77
75	like	like											UH	intj	77
76	the	the		dt	art								DT	det	77
77	chan-	chan-		nn									NN	ccomp	73
78	the	the		dt	art								DT	det	79
79	split	split		nn									NN	nsubj	80
80	happened	happen	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel	reldel	VBD	relcl	77
81	,	,											,	punct	80
82	since	since	in+advl	in	advl								IN	prep	80
83	the	the		dt	art								DT	det	85
84	last	last	attr+npremod	jj	attr								JJ	amod	85
85	time	time		nn									NN	pobj	82
86	he	he		pro	3rd	sg							PRP	nsubj	87
87	changed	change	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel	reldel	VBD	relcl	85
88	,	,											,	punct	80
89													_SP	dep	61
90	the	the		dt	art								DT	det	91
91	brain	brain		nn									NN	dep	61
92	(	(											-LRB-	punct	91
93	xx	xx											XX	nmod	91
94	)	)											-RRB-	punct	91
95													_SP	dep	91
96	(	(											-LRB-	punct	91
97	xx	xx											XX	nmod	91
98	)	)											-RRB-	punct	91
99													_SP	dep	91
100	yeah	yeah											UH	intj	103
101	,	,											,	punct	103
102	it	it		pro	3rd	sg							PRP	nsubj	103
103	did	do		vbmain	vblex	past	simple	active					VBD	meta	91
104	and	and		cc	cls								CC	cc	103
105	then	then		rb	link								RB	advmod	107
106	he	he		pro	3rd	sg							PRP	nsubj	107
107	switched	switch		vbmain	vblex	past	simple	active					VBD	conj	103
108	it	it		pro	3rd	sg							PRP	dobj	107
109	and	and		cc	phrs								CC	cc	107
110	then	then											RB	conj	107
111	,	,											,	punct	61
112	but	but		cc	cls								CC	cc	61
113	then	then		rb	link								RB	advmod	120
114	,	,											,	punct	120
115	the	the		dt	art								DT	det	118
116	,	,											,	punct	118
117	new	new	attr+npremod	jj	attr								JJ	amod	118
118	brain	brain		nn									NN	nsubj	120
119	still	still	rb+advl	rb	advl								RB	advmod	120
120	had	have		vbmain	vblex	past	simple	active					VBD	conj	61
121	,	,											,	punct	120
122	which	which											WDT	nsubj	123
123	was	be		vbmain	be	past	simple	active					VBD	meta	120
124	weird	weird		jj	pred								JJ	acomp	123
125	,	,											,	punct	120
126	still	still	rb+advl	rb	advl								RB	advmod	127
127	had	have		vbmain	vblex	past	simple	active					VBD	dep	120
128	knowledge	knowledge		nn									NN	dobj	127
129	of	of	of+npostmod	in	nmod								IN	prep	128
130	the	the		dt	art								DT	det	132
131	other	other	attr+npremod	jj	attr								JJ	amod	132
132	brain	brain		nn									NN	pobj	129
133													_SP	dep	120
134	yeah	yeah											UH	intj	120
135	...	...											:	punct	134
136	like	like											IN	meta	120
137	an	an		dt									DT	det	138
138	onlooker	onlooker		nn		nom							NN	pobj	136
139													_SP	dep	120
140	like	like											UH	intj	61
141	...	...											:	punct	61
142	you	you		pro	2nd	sg							PRP	nsubj	144
143	'd	would		vbaux	mod								MD	aux	144
144	think	think		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	144
145	if	if		cs	cnd								IN	mark	147
146	it	it		pro	3rd	sg							PRP	nsubj	147
147	was	be	finitecls+advl	vbmain	be	past	simple	active	advlcls		conditional		VBD	advcl	180
148	a	a		dt	art								DT	det	151
149	completely	completely	rb+jjrbmod	rb	adjmod	ly							RB	advmod	150
150	different	different	attr+npremod	jj	attr								JJ	amod	151
151	brain	brain		nn									NN	attr	147
152	like	like											UH	intj	180
153	it	it		pro	3rd	sg							PRP	nsubj	180
154	would	would		vbaux	mod	prd							MD	aux	180
155	n't	not											RB	neg	180
156													_SP	dep	180
157	know	know		vbmain	vblex	nonfinite	simple	active	advlcls				VB	advcl	180
158	,	,											,	punct	157
159													_SP	dep	158
160	uh	uh											UH	intj	164
161	huh	huh											UH	intj	160
162													_SP	dep	160
163	you	you		pro	2nd	sg							PRP	nsubj	164
164	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	180
165	what	what		comp	comp_wh								WP	dobj	167
166	i	i		pro	1st	sg							PRP	nsubj	167
167	mean	mean	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	164
168	it	it		pro	3rd	sg							PRP	nsubj	171
169	would	would		vbaux	mod	prd							MD	aux	171
170	n't	not											RB	neg	171
171	know	know	thatcls+vcomp	vbmain	prepv	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	167
172	about	about	in+advl	in	advl								IN	prep	171
173	the	the		dt	art								DT	det	175
174	other	other	attr+npremod	jj	attr								JJ	amod	175
175	one	one		nn	other	pl							NN	pobj	172
176	,	,											,	punct	180
177	it	it		pro	3rd	sg							PRP	nsubj	180
178	would	would		vbaux	mod	prd							MD	aux	180
179	just	just	rb+advl	rb	advl		splaux						RB	advmod	180
180	switch	switch	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	144
181	to	to	in+advl	in	advl								IN	prep	180
182	the	the		dt	art								DT	det	186
183	,	,											,	punct	182
184													_SP	dep	182
185	like	like											UH	intj	186
186	something	something		nn	other	nom							NN	pobj	181
187	like	like	in+npostmod	in	nmod								IN	prep	186
188	watching	watch	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	187
189	you	you		pro	2nd	sg							PRP	dobj	188
190	,	,											,	punct	186
191													_SP	dep	186
192	yeah	yeah											UH	intj	186
193													_SP	dep	186
194	like	like											UH	intj	186
195	nothing	nothing		nn	other	nom							NN	pobj	194
196	new	new		jj	attr								JJ	amod	195
197	,	,											,	punct	195
198	just	just	rb+advl	rb	advl								RB	advmod	203
199													_SP	dep	203
200	yeah	yeah											UH	intj	203
201													_SP	dep	203
202	kinda	kinda	rb+advl	rb	advl								RB	advmod	203
203	stored	store		vbmain	vblex	nonfinite	simple	active		edcls			VBN	appos	195
204	everything	everything		nn	other	nom							NN	dobj	203
205													_SP	dep	144
206	that	that		pro	dem	sg							DT	nsubj	207
207	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	144
208	a	a		dt	art								DT	det	211
209	whole	whole		jj	attr								JJ	amod	210
210	nother	noth	attr+npremod	jj	attr								JJR	amod	211
211	argument	argument		nn		nom							NN	attr	207
212	.	.											.	punct	144

#sentid = 261
0													_SP	dep	3
1	yeah	yeah											UH	intj	3
2	i	i		pro	1st	sg							PRP	nsubj	3
3	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	3
4	we	we		pro	1st								PRP	nsubj	6
5	're	be		vbaux									VBP	aux	6
6	gon	go		vbaux									TO	aux	8
7	na	to		vbaux									TO	aux	8
8	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	3
9	that	that		pro	dem	sg							DT	dobj	8
10	next	next	rb+advl	rb	advl								RB	advmod	8
11	.	.											.	punct	3

#sentid = 262
0													_SP	dep	0
1	how	how	rb+jjrbmod	rb	othr								WRB	advmod	2
2	long	long	rb+advl	rb	advl								RB	advmod	8
3	are	be		vbaux									VBP	aux	5
4	you	you		pro	2nd	sg							PRP	nsubj	5
5	gon	go											TO	ccomp	0
6	na	to		vbaux									TO	aux	8
7	be	be		vbaux									VB	auxpass	8
8	gone	go		vbmain	vblex	nonfinite	simple	pasv_agls	compcls			compdel	VBN	xcomp	5
9	?	?											.	punct	8

#sentid = 263
0													_SP	dep	1
1	Friday	friday		nn		proper							NNP	ROOT	1
2	to	to	in+npostmod	in	nmod								IN	prep	1
3	Friday	friday		nn		proper							NNP	pobj	2
4	.	.											.	punct	1

#sentid = 264
0													_SP	dep	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	like	like		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	that	that		comp	comp_that								IN	mark	5
4	they	they		pro	pl								PRP	nsubj	5
5	call	call	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	2
6	that	that		pro	dem	sg							DT	dobj	5
7	STUD	stud		nn									NN	oprd	5
8	.	.											.	punct	2

#sentid = 265
0													_SP	dep	4
1	yeah	yeah											UH	intj	4
2	,	,											,	punct	4
3	i	i		pro	1st	sg							PRP	nsubj	4
4	was	be		vbmain	be	past	simple	active					VBD	ROOT	4
5	like	like											UH	intj	4
6	where	where		comp	comp_wh								WRB	advmod	9
7	is	be		vbaux									VBZ	aux	9
8	he	he		pro	3rd	sg							PRP	nsubj	9
9	throwing	throw	whcls+vcomp	vbmain	phrsv	pres	prog	active	compcls	whcls	vcomp		VBG	ccomp	4
10	this	this		pro	dem	sg							DT	dobj	9
11	in	in		rb	prtcle								RP	prt	9
12	from	from	in+advl	in	advl								IN	prep	9
13	?	?											.	punct	4

#sentid = 266
0													_SP	dep	8
1	where	where											WRB	dep	8
2	did	do		vbmain	vblex	past	simple	active					VBD	dep	8
3	,	,											,	punct	8
4	where	where		rb	advl								WRB	advmod	8
5	would	would		vbaux	mod	prd							MD	aux	8
6	he	he		pro	3rd	sg							PRP	nsubj	8
7	even	even	rb+advl	rb	advl		splaux						RB	advmod	8
8	come	come	finitecls+advl	vbmain	phrsv	vp_w_modal	simple	active	advlcls	whcls			VB	advcl	16
9	up	up		rb	prtcle								RP	prt	8
10	_	_											NFP	punct	8
11	where	where		rb	advl								WRB	advmod	16
12	do	do		vbaux									VBP	aux	16
13	these	these		dt	dt_dem								DT	det	14
14	people	people		nn	pl								NNS	nsubj	16
15													_SP	dep	16
16	come	come		vbmain	phrsv	pres	simple	active					VB	ROOT	16
17	up	up		rb	prtcle								RP	prt	16
18	with	with	in+advl	in	advl								IN	prep	16
19	this	this		dt	dt_dem								DT	det	20
20	stuff	stuff		nn									NN	pobj	18
21	?	?											.	punct	16

#sentid = 267
0													_SP	dep	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	know	know		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	i	i		pro	1st	sg							PRP	nsubj	6
4	was	be		vbaux									VBD	aux	6
5	just	just	rb+advl	rb	advl		splaux						RB	advmod	6
6	thinking	think	thatcls+vcomp	vbmain	vblex	past	prog	active	compcls		vcomp	compdel	VBG	ccomp	2
7	that	that		pro	dem	sg							DT	dobj	6
8	.	.											.	punct	2

#sentid = 268
0													_SP	dep	1
1	who	who											WP	dobj	4
2													_SP	dep	1
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	interesting	interesting		jj	pred								JJ	acomp	4
6													_SP	dep	4
7	comes	come		vbmain	phrsv	pres	simple	active					VBZ	dep	4
8	up	up		rb	prtcle								RP	prt	7
9	with	with	in+advl	in	advl								IN	prep	7
10	these	these		dt	dt_dem								DT	det	14
11													_SP	dep	14
12	hypothetical	hypothetical	attr+npremod	jj	attr								JJ	amod	14
13	(	(											-LRB-	punct	14
14	situations	situation		nn	pl	nom							NNS	pobj	9
15	?	?											.	punct	14
16	)	)											.	punct	7
17													_SP	dep	4

#sentid = 269
0	i	i		pro	1st	sg							PRP	nsubj	1
1	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	they	they		pro	pl								PRP	nsubj	4
3	co-	co-											XX	dep	4
4	try	try	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	1
5	to	to		to									TO	aux	6
6	come	come	tocls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	4
7	up	up		rb	prtcle								RP	prt	6
8	with	with	in+advl	in	advl								IN	prep	11
9	like	like											UH	intj	8
10	they	they		pro	pl								PRP	nsubj	11
11	know	know	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	1
12	they	they		pro	pl								PRP	nsubj	14
13	wanna	wanna		vbaux	mod								MD	aux	14
14	split	split	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	11
15	you	you		pro	2nd	sg							PRP	dobj	14
16	somehow	somehow	rb+advl	rb	advl								RB	advmod	14
17													_SP	dep	1
18	so	so		rb	link								RB	advmod	20
19	he	he		pro	3rd	sg							PRP	nsubj	20
20	spends	spend	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	1
21	like	like											UH	intj	20
22	,	,											,	punct	20
23													_SP	dep	20
24	yeah	yeah											UH	intj	20
25													_SP	dep	20
26	just	just		rb	othr								RB	advmod	31
27	a	a		dt	art								DT	det	31
28	cern-	cern-	nn+npremod	nn			npremod						NN	nmod	31
29													_SP	dep	31
30	a	a	nn+npremod	nn			npremod						NN	nmod	31
31	week	week		nn									NN	dobj	20
32	just	just	rb+advl	rb	advl								RB	advmod	33
33	trying	try	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	20
34	to	to		to									TO	aux	36
35													_SP	dep	36
36	come	come	tocls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	33
37	up	up		rb	prtcle								RP	prt	36
38	with	with	in+advl	in	advl								IN	prep	36
39	a	a		dt	art								DT	det	40
40	situation	situation		nn		nom							NN	pobj	38
41													_SP	dep	20
42	yeah	yeah											UH	intj	20
43	and	and		cc	cls								CC	cc	20
44	then	then		rb	link								RB	advmod	48
45	an-	an-											XX	punct	48
46	then	then		rb	link								RB	advmod	48
47	it	it		pro	3rd	sg							PRP	nsubj	48
48	flows	flow		vbmain	vblex	pres	simple	active					VBZ	conj	20
49	from	from	in+advl	in	advl								IN	prep	48
50	there	there											RB	pcomp	49
51	.	.											.	punct	48

#sentid = 270
0													_SP	dep	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	he	he		pro	3rd	sg							PRP	nsubj	4
4	has	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	2
5	too	too	rb+jjrbmod	rb	adjmod								RB	advmod	6
6	much	much	attr+npremod	jj	attr								JJ	amod	7
7	time	time		nn									NN	dobj	4
8	on	on	in+npostmod	in	nmod								IN	prep	7
9	his	his		dt	poss	sg							PRP$	poss	10
10	hands	hand		nn	pl								NNS	pobj	8
11	.	.											.	punct	2

#sentid = 271
0													_SP	dep	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	interesting	interesting		jj	pred								JJ	acomp	2
4	...	...											:	punct	2

#sentid = 272
0													_SP	dep	24
1	that	that		pro	dem	sg							DT	nsubj	2
2	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBZ	advcl	24
3	that	that		pro	dem	sg							DT	nsubj	4
4	's	be		vbmain	be	pres	simple	active					VBZ	meta	2
5	weird	weird		jj	pred								JJ	acomp	4
6	,	,											,	punct	2
7	just	just	rb+advl	rb	advl								RB	advmod	10
8	to	to		to									TO	aux	10
9	like	like											UH	intj	10
10	think	think	tocls+advl	vbmain	prepv	nonfinite	simple	active	advlcls	tocls			VB	advcl	24
11	about	about	in+advl	in	advl								IN	prep	10
12	that	that		dt	dt_dem								DT	det	16
13	,	,											,	punct	16
14	remote	remote	rb+advl	rb	advl								RB	advmod	15
15	controlled	control	attr+npremod	jj	attr	ed							VBN	amod	16
16	body	body		nn									NN	pobj	11
17	,	,											,	punct	24
18													_SP	dep	24
19	basically	basically	rb+advl	rb	advl	ly							RB	advmod	24
20													_SP	dep	24
21	yeah	yeah											UH	intj	24
22													_SP	dep	21
23	it	it		pro	3rd	sg							PRP	nsubj	24
24	seems	seem		vbmain	vblex	pres	simple	active					VBZ	ROOT	24
25	s-	s-											XX	dep	29
26	so	so	rb+jjrbmod	rb	othr								RB	advmod	29
27	like	like											UH	intj	29
28	,	,											,	punct	29
29	possible	possible											JJ	oprd	24
30	in	in	in+jcomp	in	jcomp								IN	prep	29
31	the	the		dt	art								DT	det	32
32	future	future		nn		nom							NN	pobj	30
33	.	.											.	punct	24

#sentid = 273
0	because	because		cs	cos								IN	mark	4
1	,	,											,	punct	4
2	everything	everything		nn	other	nom							NN	nsubj	4
3	i-	i-											XX	nsubj	4
4	is	be		vbmain	be	pres	simple	active			causative		VBZ	ROOT	4
5	basically	basically	rb+advl	rb	advl	ly							RB	advmod	4
6	like	like											UH	intj	4
7	,	,											,	punct	4
8	electrical	electrical	attr+npremod	jj	attr								JJ	amod	9
9	impulses	impulse		nn	pl								NNS	attr	4
10	,	,											,	punct	9
11	that	that		pro	dem	sg							WDT	dobj	13
12	(	(											-LRB-	punct	13
13	take	take		vbmain	vblex	nonfinite	simple	active	nmod_cls		rel		VB	relcl	9
14	)	)											-RRB-	punct	16
15	radio	radio	nn+npremod	nn			npremod						NN	compound	16
16	signals	signal		nn	pl	nom							NNS	dobj	13
17	or	or		cc	phrs								CC	cc	16
18	whatever	whatever											WDT	dobj	23
19													_SP	dep	23
20	everyone	everyone		nn	other	sg							NN	nsubj	23
21	could	could		vbaux	mod	pos							MD	aux	23
22	just	just	rb+advl	rb	advl		splaux						RB	advmod	23
23	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	conj	16
24	,	,											,	punct	4
25													_SP	dep	4
26	and	and		cc	phrs								CC	cc	4
27	i-	i-											PRP	dep	4
28	like	like											UH	intj	4
29													_SP	dep	4
30	especially	especially	rb+advl	rb	advl	ly							RB	advmod	33
31	when	when		rb	advl								WRB	advmod	33
32	he	he		pro	3rd	sg							PRP	nsubj	33
33	says	say		vbmain	vblex	pres	simple	active					VBZ	meta	4
34													_SP	dep	33
35	your	your		dt	poss								PRP$	poss	36
36	brain	brain		nn									NN	nsubj	37
37	sitting	sit		vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	ccomp	33
38	at	at	in+advl	in	advl								IN	prep	37
39	home	home		nn									NN	pobj	38
40													_SP	dep	33
41	it	it		pro	3rd	sg							PRP	nsubj	42
42	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	77
43	like	like	in+advl	in	advl								IN	prep	42
44	stretching	stretch	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	43
45	like	like	in+advl	in	advl								IN	prep	44
46	the	the		dt	art								DT	det	47
47	nerves	nerve		nn	pl								NNS	dobj	44
48	like	like											UH	intj	44
49													_SP	dep	42
50	yeah	yeah											UH	intj	42
51													_SP	dep	42
52	a	a		dt	art								DT	det	54
53	little	little	attr+npremod	jj	attr								JJ	amod	54
54	bit	bit		nn									NN	npadvmod	42
55	why	why		rb	advl								WRB	advmod	60
56	ca	can		vbaux	mod								MD	aux	60
57	n't	not											RB	neg	60
58	you	you		pro	2nd	sg							PRP	nsubj	60
59	just	just	rb+advl	rb	advl		splaux						RB	advmod	60
60	do	do	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	whcls	rel		VB	relcl	54
61	it	it		pro	3rd	sg							PRP	dobj	60
62	(	(											-LRB-	punct	60
63	one	one											CD	nummod	65
64	more	more	attr+npremod	jj	attr								JJR	amod	65
65	time	time		nn									NN	npadvmod	60
66	)	)											-RRB-	punct	60
67	whenever	whenever		rb	advl								WRB	advmod	69
68	they	they		pro	pl								PRP	nsubj	69
69	do	do	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	60
70	anything	anything		nn	other	nom							NN	dobj	69
71	like	like	in+npostmod	in	nmod								IN	prep	70
72	little	little											JJ	npadvmod	69
73	by	by		in	jcomp								IN	prep	72
74	little	little											JJ	pobj	73
75	,	,											,	punct	77
76	it	it		pro	3rd	sg							PRP	nsubj	77
77	makes	make	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	4
78	it	it		pro	3rd	sg							PRP	nsubj	82
79	so	so	rb+jjrbmod	rb	othr								RB	advmod	80
80	much	much	rb+jjrbmod	rb	othr								RB	advmod	81
81	more	more	rb+jjrbmod	rb	othr								RBR	advmod	82
82	believable	believable											JJ	ccomp	77
83	.	.											.	punct	77

#sentid = 274
0	like	like											UH	intj	1
1	for	for											IN	ROOT	1
2	any	any											DT	pobj	1
3	of	of		in	in_othr								IN	prep	2
4	the	the		dt	art								DT	det	5
5	things	thing		nn	pl	nom							NNS	pobj	3
6	that	that		pro	dem	sg							WDT	dobj	9
7	we	we		pro	1st								PRP	nsubj	9
8	've	've		vbaux									VBP	aux	9
9	read	read	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBN	relcl	5
10	.	.											.	punct	1

#sentid = 275
0													_SP	dep	4
1	everyone	everyone		nn	other	sg							NN	nsubj	4
2	can	can		vbaux	mod	pos							MD	aux	4
3	just	just	rb+advl	rb	advl		splaux						RB	advmod	4
4	leave	leave		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	4
5	their	their		dt	poss								PRP$	poss	6
6	brain	brain		nn									NN	dobj	4
7	at	at	in+advl	in	advl								IN	prep	4
8	home	home		nn									NN	pobj	7
9	and	and		cc	phrs								CC	cc	4
10	,	,											,	punct	4
11	go	go		vbmain	vblex	nonfinite	simple	active					VB	conj	4
12	about	about	in+advl	in	advl								IN	prep	11
13	their	their		dt	poss								PRP$	poss	15
14	daily	daily	attr+npremod	jj	attr								JJ	amod	15
15	business	business		nn		nom							NN	pobj	12
16	.	.											.	punct	4

#sentid = 276
0													_SP	dep	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	making	make	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	2
4	the	the		dt	art								DT	det	6
5	computer	computer	nn+npremod	nn		nom	npremod						NN	compound	6
6	program	program		nn									NN	nsubj	7
7	brain	brain		nn									NN	ccomp	3
8	that	that		pro	dem	sg							DT	nsubj	9
9	was	be		vbmain	be	past	simple	active					VBD	dep	3
10	,	,											,	punct	3
11	a	a		dt	art								DT	det	14
12	pretty	pretty	rb+jjrbmod	rb	adjmod								RB	advmod	13
13	big	big	attr+npremod	jj	attr								JJ	amod	14
14	jump	jump		nn									NN	dep	3
15	from	from	in+npostmod	in	nmod								IN	prep	14
16	what	what		comp	comp_wh								WP	dobj	19
17	they	they		pro	pl								PRP	nsubj	19
18	already	already	rb+advl	rb	advl								RB	advmod	19
19	did	do	whcls+incomp	vbmain	vblex	past	simple	active	compcls	whcls	incomp		VBD	pcomp	15
20	.	.											.	punct	2

#sentid = 277
0													_SP	dep	8
1	yeah	yeah											UH	intj	4
2	,	,											,	punct	4
3	that	that		pro	dem	sg							DT	nsubj	4
4	was	be		vbmain	in_othr	past	simple	active					VBD	prep	0
5													_SP	dep	4
6	that	that		pro	dem	sg							DT	nsubj	8
7	just	just	rb+advl	rb	advl								RB	advmod	8
8	creates	create		vbmain	vblex	pres	simple	active					VBZ	ROOT	8
9	,	,											,	punct	8
10	too	too	rb+jjrbmod	rb	adjmod								RB	advmod	11
11	many	many	attr+npremod	jj	attr								JJ	amod	12
12	problems	problem		nn	pl								NNS	dobj	8
13	,	,											,	punct	12
14													_SP	dep	12
15	yeah	yeah											UH	intj	12
16	,	,											,	punct	12
17													_SP	dep	12
18	to	to		to									TO	aux	19
19	deal	deal	tocls+rel	vbmain	prepv	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	12
20	with	with	in+advl	in	advl								IN	prep	19
21	.	.											.	punct	8

#sentid = 278
0													_SP	dep	15
1	the	the		dt	art								DT	det	3
2	only	only	attr+npremod	jj	attr								JJ	amod	3
3	thing	thing		nn		nom							NN	nsubj	15
4	that	that		relpro	relpro_that	sg							WDT	nsubj	6
5	could	could		vbaux	mod	pos							MD	aux	6
6	argue	argue	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	3
7	with	with	in+advl	in	advl								IN	prep	6
8	,	,											,	punct	6
9	like	like											UH	intj	6
10	about	about	in+advl	in	advl								IN	prep	6
11	trying	try	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	10
12	to	to		to									TO	aux	13
13	be	be	tocls+vcomp	vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	11
14	would	would		vbaux	mod	prd							MD	aux	15
15	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	15
16	like	like											UH	intj	15
17	dreaming	dream		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	attr	15
18	.	.											.	punct	15

#sentid = 279
0	think	think		vbmain	prepv	nonfinite	simple	active					VB	ROOT	0
1	about	about	in+advl	in	advl								IN	prep	0
2	dreams	dream		nn	pl								NNS	pobj	1
3	.	.											.	punct	0

#sentid = 280
0													_SP	dep	1
1	are	be		vbmain	be	pres	simple	active					VBP	ROOT	1
2	you	you		pro	2nd	sg							PRP	nsubj	1
3	actually	actually	rb+advl	rb	advl	ly							RB	advmod	1
4													_SP	dep	1
5	there	there	rb+advl	rb	advl								RB	advmod	1
6	then	then	rb+advl	rb	advl								RB	advmod	1
7	?	?											.	punct	1

#sentid = 281
0													_SP	dep	12
1	like	like											UH	intj	12
2	in	in		in	in_othr								IN	prep	10
3	a	a		dt	art								DT	det	4
4	dream	dream		nn									NN	pobj	2
5	like	like											UH	intj	10
6	,	,											,	punct	10
7	you	you		pro	2nd	sg							PRP	nsubj	10
8	're	be		vbaux									VBP	aux	10
9	not	not											RB	neg	10
10	gon	go		vbaux									TO	aux	12
11	na	to		vbaux									TO	aux	12
12	be	be		vbmain	be	nonfinite	simple	active					VB	ROOT	12
13	like	like											UH	intj	12
14	,	,											,	punct	12
15	i	i		pro	1st	sg							PRP	nsubj	16
16	'm	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	12
17	really	really	rb+advl	rb	advl	ly							RB	advmod	16
18	(	(											-LRB-	punct	16
19	xx	xx											XX	intj	16
20	)	)											-RRB-	punct	16
21	but	but		cc	cls								CC	cc	16
22	you	you		pro	2nd	sg							PRP	nsubj	23
23	're	be		vbmain	be	pres	simple	active					VBP	conj	16
24	not	not											RB	neg	23
25	ac-	ac-											XX	dep	23
26	obviously	obviously	rb+advl	rb	advl	ly							RB	advmod	23
27	actually	actually	rb+advl	rb	advl	ly							RB	advmod	23
28	there	there	rb+advl	rb	advl								RB	advmod	23
29	.	.											.	punct	12

#sentid = 282
0													_SP	dep	9
1	(	(											-LRB-	punct	9
2	xx	xx											XX	dep	9
3	)	)											-RRB-	dep	9
4													_SP	dep	9
5	yeah	yeah											UH	intj	9
6	i	i		pro	1st	sg							PRP	nsubj	9
7	do	do		vbaux									VBP	aux	9
8	n't	not											RB	neg	9
9	know	know		vbmain	vblex	pres	simple	active					VB	ROOT	9
10	.	.											.	punct	9

#sentid = 283
0	cuz	cuz	rb+advl	rb	advl								IN	advmod	11
1	like	like											UH	intj	11
2	when	when		rb	advl								WRB	advmod	5
3	you	you		pro	2nd	sg							PRP	nsubj	5
4	're	be		vbaux									VBP	aux	5
5	dreaming	dream	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls	whcls			VBG	advcl	11
6	obviously	obviously	rb+advl	rb	advl	ly							RB	advmod	11
7	you	you		pro	2nd	sg							PRP	nsubj	11
8	're	be		vbaux									VBP	aux	11
9	not	not											RB	neg	11
10	(	(											-LRB-	punct	11
11	thinking	think		vbmain	prepv	pres	prog	active					VBG	ROOT	11
12	of	of	in+advl	in	advl								IN	prep	11
13	)	)											-RRB-	punct	12
14	yourself	yourself		pro	2nd								PRP	pobj	12
15	as	as	in+advl	in	advl								IN	prep	11
16	lying	lie	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	15
17	(	(											-LRB-	punct	16
18	in	in	in+advl	in	advl								IN	prep	16
19	bed	bed		nn									NN	pobj	18
20	,	,											-RRB-	punct	16
21	)	)											-RRB-	punct	16
22	you	you		pro	2nd	sg							PRP	nsubj	23
23	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	11
24	?	?											.	punct	11

#sentid = 284
0													_SP	dep	3
1	well	well											UH	intj	3
2	,	,											,	punct	3
3	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	n't	not											RB	neg	3
5	that	that		pro	dem	sg							DT	nsubj	3
6	like	like											UH	intj	3
7	the	the		dt	art								DT	det	8
8	difference	difference		nn		nom							NN	attr	3
9	between	between	in+npostmod	in	nmod								IN	prep	8
10	three	three											CD	pobj	9
11	and	and		cc									CC	cc	10
12	five	five											CD	conj	10
13	?	?											.	punct	3

#sentid = 285
0													_SP	dep	7
1	yeah	yeah											UH	intj	4
2	,	,											,	punct	4
3	i	i		pro	1st	sg							PRP	nsubj	4
4	think	think		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	7
5	it	it		pro	3rd	sg							PRP	dobj	4
6	i	i		pro	1st	sg							PRP	nsubj	7
7	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	7
8	it	it		pro	3rd	sg							PRP	nsubj	9
9	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	7
10	.	.											.	punct	7

#sentid = 286
0													_SP	dep	2
1	good	good	attr+npremod	jj	attr								JJ	amod	2
2	call	call		nn									NN	ROOT	2
3	.	.											.	punct	2

#sentid = 287
0													_SP	dep	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	that	that		pro	dem	sg							DT	nsubj	4
4	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	2
5													_SP	dep	2
6	so	so		rb	link								RB	advmod	11
7	five	five											CD	npadvmod	11
8	,	,											,	punct	11
9	we	we		pro	1st								PRP	nsubj	11
10	're	be		vbaux									VBP	aux	11
11	going	go	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	2
12	with	with	in+advl	in	advl								IN	prep	11
13	five	five											CD	pobj	12
14	?	?											.	punct	11

#sentid = 288
0													_SP	dep	23
1	i	i		pro	1st	sg							PRP	nsubj	3
2	wanna	wanna		vbaux									VBP	aux	3
3	know	know		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	23
4	more	more											JJR	dobj	3
5	about	about	in+jcomp	in	jcomp								IN	prep	4
6	three	three											CD	pobj	5
7	,	,											,	punct	6
8	five	five											CD	appos	6
9	(	(											-LRB-	punct	6
10	i	i		pro	1st	sg							PRP	nsubj	13
11	do	do		vbaux									VBP	aux	13
12	n't	not											RB	neg	13
13	know	know		vbmain	prepv	pres	simple	active					VB	parataxis	6
14	about	about	in+advl	in	advl								IN	prep	13
15	)	)											-RRB-	punct	13
16	the	the		dt	art								DT	det	18
17	other	other		jj	attr								JJ	amod	18
18	two	two											CD	dep	13
19													_SP	dep	23
20	how	how		rb	advl								WRB	advmod	23
21	you	you		pro	2nd	sg							PRP	nmod	22
22	guys	guy		nn	pl								NNS	nsubj	23
23	doing	do		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	ROOT	23
24	?	?											.	punct	23

#sentid = 289
0													_SP	dep	0
1	pretty	pretty	rb+jjrbmod	rb	adjmod								RB	advmod	3
2													_SP	dep	3
3	good	good		jj	attr								JJ	amod	0
4													_SP	dep	3

#sentid = 290
0	(	(											-LRB-	ROOT	0
1	xx	xx											XX	punct	0
2	)	)											-RRB-	punct	0

#sentid = 291
0													_SP	dep	21
1	yeah	yeah											UH	intj	5
2	,	,											,	punct	5
3	we	we		pro	1st								PRP	nsubj	4
4	're	be		vbaux									VBP	aux	5
5													_SP	dep	21
6	we	we		pro	1st								PRP	nsubj	7
7	need	need		vbmain	vblex	pres	simple	active					VBP	dep	21
8	more	more	attr+npremod	jj	attr								JJR	amod	9
9	distinction	distinction		nn		nom							NN	dobj	7
10	between	between	in+npostmod	in	nmod								IN	prep	9
11	three	three											CD	nummod	15
12	and	and		cc									CC	cc	11
13													_SP	dep	11
14	five	five		in	in_othr								CD	prep	11
15													_SP	dep	16
16	three	three											CD	pobj	10
17	and	and		cc									CC	cc	16
18	five	five											CD	conj	16
19	we	we		pro	1st								PRP	nsubj	21
20	're	be		vbaux									VBP	aux	21
21	having	have		vbmain	vblex	pres	prog	active					VBG	ROOT	21
22	trouble	trouble		nn									NN	dobj	21
23	with	with	in+npostmod	in	nmod								IN	prep	22
24	.	.											.	punct	21

#sentid = 292
0													_SP	dep	0
1	ah	ah											UH	intj	3
2	,	,											,	punct	3
3	yeah	yeah											UH	intj	0
4	.	.											.	punct	0

#sentid = 293
0	i	i		pro	1st	sg							PRP	nsubj	1
1	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	thr-	thr-											XX	punct	1
3	the	the		dt	art								DT	det	4
4	difference	difference		nn		nom							NN	nsubj	9
5	between	between	in+npostmod	in	nmod								IN	prep	4
6	three	three											CD	pobj	5
7	and	and		cc									CC	cc	6
8	five	five											CD	conj	6
9	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	1
10	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	11
11	of	of	rb+advl	rb	advl								RB	advmod	9
12	,	,											,	punct	9
13	difficult	difficult		jj	pred								JJ	acomp	9
14	.	.											.	punct	1

#sentid = 294
0	i	i		pro	1st	sg							PRP	nsubj	1
1	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	8
2	,	,											,	punct	8
3	his	his		dt	poss	sg							PRP$	poss	4
4	i-	i-											XX	dep	8
5	his	his		dt	poss	sg							PRP$	poss	6
6	idea	idea		nn									NN	nsubj	8
7	though	though		rb	link								RB	advmod	8
8	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	8
9	that	that		comp	comp_that								IN	mark	24
10	,	,											,	punct	11
11	in	in	in+advl	in	advl								IN	prep	24
12	um	um											UH	intj	11
13	,	,											,	punct	11
14	where	where		rb	advl								WRB	advmod	21
15	your	your		dt	poss								PRP$	poss	16
16	point	point		nn									NN	nsubj	21
17	of	of	of+npostmod	in	nmod								IN	prep	16
18	view	view		nn									NN	pobj	17
19	,	,											,	punct	21
20	three	three											CD	nsubj	21
21	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	11
22	,	,											,	punct	11
23	you	you		pro	2nd	sg							PRP	nsubj	24
24	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	8
25	wherever	wherever		rb	advl								WRB	advmod	29
26	you	you		pro	2nd	sg							PRP	nsubj	27
27	think	think	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBP	advcl	24
28	you	you		pro	2nd	sg							PRP	nsubj	29
29	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	27
30	.	.											.	punct	8

#sentid = 295
0	so	so		rb	link								RB	advmod	15
1	,	,											,	punct	15
2	if	if		cs	cnd								IN	mark	4
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	think	think	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	15
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	4
7	you	you		pro	2nd	sg							PRP	nsubj	8
8	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	6
9	down	down	in+advl	in	advl								IN	prep	6
10	,	,											,	punct	9
11	the	the		dt	art								DT	det	12
12	tunnel	tunnel		nn									NN	pobj	9
13	,	,											,	punct	15
14	that	that		pro	dem	sg							DT	nsubj	15
15	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	15
16	exactly	exactly		rb	othr	ly							RB	advmod	17
17	where	where		comp	comp_wh								WRB	advmod	19
18	you	you		pro	2nd	sg							PRP	nsubj	19
19	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	15
20	.	.											.	punct	15

#sentid = 296
0													_SP	dep	0
1	like	like											UH	intj	3
2	she	she		pro	3rd	sg							PRP	nsubj	3
3	said	say		vbmain	in_othr	past	simple	active					VBD	prep	0
4	,	,											,	punct	3
5	uh	uh											UH	intj	6
6	what	what											WP	dep	10
7	if	if		cs	cnd								IN	mark	10
8	you	you		pro	2nd	sg							PRP	nsubj	10
9	're	be		vbaux									VBP	aux	10
10	dreaming	dream		vbmain	vblex	pres	prog	active	compcls		conditional	compdel	VBG	ccomp	3
11	?	?											.	punct	3

#sentid = 297
0													_SP	dep	3
1	ah	ah											UH	intj	3
2													_SP	dep	3
3	are	be		vbmain	be	pres	simple	active					VBP	ROOT	3
4	you	you		pro	2nd	sg							PRP	nsubj	3
5	actually	actually	rb+advl	rb	advl	ly							RB	advmod	3
6	in	in	in+advl	in	advl								IN	prep	3
7	the	the		dt	art								DT	det	8
8	dream	dream		nn									NN	pobj	6
9	then	then	rb+advl	rb	advl								RB	advmod	3
10	?	?											.	punct	3

#sentid = 298
0													_SP	dep	2
1	you	you		pro	2nd	sg							PRP	nsubj	2
2	're	be		vbmain	be	pres	simple	active					VBP	ROOT	2
3	aware	aware		jj	pred								JJ	acomp	2
4	_	_											.	punct	2

#sentid = 299
0	i	i		pro	1st	sg							PRP	nsubj	1
1	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	that	that		pro	dem	sg							DT	nsubj	3
3	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	1
4	a	a											DT	dep	11
5	that	that		pro	dem	sg							DT	nsubj	6
6	's	be		vbmain	be	pres	simple	active					VBZ	parataxis	11
7	a	a		dt	art								DT	det	11
8	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	9
9	good	good	attr+npremod	jj	attr								JJ	amod	11
10	,	,											,	punct	11
11	worry	worry		nn		nom							NN	attr	3
12	about	about	in+npostmod	in	nmod								IN	prep	11
13	the	the											DT	pobj	12
14	(	(											-LRB-	punct	11
15	xx	xx		nn									NN	dobj	11
16	)	)											-RRB-	punct	11
17	for	for	in+npostmod	in	nmod								IN	prep	11
18	,	,											,	punct	17
19	for	for		in	in_othr								IN	prep	17
20	three	three											CD	pobj	19
21	cuz	cuz		nn									NN	dep	32
22	i	i		pro	1st	sg							PRP	nsubj	23
23	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	32
24	,	,											,	punct	32
25													_SP	dep	32
26	uh	uh											UH	intj	27
27	huh	huh											UH	intj	32
28													_SP	dep	32
29	um	um											UH	intj	32
30													_SP	dep	32
31	that	that		pro	dem	sg							DT	nsubj	32
32	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBZ	advcl	1
33													_SP	dep	32
34	cuz	cuz		cs	cs_othr								IN	mark	37
35	you	you		pro	2nd	sg							PRP	nsubj	37
36	're	be		vbaux									VBP	aux	37
37	gon	go	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		other_advl		VBG	advcl	32
38	na	to	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	32
39	actually	actually	rb+advl	rb	advl	ly							RB	advmod	47
40	i	i		pro	1st	sg							PRP	nsubj	41
41	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	39
42	when	when		rb	advl								WRB	advmod	45
43	you	you		pro	2nd	sg							PRP	nsubj	45
44	're	be		vbaux									VBP	aux	45
45	dreaming	dream	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls	whcls			VBG	advcl	47
46	that	that		pro	dem	sg							DT	nsubj	47
47	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBZ	advcl	32
48	where	where		comp	comp_wh								WRB	advmod	52
49	you	you		pro	2nd	sg							PRP	nsubj	50
50	think	think	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBP	advcl	47
51	you	you		pro	2nd	sg							PRP	nsubj	52
52	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	50
53	.	.											.	punct	1

#sentid = 300
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	1

#sentid = 301
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	1

#sentid = 302
0	but	but		cc									CC	cc	1
1	like	like											IN	ROOT	1
2	the	the		dt	art								DT	det	3
3	center	center		nn		nom							NN	pobj	1
4	of	of	of+npostmod	in	nmod								IN	prep	3
5	gravity	gravity		nn		nom							NN	pobj	4
6	,	,											,	punct	3
7	like	like											UH	intj	3
8	where	where		comp	comp_wh								WRB	advmod	11
9	you	you		pro	2nd	sg							PRP	nsubj	11
10	actually	actually	rb+advl	rb	advl	ly							RB	advmod	11
11	are	be	whcls+incomp	vbmain	be	pres	simple	active	compcls	whcls	incomp		VBP	pcomp	7
12	,	,											,	punct	3
13	that	that		cs	cs_othr								IN	mark	15
14	that	that		pro	dem	sg							DT	nsubj	15
15	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBZ	advcl	1
16	not	not											RB	neg	15
17	in	in	in+advl	in	advl								IN	prep	15
18	the	the		dt	art								DT	det	19
19	dream	dream		nn									NN	pobj	17
20	.	.											.	punct	1

#sentid = 303
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	0

#sentid = 304
0	it	it		pro	3rd	sg							PRP	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	number	number		nn		nom							NN	attr	1
3	five	five											CD	nummod	2
4	seems	seem		vbmain	vblex	pres	simple	active					VBZ	dep	1
5	to	to		to									TO	aux	7
6	en-	en-											XX	dep	7
7	allow	allow		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	4
8	us	we		pro	pl								PRP	nsubj	14
9	(	(											-LRB-	punct	8
10	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	11
11	of	of											RB	appos	8
12	)	)											-RRB-	punct	8
13	to	to		to									TO	aux	14
14	correct	correct		vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	7
15	for	for	in+advl	in	advl								IN	prep	14
16	that	that		pro	dem	sg							DT	pobj	15
17	unless	unless		cs	cnd								IN	mark	18
18	_	_											NFP	punct	1

#sentid = 305
0	but	but		cc	cls								CC	cc	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3													_SP	dep	2
4	not	not											RB	neg	2
5	clear	clear		jj	pred								JJ	acomp	2
6	exactly	exactly		rb	othr	ly							RB	advmod	7
7	what	what											WP	attr	15
8	the	the		dt	art								DT	det	10
9	(	(											-LRB-	punct	10
10	connection	connection		nn		nom							NN	nsubj	15
11	to	to	in+npostmod	in	nmod								IN	prep	10
12	the	the		dt	art								DT	det	14
13	)	)											-RRB-	punct	14
14	process	process		nn		nom							NN	pobj	11
15	is	be	xtrapos+thatcls+jcomp	vbmain	be	pres	simple	active	compcls	whcls	jcomp		VBZ	ccomp	2
16	.	.											.	punct	2

#sentid = 306
0													_SP	dep	3
1	so	so		rb	link								RB	advmod	3
2	it	it		pro	3rd	sg							PRP	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	just	just	rb+advl	rb	advl								RB	advmod	3
5	like	like											UH	intj	3
6	wherever	wherever		rb	advl								WRB	advmod	22
7													_SP	dep	22
8	it	it		pro	3rd	sg							PRP	nsubj	9
9	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBZ	advcl	22
10	okay	okay		jj	pred								JJ	acomp	9
11	it	it		pro	3rd	sg							PRP	nsubj	12
12	's	be		vbmain	be	pres	simple	active					VBZ	meta	9
13	not	not											RB	neg	12
14	exactly	exactly		rb	othr	ly							RB	advmod	15
15	like	like	in+advl	in	advl								IN	prep	12
16	your	your		dt	poss								PRP$	poss	17
17	opinion	opinion		nn									NN	pobj	15
18	for	for	in+npostmod	in	nmod								IN	prep	17
19	five	five											CD	pobj	18
20	,	,											,	punct	22
21	it	it		pro	3rd	sg							PRP	nsubj	22
22	's	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	3
23	where	where		comp	comp_wh								WRB	advmod	25
24	you	you		pro	2nd	sg							PRP	nsubj	25
25	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	22
26	,	,											,	punct	25
27	based	base	edcls+advl	vbmain	advl	nonfinite	simple	active		edcls			VBN	prep	25
28	on	on	in+advl	in	advl								IN	prep	27
29	,	,											,	punct	28
30													_SP	dep	22
31	(	(											-LRB-	punct	22
32	where	where		comp	comp_wh								WRB	advmod	34
33	you	you		pro	2nd	sg							PRP	nsubj	34
34	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	22
35	)	)											-RRB-	punct	22
36													_SP	dep	22
37	you	you		pro	2nd	sg							PRP	nsubj	38
38	're	be		vbmain	be	pres	simple	active					VBP	meta	22
39	just	just	rb+advl	rb	advl								RB	advmod	38
40	like	like											UH	intj	38
41	,	,											,	punct	38
42													_SP	dep	38
43	based	base	edcls+advl	vbmain	advl	nonfinite	simple	active		edcls			VBN	prep	38
44	on	on	in+advl	in	advl								IN	prep	43
45	something	something		nn	other	nom							NN	pobj	44
46													_SP	dep	45
47	i	i		pro	1st	sg							PRP	nsubj	48
48	think	think		vbmain	vblex	pres	simple	active	nmod_cls		ncomp	reldel	VBP	acl	45
49	i	i		pro	1st	sg							PRP	nsubj	50
50	'm	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	48
51	here	here	rb+advl	rb	advl								RB	advmod	50
52	but	but		cc	cls								CC	cc	48
53	i	i		pro	1st	sg							PRP	nsubj	55
54	could	could		vbaux	mod	pos							MD	aux	55
55	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	48
56	wrong	wrong		jj	pred								JJ	acomp	55
57	?	?											.	punct	48
58													_SP	dep	3
59	yeah	yeah											UH	intj	3
60	,	,											,	punct	59
61													_SP	dep	3
62	where	where		comp	comp_wh								WRB	advmod	64
63	you	you		pro	2nd	sg							PRP	nsubj	64
64	think	think	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	3
65	where	where		comp	comp_wh								WRB	advmod	71
66	your	your		dt	poss								PRP$	poss	67
67	point	point		nn									NN	nsubj	71
68	of	of	of+npostmod	in	nmod								IN	prep	67
69	view	view		nn									NN	pobj	68
70	should	should		vbaux	mod	nec							MD	aux	71
71	be	be	whcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls	whcls	vcomp		VB	ccomp	64
72	,	,											,	punct	3
73													_SP	dep	3
74	okay	okay											UH	intj	3
75													_SP	dep	3
76	but	but		cc	cls								CC	cc	3
77	,	,											,	punct	79
78	it	it		pro	3rd	sg							PRP	nsubj	79
79	's	be		vbmain	be	pres	simple	active					VBZ	conj	3
80	not	not											RB	neg	79
81	exactly	exactly	rb+jjrbmod	rb	adjmod	ly							RB	advmod	82
82	clear	clear		jj	pred								JJ	acomp	79
83	what	what		comp	comp_wh								WP	dobj	94
84	the	the											DT	intj	83
85	,	,											,	meta	83
86													_SP	dep	83
87	yeah	yeah											UH	meta	83
88													_SP	dep	83
89	what	what		dt									WDT	det	91
90	what	what											WDT	dep	91
91	criterion	criterion		nn									NN	dobj	94
92	he	he		pro	3rd	sg							PRP	nsubj	94
93	's	be		vbaux									VBZ	aux	94
94	using	use	xtrapos+thatcls+jcomp	vbmain	vblex	pres	prog	active	compcls	whcls	jcomp		VBG	ccomp	79
95	in	in	in+advl	in	advl								IN	prep	94
96	deciding	decide	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	95
97	,	,											,	punct	96
98	where	where		rb	othr								WRB	advmod	99
99	you	you		pro	2nd	sg							PRP	dep	104
100	where	where		comp	comp_wh								WRB	advmod	104
101	you	you		pro	2nd	sg							PRP	nsubj	104
102	should	should		vbaux	mod	nec							MD	aux	104
103	be	be		vbaux									VB	aux	104
104	identifying	identify	whcls+vcomp	vbmain	vblex	vp_w_modal	prog	active	compcls	whcls	vcomp		VBG	ccomp	96
105	yourself	yourself		pro	2nd								PRP	dobj	104
106	,	,											,	punct	79
107	um	um											UH	intj	79
108	...	...											:	punct	79

#sentid = 307
0	so	so		rb	link								CC	advmod	6
1	i	i		pro	1st	sg							PRP	nsubj	2
2	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	6
3	,	,											,	punct	6
4	it	it		pro	3rd	sg							PRP	nsubj	6
5	might	might		vbaux	mod	pos							MD	aux	6
6	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	6
7	that	that		cs	cs_othr								IN	mark	9
8	he	he		pro	3rd	sg							PRP	nsubj	9
9	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBZ	advcl	14
10	re-	re-											XX	dep	14
11	he	he		pro	3rd	sg							PRP	nsubj	14
12	's	be		vbaux									VBZ	aux	14
13	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	14
14	relying	rely	finitecls+advl	vbmain	prepv	pres	prog	active	advlcls				VBG	advcl	30
15	on	on	in+advl	in	advl								IN	prep	14
16	something	something		nn	other	nom							NN	pobj	15
17	like	like	in+npostmod	in	nmod								IN	prep	16
18	number	number		nn		nom							NN	pobj	17
19	two	two											CD	nummod	18
20	,	,											,	punct	30
21	that	that											IN	mark	23
22	you	you		pro	2nd	sg							PRP	nsubj	23
23	're	be		vbmain	be	pres	simple	active					VBP	parataxis	30
24	your	your		dt	poss								PRP$	poss	25
25	brain	brain		nn									NN	attr	23
26	,	,											,	punct	23
27	to	to		to									TO	aux	30
28	to	to		to									TO	aux	30
29	be	be		vbaux									VB	aux	30
30	locating	locate	ingcls+advl	vbmain	vblex	nonfinite	prog	active	advlcls	ingcls			VBG	advcl	6
31	yourself	yourself		pro	2nd								PRP	dobj	30
32	back	back	rb+advl	rb	advl								RB	advmod	30
33	in	in		in	in_othr								IN	prep	32
34	Houston	houston		nn		proper							NNP	pobj	33
35	...	...											:	punct	30
36	in	in	in+advl	in	advl								IN	prep	42
37	which	which		dt									WDT	det	38
38	case	case		nn									NN	pcomp	36
39	number	number		nn		nom							NN	nsubj	42
40	five	five											CD	nummod	39
41	would	would		vbaux	mod	prd							MD	aux	42
42	be	be	finitecls+rel	vbmain	be	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	11
43	different	different		jj	pred								JJ	acomp	42
44	.	.											.	punct	6

#sentid = 308
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2	.	.											.	punct	1

#sentid = 309
0													_SP	dep	1
1	well	well											UH	intj	9
2	cuz	cuz		cs	cs_othr								IN	mark	4
3	i	i		pro	1st	sg							PRP	nsubj	4
4	think	think	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	9
5	this	this		dt	dt_dem								DT	det	6
6	one	one		pro	other	pl							CD	dobj	4
7	,	,											,	punct	9
8	this	this		pro	dem	sg							DT	nsubj	9
9	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	9
10													_SP	dep	9
11	kinda	kinda	rb+jjrbmod	rb	adjmod								RB	advmod	12
12	short	short		jj	pred								JJ	acomp	9
13	.	.											.	punct	9

#sentid = 310
0													_SP	dep	4
1	hey	hey											UH	intj	4
2	are	be		vbaux									VBP	aux	4
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	recording	record		vbmain	vblex	pres	prog	active					VBG	ROOT	4
5	right	right	rb+jjrbmod	rb	othr								RB	advmod	6
6	now	now	rb+advl	rb	advl								RB	advmod	4
7	?	?											.	punct	4

#sentid = 311
0													_SP	dep	1
1	bring	bring		vbmain	vblex	nonfinite	simple	active					VB	ROOT	1
2	a	a		dt	art								DT	det	3
3	microphone	microphone		nn									NN	dobj	1
4	over	over	rb+jjrbmod	rb	othr								RB	advmod	5
5	here	here	rb+advl	rb	advl								RB	advmod	1
6													_SP	dep	1
7	okay	okay											UH	intj	11
8	,	,											,	punct	11
9	uh	uh											UH	intj	11
10	lovely	lovely	attr+npremod	jj	attr								JJ	amod	11
11	conversation	conversation		nn		nom							NN	meta	1
12													_SP	dep	11

#sentid = 312
0	i	i		pro	1st	sg							PRP	nsubj	1
1	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	that	that		comp	comp_that								IN	mark	7
3	a-	a-											XX	punct	7
4	besides	besides	rb+advl	rb	advl								RB	advmod	7
5	,	,											,	punct	7
6	i	i		pro	1st	sg							PRP	nsubj	7
7	think	think	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	1
8	(	(											-LRB-	punct	11
9	i	i		pro	1st	sg							PRP	nsubj	11
10	)	)											-RRB-	punct	11
11	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	7
12	a	a		dt	art								DT	det	13
13	lot	lot		nn									NN	dobj	11
14	to	to		to									TO	aux	15
15	talk	talk	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	13
16	(	(											-LRB-	punct	15
17	about	about	in+advl	in	advl								IN	prep	15
18	)	)											-RRB-	punct	15
19													_SP	dep	23
20	yeah	yeah											UH	intj	23
21	i	i		pro	1st	sg							PRP	nsubj	23
22													_SP	dep	23
23	think	think	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	1
24	(	(											-LRB-	punct	23
25	that	that		pro	dem	sg							DT	nsubj	26
26	's	be		vbmain	be	pres	simple	active					VBZ	parataxis	23
27	true	true		jj	pred								JJ	acomp	26
28	)	)											-RRB-	punct	26
29	that	that		comp	comp_that								IN	mark	35
30	right	right	rb+jjrbmod	rb	othr								RB	advmod	31
31	there	there	rb+advl	rb	advl								RB	advmod	35
32	,	,											,	punct	35
33													_SP	dep	35
34	it	it		pro	3rd	sg							PRP	nsubj	35
35	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	23
36	strange	strange		jj	pred								JJ	acomp	35
37	how	how		comp	comp_wh								WRB	advmod	41
38	they	they		pro	pl								PRP	nsubj	41
39	(	(											-LRB-	punct	41
40	just	just	rb+advl	rb	advl								RB	advmod	41
41	say	say	xtrapos+thatcls+jcomp	vbmain	vblex	pres	simple	active	compcls	whcls	jcomp		VBP	ccomp	35
42	things	thing		nn	pl	nom							NNS	dobj	41
43	)	)											-RRB-	punct	35
44	(	(											-LRB-	punct	23
45	xx	xx											XX	punct	23
46	)	)											-RRB-	punct	23

#sentid = 313
0													_SP	dep	16
1	seriously	seriously	rb+advl	rb	advl	ly							RB	advmod	9
2	,	,											,	punct	9
3	like	like											UH	intj	7
4	i	i		pro	1st	sg							PRP	nsubj	7
5	'm	be		vbaux									VBP	aux	7
6	just	just	rb+advl	rb	advl		splaux						RB	advmod	7
7	gon	go		vbaux									VBG	aux	9
8	na	to		vbaux									VBG	aux	9
9	sit	sit		vbmain	vblex	nonfinite	simple	active					VB	parataxis	16
10	here	here	rb+advl	rb	advl								RB	advmod	9
11	(	(											-LRB-	punct	9
12	and	and		cc	phrs								CC	cc	9
13	)	)											-RRB-	punct	9
14													_SP	dep	9
15	it	it		pro	3rd	sg							PRP	nsubj	16
16	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	16
17	like	like											UH	intj	16
18	a	a		dt	art								DT	det	22
19	sci	sci	attr+npremod	nn	attr								NN	amod	22
20	-	-	attr+npremod	jj	attr								JJ	amod	22
21	fi	fi	attr+npremod	jj	attr								JJ	amod	22
22	story	story		nn		nom							NN	attr	16
23	,	,											,	punct	22
24	like	like											UH	intj	22
25	basically	basically	rb+advl	rb	advl	ly							RB	advmod	32
26													_SP	dep	32
27	yeah	yeah											UH	intj	32
28	,	,											,	punct	32
29	you	you		pro	2nd	sg							PRP	nsubj	32
30	should	should		vbaux	mod	nec							MD	aux	32
31	just	just	rb+advl	rb	advl		splaux						RB	advmod	32
32	listen	listen	finitecls+rel	vbmain	prepv	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	22
33	to	to	in+advl	in	advl								IN	prep	32
34	her	she				sg							PRP	pobj	33
35	,	,											,	punct	32
36	(	(											-LRB-	punct	32
37	xx	xx											XX	intj	32
38	)	)											-RRB-	punct	32
39	or	or		cc	phrs								CC	cc	32
40	whatever	whatever											WDT	conj	32
41													_SP	dep	16
42	like	like											UH	intj	16
43	,	,											,	punct	16
44	how	how		rb	advl								WRB	advmod	46
45	she	she		pro	3rd	sg							PRP	nsubj	46
46	talked	talk	finitecls+advl	vbmain	prepv	past	simple	active	advlcls	whcls			VBD	advcl	16
47	about	about	in+advl	in	advl								IN	prep	46
48	how	how		comp	comp_wh								WRB	advmod	50
49	there	there											EX	expl	50
50	was	be	whcls+incomp	vbmain	be	past	simple	active	compcls	whcls	incomp		VBD	pcomp	47
51	like	like											UH	intj	50
52	an	an		dt									DT	det	55
53	extra	extra	attr+npremod	jj	attr								JJ	amod	55
54	,	,											,	punct	55
55	brain	brain		nn									NN	attr	50
56	and	and		cc	phrs								CC	cc	55
57	body	body		nn									NN	conj	55
58													_SP	dep	16
59	it	it		pro	3rd	sg							PRP	nsubj	60
60	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	16
61	like	like	in+advl	in	advl								UH	prep	60
62	reading	read	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	60
63	science	science	nn+npremod	nn		nom	npremod						NN	compound	64
64	fiction	fiction		nn		nom							NN	dobj	62
65	but	but		cc	phrs								CC	cc	60
66	,	,											,	punct	60
67													_SP	dep	60
68	what	what											WP	dobj	74
69	exactly	exactly		rb	othr	ly							RB	advmod	68
70	are	be		vbaux									VBP	auxpass	72
71	we	we		pro	1st								PRP	nsubjpass	72
72	supposed	suppose	thatcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	60
73	to	to		to									TO	aux	74
74	talk	talk	tocls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	72
75	about	about	in+advl	in	advl								IN	prep	74
76	?	?											.	punct	60

#sentid = 314
0													_SP	dep	11
1	(	(											-LRB-	punct	11
2	xx	xx											XX	dep	11
3	)	)											-RRB-	punct	11
4													_SP	dep	11
5	has	have		vbaux									VBZ	aux	11
6	anyone	anyone		nn	other	sg							NN	dobj	5
7	(	(											-LRB-	punct	6
8	xx	xx											XX	nmod	6
9	)	)											-RRB-	punct	6
10	this	this		pro	dem	sg							DT	nsubj	11
11	is	be		vbmain	be	pres	perf	active					VBZ	ROOT	11
12	?	?											.	punct	11

#sentid = 315
0													_SP	dep	12
1	(	(											-LRB-	punct	5
2	i	i		pro	1st	sg							PRP	nsubj	5
3	do	do		vbaux									VBP	aux	5
4	n't	not											RB	neg	5
5	think	think		vbmain	vblex	pres	simple	active					VB	parataxis	12
6	)	)											-RRB-	punct	5
7	none	none		nn	other	sg							NN	nsubjpass	12
8	of	of	of+npostmod	in	nmod								IN	prep	7
9	us	we		pro	pl								PRP	pobj	8
10	could	could		vbaux	mod	pos							MD	aux	12
11	be	be		vbaux									VB	auxpass	12
12	recorded	record		vbmain	vblex	vp_w_modal	simple	pasv_agls					VBN	ROOT	12
13	(	(											-LRB-	punct	12
14	today	today		nn									NN	npadvmod	12
15	.	.											.	punct	12
16	)	)											.	punct	12

#sentid = 316
0													_SP	dep	16
1	so	so		rb	link								RB	advmod	16
2	,	,											,	punct	16
3	so	so		rb	link								RB	advmod	9
4	you	you		pro	2nd	sg							PRP	nmod	5
5	guys	guy		nn	pl								NNS	nsubj	9
6	(	(											-LRB-	punct	9
7	did	do		vbaux									VBD	aux	9
8	n't	not											RB	neg	9
9	do	do		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VB	ccomp	16
10	it	it		pro	3rd	sg							PRP	dobj	9
11	,	,											-RRB-	punct	9
12	)	)											-RRB-	punct	9
13	did	do		vbaux									VBD	aux	16
14	you	you		pro	2nd	sg							PRP	nsubj	16
15	,	,											,	punct	16
16	read	read		vbmain	vblex	past	simple	active					VB	ROOT	16
17	?	?											.	punct	16

#sentid = 317
0													_SP	dep	6
1	no	no											UH	intj	6
2	,	,											,	punct	6
3	i	i		pro	1st	sg							PRP	nsubj	6
4	'm	be		vbaux									VBP	aux	6
5	just	just	rb+advl	rb	advl		splaux						RB	advmod	6
6	thinking	think		vbmain	vblex	pres	prog	active					VBG	ROOT	6
7	,	,											,	punct	6
8													_SP	dep	6
9	cuz	cuz	in+advl	in	advl								IN	prep	6
10	there	there											EX	expl	11
11	's	be		vbmain	be	pres	simple	active	compcls		incomp	compdel	VBZ	pcomp	9
12	no	no		dt									DT	det	13
13	homework	homework		nn									NN	attr	11
14	so	so											IN	dep	18
15	i	i		pro	1st	sg							PRP	nsubj	18
16	have	have		vbaux									VBP	aux	18
17	n't	not											RB	neg	18
18	started	start	finitecls+advl	vbmain	vblex	pres	perf	active	advlcls				VBN	advcl	11
19	reading	read	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	18
20	.	.											.	punct	6

#sentid = 318
0													_SP	dep	0
1	am	be		vbmain	in_othr	pres	simple	active					VBP	prep	0
2	i	i		pro	1st	sg							PRP	nsubj	1
3	the	the		dt	art								DT	det	5
4	only	only	attr+npremod	jj	attr								JJ	amod	5
5	one	one		nn									NN	attr	1
6	who	who		relpro	relpro_wh								WP	nsubj	7
7	read	read	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls	whcls	rel		VBD	relcl	5
8	?	?											.	punct	1

#sentid = 319
0													_SP	dep	4
1	i	i		pro	1st	sg							PRP	nsubj	4
2	do	do		vbaux									VBP	aux	4
3	n't	not											RB	neg	4
4	know	know		vbmain	vblex	pres	simple	active					VB	ROOT	4
5	if	if		cs	cnd								IN	mark	6
6	anyone	anyone		nn									NN	ccomp	4
7	(	(											-LRB-	punct	6
8	xx	xx											XX	dep	6
9	)	)											-RRB-	punct	6

#sentid = 320
0													_SP	dep	6
1	so	so		rb	link								RB	advmod	6
2	what	what											WP	dep	6
3	exactly	exactly		rb	othr	ly							RB	advmod	2
4	would	would		vbaux	mod	prd							MD	aux	6
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	like	like		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	6
7	us	we		pro	pl								PRP	nsubj	9
8	to	to		to									TO	aux	9
9	discuss	discuss		vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	6
10	?	?											.	punct	6

#sentid = 321
0													_SP	dep	0
1	hm	hm											UH	intj	0
2	?	?											.	punct	1

#sentid = 322
0													_SP	dep	6
1	what	what											WP	dobj	6
2	exactly	exactly		rb	othr	ly							RB	advmod	1
3	should	should		vbaux	mod	nec							MD	aux	6
4	we	we		pro	1st								PRP	nsubj	6
5	be	be		vbaux									VB	aux	6
6	discussing	discuss		vbmain	vblex	vp_w_modal	prog	active					VBG	ROOT	6
7	?	?											.	punct	6

#sentid = 323
0													_SP	dep	40
1	um	um											UH	intj	40
2	like	like											UH	intj	40
3	,	,											,	punct	40
4	just	just	rb+advl	rb	advl								RB	advmod	6
5	to	to		to									TO	aux	6
6	go	go	tocls+advl	vbmain	prepv	nonfinite	simple	active	advlcls	tocls			VB	advcl	40
7	through	through	in+advl	in	advl								IN	prep	6
8	the	the		dt	art								DT	det	24
9													_SP	dep	24
10	the	the		dt	art								DT	det	24
11													_SP	dep	24
12	the	the		dt	art								DT	det	24
13													_SP	dep	24
14	um	um											UH	intj	24
15	,	,											,	punct	14
16	the	the		dt	art								DT	det	24
17	different	different	attr+npremod	jj	attr								JJ	amod	24
18	,	,											,	punct	24
19	um	um											UH	intj	24
20	,	,											,	punct	24
21													_SP	dep	24
22	okay	okay											UH	intj	24
23													_SP	dep	24
24	accounts	account		nn	pl								NNS	pobj	7
25	that	that		pro	dem	sg							WDT	dobj	27
26	he	he		pro	3rd	sg							PRP	nsubj	27
27	gives	give	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel		VBZ	relcl	24
28	,	,											,	punct	24
29	he	he		pro	3rd	sg							PRP	dep	30
30	o-	o-											XX	dep	31
31	on	on	in+advl	in	advl								IN	prep	6
32	page	page		nn		nom							NN	pobj	31
33	two	two											CD	nummod	32
34	-	-											HYPH	punct	32
35	twenty	twenty											CD	nummod	32
36													_SP	dep	40
37	yeah	yeah											UH	intj	40
38													_SP	dep	37
39	he	he		pro	3rd	sg							PRP	nsubj	40
40	gives	give		vbmain	vblex	pres	simple	active					VBZ	ROOT	40
41	us	we		pro	pl								PRP	dative	40
42	a	a		dt	art								DT	det	48
43	you	you		pro	2nd	sg							PRP	nsubj	44
44	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	48
45	,	,											,	punct	44
46	three	three											CD	nummod	48
47	different	different	attr+npremod	jj	attr								JJ	amod	48
48	options	option		nn	pl	nom							NNS	dobj	40
49	for	for	in+npostmod	in	nmod								IN	prep	48
50	thinking	think	ingcls+incomp	vbmain	prepv	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	49
51	about	about	in+advl	in	advl								IN	prep	50
52	this	this		dt	dt_dem								DT	det	53
53	case	case		nn									NN	pobj	51
54	and	and		cc	cls								CC	cc	40
55	uh	uh											UH	intj	40
56	,	,											,	punct	40
57	and	and		cc	cls								CC	cc	40
58	then	then		rb	link								RB	advmod	62
59	later	later	rb+jjrbmod	rb	othr								RB	advmod	60
60	on	on	rb+advl	rb	advl								RB	advmod	62
61	he	he		pro	3rd	sg							PRP	nsubj	62
62	proposes	propose		vbmain	vblex	pres	simple	active					VBZ	conj	40
63	a	a											DT	quantmod	64
64	couple	couple		nn									NN	dobj	62
65	more	more		jj	attr								JJR	amod	64
66	.	.											.	punct	62

#sentid = 324
0	i	i		pro	1st	sg							PRP	nsubj	3
1	'm	be		vbaux									VBP	aux	3
2	just	just	rb+advl	rb	advl		splaux						RB	advmod	3
3	wondering	wonder		vbmain	vblex	pres	prog	active					VBG	ROOT	3
4	,	,											,	punct	3
5	how	how	rb+jjrbmod	rb	adjmod								WRB	advmod	6
6	plausible	plausible		jj	pred								JJ	acomp	8
7	you	you		pro	2nd	sg							PRP	nsubj	8
8	think	think	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	3
9	,	,											,	punct	8
10	the	the											DT	dep	15
11	,	,											,	punct	15
12	the	the		dt	art								DT	det	14
13	various	various	attr+npremod	jj	attr								JJ	amod	14
14	options	option		nn	pl	nom							NNS	nsubj	15
15	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	8
16	.	.											.	punct	3

#sentid = 325
0													_SP	dep	0
1	okay	okay											UH	intj	0
2	.	.											.	punct	1

#sentid = 326
0													_SP	dep	6
1	did	do		vbaux									VBD	aux	6
2	you	you		pro	2nd	sg							PRP	nsubj	1
3	did	do		vbmain	vblex	past	simple	active					VBD	dep	6
4	you	you		pro	2nd	sg							PRP	nmod	5
5	guys	guy		nn	pl								NNS	nsubj	6
6	like	like		vbmain	vblex	past	simple	active					VB	ROOT	6
7	the	the		dt	art								DT	det	13
8	,	,											,	punct	13
9	like	like											UH	intj	10
10	the	the		dt	art								DT	det	13
11	,	,											,	punct	13
12	the	the		dt	art								DT	det	13
13	reading	reading		nn		nom							NN	dobj	6
14	?	?											.	punct	6

#sentid = 327
0													_SP	dep	7
1	i	i		pro	1st	sg							PRP	nsubj	7
2	did	do		vbmain	vblex	past	simple	active					VBD	dep	7
3	,	,											,	punct	7
4	personally	personally	rb+advl	rb	advl	ly							RB	advmod	7
5	,	,											,	punct	7
6	i	i		pro	1st	sg							PRP	nsubj	7
7	though	though		vbmain	vblex	past	simple	active					VBD	ROOT	7
8	it	it		pro	3rd	sg							PRP	nsubj	12
9	m-	m-											XX	dep	12
10	l-	l-											XX	dep	12
11	eas-	eas-											XX	nmod	12
12	eas-	eas-											XX	dep	15
13	a	a		dt	art								DT	det	14
14	little	little											JJ	npadvmod	15
15	easier	easy											JJR	ccomp	7
16	to	to		to									TO	aux	17
17	grasp	grasp	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	15
18	the	the		dt	art								DT	det	19
19	concepts	concept		nn	pl								NNS	dobj	17
20	,	,											,	punct	15
21													_SP	dep	15
22	mhm	mhm											UH	intj	15
23													_SP	dep	15
24	and	and		cc	phrs								CC	cc	15
25	easy-	easy-											RB	punct	27
26	more	more	rb+jjrbmod	rb	othr								RBR	advmod	27
27	enjoyable	enjoyable											JJ	conj	15
28	to	to		to									TO	aux	29
29	read	read	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	27
30	.	.											.	punct	7

#sentid = 328
0	cu-	cu-											XX	dep	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	was	be		vbmain	be	past	simple	active					VBD	ROOT	2
3	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	4
4	of	of		rb	othr								RB	advmod	5
5	like	like	in+advl	in	advl								IN	prep	2
6	ridin-	ridin-											XX	pcomp	5
7	reading	read		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	dep	5
8	science	science	nn+npremod	nn		nom	npremod						NN	compound	9
9	fiction	fiction		nn		nom							NN	dobj	7
10													_SP	dep	2
11	yeah	yeah											UH	intj	2
12													_SP	dep	2
13	slightly	slightly	rb+advl	rb	advl	ly							RB	advmod	2
14	,	,											,	punct	2
15	so	so		cc	cls								CC	cc	2
16	i-	i-											PRP	punct	2
17	for	for	in+advl	in	advl								IN	prep	21
18	me	i		pro	1st	sg							PRP	pobj	17
19	anyways	anyways	rb+advl	rb	advl								RB	advmod	21
20	it	it		pro	3rd	sg							PRP	nsubj	21
21	made	make		vbmain	vblex	past	simple	active					VBD	conj	2
22	it	it		pro	3rd	sg							PRP	nsubj	23
23	easier	easy											JJR	ccomp	21
24	to	to		to									TO	aux	25
25	grasp	grasp	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	23
26	,	,											,	punct	21
27	exactly	exactly		rb	othr	ly							RB	advmod	28
28	what	what											WP	nsubj	30
29	was	be		vbaux									VBD	aux	30
30	going	go	whcls+vcomp	vbmain	prepv	past	prog	active	compcls	whcls	vcomp		VBG	ccomp	21
31	on	on		rb	prtcle								RP	prt	30
32	cuz	cuz		cs	cs_othr								IN	mark	36
33	,	,											,	punct	36
34	there	there											EX	expl	36
35	's	be		vbaux									VBZ	auxpass	36
36	been	be	finitecls+advl	vbmain	be	pres	simple	pasv_agls	advlcls		other_advl		VBN	advcl	21
37	some	some		dt									DT	det	39
38	other	other	attr+npremod	jj	attr								JJ	amod	39
39	ones	one		nn	pl								NNS	attr	36
40	where	where		rb	advl								WRB	advmod	42
41	it	it		pro	3rd	sg							PRP	nsubj	42
42	was	be	finitecls+rel	vbmain	be	past	simple	active	nmod_cls	whcls	rel		VBD	relcl	39
43	just	just	rb+advl	rb	advl								RB	advmod	42
44	like	like											UH	intj	42
45	,	,											,	punct	42
46	i	i		pro	1st	sg							PRP	nsubj	47
47	read	read	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	42
48	the	the		dt	art								DT	det	50
49	whole	whole	attr+npremod	jj	attr								JJ	amod	50
50	thing	thing		nn		nom							NN	dobj	47
51	and	and		cc	cls								CC	cc	47
52	i	i		pro	1st	sg							PRP	nsubj	53
53	was	be		vbmain	be	past	simple	active					VBD	conj	47
54	like	like											UH	intj	53
55	,	,											,	punct	53
56													_SP	dep	53
57	what	what											WP	pobj	61
58	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	53
59	the	the		dt	art								DT	det	60
60	point	point		nn									NN	nsubj	58
61	of	of	of+npostmod	in	nmod								IN	prep	60
62	?	?											.	punct	21

#sentid = 329
0	what	what											WP	dobj	3
1	did	do		vbaux									VBD	aux	3
2	i	i		pro	1st	sg							PRP	nsubj	3
3	miss	miss		vbmain	vblex	past	simple	active					VB	ROOT	3
4	?	?											.	punct	3

#sentid = 330
0	but	but		cc	cls								CC	cc	8
1	,	,											,	punct	8
2	i	i		pro	1st	sg							PRP	nsubj	5
3	do	do		vbaux									VBP	aux	5
4	n't	not											RB	neg	5
5	know	know		vbmain	vblex	pres	simple	active					VB	parataxis	8
6	,	,											,	punct	8
7	i	i		pro	1st	sg							PRP	nsubj	8
8	liked	like		vbmain	vblex	past	simple	active					VBD	ROOT	8
9	this	this		dt	dt_dem								DT	det	10
10	one	one		nn	other	pl							NN	dobj	8
11	.	.											.	punct	8

#sentid = 331
0	but	but		cc									CC	cc	3
1	okay	okay											UH	intj	3
2	,	,											,	punct	1
3													_SP	dep	3
4	um	um											UH	intj	7
5	,	,											,	punct	7
6	(	(											-LRB-	punct	7
7	let	let		vbmain	vblex	nonfinite	simple	active					VB	meta	3
8	's	us											PRP	nsubj	9
9	see	see		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	7
10	)	)											-RRB-	punct	7
11													_SP	dep	7

#sentid = 332
0	okay	okay											UH	intj	6
1	,	,											,	punct	6
2	so	so		rb	link								RB	advmod	6
3													_SP	dep	6
4	do	do		vbaux									VBP	aux	6
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	agree	agree		vbmain	prepv	pres	simple	active					VB	ROOT	6
7	with	with	in+advl	in	advl								IN	prep	6
8	the	the		dt	art								DT	det	10
9	first	first	attr+npremod	jj	attr								JJ	amod	10
10	one	one		nn	other	pl							NN	pobj	7
11	?	?											.	punct	6

#sentid = 333
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2	.	.											.	punct	1

#sentid = 334
0	i	i		pro	1st	sg							PRP	nsubj	1
1	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	so	so	rb+advl	rb	advl								RB	advmod	1
3	,	,											,	punct	1
4	but	but		cc	phrs								CC	cc	1
5	...	...											:	punct	1

#sentid = 335
0													_SP	dep	2
1	he	he		pro	3rd	sg							PRP	nsubj	2
2	needs	need		vbmain	vblex	pres	simple	active					VBZ	ROOT	2
3	a	a		dt	art								DT	det	4
4	body	body		nn									NN	dobj	2
5													_SP	dep	2

#sentid = 336
0	this	this											DT	intj	6
1	this	this		pro	dem	sg							DT	nsubj	6
2	no	no											UH	intj	1
3	,	,											,	punct	1
4	number	number	appos+npostmod	nn		nom	nappos						NN	appos	1
5	one	one											CD	nummod	4
6	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	42
7	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	8
8	of	of		rb	othr								RB	advmod	9
9	like	like	in+advl	in	advl								IN	prep	6
10	the	the		dt	art								DT	det	15
11	whole	whole	attr+npremod	jj	attr								JJ	amod	15
12	Julia	julia		nn		proper	npremod						NNP	nmod	13
13	North	north	nn+npremod	nn		proper	npremod						NNP	nmod	15
14	,	,											,	punct	15
15	type	type		nn									NN	pobj	9
16	,	,											,	punct	15
17	switching	switch	ingcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	15
18	the	the		dt	art								DT	det	19
19	brains	brain		nn	pl								NNS	dobj	17
20	and	and		cc	cls								CC	cc	6
21	,	,											,	punct	6
22	okay	okay											UH	intj	27
23	,	,											,	punct	27
24	i	i		pro	1st	sg							PRP	nsubj	27
25	do	do		vbaux									VBP	aux	27
26	n't	not											RB	neg	27
27	think	think		vbmain	vblex	pres	simple	active					VB	conj	6
28	you	you		pro	2nd	sg							PRP	nsubj	29
29	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	27
30	the	the		dt	art								DT	det	31
31	body	body		nn									NN	attr	29
32	i	i		pro	1st	sg							PRP	nsubj	33
33	think	think	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	27
34	you	you		pro	2nd	sg							PRP	nsubj	35
35	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	33
36	the	the		dt	art								DT	det	37
37	_	_											XX	attr	35
38	i	i		pro	1st	sg							PRP	nsubj	39
39	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	42
40	my	my		dt	poss								PRP$	poss	41
41	opinion	opinion		nn									NN	nsubj	42
42	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	42
43	you	you		pro	2nd	sg							PRP	nsubj	44
44	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	42
45	the	the		dt	art								DT	det	47
46	,	,											,	punct	47
47	brain	brain		nn									NN	attr	44
48	but	but		cc	cls								CC	cc	42
49	that	that		pro	dem	sg							DT	nsubj	50
50	goes	go		vbmain	vblex	pres	simple	active					VBZ	conj	42
51	against	against	in+advl	in	advl								IN	prep	50
52	,	,											,	punct	51
53	his	his		dt	poss	sg							PRP$	poss	55
54	his	his		dt	poss	sg							PRP$	poss	55
55	theory	theory		nn		nom							NN	pobj	51
56	in	in	rb+jjrbmod	rb	othr								RB	advmod	57
57	there	there		rb	othr								RB	advmod	55
58	.	.											.	punct	50

#sentid = 337
0													_SP	dep	4
1	which	which		dt									WDT	det	2
2	one	one		nn	other	pl							NN	dobj	4
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	say	say		vbmain	vblex	pres	simple	active					VBP	ROOT	4
5	?	?											.	punct	4

#sentid = 338
0													_SP	dep	0
1	well	well											UH	intj	0
2	with	with		in	in_othr								IN	prep	0
3	the	the		dt	art								DT	det	5
4	first	first	attr+npremod	jj	attr								JJ	amod	5
5	one	one		nn	other	pl							NN	pobj	2
6													_SP	dep	5
7	the	the		dt	art								DT	det	9
8	first	first	attr+npremod	jj	attr								JJ	amod	9
9	one	one	appos+npostmod	nn			nappos						NN	appos	5
10	?	?											.	punct	5

#sentid = 339
0	oh	oh											UH	ROOT	0
1													_SP	dep	0
2	where	where		rb	advl								WRB	advmod	4
3	he	he		pro	3rd	sg							PRP	nsubj	4
4	says	say		vbmain	vblex	pres	simple	active					VBZ	dep	0
5	it	it		pro	3rd	sg							PRP	nsubj	6
6	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	11
7	like	like	in+advl	in	advl								IN	prep	6
8	the	the		dt	art								DT	det	9
9	body	body		nn									NN	pobj	7
10	,	,											,	punct	11
11	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	4
12	you	you		pro	2nd	sg							PRP	attr	11
13	,	,											,	punct	11
14	i	i		pro	1st	sg							PRP	nsubj	15
15	beli-	beli-											XX	dep	11
16	like	like											UH	intj	0
17	,	,											,	punct	20
18	if	if		cs	cnd								IN	mark	20
19	you	you		pro	2nd	sg							PRP	nsubj	20
20	had	have		vbmain	in_othr	past	simple	active			conditional		VBD	prep	16
21	to	to		to									TO	aux	22
22	say	say		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	20
23	i-	i-											PRP	dobj	22
24	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	22
25	the	the		dt	art								DT	det	26
26	body	body		nn									NN	nsubj	24
27	me	i		pro	1st	sg							PRP	attr	24
28	,	,											,	punct	24
29	or	or		cc	cls								CC	cc	24
30	is	be		vbmain	be	pres	simple	active					VBZ	conj	24
31	the	the		dt	art								DT	det	32
32	brain	brain		nn									NN	nsubj	30
33	me	i		pro	1st	sg							PRP	attr	30
34	?	?											.	punct	20

#sentid = 340
0	i	i		pro	1st	sg							PRP	nsubj	2
1	'd	would		vbaux	mod								MD	aux	2
2	say	say		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	2
3	the	the		dt	art								DT	det	4
4	brain	brain		nn									NN	nsubj	5
5	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	2
6	.	.											.	punct	2

#sentid = 341
0													_SP	dep	11
1	yeah	yeah											UH	intj	11
2													_SP	dep	11
3	so	so		rb	link								RB	advmod	11
4	i	i		pro	1st	sg							PRP	nsubj	11
5	do	do		vbaux									VBP	aux	11
6	n't	not											RB	neg	11
7	,	,											,	punct	11
8	i	i		pro	1st	sg							PRP	nsubj	11
9	do	do		vbaux									VBP	aux	11
10	n't	not											RB	neg	11
11	like	like		vbmain	vblex	pres	simple	active					VB	ROOT	11
12	the	the		dt	art								DT	det	14
13	first	first	attr+npremod	jj	attr								JJ	amod	14
14	one	one		nn	other	pl							NN	dobj	11
15	but	but		cc	cls								CC	cc	11
16	,	,											,	punct	11
17													_SP	dep	21
18	i	i		pro	1st	sg							PRP	nsubj	21
19	do	do		vbaux									VBP	aux	21
20	n't	not											RB	neg	21
21	know	know		vbmain	vblex	pres	simple	active					VB	conj	11
22	.	.											.	punct	21

#sentid = 342
0													_SP	dep	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	i	i		pro	1st	sg							PRP	nsubj	4
4	think	think	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	2
5	i	i		pro	1st	sg							PRP	nsubj	8
6	i	i		pro	1st	sg							PRP	nsubj	8
7	'd	would		vbaux	mod								MD	aux	8
8	go	go	thatcls+vcomp	vbmain	prepv	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	4
9	for	for	in+advl	in	advl								IN	prep	8
10	the	the		dt	art								DT	det	12
11	fifth	fifth	attr+npremod	jj	attr								JJ	amod	12
12	one	one		nn	other	pl							NN	pobj	9
13	.	.											.	punct	2

#sentid = 343
0	i	i		pro	1st	sg							PRP	nsubj	1
1	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	2
2	tha-	tha-											DT	dep	5
3	i	i		pro	1st	sg							PRP	nsubj	5
4	(	(											-LRB-	punct	5
5	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	5
6	)	)											-RRB-	punct	5
7	um	um											UH	intj	5
8	,	,											,	punct	5
9	for	for	in+advl	in	advl								IN	prep	5
10	the	the		dt	art								DT	det	11
11	point	point		nn									NN	pobj	9
12	of	of	of+npostmod	in	nmod								IN	prep	11
13	view	view		nn									NN	pobj	12
14	one	one		nn	other	pl							NN	pobj	9
15	that	that		relpro	relpro_that								IN	mark	27
16	,	,											,	punct	27
17	it	it		pro	3rd	sg							PRP	nsubj	19
18	just	just	rb+advl	rb	advl								RB	advmod	19
19	depends	depend		vbmain	prepv	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	27
20	on	on	in+advl	in	advl								IN	prep	19
21	how	how		comp	comp_wh								WRB	advmod	23
22	you	you		pro	2nd	sg							PRP	nsubj	23
23	see	see	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VBP	pcomp	20
24	it	it		pro	3rd	sg							PRP	dobj	23
25	,	,											,	punct	27
26	there	there											EX	expl	27
27	's	be	thatcls+ncomp	vbmain	be	pres	simple	active	nmod_cls	thatcls	ncomp		VBZ	acl	14
28	no	no		dt									DT	det	30
29	one	one											CD	nummod	30
30	way	way		nn									NN	attr	27
31	of	of	of+npostmod	in	nmod								IN	prep	30
32	saying	say	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	31
33	that	that		comp	comp_that								DT	mark	36
34	,	,											,	punct	36
35	this	this		pro	dem	sg							DT	nsubj	36
36	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	32
37	me	i		pro	1st	sg							PRP	attr	36
38	and	and		cc	cls								CC	cc	36
39	either	either											CC	preconj	42
40	the	the		dt	art								DT	det	41
41	body	body		nn									NN	nsubj	42
42	is	be		vbmain	be	pres	simple	active					VBZ	conj	36
43	me	i		pro	1st	sg							PRP	attr	42
44	or	or		cc	cls								CC	cc	42
45	the	the		dt	art								DT	det	46
46	soul	soul		nn									NN	nsubj	47
47	is	be		vbmain	be	pres	simple	active					VBZ	conj	42
48	me	i		pro	1st	sg							PRP	attr	47
49	.	.											.	punct	5

#sentid = 344
0	it	it		pro	3rd	sg							PRP	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	probably	probably	rb+advl	rb	advl	ly							RB	advmod	1
3	like	like											UH	intj	1
4	,	,											,	punct	1
5	how	how		rb	othr								WRB	advmod	6
6	you	you		pro	2nd	sg							PRP	nsubj	15
7	(	(											-LRB-	punct	6
8	how	how		rb	advl								WRB	advmod	11
9	you	you		pro	2nd	sg							PRP	nsubj	11
10	really	really	rb+advl	rb	advl	ly							RB	advmod	11
11	see	see		vbmain	vblex	pres	simple	active					VBP	appos	6
12	it	it		pro	3rd	sg							PRP	dobj	11
13	)	)											-RRB-	punct	6
14													_SP	dep	6
15	wait	wait		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	1
16	i	i		pro	1st	sg							PRP	nsubj	19
17	do	do		vbaux									VBP	aux	19
18	n't	not											RB	neg	19
19	understand	understand	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	15
20	the	the		dt	art								DT	det	24
21	center	center	nn+npremod	nn		nom	npremod						NN	nmod	24
22	of	of	of+npostmod	in	nmod								IN	prep	21
23	gravity	gravity		nn		nom							NN	pobj	22
24	thing	thing		nn		nom							NN	dobj	19
25	,	,											,	punct	19
26													_SP	dep	15
27	mhm	mhm											UH	intj	15
28													_SP	dep	1
29	like	like											UH	intj	34
30	what	what											WP	dep	34
31	,	,											,	punct	34
32	what	what											WP	dep	34
33	exactly	exactly		rb	othr	ly							RB	advmod	32
34	does	do		vbaux									VBZ	aux	36
35	that	that		pro	dem	sg							DT	nsubj	34
36	_	_											NFP	punct	1
37	like	like											UH	intj	1
38	how	how		comp	comp_wh								WRB	advmod	41
39	,	,											,	punct	41
40	how	how		comp	comp_wh								WRB	advmod	41
41	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	1
42	it	it		pro	3rd	sg							PRP	nsubj	41
43	the	the		dt	art								DT	det	49
44	corrected	correct	attr+npremod	jj	attr	ed							VBN	amod	49
45	,	,											,	punct	49
46	point	point	nn+npremod	nn			npremod						NN	nmod	49
47	of	of	of+npostmod	in	nmod								IN	prep	46
48	view	view		nn									NN	pobj	47
49	one	one		nn	other	pl							NN	dobj	41
50	?	?											.	punct	1

#sentid = 345
0	like	like											UH	intj	4
1	i	i		pro	1st	sg							PRP	nsubjpass	4
2	just	just	rb+advl	rb	advl								RB	advmod	4
3	got	got		vbaux									VBD	auxpass	4
4	confused	confuse		vbmain	vblex	past	simple	pasv_agls					VBN	ROOT	4
5	cuz	cuz	in+advl	in	advl								IN	prep	4
6	like	like											UH	pcomp	5
7	this	this											DT	intj	6
8	(	(											-LRB-	punct	7
9	xx	xx											XX	punct	7
10	)	)											-RRB-	punct	7
11													_SP	dep	16
12	yeah	yeah											UH	intj	16
13	,	,											,	punct	16
14	well	well											UH	intj	16
15	it	it		pro	3rd	sg							PRP	nsubj	16
16	's	be		vbmain	be	pres	simple	active					VBZ	meta	4
17	_	_											NFP	punct	16
18	if	if		cs	cnd								IN	mark	20
19	you	you		pro	2nd	sg							PRP	nsubj	20
20	look	look	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	16
21	on	on	in+advl	in	advl								IN	prep	20
22	page	page		nn		nom							NN	pobj	21
23	two	two											CD	nummod	22
24	-	-											HYPH	punct	22
25	twenty	twenty											CD	nummod	22
26	-	-											HYPH	punct	22
27	four	four											CD	nummod	22
28	where	where		rb	advl								WRB	advmod	30
29	he	he		pro	3rd	sg							PRP	nsubj	30
30	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	40
31	where	where		comp	comp_wh								WRB	advmod	34
32	he	he		pro	3rd	sg							PRP	nsubjpass	34
33	's	be		vbaux									VBZ	auxpass	34
34	stored	store	whcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls	whcls	vcomp		VBN	ccomp	30
35	as	as	in+advl	in	advl								IN	prep	34
36	,	,											,	punct	40
37	where	where		rb	advl								WRB	advmod	40
38	he	he		pro	3rd	sg							PRP	nsubj	40
39	's	be		vbaux									VBZ	aux	40
40	introducing	introduce	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls	whcls			VBG	advcl	16
41	the	the		dt	art								DT	det	45
42	uh	uh											UH	intj	45
43	,	,											,	punct	45
44	the	the		dt	art								DT	det	45
45	idea	idea		nn									NN	dobj	40
46	that	that		cs	cs_othr								IN	mark	48
47	he	he		pro	3rd	sg							PRP	nsubj	48
48	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBZ	advcl	52
49	,	,											,	punct	52
50	that	that		relpro	relpro_that								IN	mark	52
51	he	he		pro	3rd	sg							PRP	nsubj	52
52	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	45
53	t-	t-											XX	dep	52
54	somehow	somehow	rb+advl	rb	advl								RB	advmod	52
55	this	this		dt	dt_dem								DT	det	57
56	,	,											,	punct	57
57	version	version		nn									NN	attr	52
58	of	of	of+npostmod	in	nmod								IN	prep	57
59	the	the		dt	art								DT	det	61
60	immaterial	immaterial	attr+npremod	jj	attr								JJ	amod	61
61	soul	soul		nn									NN	pobj	58
62	.	.											.	punct	4

#sentid = 346
0	it	it		pro	3rd	sg							PRP	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	,	,											,	punct	1
3	i	i		pro	1st	sg							PRP	nsubj	4
4	think	think	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	1
5	it	it		pro	3rd	sg							PRP	nsubj	6
6	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	4
7	actually	actually	rb+advl	rb	advl	ly							RB	advmod	6
8	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	9
9	of	of	rb+advl	rb	advl								RB	advmod	10
10	confusing	confuse		jj	pred	ing							VBG	acomp	6
11	what	what		comp	comp_wh								WP	dobj	13
12	he	he		pro	3rd	sg							PRP	nsubj	13
13	's	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	10
14	what	what											WP	pobj	18
15	he	he		pro	3rd	sg							PRP	nsubj	17
16	's	be		vbaux									VBZ	aux	17
17	getting	get	thatcls+vcomp	vbmain	prepv	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	13
18	at	at	in+advl	in	advl								IN	prep	17
19	but	but		cc	cls								CC	cc	1
20	,	,											,	punct	1
21	in	in	in+advl	in	advl								IN	prep	26
22	the	the		dt	art								DT	det	23
23	scenario	scenario		nn									NN	pobj	21
24	he	he		pro	3rd	sg							PRP	nsubj	26
25	's	be		vbaux									VBZ	aux	26
26	thinking	think		vbmain	vblex	pres	prog	active					VBG	conj	1
27	,	,											,	punct	26
28	okay	okay											UH	intj	35
29	your	your		dt	poss								PRP$	poss	30
30	connection	connection		nn		nom							NN	nsubjpass	35
31	with	with	in+npostmod	in	nmod								IN	prep	30
32	your	your		dt	poss								PRP$	poss	33
33	body	body		nn									NN	pobj	31
34	is	be		vbaux									VBZ	auxpass	35
35	severed	sever	thatcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	26
36	,	,											,	punct	35
37	and	and		cc	cls								CC	cc	35
38	um	um											UH	intj	42
39	,	,											,	punct	42
40	you	you		pro	2nd	sg							PRP	nsubj	42
41	've	've		vbaux									VBP	aux	42
42	got	get		vbmain	vblex	pres	simple	active					VBN	conj	35
43	this	this		dt	dt_dem								DT	det	44
44	moment	moment		nn		nom							NN	dobj	42
45	of	of	of+npostmod	in	nmod								IN	prep	44
46	s-	s-											XX	pcomp	45
47	thinking	think	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	45
48	oh	oh											UH	intj	52
49	well	well											UH	intj	48
50	,	,											,	punct	52
51	i	i		pro	1st	sg							PRP	nsubj	52
52	'm	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	47
53	in	in	in+advl	in	advl								IN	prep	52
54	_	_											NFP	punct	26

#sentid = 347
0	he	he		pro	3rd	sg							PRP	nsubjpass	2
1	's	be		vbaux									VBZ	auxpass	2
2	got	get		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	2
3	this	this		dt	dt_dem								DT	det	4
4	moment	moment		nn		nom							NN	dobj	2
5	of	of	of+npostmod	in	nmod								IN	prep	4
6	thinking	think	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	5
7	well	well											UH	intj	10
8	basically	basically	rb+advl	rb	advl	ly							RB	advmod	10
9	i	i		pro	1st	sg							PRP	nsubj	10
10	'm	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	6
11	underground	underground	rb+advl	rb	advl								RB	advmod	10
12	in	in		in	in_othr								IN	prep	11
13	this	this		dt	dt_dem								DT	det	14
14	tunnel	tunnel		nn									NN	pobj	12
15	,	,											,	punct	10
16	and	and		cc	cls								CC	cc	10
17	i	i		pro	1st	sg							PRP	nsubj	19
18	must	must		vbaux	mod	nec							MD	aux	19
19	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	10
20	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	21
21	of	of	rb+jjrbmod	rb	adjmod								RB	advmod	22
22	dead	dead		jj	pred								JJ	acomp	19
23	,	,											,	punct	10
24	but	but		cc	cls								CC	cc	10
25	,	,											,	punct	10
26	but	but		cc	phrs								CC	cc	35
27	that	that		pro	dem	sg							DT	nsubj	30
28	ca	can		vbaux	mod								MD	aux	30
29	n't	not											RB	neg	30
30	be	be		vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	35
31	right	right		jj	pred								JJ	acomp	30
32	i	i		pro	1st	sg							PRP	nsubj	35
33	'm	be		vbaux									VBP	aux	35
34	still	still	rb+advl	rb	advl		splaux						RB	advmod	35
35	thinking	think		vbmain	vblex	pres	prog	active					VBG	conj	10
36	,	,											,	punct	35
37	i	i		pro	1st	sg							PRP	nsubj	38
38	'm	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	41
39	still	still	rb+advl	rb	advl								RB	advmod	38
40	i	i		pro	1st	sg							PRP	nsubj	41
41	'm	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	35
42	still	still	rb+advl	rb	advl								RB	advmod	41
43	somewhere	somewhere	rb+advl	rb	advl								RB	advmod	41
44	,	,											,	punct	2
45	and	and		cc	cls								CC	cc	2
46	he	he		pro	3rd	sg							PRP	nsubj	47
47	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	49
48	he	he		pro	3rd	sg							PRP	nsubj	49
49	thinks	think		vbmain	vblex	pres	simple	active					VBZ	conj	2
50	well	well											UH	intj	55
51	,	,											,	punct	55
52	oh	oh											UH	intj	55
53	i	i		pro	1st	sg							PRP	nsubj	55
54	've	've		vbaux									VBP	aux	55
55	got	get		vbmain	vblex	pres	simple	active					VBD	meta	49
56	_	_											XX	dobj	55
57	it	it		pro	3rd	sg							PRP	nsubj	59
58	must	must		vbaux	mod	nec							MD	aux	59
59	be	be		vbmain	be	vp_w_modal	simple	active					VB	parataxis	55
60	,	,											,	punct	55
61	that	that											IN	mark	63
62	i	i		pro	1st	sg							PRP	nsubj	63
63	'm	be		vbmain	be	pres	simple	active					VBP	conj	55
64	back	back	rb+advl	rb	advl								RB	advmod	63
65	in	in		in	in_othr								IN	prep	64
66	Houston	houston		nn		proper							NNP	pobj	65
67	and	and		cc	cls								CC	cc	63
68	that	that											IN	mark	89
69	,	,											,	punct	71
70	i	i		pro	1st	sg							PRP	nsubj	71
71	'm	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	89
72	just	just		rb	othr								RB	advmod	74
73	the	the		dt	art								DT	det	74
74	brain	brain		nn									NN	attr	71
75	in	in	in+npostmod	in	nmod								IN	prep	74
76	that	that		dt	dt_dem								DT	det	79
77	um	um											UH	intj	79
78	,	,											,	punct	79
79	tank	tank		nn									NN	pobj	75
80	,	,											,	punct	79
81	that	that		pro	dem	sg							WDT	dobj	83
82	i	i		pro	1st	sg							PRP	nsubj	83
83	saw	see	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel		VBD	relcl	79
84	covered	cover		vbmain	vblex	nonfinite	simple	active	compcls	edcls	vcomp	compdel	VBN	xcomp	83
85	with	with	in+advl	in	advl								IN	prep	84
86	electrodes	electrode		nn	pl								NNS	pobj	85
87	,	,											,	punct	89
88	that	that		pro	dem	sg							DT	nsubj	89
89	's	be		vbmain	be	pres	simple	active					VBZ	conj	63
90	where	where		comp	comp_wh								WRB	advmod	92
91	i	i		pro	1st	sg							PRP	nsubj	92
92	am	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	89
93	.	.											.	punct	49

#sentid = 348
0	and	and		cc	cls								CC	cc	27
1	in	in	in+advl	in	advl								IN	prep	27
2	that	that		dt	dt_dem								DT	det	3
3	moment	moment		nn		nom							NN	pobj	1
4	of	of	of+npostmod	in	nmod								IN	prep	3
5	saying	say	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	4
6	oh	oh											UH	intj	8
7	i	i		pro	1st	sg							PRP	nsubj	8
8	know	know		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	11
9	,	,											,	punct	11
10	i	i		pro	1st	sg							PRP	nsubj	11
11	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	5
12	wrong	wrong		jj	pred								JJ	acomp	11
13	to	to		to									TO	aux	14
14	think	think	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	12
15	that	that		comp	comp_that								IN	mark	17
16	i	i		pro	1st	sg							PRP	nsubj	17
17	'm	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	14
18	underground	underground	rb+jjrbmod	rb	adjmod								RB	advmod	20
19	,	,											,	punct	20
20	unconscious	unconscious		jj	pred								JJ	acomp	17
21	in	in	in+jcomp	in	jcomp								IN	prep	20
22	um	um											UH	intj	21
23	,	,											,	punct	21
24	in	in		in	in_othr								IN	prep	21
25	Phoenix	phoenix		nn		proper							NNP	pobj	24
26	i	i		pro	1st	sg							PRP	nsubj	27
27	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	27
28	it	it		pro	3rd	sg							PRP	nsubj	29
29	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	27
30	.	.											.	punct	27

#sentid = 349
0	um	um											UH	intj	7
1	,	,											,	punct	7
2	he	he		pro	3rd	sg							PRP	nsubj	7
3	's	be		vbmain	be	pres	simple	active					VBZ	dep	7
4	,	,											,	punct	7
5	he	he		pro	3rd	sg							PRP	nsubj	7
6	's	be		vbaux									VBZ	aux	7
7	saying	say		vbmain	vblex	pres	prog	active					VBG	ROOT	7
8	look	look		vbmain	vblex	nonfinite	simple	active					VB	intj	16
9	i	i		pro	1st	sg							PRP	nsubjpass	16
10	ca	can		vbaux	mod								MD	aux	16
11	n't	not											RB	neg	16
12	be	be		vbaux									VB	auxpass	16
13	(	(											-LRB-	punct	16
14	un-	un-											RB	dep	16
15	)	)											HYPH	punct	16
16	identified	identify	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	7
17	with	with	in+advl	in	advl								IN	prep	16
18	my	my		dt	poss								PRP$	poss	19
19	point	point		nn									NN	pobj	17
20	of	of	of+npostmod	in	nmod								IN	prep	19
21	view	view		nn									NN	pobj	20
22	it	it		pro	3rd	sg							PRP	nsubj	23
23	seems	seem	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	7
24	to	to		to									TO	aux	27
25	,	,											,	punct	27
26	it	it		pro	3rd	sg							PRP	nsubj	27
27	seemed	seem	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	xcomp	23
28	to	to	in+advl	in	advl								IN	prep	27
29	me	i		pro	1st	sg							PRP	pobj	28
30	,	,											,	punct	27
31	that	that		comp	comp_that								IN	mark	33
32	i	i		pro	1st	sg							PRP	nsubj	33
33	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls	thatcls	vcomp		VBD	ccomp	27
34	,	,											,	punct	33
35	underground	underground	rb+jjrbmod	rb	othr								RB	advmod	39
36	just	just		rb	othr								RB	advmod	38
37	a	a		dt	art								DT	det	38
38	minute	minute		nn									NN	npadvmod	39
39	ago	ago	rb+advl	rb	advl								RB	advmod	33
40	,	,											,	punct	33
41	um	um											UH	intj	33
42	,	,											,	punct	33
43	but	but		cc	phrs								CC	cc	44
44	underground	underground	rb+advl	rb	advl								RB	advmod	33
45	and	and		cc	phrs								CC	cc	44
46	not	not											RB	neg	50
47	and	and		cc									CC	cc	50
48	not	not											RB	neg	50
49	,	,											,	punct	50
50	in	in											IN	conj	44
51	contact	contact		nn									NN	pobj	50
52	with	with	in+npostmod	in	nmod								IN	prep	51
53	anything	anything		nn	other	nom							NN	pobj	52
54	,	,											,	punct	50
55	not	not											RB	neg	56
56	sensing	sense		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	50
57	anything	anything		nn	other	nom							NN	dobj	56
58	,	,											,	punct	23
59	but	but		cc	cls								CC	cc	23
60	i	i		pro	1st	sg							PRP	nsubj	61
61	was	be		vbmain	be	past	simple	active					VBD	conj	23
62	wrong	wrong		jj	pred								JJ	acomp	61
63	.	.											.	punct	7

#sentid = 350
0	actually	actually	rb+advl	rb	advl	ly							RB	advmod	23
1	at	at	in+advl	in	advl								IN	prep	23
2	that	that		dt	dt_dem								DT	det	3
3	moment	moment		nn		nom							NN	pobj	1
4	when	when		rb	advl								WRB	advmod	6
5	it	it		pro	3rd	sg							PRP	nsubj	6
6	seemed	seem	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls	whcls	rel		VBD	relcl	3
7	to	to	in+advl	in	advl								IN	prep	6
8	me	i		pro	1st	sg							PRP	pobj	7
9	i	i		pro	1st	sg							PRP	nsubj	10
10	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	6
11	,	,											,	punct	10
12	unconscious	unconscious		jj	pred								JJ	acomp	10
13	and	and		cc	cls								CC	cc	10
14	i	i		pro	1st	sg							PRP	nsubj	16
15	must	must		vbaux	mod	nec							MD	aux	16
16	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	10
17	in	in	in+advl	in	advl								IN	prep	16
18	Hou-	hou-		nn		proper							NNP	pobj	17
19	in	in		in	in_othr								IN	prep	17
20	Phoenix	phoenix		nn		proper							NNP	pobj	19
21	,	,											,	punct	23
22	i	i		pro	1st	sg							PRP	nsubj	23
23	was	be		vbmain	be	past	simple	active					VBD	ROOT	23
24	in	in	in+advl	in	advl								IN	prep	23
25	fact	fact		nn									NN	pobj	24
26	back	back	rb+advl	rb	advl								RB	advmod	23
27	in	in		in	in_othr								IN	prep	26
28	Houston	houston		nn		proper							NNP	pobj	27
29	.	.											.	punct	23

#sentid = 351
0	and	and		cc	cls								CC	cc	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	seems	seem		vbmain	vblex	pres	simple	active					VBZ	ROOT	2
3	to	to		to									TO	aux	4
4	be	be		vbmain	be	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	2
5	that	that		comp	comp_that								IN	mark	10
6	,	,											,	punct	10
7	somehow	somehow	rb+advl	rb	advl								RB	advmod	10
8	he	he		pro	3rd	sg							PRP	nsubj	10
9	's	be		vbaux									VBZ	aux	10
10	thinking	think	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls	thatcls	vcomp		VBG	ccomp	4
11	that	that		comp	comp_that								IN	mark	14
12	,	,											,	punct	14
13	there	there											EX	expl	14
14	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	10
15	a	a		dt	art								DT	det	16
16	correct	correct											JJ	meta	25
17	_	_											NFP	punct	16
18	he	he		pro	3rd	sg							PRP	nsubj	25
19	he	he		pro	3rd	sg							PRP	nsubj	25
20	should	should		vbaux	mod	nec							MD	aux	25
21	,	,											,	punct	25
22	have	have		vbaux									VB	aux	25
23	been	be		vbaux									VBN	aux	25
24	,	,											,	punct	25
25	identifying	identify	thatcls+vcomp	vbmain	vblex	vp_w_modal	perfprog	active	compcls		vcomp	compdel	VBG	ccomp	10
26	with	with	in+advl	in	advl								IN	prep	25
27	his	his		dt	poss	sg							PRP$	poss	28
28	brain	brain		nn									NN	pobj	26
29	.	.											.	punct	2

#sentid = 352
0	um	um											UH	intj	17
1	,	,											,	punct	17
2	even	even	rb+advl	rb	advl								RB	advmod	15
3	,	,											,	punct	15
4	so	so		rb	link								RB	advmod	7
5	he	he		pro	3rd	sg							PRP	nsubj	7
6	was	be		vbaux									VBD	aux	7
7	making	make		vbmain	vblex	past	prog	active	compcls		vcomp	compdel	VBG	ccomp	15
8	a	a		dt	art								DT	det	9
9	mistake	mistake		nn									NN	dobj	7
10	,	,											,	punct	15
11	his	his		dt	poss	sg							PRP$	poss	12
12	point	point		nn									NN	nsubj	15
13	of	of	of+npostmod	in	nmod								IN	prep	12
14	view	view		nn									NN	pobj	13
15	was	be		vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	csubj	17
16	n't	not											RB	neg	15
17	was	be		vbmain	be	past	simple	active					VBD	ROOT	17
18	n't	not											RB	neg	17
19	correct	correct		jj	pred								JJ	acomp	17
20	.	.											.	punct	17

#sentid = 353
0	but	but		cc	cls								CC	cc	21
1	,	,											,	punct	21
2	why	why		rb	advl								WRB	advmod	10
3	was	be		vbaux									VBD	aux	5
4	he	he		pro	3rd	sg							PRP	nsubj	5
5	making	make		vbmain	vblex	past	prog	active	compcls		vcomp	compdel	VBG	csubj	21
6	the	the		dt	art								DT	det	7
7	mistake	mistake		nn									NN	dobj	5
8	and	and		cc	cls								CC	cc	5
9	why	why		rb	advl								WRB	advmod	10
10	was	be		vbmain	be	past	simple	active					VBD	conj	5
11	he	he		pro	3rd	sg							PRP	nsubj	10
12	,	,											,	punct	10
13	why	why		rb	advl								WRB	advmod	16
14	should	should		vbaux	mod	nec							MD	aux	16
15	he	he		pro	3rd	sg							PRP	nsubj	16
16	identify	identify		vbmain	vblex	vp_w_modal	simple	active					VB	conj	10
17	with	with	in+advl	in	advl								IN	prep	16
18	his	his		dt	poss	sg							PRP$	poss	19
19	brain	brain		nn									NN	pobj	17
20	,	,											,	punct	10
21	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	21
22	less	less	rb+jjrbmod	rb	adjmod								RBR	advmod	23
23	clear	clear		jj	pred								JJ	acomp	21
24	exactly	exactly		rb	othr	ly							RB	advmod	25
25	what	what											WP	appos	21
26	,	,											,	meta	25
27	what	what											WP	meta	25
28	um	um											UH	intj	31
29	,	,											,	punct	31
30	what	what											WP	dep	31
31	makes	make		vbmain	vblex	pres	simple	active					VBZ	meta	25
32	it	it		pro	3rd	sg							PRP	nsubj	33
33	correct	correct											JJ	ccomp	31
34	to	to		to									TO	aux	35
35	say	say	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	33
36	he	he		pro	3rd	sg							PRP	nsubjpass	41
37	's	be		vbaux									VBZ	auxpass	41
38	(	(											-LRB-	punct	41
39	uh	uh											UH	intj	41
40	)	)											-RRB-	punct	41
41	located	locate	thatcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	35
42	in	in	in+advl	in	advl								IN	prep	41
43	one	one											CD	nummod	44
44	place	place		nn									NN	pobj	42
45	or	or		cc	phrs								CC	cc	44
46	another	another											DT	conj	44
47	.	.											.	punct	21

#sentid = 354
0													_SP	dep	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	i	i		pro	1st	sg							PRP	nsubj	4
4	think	think	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	2
5	that	that		pro	dem	sg							DT	nsubj	7
6	just	just	rb+advl	rb	advl								RB	advmod	7
7	proves	prove	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	4
8	that	that		comp	comp_that								IN	mark	10
9	he	he		pro	3rd	sg							PRP	nsubj	10
10	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	7
11	the	the		dt	art								DT	det	12
12	brain	brain		nn									NN	attr	10
13	cuz	cuz	in+advl	in	advl								IN	prep	7
14	li-	li-											XX	pcomp	13
15	like	like											UH	intj	14
16	when	when		rb	advl								WRB	advmod	18
17	he	he		pro	3rd	sg							PRP	nsubj	18
18	says	say	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	7
19	that	that		pro	dem	sg							IN	dobj	18
20	you	you		pro	2nd	sg							PRP	nsubj	21
21	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	19
22	since	since		cs	cs_othr								IN	mark	24
23	there	there											EX	expl	24
24	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	7
25	something	something		nn		nom							NN	attr	24
26	thinking	think	ingcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	25
27													_SP	dep	24
28	mhm	mhm											UH	intj	24
29													_SP	dep	24
30	and	and		cc	phrs								CC	cc	24
31	since	since											IN	conj	24
32	the	the											DT	pcomp	31
33	,	,											,	punct	31
34	probably	probably		rb	othr	ly							RB	advmod	31
35	i	i		pro	1st	sg							PRP	nsubj	36
36	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	31
37	and	and		cc									CC	cc	31
38	since	since		cs	cs_othr								IN	mark	43
39	the	the		dt	art								DT	det	40
40	body	body		nn									NN	nsubj	43
41	's	be		vbaux									VBZ	aux	43
42	not	not											RB	neg	43
43	thinking	think		vbmain	vblex	pres	prog	active			other_advl		VBG	conj	31
44	and	and		cc									CC	cc	31
45	so	so		rb	link								RB	advmod	47
46	i	i		pro	1st	sg							PRP	nsubj	47
47	have	have		vbmain	vblex	pres	simple	active					VBP	conj	31
48	to	to		to									TO	aux	49
49	be	be		vbmain	be	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	47
50	the	the		dt	art								DT	det	51
51	brain	brain		nn									NN	attr	49
52	,	,											,	punct	31
53	so	so		cc									RB	cc	31
54	i	i		pro	1st	sg							PRP	nsubj	55
55	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	66
56	if	if		cs	cnd								IN	mark	59
57	you	you		pro	2nd	sg							PRP	nsubj	59
58	just	just	rb+advl	rb	advl								RB	advmod	59
59	destroy	destroy	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	66
60	the	the		dt	art								DT	det	61
61	brain	brain		nn									NN	dobj	59
62	,	,											,	punct	66
63	then	then		rb	link								RB	advmod	66
64	nothing	nothing		nn	other	nom							NN	nsubj	66
65	will	will		vbaux	mod	prd							MD	aux	66
66	think	think		vbmain	vblex	vp_w_modal	simple	active					VB	conj	31
67	.	.											.	punct	2

#sentid = 355
0	so	so		rb	link								RB	advmod	1
1	do-	do-		vbaux									VB	aux	6
2	does	do		vbaux									VBZ	aux	6
3	n't	not											RB	neg	6
4	that	that		pro	dem	sg							DT	nsubj	6
5	just	just	rb+advl	rb	advl		splaux						RB	advmod	6
6	mean	mean		vbmain	vblex	pres	simple	active					VB	parataxis	32
7	that	that		comp	comp_that								IN	mark	9
8	he	he		pro	3rd	sg							PRP	nsubj	9
9	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	6
10	the	the		dt	art								DT	det	11
11	brain	brain		nn									NN	attr	9
12	(	(											-LRB-	punct	6
13	then	then	rb+advl	rb	advl								RB	advmod	6
14	)	)											-RRB-	punct	6
15													_SP	dep	32
16	uh	uh											UH	intj	32
17	,	,											,	punct	32
18	does	do		vbmain	vblex	pres	simple	active					VBZ	dep	32
19	,	,											,	punct	32
20	the	the		dt	art								DT	det	22
21	fifth	fifth	attr+npremod	jj	attr								JJ	amod	22
22	point	point		nn									NN	dep	32
23	,	,											,	punct	22
24	i-	i-											PRP	nmod	22
25	that	that											IN	mark	32
26	with	with	in+advl	in	advl								IN	prep	32
27	it	it		pro	3rd	sg							PRP	nsubj	28
28	being	be	ingcls+incomp	vbmain	be	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	26
29	changeable	changeable		jj	pred								JJ	acomp	28
30	that	that		pro	dem	sg							DT	nsubj	32
31	can	can		vbaux	mod	pos							MD	aux	32
32	account	account		vbmain	prepv	vp_w_modal	simple	active					VB	ROOT	32
33	for	for	in+advl	in	advl								IN	prep	32
34	like	like											UH	intj	33
35	okay	okay											UH	intj	33
36	when	when		rb	advl								WRB	advmod	38
37	they	they		pro	pl								PRP	nsubj	38
38	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	33
39	the	the		dt	art								DT	det	40
40	two	two											CD	dobj	38
41	,	,											,	punct	40
42	like	like		in	in_othr								IN	prep	40
43	the	the		dt	art								DT	det	44
44	brain	brain		nn									NN	pobj	42
45	and	and		cc	phrs								CC	cc	44
46	the	the		dt	art								DT	det	47
47	machine	machine		nn									NN	conj	44
48	and	and		cc	phrs								CC	cc	44
49	them	they		pro	pl								PRP	nsubj	50
50	being	be		vbmain	be	nonfinite	simple	active		ingcls			VBG	conj	44
51	able	able		jj	pred								JJ	acomp	50
52	to	to		to									TO	aux	57
53	like	like											UH	intj	57
54													_SP	dep	57
55	mhm	mhm											UH	intj	57
56													_SP	dep	55
57	turn	turn	tocls+jcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	51
58	the	the		dt	art								DT	det	59
59	brain	brain		nn									NN	dobj	57
60	off	off		rb	prtcle								RP	prt	57
61	,	,											,	punct	57
62													_SP	dep	57
63	mhm	mhm											UH	intj	57
64													_SP	dep	57
65	so	so	rb+advl	rb	advl								RB	advmod	57
66	,	,											,	punct	57
67	okay	okay											UH	intj	57
68	.	.											.	punct	32

#sentid = 356
0	i	i		pro	1st	sg							PRP	nsubj	3
1	do	do		vbaux									VBP	aux	3
2	n't	not											RB	neg	3
3	know	know		vbmain	vblex	pres	simple	active					VB	ROOT	3
4	where	where		comp	comp_wh								WRB	advmod	7
5	i	i		pro	1st	sg							PRP	nsubj	7
6	was	be		vbaux									VBD	aux	7
7	going	go	whcls+vcomp	vbmain	vblex	past	prog	active	compcls	whcls	vcomp		VBG	ccomp	3
8	but	but		cc	phrs								CC	cc	3
9	,	,											,	punct	3
10													_SP	dep	3
11	brain	brain	nn+npremod	nn			npremod						NN	compound	12
12	freeze	freeze		nn									NN	dobj	3
13	.	.											.	punct	3

#sentid = 357
0	okay	okay											UH	ROOT	0
1	.	.											.	punct	0

#sentid = 358
0													_SP	dep	3
1	so	so		rb	link								RB	advmod	3
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	wanted	want		vbmain	vblex	past	simple	active					VBD	ROOT	3
4	to	to		to									TO	aux	5
5	say	say		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	3
6	that	that		comp	comp_that								IN	mark	12
7	the	the		dt	art								DT	det	9
8	brain	brain	nn+npremod	nn			npremod						NN	compound	9
9	theory	theory		nn		nom							NN	nsubj	12
10	ca	can		vbaux	mod								MD	aux	12
11	n't	not											RB	neg	12
12	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	5
13	right	right		jj	pred								JJ	acomp	12
14	.	.											.	punct	3

#sentid = 359
0	you	you		pro	2nd	sg							PRP	nsubj	1
1	were	be		vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	11
2	you	you		pro	2nd	sg							PRP	punct	1
3	were	be		vbmain	be	past	simple	active					VBD	dep	1
4	you	you		pro	2nd	sg							PRP	dep	3
5	,	,											,	punct	1
6	were	be		vbaux									VBD	aux	7
7	arguing	argue		vbmain	vblex	past	prog	active					VBG	dep	1
8	,	,											,	punct	11
9	you	you		pro	2nd	sg							PRP	nsubj	11
10	were	be		vbaux									VBD	aux	11
11	saying	say		vbmain	vblex	past	prog	active					VBG	ROOT	11
12	that	that		comp	comp_that								IN	mark	16
13	you	you		pro	2nd	sg							PRP	meta	16
14	we-	we-											PRP	appos	13
15	you	you		pro	2nd	sg							PRP	nsubj	16
16	thought	think	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls	thatcls	vcomp		VBD	ccomp	11
17	the	the		dt	art								DT	det	19
18	brain	brain	nn+npremod	nn			npremod						NN	compound	19
19	theory	theory		nn		nom							NN	nsubj	20
20	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	16
21	probably	probably	rb+advl	rb	advl	ly							RB	advmod	20
22	the	the		dt	art								DT	det	27
23	,	,											,	punct	27
24													_SP	dep	23
25	the	the		dt	art								DT	det	27
26	right	right	attr+npremod	jj	attr								JJ	amod	27
27	way	way		nn									NN	attr	20
28	to	to		to									TO	aux	29
29	look	look	tocls+rel	vbmain	prepv	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	27
30	at	at	in+advl	in	advl								IN	prep	29
31	it	it		pro	3rd	sg							PRP	pobj	30
32													_SP	dep	16
33	well	well											UH	intj	58
34	ov-	ov-											XX	punct	33
35	no	no											UH	intj	33
36	over	over		in	in_othr								IN	prep	33
37	the	the		dt	art								DT	det	38
38	body	body		nn									NN	pobj	36
39	,	,											,	punct	33
40													_SP	dep	43
41	mhm	mhm											UH	intj	43
42													_SP	dep	43
43	theory	theory		nn		nom							NN	dep	33
44	,	,											,	punct	58
45	i	i		pro	1st	sg							PRP	dep	58
46	if	if		cs	cnd								IN	mark	48
47	i	i		pro	1st	sg							PRP	nsubj	48
48	had	have	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	58
49	to	to		to									TO	aux	50
50	chose	chose		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	48
51	between	between	in+advl	in	advl								IN	prep	50
52	,	,											,	punct	51
53	brain	brain		nn									NN	pobj	51
54	or	or		cc	phrs								CC	cc	53
55	body	body		nn									NN	conj	53
56	i	i		pro	1st	sg							PRP	nsubj	58
57	would	would		vbaux	mod	prd							MD	aux	58
58	choose	choose	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	11
59	brain	brain		nn									NN	dobj	58
60	but	but		cc	cls								CC	cc	58
61	then	then		rb	link								RB	advmod	88
62	,	,											,	punct	88
63	if	if		cs	cnd								IN	mark	65
64	you	you		pro	2nd	sg							PRP	nsubj	65
65	introduced	introduce	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	88
66	an	an		dt									DT	det	68
67	artificial	artificial	attr+npremod	jj	attr								JJ	amod	68
68	brain	brain		nn									NN	dobj	65
69	and	and		cc	cls								CC	cc	65
70	you	you		pro	2nd	sg							PRP	nsubj	71
71	're	be		vbmain	be	pres	simple	active					VBP	conj	65
72	still	still	rb+advl	rb	advl								RB	advmod	71
73	the	the		dt	art								DT	det	74
74	body	body		nn									NN	attr	71
75	but	but		cc	cls								CC	cc	71
76	it	it		pro	3rd	sg							PRP	nsubj	77
77	's	be		vbmain	be	pres	simple	active					VBZ	conj	71
78	not	not											RB	neg	77
79	your	your		dt	poss								PRP$	poss	85
80	,	,											,	punct	85
81	(	(											-LRB-	punct	85
82	your	your		dt	poss								PRP$	poss	85
83	real	real	attr+npremod	jj	attr								JJ	amod	85
84	)	)											-RRB-	punct	85
85	body	body		nn									NN	attr	77
86	it	it		pro	3rd	sg							PRP	nsubj	88
87	just	just	rb+advl	rb	advl								RB	advmod	88
88	gets	get		vbmain	vblex	pres	simple	active					VBZ	conj	58
89	so	so	rb+jjrbmod	rb	adjmod								RB	advmod	90
90	confusing	confusing		jj	pred								JJ	acomp	88
91													_SP	dep	88
92	cuz	cuz		cs	cs_othr								IN	mark	94
93	there	there											EX	expl	94
94	're	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBP	advcl	88
95	so	so	rb+jjrbmod	rb	adjmod								RB	advmod	96
96	many	many	attr+npremod	jj	attr								JJ	amod	98
97	different	different	attr+npremod	jj	attr								JJ	amod	98
98	levels	level		nn	pl								NNS	attr	94
99	.	.											.	punct	11

#sentid = 360
0	i	i		pro	1st	sg							PRP	nsubj	3
1	do	do		vbaux									VBP	aux	3
2	n't	not											RB	neg	3
3	know	know		vbmain	vblex	pres	simple	active					VB	ROOT	3
4	.	.											.	punct	3

#sentid = 361
0													_SP	dep	3
1	i	i		pro	1st	sg							PRP	nsubj	3
2	just	just	rb+advl	rb	advl								RB	advmod	3
3	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	3
4	that	that		comp	comp_that								IN	mark	18
5	,	,											,	punct	18
6	i	i		pro	1st	sg							PRP	nsubj	7
7	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	18
8	from	from	in+advl	in	advl								IN	prep	18
9	these	these		dt	dt_dem								DT	det	10
10	kind	kind		nn									NN	pobj	8
11	of	of	of+npostmod	in	nmod								IN	prep	10
12	extreme	extreme	attr+npremod	jj	attr								JJ	amod	13
13	cases	case		nn	pl								NNS	pobj	11
14	you	you		pro	2nd	sg							PRP	nsubj	18
15	just	just	rb+advl	rb	advl								RB	advmod	18
16	ca	can		vbaux	mod								MD	aux	18
17	n't	not											RB	neg	18
18	use	use	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	3
19	your	your		dt	poss								PRP$	poss	21
20	common	common	attr+npremod	jj	attr								JJ	amod	21
21	sense	sense		nn									NN	dobj	18
22	of	of	of+npostmod	in	nmod								IN	prep	21
23	knowledge	knowledge		nn									NN	pobj	22
24	of	of	of+npostmod	in	nmod								IN	prep	23
25	everything	everything		nn	other	nom							NN	pobj	24
26	,	,											,	punct	3
27	like	like		cs	cs_othr								IN	mark	32
28	you	you		pro	2nd	sg							PRP	nsubj	32
29	just	just	rb+advl	rb	advl								RB	advmod	32
30	ca	can		vbaux	mod								MD	aux	32
31	n't	not											RB	neg	32
32	say	say	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	3
33	,	,											,	punct	32
34	well	well											UH	intj	39
35	you	you		pro	2nd	sg							PRP	nsubj	36
36	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	39
37	,	,											,	punct	39
38	this	this		pro	dem	sg							DT	nsubj	39
39	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	32
40	this	this											DT	attr	39
41	and	and		cc	cls								CC	cc	39
42	this	this		pro	dem	sg							DT	nsubj	43
43	is	be		vbmain	be	pres	simple	active					VBZ	conj	39
44	(	(											-LRB-	punct	43
45	xx	xx											XX	dep	43
46	)	)											-RRB-	punct	43
47	you	you		pro	2nd	sg							PRP	nsubj	48
48	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	43
49	t-	t-											XX	dep	48

#sentid = 362
0	i	i		pro	1st	sg							PRP	ROOT	0

#sentid = 363
0	i	i		pro	1st	sg							PRP	nsubj	3
1	do	do		vbaux									VBP	aux	3
2	n't	not											RB	neg	3
3	think	think		vbmain	vblex	pres	simple	active					VB	ROOT	3
4	a	a		dt	art								DT	det	6
5	single	single	attr+npremod	jj	attr								JJ	amod	6
6	answer	answer		nn		nom							NN	nsubj	11
7	can	can		vbaux	mod	pos							MD	aux	11
8	ever	ever	rb+advl	rb	advl		splaux						RB	advmod	11
9	,	,											,	punct	11
10	(	(											-LRB-	punct	11
11	exist	exist	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	3
12	)	)											-RRB-	punct	11
13	for	for	in+advl	in	advl								IN	prep	11
14	,	,											,	punct	13
15	(	(											-LRB-	punct	13
16	xx	xx											XX	pobj	13
17	,	,											-RRB-	punct	13
18	)	)											-RRB-	punct	3
19	but	but		cc	cls								CC	cc	3
20	i	i		pro	1st	sg							PRP	nsubj	21
21	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	33
22	i	i		pro	1st	sg							PRP	nsubj	23
23	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	33
24	,	,											,	punct	33
25	the	the		dt	art								DT	det	30
26	most	most		jj	attr								JJS	amod	29
27	,	,											,	punct	29
28	most	most	rb+jjrbmod	rb	adjmod								RBS	advmod	29
29	strongest	strong	attr+npremod	jj	attr								JJS	amod	30
30	one	one		nn	other	pl							NN	nsubj	33
31	would	would		vbaux	mod	prd							MD	aux	33
32	probably	probably	rb+advl	rb	advl	ly	splaux						RB	advmod	33
33	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	3
34	that	that		comp	comp_that								IN	mark	38
35	,	,											,	punct	38
36	the	the		dt	art								DT	det	37
37	brain	brain		nn									NN	nsubj	38
38	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	33
39	you	you		pro	2nd	sg							PRP	attr	38
40	,	,											,	punct	38
41	or	or		cc	phrs								CC	cc	38
42	something	something		nn		nom							NN	conj	38
43	.	.											.	punct	3

#sentid = 364
0	i	i		pro	1st	sg							PRP	nsubj	1
1	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	10
2	i	i		pro	1st	sg							PRP	nsubj	3
3	would	would		vbaux	mod	prd							MD	aux	10
4	n't	not											RB	neg	10
5	,	,											,	punct	10
6	i	i		pro	1st	sg							PRP	nsubj	10
7	i	i		pro	1st	sg							PRP	nsubj	10
8	do	do		vbaux									VBP	aux	10
9	n't	not											RB	neg	10
10	see	see		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	10
11	any	any		dt									DT	det	12
12	reason	reason		nn									NN	dobj	10
13	for	for	in+npostmod	in	nmod								IN	prep	12
14	saying	say	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	13
15	the	the		dt	art								DT	det	16
16	body	body		nn									NN	nsubj	17
17	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	14
18	,	,											,	punct	17
19	me	i		pro	1st	sg							PRP	dep	17
20													_SP	dep	17
21	mhm	mhm											UH	intj	17
22													_SP	dep	17
23	except	except	in+npostmod	in	nmod								IN	prep	12
24	that	that											IN	mark	27
25	it	it		pro	3rd	sg							PRP	nsubj	27
26	just	just	rb+advl	rb	advl								RB	advmod	27
27	looks	look		vbmain	prepv	pres	simple	active	compcls	thatcls	incomp		VBZ	pcomp	23
28	like	like	in+advl	in	advl								IN	prep	27
29	,	,											,	punct	28
30	probably	probably		rb	othr	ly							RB	advmod	28
31	,	,											,	punct	28
32	the	the		dt	art								DT	det	33
33	person	person		nn									NN	pobj	28
34	.	.											.	punct	10

#sentid = 365
0													_SP	dep	9
1	so	so		rb	link								RB	advmod	9
2	what	what		dt									WDT	det	6
3	what	what											WDT	dep	4
4	ex-	ex-											XX	dep	6
5	what	what		dt									WDT	det	6
6	arguments	argument		nn	pl	nom							NNS	dobj	9
7	does	do		vbaux									VBZ	aux	9
8	he	he		pro	3rd	sg							PRP	nsubj	9
9	give	give		vbmain	vblex	pres	simple	active					VB	ROOT	9
10	against	against	in+advl	in	advl								IN	prep	9
11	thinking	think	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	10
12	that	that		comp	comp_that								IN	mark	15
13	the	the		dt	art								DT	det	14
14	brain	brain		nn									NN	nsubj	15
15	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	11
16	you	you		pro	2nd	sg							PRP	attr	15
17	...	...											.	punct	9
18	?	?											.	punct	9

#sentid = 366
0	he	he		pro	3rd	sg							PRP	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	not	not											RB	neg	1
3	very	very	rb+jjrbmod	rb	adjmod								RB	advmod	4
4	satisfied	satisfied		jj	pred								JJ	acomp	1
5	with	with	in+jcomp	in	jcomp								IN	prep	4
6	that	that		pro	dem	sg							DT	pobj	5
7	.	.											.	punct	1

#sentid = 367
0													_SP	dep	25
1	yeah	yeah											UH	intj	25
2													_SP	dep	25
3	oh	oh											UH	intj	12
4	the	the		dt	art								DT	det	11
5	whole	whole	attr+npremod	jj	attr								JJ	amod	11
6	,	,											,	punct	11
7	robbery	robbery	nn+npremod	nn		nom	npremod						NN	nmod	11
8													_SP	dep	11
9	yeah	yeah											UH	nmod	11
10													_SP	dep	11
11	thing	thing		nn		nom							NN	nsubj	12
12	is	be		vbmain	be	pres	simple	active					VBZ	meta	25
13	that	that											DT	dep	12
14													_SP	dep	12
15	mhm	mhm											UH	intj	12
16	...	...											:	punct	15
17													_SP	dep	12
18	that	that											DT	dep	19
19	ma-	ma-											XX	meta	12
20	i	i		pro	1st	sg							PRP	nsubj	21
21	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	25
22	,	,											,	punct	25
23	it	it		pro	3rd	sg							PRP	nsubj	25
24	kinda	kinda	rb+advl	rb	advl								RB	advmod	25
25	makes	make		vbmain	vblex	pres	simple	active					VBZ	ROOT	25
26	sense	sense		nn									NN	dobj	25
27	,	,											,	punct	25
28	like	like											UH	intj	25
29	,	,											,	punct	34
30	which	which		dt									WDT	det	31
31	one	one		nn	other	pl							NN	dobj	34
32	would	would		vbaux	mod	prd							MD	aux	34
33	you	you		pro	2nd	sg							PRP	nsubj	34
34	prosecute	prosecute		vbmain	vblex	vp_w_modal	simple	active					VB	parataxis	25
35	?	?											.	punct	34

#sentid = 368
0	the	the		dt	art								DT	det	1
1	body	body		nn									NN	ROOT	1
2	or	or		cc	phrs								CC	cc	1
3	the	the		dt	art								DT	det	4
4	brain	brain		nn									NN	conj	1
5	?	?											.	punct	4

#sentid = 369
0													_SP	dep	0
1	and	and		cc									CC	cc	0
2													_SP	dep	0

#sentid = 370
0	but	but		cc	cls								CC	cc	7
1	you	you		pro	2nd	sg							PRP	nsubj	7
2	wo-	wo-		vbmain	vblex	vp_w_modal	simple	active					MD	punct	7
3	you	you		pro	2nd	sg							PRP	nsubj	7
4	would	would		vbaux	mod	prd							MD	aux	7
5	n't	not											RB	neg	7
6	,	,											,	punct	7
7	prosecute	prosecute		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	7
8	the	the		dt	art								DT	det	9
9	brain	brain		nn									NN	dobj	7
10	cuz	cuz		cs	cs_othr								IN	mark	16
11	the	the		dt	art								DT	det	12
12	people	people		nn	pl								NNS	nsubj	16
13	,	,											,	punct	16
14	ca	can		vbaux	mod								MD	aux	16
15	n't	not											RB	neg	16
16	do	do	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	7
17	anything	anything		nn	other	nom							NN	dobj	16
18	to	to	in+advl	in	advl								IN	prep	16
19	a	a		dt	art								DT	det	20
20	brain	brain		nn									NN	pobj	18
21	.	.											.	punct	7

#sentid = 371
0	it	it		pro	3rd	sg							PRP	nsubj	1
1	does-	does-		vbmain	vblex	pres	simple	active					VBZ	ROOT	1

#sentid = 372
0	it	it		pro	3rd	sg							PRP	dep	7
1	,	,											,	punct	7
2	i	i		pro	1st	sg							PRP	nsubj	3
3	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	7
4	it	it		pro	3rd	sg							PRP	nsubj	7
5	does	do		vbaux									VBZ	aux	7
6	n't	not											RB	neg	7
7	move	move		vbmain	vblex	pres	simple	active					VB	ROOT	7
8	by	by	in+advl	in	advl								IN	prep	7
9	itself	itself											PRP	pobj	8
10	,	,											,	punct	7
11	(	(											-LRB-	punct	7
12	it	it		pro	3rd	sg							PRP	dep	7
13	)	)											-RRB-	punct	7
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	7
16	?	?											.	punct	7

#sentid = 373
0													_SP	dep	4
1	yeah	yeah											UH	intj	4
2	,	,											,	punct	4
3	i	i		pro	1st	sg							PRP	nsubj	4
4	know	know		vbmain	vblex	pres	simple	active					VBP	ROOT	4
5													_SP	dep	4

#sentid = 374
0	and	and		cc	cls								CC	cc	4
1	it	it		pro	3rd	sg							PRP	dep	4
2	,	,											,	punct	4
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	34
5	not	not											RB	neg	4
6	,	,											,	punct	4
7	cuz	cuz		cs	cs_othr								IN	mark	16
8	if	if		cs	cnd								IN	mark	10
9	you	you		pro	2nd	sg							PRP	nsubj	10
10	charge	charge	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	16
11	a	a		dt	art								DT	det	12
12	person	person		nn									NN	dobj	10
13	you	you		pro	2nd	sg							PRP	nsubj	16
14	're	be		vbaux									VBP	aux	16
15	basically	basically	rb+advl	rb	advl	ly	splaux						RB	advmod	16
16	charging	charge	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		other_advl		VBG	advcl	4
17	a	a		dt	art								DT	det	18
18	f-	f-											XX	nmod	21
19	like	like											UH	intj	18
20	a	a		dt	art								DT	det	21
21	fine	fine		nn									NN	dobj	16
22	on	on	in+advl	in	advl								IN	prep	16
23	him	he		pro	3rd	sg							PRP	pobj	22
24	or	or		cc	cls								CC	cc	16
25	you	you		pro	2nd	sg							PRP	nsubj	30
26	're	be		vbmain	be	pres	simple	active	nmod_cls		ncomp		VBP	acl	30
27	,	,											,	punct	30
28	t-	t-											XX	dep	30
29	you	you		pro	2nd	sg							PRP	nsubj	30
30	're	be		vbmain	be	pres	simple	active					VBP	conj	16
31	,	,											,	punct	34
32	you	you		pro	2nd	sg							PRP	nsubj	34
33	're	be		vbaux									VBP	aux	34
34	trapping	trap		vbmain	vblex	pres	prog	active	compcls		jcomp	compdel	VBG	ccomp	38
35	him	he		pro	3rd	sg							PRP	dobj	34
36	in	in	in+advl	in	advl								IN	prep	34
37	prison	prison		nn									NN	pobj	36
38	right	right											JJ	ROOT	38
39	?	?											.	punct	38

#sentid = 375
0	so	so		rb	link								RB	advmod	3
1	,	,											,	punct	3
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	trap	trap		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	25
4	a	a		dt	art								DT	det	5
5	brain	brain		nn									NN	dobj	3
6	that	that		relpro	relpro_that	sg							WDT	nsubj	9
7	does	do		vbaux									VBZ	aux	9
8	n't	not											RB	neg	9
9	do	do	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VB	relcl	5
10	anything	anything		nn	other	nom							NN	dobj	9
11													_SP	dep	3
12	yeah	yeah											UH	intj	14
13	you	you		pro	2nd	sg							PRP	nsubj	14
14	ca	can		vbaux	mod								MD	aux	25
15	n't	not											RB	neg	14
16													_SP	dep	25
17	you	you		pro	2nd	sg							PRP	nsubj	18
18	c-	c-											XX	parataxis	25
19	like	like											UH	intj	25
20	the	the		dt	art								DT	det	21
21	brain	brain		nn									NN	nsubj	25
22	can	can		vbaux	mod	pos							MD	aux	25
23	still	still	rb+advl	rb	advl		splaux						RB	advmod	25
24	like	like											UH	intj	25
25	think	think		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	25
26	and	and		cc	phrs								CC	cc	25
27	control	control		vbmain	vblex	nonfinite	simple	active					VB	conj	25
28	the	the		dt	art								DT	det	29
29	body	body		nn									NN	dobj	27
30	to	to		to									TO	aux	31
31	do	do	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	27
32	something	something		nn	other	nom							NN	dobj	31
33	else	else		rb	othr								RB	advmod	32
34	outside	outside	rb+advl	rb	advl								RB	advmod	31
35													_SP	dep	27
36	yeah	yeah											UH	intj	25
37													_SP	dep	25
38	right	right											JJ	intj	25
39	?	?											.	punct	38

#sentid = 376
0	so	so		rb	link								RB	advmod	4
1	it	it		pro	3rd	sg							PRP	nsubj	4
2	does	do		vbaux									VBZ	aux	4
3	n't	not											RB	neg	4
4	do	do		vbmain	vblex	pres	simple	active					VB	ROOT	4
5	anything	anything		nn	other	nom							NN	dobj	4
6	different	different		jj	attr								JJ	amod	5
7	.	.											.	punct	4

#sentid = 377
0	but	but		cc	cls								CC	cc	7
1	,	,											,	punct	7
2	but	but		cc	phrs								CC	cc	7
3	you	you		pro	2nd	sg							PRP	nsubj	7
4	ca	can		vbaux	mod								MD	aux	7
5	n't	not											RB	neg	7
6	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	7
7	identify	identify		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	7
8	a	a		dt	art								DT	det	9
9	person	person		nn									NN	dobj	7
10	a-	a-											XX	nmod	9
11	as	as	in+advl	in	advl								IN	prep	7
12	the	the		dt	art								DT	det	13
13	body	body		nn									NN	pobj	11
14	though	though	rb+advl	rb	advl								RB	advmod	7
15	,	,											,	punct	7
16	because	because		cs	cos								IN	mark	19
17	,	,											,	punct	19
18	it	it		pro	3rd	sg							PRP	nsubj	19
19	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		causative		VBZ	advcl	7
20	the	the		dt	art								DT	det	21
21	brain	brain		nn									NN	attr	19
22	that	that		pro	dem	sg							WDT	nsubj	24
23	's	be		vbaux									VBZ	aux	24
24	doing	do	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	19
25	the	the		dt	art								DT	det	26
26	control	control		nn									NN	dobj	24
27	,	,											,	punct	19
28	right	right											JJ	advcl	7
29	?	?											.	punct	7

#sentid = 378
0	so	so		rb	link								RB	advmod	4
1	,	,											,	punct	4
2													_SP	dep	4
3	that	that		pro	dem	sg							DT	nsubj	4
4	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	kinda	kinda	rb+jjrbmod	rb	adjmod								RB	advmod	6
6	hard	hard		jj	pred								JJ	acomp	4
7	.	.											.	punct	4

#sentid = 379
0													_SP	dep	33
1	no	no											UH	intj	33
2	but	but		cc	phrs								CC	cc	33
3	if	if		cs	cnd								IN	mark	5
4	you	you		pro	2nd	sg							PRP	nsubj	5
5	had	have	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	33
6	a	a		dt	art								DT	det	7
7	choice	choice		nn									NN	dobj	5
8	between	between	in+npostmod	in	nmod								IN	prep	7
9	either	either											CC	preconj	10
10	defining	define	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	8
11	the	the		dt	art								DT	det	12
12	body	body		nn									NN	dobj	10
13	and	and		cc	phrs								CC	cc	12
14	the	the											DT	conj	12
15	,	,											,	punct	12
16	and	and		cc	phrs								CC	cc	12
17	the	the		dt	art								DT	det	18
18	brain	brain		nn									NN	conj	12
19	or	or		cc	phrs								CC	cc	18
20	the	the		dt	art								DT	det	21
21	brain	brain		nn									NN	conj	18
22	as	as	in+npostmod	in	nmod								IN	prep	18
23	a	a		dt	art								DT	det	24
24	person	person		nn									NN	pobj	22
25	,	,											,	punct	33
26	what	what		comp	comp_wh								WP	dobj	29
27	would	would		vbaux	mod	prd							MD	aux	29
28	you	you		pro	2nd	sg							PRP	nsubj	29
29	define	define		vbmain	vblex	vp_w_modal	simple	active	compcls	whcls	vcomp		VB	ccomp	33
30	,	,											,	punct	33
31	would	would		vbaux	mod	prd							MD	aux	33
32	you	you		pro	2nd	sg							PRP	nsubj	33
33	say	say		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	33
34	that	that		comp	comp_that								IN	mark	42
35													_SP	dep	42
36	your	your		dt	poss								PRP$	poss	37
37													_SP	dep	42
38	(	(											-LRB-	punct	42
39	i	i		pro	1st	sg							PRP	nsubj	42
40	would	would		vbaux	mod	prd							MD	aux	42
41	)	)											-RRB-	punct	42
42	go	go	thatcls+vcomp	vbmain	prepv	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	33
43	for	for	in+advl	in	advl								IN	prep	42
44	the	the		dt	art								DT	det	45
45	brain	brain		nn									NN	pobj	43
46	,	,											,	punct	42
47	yeah	yeah											UH	intj	33
48													_SP	dep	33

#sentid = 380
0	so	so		rb	link								CC	advmod	5
1	his	his		dt	poss	sg							PRP$	poss	2
2	argument	argument		nn		nom							NN	nsubj	5
3	there	there		rb	othr								RB	advmod	2
4	,	,											,	punct	5
5	hinges	hinge		vbmain	vblex	pres	simple	active					VBZ	ROOT	5
6	on	on	in+advl	in	advl								IN	prep	5
7	what	what		comp	comp_wh								WP	dobj	10
8	would	would		vbaux	mod	prd							MD	aux	10
9	you	you		pro	2nd	sg							PRP	nsubj	10
10	punish	punish	whcls+incomp	vbmain	vblex	vp_w_modal	simple	active	compcls	whcls	incomp		VB	pcomp	6
11	?	?											.	punct	5

#sentid = 381
0	would	would		vbaux	mod	prd							MD	aux	2
1	you	you		pro	2nd	sg							PRP	nsubj	2
2	punish	punish		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	2
3	the	the		dt	art								DT	det	4
4	brain	brain		nn									NN	dobj	2
5	or	or		cc	cls								CC	cc	2
6	would	would		vbaux	mod	prd							MD	aux	8
7	you	you		pro	2nd	sg							PRP	nsubj	8
8	punish	punish		vbmain	vblex	vp_w_modal	simple	active					VB	conj	2
9	the	the		dt	art								DT	det	10
10	body	body		nn									NN	dobj	8
11	?	?											.	punct	8

#sentid = 382
0	but	but		cc	cls								CC	cc	12
1	how	how		rb	othr								WRB	advmod	4
2	would	would		vbaux	mod	prd							MD	aux	4
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	how	how											WRB	dep	12
5	,	,											,	punct	12
6	i	i		pro	1st	sg							PRP	nsubj	7
7	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	12
8	one	one											CD	nummod	9
9	thing	thing		nn		nom							NN	pobj	13
10	i	i		pro	1st	sg							PRP	nsubj	12
11	was	be		vbaux									VBD	aux	12
12	thinking	think		vbmain	prepv	past	prog	active					VBG	dep	19
13	about	about	in+advl	in	advl								IN	prep	12
14	,	,											,	punct	19
15	how	how		rb	advl								WRB	advmod	19
16	do	do		vbaux									VBP	aux	19
17	you	you		pro	2nd	sg							PRP	nsubj	19
18	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	19
19	punish	punish		vbmain	vblex	pres	simple	active					VB	ROOT	19
20	a	a		dt	art								DT	det	21
21	brain	brain		nn									NN	dobj	19
22	?	?											.	punct	19

#sentid = 383
0													_SP	dep	9
1	yeah	yeah											UH	intj	9
2	,	,											,	punct	9
3	that	that		pro	dem	sg							DT	nsubj	4
4	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	9
5	what	what											WP	attr	7
6	i	i		pro	1st	sg							PRP	nsubj	7
7	was	be	whcls+vcomp	vbmain	be	past	simple	active	compcls	whcls	vcomp		VBD	ccomp	4
8	that	that		pro	dem	sg							DT	nsubj	9
9	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	9
10	what	what											WP	pobj	15
11	i	i		pro	1st	sg							PRP	nsubj	14
12	was	be		vbaux									VBD	aux	14
13	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	14
14	thinking	think	thatcls+vcomp	vbmain	prepv	past	prog	active	compcls		vcomp	compdel	VBG	ccomp	9
15	about	about	in+advl	in	advl								IN	prep	14
16													_SP	dep	9
17	yeah	yeah											UH	intj	9
18													_SP	dep	9
19	cuz	cuz	in+advl	in	advl								IN	prep	24
20	like	like											UH	intj	24
21	in	in	in+advl	in	advl								IN	prep	24
22	here	here											RB	pcomp	21
23	he	he		pro	3rd	sg							PRP	nsubj	24
24	said	say	finitecls+advl	vbmain	vblex	past	simple	active	advlcls				VBD	advcl	9
25	even	even	rb+advl	rb	advl								RB	advmod	30
26	if	if		cs	cnd								IN	mark	30
27	like	like											UH	intj	30
28	they	they		pro	pl								PRP	nsubj	30
29	ha-	ha-		vbaux									VBP	aux	30
30	have	have		vbmain	vblex	pres	simple	active	compcls		conditional	compdel	VB	ccomp	24
31	it	it		pro	3rd	sg							PRP	dobj	30
32	in	in	in+advl	in	advl								IN	prep	30
33	like	like											UH	intj	32
34	the	the		dt	art								DT	det	36
35	state	state	nn+npremod	nn		nom	npremod						NN	compound	36
36	prison	prison		nn									NN	pobj	32
37	or	or		cc	phrs								CC	cc	36
38	whatever	whatever											WDT	conj	36
39													_SP	dep	9
40	mhm	mhm											UH	intj	46
41													_SP	dep	40
42	his	his		dt	poss	sg							PRP$	poss	43
43	body	body		nn									NN	nsubj	46
44	would	would		vbaux	mod	prd							MD	aux	46
45	still	still	rb+advl	rb	advl		splaux						RB	advmod	46
46	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	9
47	out	out	rb+jjrbmod	rb	othr								RB	advmod	48
48	there	there	rb+advl	rb	advl								RB	advmod	46
49	and	and		cc	cls								CC	cc	46
50	like	like											UH	intj	64
51	,	,											,	punct	64
52	if	if		cs	cnd								IN	mark	56
53	it	it		pro	3rd	sg							PRP	nsubj	56
54	was	be		vbaux									VBD	aux	56
55	still	still	rb+advl	rb	advl		splaux						RB	advmod	56
56	transmitting	transmit	finitecls+advl	vbmain	vblex	past	prog	active	advlcls		conditional		VBG	advcl	64
57	,	,											,	punct	56
58													_SP	dep	56
59	signals	signal		nn	pl	nom							NNS	dobj	56
60	,	,											,	punct	64
61	he	he		pro	3rd	sg							PRP	nsubj	64
62	'd	would		vbaux	mod								MD	aux	64
63	still	still	rb+advl	rb	advl		splaux						RB	advmod	64
64	feel	feel		vbmain	prepv	vp_w_modal	simple	active					VB	conj	46
65	like	like		cs	cs_othr								IN	mark	66
66													_SP	dep	77
67	yeah	yeah											UH	intj	73
68	,	,											,	punct	73
69	so	so		rb	link								IN	advmod	73
70	they	they		pro	pl								PRP	nsubj	73
71	would	would		vbaux	mod	prd							MD	aux	73
72	n't	not											RB	neg	73
73	do	do		vbmain	vblex	vp_w_modal	simple	active					VB	meta	66
74	anything	anything		nn	other	nom							NN	dobj	73
75													_SP	dep	77
76	he	he		pro	3rd	sg							PRP	nsubj	77
77	was	be	finitecls+advl	vbmain	be	past	simple	active	advlcls				VBD	advcl	64
78	free	free		jj	pred								JJ	acomp	77
79	running	run	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	jcomp		VBG	xcomp	78
80													_SP	dep	79
81	around	around	rb+advl	rb	advl								RB	advmod	79
82	.	.											.	punct	9

#sentid = 384
0													_SP	dep	0
1	mhm	mhm											UH	intj	0
2	...	...											:	punct	1

#sentid = 385
0	so	so		rb	link								RB	advmod	3
1	what	what											WP	nsubj	3
2	would	would		vbaux	mod	prd							MD	aux	3
3	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	3
4	punishment	punishment		nn		nom							NN	attr	3
5	for	for	in+npostmod	in	nmod								IN	prep	4
6	the	the		dt	art								DT	det	7
7	brain	brain		nn									NN	pobj	5
8	?	?											.	punct	3

#sentid = 386
0	i	i		pro	1st	sg							PRP	nsubj	1
1	mean	mean		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	(	(											-LRB-	punct	1
3	if	if		cs	cnd								IN	mark	9
4	)	)											-RRB-	punct	9
5	the	the											DT	dep	9
6	b-	b-											XX	dep	9
7	the	the		dt	art								DT	det	8
8	brain	brain		nn									NN	nsubj	9
9	's	be		vbmain	in_othr	pres	simple	active			conditional		VBZ	prep	2
10	happy	happy		jj	pred								JJ	acomp	9
11	in	in	in+advl	in	advl								IN	prep	9
12	that	that		dt	dt_dem								DT	det	13
13	kind	kind		nn									NN	pobj	11
14	of	of	of+npostmod	in	nmod								IN	prep	13
15	case	case		nn									NN	pobj	14
16	right	right		jj	attr								JJ	amod	9
17	?	?											.	punct	16

#sentid = 387
0													_SP	dep	4
1	they	they		pro	pl								PRP	nsubj	4
2	're	be		vbaux									VBP	aux	4
3	just	just	rb+advl	rb	advl		splaux						RB	advmod	4
4	storing	store		vbmain	vblex	pres	prog	active					VBG	ROOT	4
5	it	it		pro	3rd	sg							PRP	dobj	4
6	s-	s-											XX	punct	4
7	someplace	someplace	rb+jjrbmod	rb	othr								RB	advmod	8
8	else	else	rb+advl	rb	advl								RB	advmod	4
9	,	,											,	punct	8
10	in	in	in+advl	in	advl								IN	prep	4
11	the	the		dt	art								DT	det	12
12	prison	prison		nn									NN	pobj	10
13	.	.											.	punct	4

#sentid = 388
0													_SP	dep	4
1	so	so		rb	link								RB	advmod	4
2	can	can		vbaux	mod	pos							MD	aux	4
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	punish	punish		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	4
5	the	the		dt	art								DT	det	6
6	brain	brain		nn									NN	dobj	4
7	and	and		cc	phrs								CC	cc	6
8	body	body		nn									NN	conj	6
9	separately	separately	rb+advl	rb	advl	ly							RB	advmod	4
10	?	?											.	punct	4

#sentid = 389
0													_SP	dep	4
1	i	i		pro	1st	sg							PRP	nsubj	4
2	do	do		vbaux									VBP	aux	4
3	n't	not											RB	neg	4
4	think	think		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	16
5	so	so	rb+advl	rb	advl								RB	advmod	4
6													_SP	dep	4
7	it	it		pro	3rd	sg							PRP	nsubj	10
8	does	do		vbaux									VBZ	aux	10
9	n't	not											RB	neg	10
10	seem	seem		vbmain	vblex	pres	simple	active					VB	dep	4
11	like	like		cs	cs_othr								IN	mark	12
12	it	it		pro	3rd	sg							PRP	dep	10
13													_SP	dep	10
14	could	could		vbaux	mod	pos							MD	aux	16
15	you	you		pro	2nd	sg							PRP	nsubj	16
16	stop	stop		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	16
17	the	the		dt	art								DT	det	18
18	brain	brain		nn									NN	dobj	16
19	from	from	in+advl	in	advl								IN	prep	16
20	s-	s-											XX	pcomp	19
21	thinking	think	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	19
22	though	though	rb+advl	rb	advl								RB	advmod	16
23	?	?											.	punct	16

#sentid = 390
0													_SP	dep	6
1	i	i		pro	1st	sg							PRP	nsubj	2
2	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	6
3	that	that		pro	dem	sg							DT	nsubj	6
4	would	would		vbaux	mod	prd							MD	aux	6
5	be	be		vbaux									VB	aux	6
6	killing	kill		vbmain	vblex	vp_w_modal	prog	active					VBG	ROOT	6
7													_SP	dep	6
8	killing	kill		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	dep	6
9													_SP	dep	8
10	it	it		pro	3rd	sg							PRP	dobj	8
11	though	though	rb+advl	rb	advl								RB	advmod	6
12													_SP	dep	6
13	which	which											WDT	nsubj	14
14	is	be		vbmain	be	pres	simple	active					VBZ	dep	6
15	,	,											,	punct	14
16													_SP	dep	14
17	like	like	in+advl	in	advl								IN	prep	14
18													_SP	dep	14
19	capital	capital	attr+npremod	jj	attr								JJ	amod	20
20	punishment	punishment		nn		nom							NN	dep	14
21													_SP	dep	14
22	o-	o-											XX	dep	14
23	or	or		cc	phrs								CC	cc	14
24	restricted	restrict		vbmain	vblex	past	simple	active					VBD	conj	14
25	it	it		pro	3rd	sg							PRP	dobj	24
26	from	from	in+advl	in	advl								IN	prep	24
27	,	,											,	punct	26
28													_SP	dep	14
29	the	the		dt	art								DT	det	30
30	connection	connection		nn		nom							NN	dobj	14
31	(	(											-LRB-	punct	30
32	between	between	in+npostmod	in	nmod								IN	prep	30
33	)	)											-RRB-	punct	32
34	the	the		dt	art								DT	det	35
35	brain	brain		nn									NN	pobj	32
36	to	to	in+npostmod	in	nmod								IN	prep	30
37	the	the		dt	art								DT	det	38
38	body	body		nn									NN	pobj	36
39	?	?											.	punct	6

#sentid = 391
0													_SP	dep	0
1	yeah	yeah											UH	intj	4
2	you	you		pro	2nd	sg							PRP	nsubj	4
3	could	could		vbaux	mod	pos							MD	aux	4
4	cut	cut		vbmain	in_othr	vp_w_modal	simple	active					VB	prep	0
5	the	the		dt	art								DT	det	6
6	connections	connection		nn	pl	nom							NNS	dobj	4
7													_SP	dep	0
8	yeah	yeah											UH	intj	18
9													_SP	dep	18
10	yeah	yeah											UH	intj	13
11	you	you		pro	2nd	sg							PRP	nsubj	13
12	could	could		vbaux	mod	pos							MD	aux	13
13	cut	cut		vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	18
14	the	the		dt	art								DT	det	15
15	connection	connection		nn		nom							NN	dobj	13
16	,	,											,	punct	18
17	that	that		pro	dem	sg							DT	nsubj	18
18	's	be		vbmain	be	pres	simple	active					VBZ	meta	7
19	that	that		pro	dem	sg							DT	nsubj	20
20	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	18
21	sorta	sorta		jj	pred								RB	acomp	20
22													_SP	dep	0
23	(	(											-LRB-	punct	0
24	xx	xx											XX	punct	23
25	)	)											-RRB-	punct	24

#sentid = 392
0													_SP	dep	4
1	then	then		rb	link								RB	advmod	4
2	it	it		pro	3rd	sg							PRP	nsubj	4
3	would	would		vbaux	mod	prd							MD	aux	4
4	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	4
5	like	like											UH	intj	4
6	when	when		rb	advl								WRB	advmod	8
7	he	he		pro	3rd	sg							PRP	nsubj	8
8	lost	lose	finitecls+advl	vbmain	vblex	past	simple	active	advlcls	whcls			VBD	advcl	4
9	his	his		dt	poss	sg							PRP$	poss	15
10	,	,											,	punct	15
11													_SP	dep	15
12	well	well											UH	intj	15
13													_SP	dep	15
14	he	he		pro	3rd	sg							XX	dep	15
15	co-	co-		nn									NN	dobj	8
16													_SP	dep	8
17	connection	connection		nn		nom							NN	dobj	8
18	underground	underground	rb+advl	rb	advl								RB	advmod	8
19	or	or		cc	phrs								CC	cc	8
20													_SP	dep	8
21	whatever	whatever											WDT	dobj	8
22	.	.											.	punct	4

#sentid = 393
0													_SP	dep	0
1	mhm	mhm											UH	intj	0

#sentid = 394
0													_SP	dep	3
1	would	would		vbaux	mod	prd							MD	aux	3
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	3
4	able	able		jj	pred								JJ	acomp	3
5	to	to		to									TO	aux	6
6	keep	keep	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	4
7	it	it		pro	3rd	sg							PRP	dobj	6
8	alive	alive											JJ	oprd	6
9	though	though	rb+advl	rb	advl								RB	advmod	6
10	without	without	in+advl	in	advl								IN	prep	6
11	like	like											UH	intj	10
12	,	,											,	punct	10
13	if	if		cs	cnd								IN	mark	16
14	you	you		pro	2nd	sg							PRP	nsubj	16
15	,	,											,	punct	16
16	cut	cut	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	10
17	all	all											PDT	predet	19
18	the	the		dt	art								DT	det	19
19	connections	connection		nn	pl	nom							NNS	dobj	16
20	?	?											.	punct	3

#sentid = 395
0													_SP	dep	0
1	yeah	yeah											UH	intj	4
2	,	,											,	punct	4
3	he	he		pro	3rd	sg							PRP	nsubj	4
4	co-	co-		in	in_othr								XX	prep	0
5	like	like											UH	intj	9
6	he	he		pro	3rd	sg							PRP	nsubj	9
7	could	could		vbaux	mod	pos							MD	aux	9
8	still	still	rb+advl	rb	advl		splaux						RB	advmod	9
9	think	think		vbmain	vblex	vp_w_modal	simple	active					VB	meta	4
10	,	,											,	punct	9
11	but	but		cc	cls								CC	cc	9
12	he	he		pro	3rd	sg							PRP	nsubj	16
13	just	just	rb+advl	rb	advl								RB	advmod	16
14	could	could		vbaux	mod	pos							MD	aux	16
15	n't	not											RB	neg	16
16	connect	connect		vbmain	prepv	vp_w_modal	simple	active					VB	conj	9
17	with	with	in+advl	in	advl								IN	prep	16
18	the	the		dt	art								DT	det	19
19	body	body		nn									NN	pobj	17
20	.	.											.	punct	16

#sentid = 396
0	like	like											UH	intj	4
1	he	he		pro	3rd	sg							PRP	nsubj	4
2	could	could		vbaux	mod	pos							MD	aux	4
3	n't	not											RB	neg	4
4	tell	tell		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	4
5	the	the		dt	art								DT	det	6
6	body	body		nn									NN	dobj	4
7	to	to		to									TO	aux	8
8	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	4
9	something	something		nn	other	nom							NN	dobj	8
10	.	.											.	punct	4

#sentid = 397
0	he	he		pro	3rd	sg							PRP	nsubj	1
1	was	be		vbmain	be	past	simple	active					VBD	ROOT	1
2	still	still	rb+advl	rb	advl								RB	advmod	1
3	able	able		jj	pred								JJ	acomp	1
4	to	to		to									TO	aux	5
5	think	think	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	3
6	.	.											.	punct	1

#sentid = 398
0													_SP	dep	3
1	but	but		cc	phrs								CC	cc	3
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	need	need		vbmain	vblex	pres	simple	active					VBP	ROOT	3
4	to	to		to									TO	aux	5
5	keep	keep		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	3
6	the	the		dt	art								DT	det	7
7	connection	connection		nn		nom							NN	dobj	5
8	so	so		cs	cs_othr								IN	mark	20
9	that	that		cs	cs_othr								IN	mark	20
10	like	like											UH	intj	20
11	,	,											,	punct	20
12	the	the		dt	art								DT	det	13
13	body	body		nn									NN	nsubj	15
14	like	like											UH	intj	15
15	lives	live		vbmain	vblex	pres	simple	active					VBZ	dep	20
16	like	like											UH	intj	20
17	,	,											,	punct	20
18	the	the		dt	art								DT	det	19
19	brain	brain		nn									NN	nsubj	20
20	needs	need	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	3
21	to	to		to									TO	aux	22
22	be	be		vbmain	be	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	20
23	able	able		jj	pred								JJ	acomp	22
24	to	to		to									TO	aux	25
25	tell	tell	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	23
26	the	the		dt	art								DT	det	27
27	body	body		nn									NN	dobj	25
28	to	to		to									TO	aux	29
29	breathe	breathe	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	25
30	,	,											,	punct	29
31	and	and		cc	phrs								CC	cc	29
32													_SP	dep	29
33	circulate	circulate		vbmain	vblex	nonfinite	simple	active					VB	dep	29
34													_SP	dep	33
35	mhm	mhm											UH	intj	33
36													_SP	dep	33
37	blood	blood		nn									NN	dobj	33
38	,	,											,	punct	33
39	and	and		cc	phrs								CC	cc	33
40	eat	eat		vbmain	vblex	nonfinite	simple	active					VB	conj	33
41	and	and		cc	phrs								CC	cc	40
42	drink	drink		vbmain	vblex	nonfinite	simple	active					VB	conj	40
43													_SP	dep	3

#sentid = 399
0	that	that		pro	dem	sg							DT	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	true	true		jj	pred								JJ	acomp	1
3													_SP	dep	1
4	so	so											RB	meta	1
5	,	,											,	punct	4
6													_SP	dep	4
7	so	so											RB	dep	1
8	if	if		cs	cnd								IN	mark	10
9	you	you		pro	2nd	sg							PRP	nsubj	10
10	put	put	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	7
11	the	the		dt	art								DT	det	12
12	body	body		nn									NN	dobj	10
13	on	on	in+advl	in	advl								IN	prep	10
14	life	life	nn+npremod	nn			npremod						NN	compound	15
15	support	support		nn									NN	pobj	13
16	someplace	someplace	rb+jjrbmod	rb	othr								RB	advmod	17
17	else	else	rb+advl	rb	advl								RB	advmod	10
18	?	?											.	punct	7

#sentid = 400
0													_SP	dep	6
1	well	well											UH	intj	6
2													_SP	dep	6
3	yeah	yeah											UH	intj	6
4	,	,											,	punct	6
5	i	i		pro	1st	sg							PRP	nsubj	6
6	guess	guess		vbmain	vblex	pres	simple	active					VBP	ROOT	6
7	you	you		pro	2nd	sg							PRP	nsubj	9
8	could	could		vbaux	mod	pos							MD	aux	9
9	do	do	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	6
10	that	that		pro	dem	sg							DT	dobj	9
11	.	.											.	punct	6

#sentid = 401
0													_SP	dep	0
1	yeah	yeah											UH	intj	4
2	,	,											,	punct	4
3	how	how		rb	othr								WRB	advmod	4
4	about	about		in	in_othr								IN	prep	0
5	that	that		pro	dem	sg							DT	pobj	4
6	?	?											.	punct	4

#sentid = 402
0													_SP	dep	3
1	but	but		cc	cls								CC	cc	3
2	this	this		pro	dem	sg							DT	nsubj	3
3	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	more	more	attr+npremod	jj	attr								JJR	amod	5
5	trouble	trouble		nn									NN	attr	3
6	than	than		cs	cs_othr								IN	mark	8
7	it	it		pro	3rd	sg							PRP	nsubj	8
8	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	5
9	wo-	wo-											XX	dep	8
10	no	no											UH	intj	19
11	,	,											,	punct	19
12													_SP	dep	19
13	i	i		pro	1st	sg							PRP	nsubj	16
14	do	do		vbaux									VBP	aux	16
15	n't	not											RB	neg	16
16	know	know		vbmain	vblex	pres	simple	active					VB	parataxis	19
17	,	,											,	punct	19
18	that	that		pro	dem	sg							DT	nsubj	19
19	poses	pose		vbmain	vblex	pres	simple	active					VBZ	conj	3
20	an	an		dt									DT	det	22
21	interesting	interesting	attr+npremod	jj	attr								JJ	amod	22
22	question	question		nn		nom							NN	dobj	19
23	...	...											:	punct	3

#sentid = 403
0													_SP	dep	3
1	so	so		rb	link								RB	advmod	3
2	it	it		pro	3rd	sg							PRP	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	not	not											RB	neg	3
5	that	that											IN	mark	6
6	the	the											DT	dep	3
7	,	,											,	punct	3
8	that	that		comp	comp_that								IN	mark	18
9	the	the		dt	art								DT	det	10
10	argument	argument		nn		nom							NN	nsubj	18
11	he	he		pro	3rd	sg							PRP	nsubj	13
12	has	have		vbaux									VBZ	aux	13
13	given	give	finitecls+rel	vbmain	vblex	pres	perf	active	nmod_cls		rel	reldel	VBN	relcl	10
14	against	against	in+advl	in	advl								IN	prep	13
15	the	the		dt	art								DT	det	17
16	brain	brain	nn+npremod	nn			npremod						NN	compound	17
17	theory	theory		nn		nom							NN	pobj	14
18	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	3
19	actually	actually	rb+advl	rb	advl	ly							RB	advmod	18
20	,	,											,	punct	18
21	a	a		dt	art								DT	det	23
22	good	good		jj	attr								JJ	amod	23
23	one	one											CD	attr	18
24	.	.											.	punct	3

#sentid = 404
0	his	his		dt	poss	sg							PRP$	poss	1
1	argument	argument		nn		nom							NN	nsubj	2
2	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	where	where		comp	comp_wh								WRB	advmod	4
4	do	do	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	2
5	you	you		pro	2nd	sg							PRP	dep	9
6	who	who											WP	dobj	9
7	do	do		vbaux									VBP	aux	9
8	you	you		pro	2nd	sg							PRP	nsubj	9
9	punish	punish		vbmain	vblex	pres	simple	active					VB	nsubj	4
10	,	,											,	punct	9
11	the	the		dt	art								DT	det	12
12	brain	brain	appos+npostmod	nn			nappos						NN	appos	8
13	or	or		cc	phrs								CC	cc	12
14	the	the		dt	art								DT	det	15
15	body	body		nn									NN	conj	12
16	?	?											.	punct	2

#sentid = 405
0	who	who											WP	dobj	3
1	do	do		vbaux									VBP	aux	3
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	put	put		vbmain	vblex	pres	simple	active					VB	ROOT	3
4	in	in	in+advl	in	advl								IN	prep	3
5	prison	prison		nn									NN	pobj	4
6	?	?											.	punct	3

#sentid = 406
0	well	well											UH	intj	11
1	if	if		cs	cnd								IN	mark	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBZ	advcl	11
4	the	the		dt	art								DT	det	5
5	argument	argument		nn		nom							NN	attr	3
6	,	,											,	punct	11
7	uh	uh											UH	intj	11
8	that	that		pro	dem	sg							DT	nsubj	11
9	does	do		vbaux									VBZ	aux	11
10	n't	not											RB	neg	11
11	show	show		vbmain	vblex	pres	simple	active					VB	ROOT	11
12	,	,											,	punct	11
13	just	just	rb+advl	rb	advl								RB	advmod	18
14	because	because		cs	cos								IN	mark	18
15	you	you		pro	2nd	sg							PRP	nsubj	18
16	do	do		vbaux									VBP	aux	18
17	n't	not											RB	neg	18
18	put	put	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		causative		VB	advcl	11
19	the	the		dt	art								DT	det	20
20	brain	brain		nn									NN	dobj	18
21	in	in	in+advl	in	advl								IN	prep	18
22	prison	prison		nn									NN	pobj	21
23	that	that		comp	comp_that								IN	mark	27
24	the	the		dt	art								DT	det	25
25	brain	brain		nn									NN	nsubj	27
26	,	,											,	punct	27
27	is	be		vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	csubj	32
28	n't	not											RB	neg	27
29	the	the		dt	art								DT	det	30
30	one	one		nn									NN	attr	27
31	,	,											,	punct	27
32	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	11
33	n't	not											RB	neg	32
34	you	you		pro	2nd	sg							PRP	attr	32
35	as	as	in+advl	in	advl								IN	prep	32
36	the	the		dt	art								DT	det	37
37	one	one		nn	other	pl							NN	pobj	35
38	that	that		relpro	relpro_that	sg							WDT	nsubj	39
39	's	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	37
40	responsible	responsible		jj	pred								JJ	acomp	39
41	.	.											.	punct	11

#sentid = 407
0													_SP	dep	0
1	mhm	mhm											UH	intj	0
2													_SP	dep	1

#sentid = 408
0	so	so		rb	link								RB	advmod	3
1	that	that											IN	mark	3
2	i	i		pro	1st	sg							PRP	nsubj	3
3	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	3
4	is	be		vbmain	be	pres	simple	active					VBZ	expl	5
5	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBZ	advcl	21
6	some	some		dt									DT	det	7
7	support	support		nn									NN	attr	5
8	for	for	in+npostmod	in	nmod								IN	prep	7
9	your	your		dt	poss								PRP$	poss	10
10	view	view		nn									NN	pobj	8
11	,	,											,	punct	21
12	that	that		cs	cs_othr								IN	mark	21
13	maybe	maybe	rb+advl	rb	advl								RB	advmod	21
14	his	his		dt	poss	sg							PRP$	poss	16
15	his	his		dt	poss	sg							PRP$	poss	16
16	argument	argument		nn		nom							NN	nsubj	21
17	against	against	in+npostmod	in	nmod								IN	prep	16
18	the	the		dt	art								DT	det	20
19	brain	brain	nn+npremod	nn			npremod						NN	compound	20
20	theory	theory		nn		nom							NN	pobj	17
21	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBZ	advcl	3
22	n't	not											RB	neg	21
23	as	as		rb	adjmod								RB	advmod	24
24	strong	strong		jj	pred								JJ	acomp	21
25	as	as		cs	cs_othr								IN	mark	27
26	it	it		pro	3rd	sg							PRP	nsubj	27
27	looks	look	finitecls+advl	vbmain	prepv	pres	simple	active	advlcls		other_advl		VBZ	advcl	24
28	at	at	in+advl	in	advl								IN	prep	27
29	first	first	attr+npremod	jj	attr								JJ	amod	30
30	sight	sight		nn									NN	pobj	28
31	.	.											.	punct	3

#sentid = 409
0													_SP	dep	0
1	yeah	yeah											UH	intj	0

#sentid = 410
0													_SP	dep	14
1	um	um											UH	intj	14
2	,	,											,	punct	14
3	for	for	in+advl	in	advl								IN	prep	14
4	the	the		dt	art								DT	det	6
5	third	third	attr+npremod	jj	attr								JJ	amod	6
6	one	one		nn	other	pl							NN	pobj	3
7	,	,											,	punct	3
8	like	like		cs	cs_othr								IN	mark	14
9	i	i		pro	1st	sg							PRP	dep	14
10	i	i		pro	1st	sg							PRP	nsubj	14
11	did	do		vbaux									VBD	aux	14
12	n't	not											RB	neg	14
13	quite	quite	rb+advl	rb	advl		splaux						RB	advmod	14
14	get	get		vbmain	vblex	past	simple	active			other_advl		VB	ROOT	14
15	it	it		pro	3rd	sg							PRP	dobj	14
16	i	i		pro	1st	sg							PRP	nsubj	17
17	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	14
18	,	,											,	punct	14
19	but	but		cc	cls								CC	cc	14
20	where	where		rb	advl								WRB	advmod	22
21	he	he		pro	3rd	sg							PRP	nsubj	22
22	says	say	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	42
23	that	that		comp	comp_that								IN	mark	30
24	where	where		comp	comp_wh								WRB	advmod	30
25	,	,											,	punct	30
26	the	the		dt	art								DT	det	27
27	point	point		nn									NN	nsubj	30
28	of	of	of+npostmod	in	nmod								IN	prep	27
29	view	view		nn									NN	pobj	28
30	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	22
31	(	(											-LRB-	punct	30
32	whereever	whereever											XX	dep	30
33	)	)											-RRB-	punct	30
34	(	(											-LRB-	punct	30
35	xx	xx											XX	dep	30
36	)	)											-RRB-	punct	30
37	i	i		pro	1st	sg							PRP	nsubj	38
38	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	42
39	i	i		pro	1st	sg							PRP	nsubj	42
40	could	could		vbaux	mod	pos							MD	aux	42
41	n't	not											RB	neg	42
42	understand	understand		vbmain	vblex	vp_w_modal	simple	active					VB	conj	14
43	what	what		comp	comp_wh								WP	dobj	46
44	he	he		pro	3rd	sg							PRP	nsubj	46
45	's	be		vbaux									VBZ	aux	46
46	saying	say	whcls+vcomp	vbmain	vblex	pres	prog	active	compcls	whcls	vcomp		VBG	ccomp	42
47	.	.											.	punct	42

#sentid = 411
0													_SP	dep	3
1	the	the		dt	art								DT	det	3
2	third	third	attr+npremod	jj	attr								JJ	amod	3
3	point	point		nn									NN	ROOT	3
4	?	?											.	punct	3

#sentid = 412
0													_SP	dep	0
1	for	for		in	in_othr								IN	prep	0
2	the	the		dt	art								DT	det	3
3	point	point		nn									NN	pobj	1
4	of	of	of+npostmod	in	nmod								IN	prep	3
5	view	view		nn									NN	pobj	4
6	?	?											.	punct	1

#sentid = 413
0	um	um											UH	intj	5
1	,	,											,	punct	5
2	point	point		nn									NN	nsubj	5
3	of	of	of+npostmod	in	nmod								IN	prep	2
4	view	view		nn									NN	pobj	3
5	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	5
6	where	where		rb	advl								WRB	advmod	8
7	it	it		pro	3rd	sg							PRP	nsubj	8
8	seems	seem	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	5
9	to	to	in+advl	in	advl								IN	prep	8
10	you	you		pro	2nd	sg							PRP	pobj	9
11	that	that		comp	comp_that								IN	mark	14
12	you	you		pro	2nd	sg							PRP	nsubjpass	14
13	're	be		vbaux									VBP	auxpass	14
14	located	locate	thatcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls	thatcls	vcomp		VBN	ccomp	8
15	.	.											.	punct	5

#sentid = 414
0	so	so		rb	link								RB	advmod	10
1	,	,											,	punct	10
2	wherever	wherever		rb	advl								WRB	advmod	10
3	,	,											,	punct	7
4	you	you		pro	2nd	sg							PRP	nsubj	5
5	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	7
6	it	it		pro	3rd	sg							PRP	nsubj	7
7	seems	seem		vbmain	vblex	pres	simple	active					VBZ	parataxis	10
8	to	to											TO	xcomp	7
9	,	,											,	punct	10
10	seems	seem		vbmain	vblex	pres	simple	active					VBZ	ROOT	10
11	to	to	in+advl	in	advl								IN	prep	10
12	you	you		pro	2nd	sg							PRP	pobj	11
13	now	now	rb+advl	rb	advl								RB	advmod	10
14	that	that		comp	comp_that								IN	mark	16
15	you	you		pro	2nd	sg							PRP	nsubj	16
16	're	be		vbmain	be	pres	simple	active	compcls	thatcls			VBP	ccomp	13
17	in	in	in+advl	in	advl								IN	prep	16
18	this	this		dt	dt_dem								DT	det	19
19	classroom	classroom		nn									NN	pobj	17
20	on	on	in+npostmod	in	nmod								IN	prep	19
21	the	the		dt	art								DT	det	23
22	second	second	attr+npremod	jj	attr								JJ	amod	23
23	floor	floor		nn		nom							NN	pobj	20
24	of	of	of+npostmod	in	nmod								IN	prep	23
25	Mason	mason		nn		proper	npremod						NNP	compound	26
26	Hall	hall		nn		proper							NNP	pobj	24
27	and	and		cc	cls								CC	cc	16
28	,	,											,	punct	16
29	his	his		dt	poss	sg							PRP$	poss	33
30	o-	o-											XX	dep	33
31	his	his		dt	poss	sg							PRP$	poss	32
32	view	view		nn									NN	nsubj	33
33	is	be		vbmain	be	pres	simple	active					VBZ	parataxis	38
34	,	,											,	punct	33
35	the	the		dt	art								DT	det	37
36	third	third	attr+npremod	jj	attr								JJ	amod	37
37	view	view		nn									NN	nsubj	38
38	is	be		vbmain	be	pres	simple	active					VBZ	conj	16
39	,	,											,	punct	38
40	well	well											UH	intj	44
41	that	that		pro	dem	sg							DT	nsubj	44
42	ca	can		vbaux	mod								MD	aux	44
43	n't	not											RB	neg	44
44	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	38
45	wrong	wrong		jj	pred								JJ	acomp	44
46	.	.											.	punct	10

#sentid = 415
0	wherever	wherever		rb	advl								WRB	advmod	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	seems	seem	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	12
3	to	to	in+advl	in	advl								TO	prep	2
4	that	that											IN	dep	10
5	you	you		pro	2nd	sg							PRP	dep	10
6	,	,											,	punct	10
7	located	locate		vbmain	vblex	nonfinite	simple	active		edcls			VBN	dep	10
8	,	,											,	punct	10
9	you	you		pro	2nd	sg							PRP	nsubj	10
10	're	be		vbmain	be	pres	simple	active	compcls		incomp	compdel	VBP	pcomp	3
11	that	that		pro	dem	sg							DT	nsubj	12
12	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	12
13	where	where		rb	advl								WRB	advmod	15
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	are	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBP	advcl	12
16	.	.											.	punct	12

#sentid = 416
0													_SP	dep	0
1	okay	okay											UH	punct	0
2	.	.											.	punct	1

#sentid = 417
0													_SP	dep	28
1	so	so		rb	link								RB	advmod	8
2	,	,											,	punct	5
3	i	i		pro	1st	sg							PRP	nsubj	4
4	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	5
5	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	8
6	n't	not											RB	neg	5
7	a-	a-											DT	punct	5
8	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	28
9	n't	not											RB	neg	8
10	that	that		pro	dem	sg							DT	nsubj	8
11	true	true		jj	pred								JJ	acomp	8
12	for	for	in+advl	in	advl								IN	prep	8
13	all	all		dt									DT	det	15
14	practical	practical	attr+npremod	jj	attr								JJ	amod	15
15	purposes	purpose		nn	pl								NNS	pobj	12
16	,	,											,	punct	28
17	i	i		pro	1st	sg							PRP	nsubj	18
18	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	28
19	even	even	rb+advl	rb	advl								RB	advmod	22
20	if	if		cs	cnd								IN	mark	22
21	i	i		pro	1st	sg							PRP	nsubj	22
22	'm	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBP	advcl	28
23	wrong	wrong		jj	pred								JJ	acomp	22
24	,	,											,	punct	28
25	i	i		pro	1st	sg							PRP	nsubj	26
26	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	28
27	who	who											WP	nsubj	28
28	cares	care		vbmain	vblex	pres	simple	active					VBZ	ROOT	28
29	whether	whether		cs	cs_othr								IN	mark	31
30	i	i		pro	1st	sg							PRP	nsubj	31
31	know	know		vbmain	vblex	pres	simple	active	compcls		other_advl	compdel	VBP	ccomp	28
32	i	i		pro	1st	sg							PRP	nsubj	33
33	'm	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	31
34	still	still	rb+advl	rb	advl								RB	advmod	33
35	here	here	rb+advl	rb	advl								RB	advmod	33
36	.	.											.	punct	28

#sentid = 418
0	so	so		rb	link								RB	advmod	87
1													_SP	dep	87
2	well	well											UH	intj	87
3	,	,											,	punct	87
4													_SP	dep	87
5	when	when		rb	advl								WRB	advmod	8
6	you	you		pro	2nd	sg							PRP	nsubj	8
7	're	be		vbaux									VBP	aux	8
8	dreaming	dream	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls	whcls			VBG	advcl	29
9	though	though		cs	con								IN	mark	11
10	you	you		pro	2nd	sg							PRP	nsubj	11
11	think	think	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		concessive		VBP	advcl	8
12	you	you		pro	2nd	sg							PRP	nsubj	13
13	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	11
14	somewhere	somewhere		rb	othr								RB	advmod	15
15	el-	el-	rb+advl	rb	advl								XX	advmod	13
16	like	like											UH	intj	29
17	,	,											,	punct	29
18	when	when		rb	advl								WRB	advmod	22
19	yo-	yo-											XX	dep	22
20	your	your		dt	poss								PRP$	poss	21
21	body	body		nn									NN	nsubj	22
22	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	29
23	actually	actually	rb+advl	rb	advl	ly							RB	advmod	22
24	in	in	in+advl	in	advl								IN	prep	22
25	your	your		dt	poss								PRP$	poss	26
26	bed	bed		nn									NN	pobj	24
27	,	,											,	punct	29
28	you	you		pro	2nd	sg							PRP	nsubj	29
29	think	think		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	87
30	you	you		pro	2nd	sg							PRP	nsubj	32
31	could	could		vbaux	mod	pos							MD	aux	32
32	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	29
33	in	in	in+advl	in	advl								IN	prep	32
34	space	space		nn									NN	pobj	33
35	and	and		cc									CC	cc	33
36	,	,											,	punct	33
37	you	you		pro	2nd	sg							PRP	nsubj	38
38	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	33
39	,	,											,	punct	33
40	in	in											IN	conj	33
41	(	(											-LRB-	punct	40
42	xx	xx											XX	pobj	40
43	)	)											-RRB-	punct	29
44	wherever	wherever		rb	advl								WRB	advmod	47
45	your	your		dt	poss								PRP$	poss	46
46	dream	dream		nn									NN	nsubj	47
47	takes	take	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	29
48	you	you		pro	2nd	sg							PRP	dobj	47
49	,	,											,	punct	29
50													_SP	dep	29
51	mhm	mhm											UH	dep	29
52													_SP	dep	29
53	so	so		rb	link								RB	advmod	60
54													_SP	dep	60
55	w-	w-											XX	dep	60
56	at	at	in+advl	in	advl								IN	prep	60
57	that	that		dt	dt_dem								DT	det	58
58	point	point		nn									NN	pobj	56
59	you	you		pro	2nd	sg							PRP	nsubj	60
60	're	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	87
61	probably	probably	rb+advl	rb	advl	ly							RB	advmod	60
62	,	,											,	punct	60
63	i	i		pro	1st	sg							PRP	nsubj	64
64	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	60
65	,	,											,	punct	60
66	so	so		cc	cls								RB	cc	60
67	like	like											UH	intj	69
68	you	you		pro	2nd	sg							PRP	nsubj	69
69	're	be		vbmain	be	pres	simple	active					VBP	conj	60
70	like	like											UH	intj	69
71	i	i		pro	1st	sg							PRP	dobj	73
72	i	i		pro	1st	sg							PRP	nsubj	73
73	do	do		vbmain	vblex	pres	simple	active					VBP	parataxis	69
74	n't	not											RB	neg	73
75	there	there											EX	expl	76
76	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	69
77	anything	anything		nn		nom							NN	attr	76
78	wrong	wrong		jj	attr								JJ	amod	77
79	with	with	in+jcomp	in	jcomp								IN	prep	78
80	that	that		pro	dem	sg							DT	pobj	79
81	,	,											,	punct	87
82	i	i		pro	1st	sg							PRP	nsubj	83
83	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	87
84	i	i		pro	1st	sg							PRP	nsubj	87
85	do	do		vbaux									VBP	aux	87
86	n't	not											RB	neg	87
87	know	know		vbmain	prepv	pres	simple	active					VB	ROOT	87
88	about	about	in+advl	in	advl								IN	prep	87
89	that	that		pro	dem	sg							DT	pobj	88
90													_SP	dep	87

#sentid = 419
0	(	(											-LRB-	ROOT	0
1	xx	xx											XX	punct	0
2	)	)											-RRB-	punct	0

#sentid = 420
0													_SP	dep	0

#sentid = 421
0	(	(											-LRB-	ROOT	0

#sentid = 422
0	xx	xx											XX	ROOT	0

#sentid = 423
0	)	)											-RRB-	ROOT	0

#sentid = 424
0													_SP	dep	0

#sentid = 425
0	i	i		pro	1st	sg							PRP	nsubj	2
1	'm	be		vbaux									VBP	aux	2
2	gon	go											TO	ROOT	2
3	na	to		vbaux									TO	aux	4
4	go	go		vbmain	vblex	nonfinite	simple	active	compcls			compdel	VB	xcomp	2
5	,	,											,	punct	4
6	check	check		vbmain	vblex	nonfinite	simple	active					VB	dep	4
7	on	on	in+advl	in	advl								IN	prep	6
8	some	some											DT	pobj	7
9	of	of		in	in_othr								IN	prep	8
10	the	the		dt	art								DT	det	12
11	other	other	attr+npremod	jj	attr								JJ	amod	12
12	groups	group		nn	pl								NNS	pobj	9
13	.	.											.	punct	4

#sentid = 426
0													_SP	dep	3
1	oh	oh											UH	intj	3
2	,	,											,	punct	3
3	okay	okay											UH	ROOT	3
4	.	.											.	punct	3

#sentid = 427
0													_SP	dep	0
1	i	i		pro	1st	sg							PRP	nsubj	4
2	do	do		vbaux									VBP	aux	4
3	n't	not											RB	neg	4
4	know	know		vbmain	in_othr	pres	simple	active					VB	prep	0
5	,	,											,	punct	4
6	point	point		nn									NN	npadvmod	4
7	of	of		in	nmod								IN	prep	6
8	view	view		nn									NN	pobj	7
9													_SP	dep	0

#sentid = 428
0	i	i		pro	1st	sg							PRP	nsubj	3
1	do	do		vbaux									VBP	aux	3
2	n't	not											RB	neg	3
3	understand	understand		vbmain	vblex	pres	simple	active					VB	ROOT	3
4	that	that		dt	dt_dem								DT	det	5
5	one	one		pro	other	pl							CD	dobj	3
6													_SP	dep	3

#sentid = 429
0	(	(											-LRB-	ROOT	0
1	xx	xx											XX	punct	0
2	)	)											XX	punct	1

#sentid = 430
0													_SP	dep	0

#sentid = 431
0	i	i		pro	1st	sg							PRP	nsubj	3
1	do	do		vbaux									VBP	aux	3
2	n't	not											RB	neg	3
3	see	see		vbmain	vblex	pres	simple	active					VB	ROOT	3
4	the	the		dt	art								DT	det	5
5	point	point		nn									NN	dobj	3
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	,	,											,	punct	6
8	i	i		pro	1st	sg							PRP	nsubj	9
9	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	6
10	have	have		vbmain	vblex	pres	simple	active					VBP	parataxis	6
11	yo-	yo-											XX	punct	6
12													_SP	dep	6
13	did	do		vbaux									VBD	aux	15
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	see	see		vbmain	vblex	past	simple	active	compcls		vcomp		VB	ccomp	3
16	(	(											-LRB-	punct	15
17	the	the		dt	art								DT	det	18
18	like	like											UH	intj	15
19	)	)											-RRB-	punct	15
20	for	for	in+advl	in	advl								IN	prep	15
21	the	the		dt	art								DT	det	24
22	past	past	attr+npremod	jj	attr								JJ	amod	24
23	five	five											CD	nummod	24
24	classes	class		nn	pl								NNS	pobj	20
25	?	?											.	punct	15

#sentid = 432
0													_SP	dep	2
1	the	the		dt	art								DT	det	2
2	point	point		nn									NN	ROOT	2
3	of	of	of+npostmod	in	nmod								IN	prep	2
4	point	point		nn									NN	pobj	3
5	of	of	of+npostmod	in	nmod								IN	prep	4
6	view	view		nn									NN	pobj	5
7	?	?											.	punct	2

#sentid = 433
0													_SP	dep	9
1	for	for	in+advl	in	advl								IN	prep	9
2	the	the		dt	art								DT	det	5
3	past	past	attr+npremod	jj	attr								JJ	amod	5
4	five	five											CD	nummod	5
5	classes	class		nn	pl								NNS	pobj	1
6	we	we		pro	1st								PRP	nsubj	9
7	're	be		vbaux									VBP	aux	9
8	just	just	rb+advl	rb	advl		splaux						RB	advmod	9
9	discussing	discuss		vbmain	vblex	pres	prog	active					VBG	ROOT	9
10	like	like											UH	intj	9
11													_SP	dep	9
12	i	i		pro	1st	sg							PRP	nsubj	15
13	do	do		vbaux									VBP	aux	15
14	n't	not											RB	neg	15
15	know	know		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	22
16	weird	weird	attr+npremod	jj	attr								JJ	amod	17
17	cases	case		nn	pl								NNS	dobj	15
18	i	i		pro	1st	sg							PRP	nsubj	19
19	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	22
20	,	,											,	punct	22
21	it	it		pro	3rd	sg							PRP	nsubj	22
22	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	9
23	just	just	rb+jjrbmod	rb	othr								RB	advmod	25
24	the	the		dt	art								DT	det	25
25	same	same											JJ	attr	22
26	(	(											-LRB-	punct	9
27	xx	xx											XX	punct	9
28	)	)											-RRB-	punct	9

#sentid = 434
0													_SP	dep	0
1	so	so		cc									CC	cc	0
2	,	,											,	punct	4
3	how	how		rb	advl								WRB	advmod	4
4	is	be		vbmain	be	pres	simple	active					VBZ	dep	11
5	the	the											DT	dep	11
6	,	,											,	punct	11
7	o-	o-											XX	dep	11
8	how	how		rb	advl								WRB	advmod	11
9	does	do		vbaux									VBZ	aux	11
10	he	he		pro	3rd	sg							PRP	nsubj	11
11	disprove	disprove		dt	vblex	pres	simple	active					VB	det	0
12	,	,											,	punct	11
13	the	the		dt	art								DT	det	14
14	point	point		nn									NN	dobj	11
15	of	of	of+npostmod	in	nmod								IN	prep	14
16	view	view		nn									NN	pobj	15
17	?	?											.	punct	11

#sentid = 435
0													_SP	dep	4
1	i	i		pro	1st	sg							PRP	nsubj	4
2	do	do		vbaux									VBP	aux	4
3	n't	not											RB	neg	4
4	know	know		vbmain	vblex	pres	simple	active					VB	ROOT	4
5	,	,											,	punct	4
6													_SP	dep	4
7	(	(											-LRB-	punct	4
8	xx	xx											XX	punct	4
9	)	)											-RRB-	punct	4
10													_SP	dep	4

#sentid = 436
0	i	i		pro	1st	sg							PRP	nsubj	3
1	could	could		vbaux	mod	pos							MD	aux	3
2	n't	not											RB	neg	3
3	tell	tell		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	3
4	where	where											WRB	dep	11
5	like	like											UH	intj	4
6	the	the		dt	art								DT	det	7
7	point	point		nn									NN	nsubj	4
8	of	of	of+npostmod	in	nmod								IN	prep	7
9	,	,											,	punct	11
10	i	i		pro	1st	sg							PRP	nsubj	11
11	love	love	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	3
12	how	how		comp	comp_wh								WRB	advmod	16
13	like	like											UH	intj	16
14	,	,											,	punct	16
15	i	i		pro	1st	sg							PRP	nsubj	16
16	love	love	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	11
17	how	how		comp	comp_wh								WRB	advmod	19
18	i	i		pro	1st	sg							PRP	nsubj	19
19	'm	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	16
20	like	like											UH	intj	19
21	the	the		dt	art								DT	det	23
22	only	only	attr+npremod	jj	attr								JJ	amod	23
23	one	one		nn									NN	attr	19
24	who	who		relpro	relpro_wh								WP	nsubj	25
25	read	read	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls	whcls	rel		VBD	relcl	23
26	it	it		pro	3rd	sg							PRP	dobj	25
27	.	.											.	punct	11

#sentid = 437
0	seeing	see		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	ROOT	0
1	how	how		comp	comp_wh								WRB	advmod	10
2	i	i		pro	1st	sg							PRP	nsubj	10
3	usually	usually	rb+advl	rb	advl	ly							RB	advmod	10
4	never	never											RB	neg	10
5	,	,											,	punct	10
6	you	you		pro	2nd	sg							PRP	nsubj	7
7	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	10
8	i	i		pro	1st	sg							PRP	nsubj	10
9	usually	usually	rb+advl	rb	advl	ly							RB	advmod	10
10	do	do	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	0
11	my	my		dt	poss								PRP$	poss	12
12	homework	homework		nn									NN	dobj	10
13	just	just	rb+advl	rb	advl								RB	advmod	17
14	right	right	rb+advl	rb	advl								RB	advmod	17
15	before	before		cs	cs_othr								IN	mark	17
16	i	i		pro	1st	sg							PRP	nsubj	17
17	come	come	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	10
18	to	to	in+advl	in	advl								IN	prep	17
19	class	class		nn									NN	pobj	18
20	,	,											,	punct	10
21	but	but		cc	cls								CC	cc	10
22	,	,											,	punct	10
23	no	no											UH	intj	25
24	i	i		pro	1st	sg							PRP	nsubj	25
25	had	have		vbmain	vblex	past	simple	active					VBD	conj	10
26	trouble	trouble		nn									NN	dobj	25
27	like	like											UH	intj	26
28	figuring	figure	ingcls+rel	vbmain	phrsv	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	26
29	out	out		rb	prtcle								RP	prt	28
30	where	where		comp	comp_wh								WRB	advmod	32
31	he	he		pro	3rd	sg							PRP	nsubj	32
32	stopped	stop	whcls+vcomp	vbmain	vblex	past	simple	active	compcls	whcls	vcomp		VBD	ccomp	28
33	arguing	argue	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	32
34	for	for	in+advl	in	advl								IN	prep	33
35	point	point		nn									NN	pobj	34
36	of	of	of+npostmod	in	nmod								IN	prep	35
37	view	view		nn									NN	pobj	36
38	and	and		cc	cls								CC	cc	32
39	where	where		rb	advl								WRB	advmod	41
40	it	it		pro	3rd	sg							PRP	nsubj	41
41	was	be		vbmain	be	past	simple	active					VBD	conj	32
42	just	just	rb+advl	rb	advl								RB	advmod	45
43	like	like											UH	intj	42
44	,	,											,	punct	42
45	continuing	continue	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	41
46	his	his		dt	poss	sg							PRP$	poss	47
47	story	story		nn		nom							NN	dobj	45
48	.	.											.	punct	0

#sentid = 438
0													_SP	dep	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	2
3	he	he		pro	3rd	sg							PRP	nsubj	8
4	probably	probably	rb+advl	rb	advl	ly							RB	advmod	8
5	would	would		vbaux	mod	prd							MD	aux	8
6	have	have		vbaux									VB	aux	8
7	,	,											,	punct	8
8	corrected	correct	thatcls+vcomp	vbmain	vblex	vp_w_modal	perf	active	compcls		vcomp	compdel	VBN	ccomp	2
9	it	it		pro	3rd	sg							PRP	dobj	8
10	when	when		rb	advl								WRB	advmod	12
11	he	he		pro	3rd	sg							PRP	nsubj	12
12	said	say	finitecls+advl	vbmain	vblex	past	simple	active	advlcls	whcls			VBD	advcl	8
13	,	,											,	punct	12
14	the	the		dt	art								DT	det	15
15	soul	soul		nn									NN	nsubj	16
16	equaled	equal		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	35
17	the	the		dt	art								DT	det	18
18	b-	b-		nn									NN	dobj	16
19	(	(											-LRB-	punct	18
20	on	on	in+npostmod	in	nmod								IN	prep	18
21	)	)											-RRB-	punct	20
22	page	page		nn		nom							NN	pobj	20
23	two	two											CD	nummod	22
24	-	-											HYPH	punct	22
25	twenty	twenty											CD	nummod	22
26	-	-											HYPH	punct	22
27	four	four											CD	nummod	22
28	,	,											,	punct	35
29	you	you		pro	2nd	sg							PRP	nsubj	30
30													_SP	dep	35
31	(	(											-LRB-	punct	30
32	okay	okay											UH	intj	30
33	)	)											-RRB-	punct	32
34													_SP	dep	35
35	know	know		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	41
36	how	how		comp	comp_wh								WRB	advmod	38
37	she	she		pro	3rd	sg							PRP	nsubj	38
38	said	say	whcls+vcomp	vbmain	vblex	past	simple	active	compcls	whcls	vcomp		VBD	ccomp	35
39	,	,											,	punct	35
40	it	it		pro	3rd	sg							PRP	nsubj	41
41	's	be		vbmain	be	pres	simple	active	compcls			compdel	VBZ	ccomp	51
42	the	the		dt	art								DT	det	44
43	corrected	correct	attr+npremod	jj	attr	ed							VBN	amod	44
44	point	point		nn									NN	attr	41
45	of	of	of+npostmod	in	nmod								IN	prep	44
46	view	view		nn									NN	pobj	45
47													_SP	dep	41
48	yeah	yeah											UH	intj	41
49													_SP	dep	41
50	so	so	rb+advl	rb	advl								RB	advmod	41
51	probably	probably											RB	ccomp	12
52													_SP	dep	2
53	somewhere	somewhere	rb+advl	rb	advl								RB	advmod	63
54													_SP	dep	53
55	so	so	rb+jjrbmod	rb	othr								RB	advmod	56
56	somewhere	somewhere	rb+advl	rb	advl								RB	advmod	63
57	,	,											,	punct	63
58	i	i		pro	1st	sg							PRP	nsubj	63
59	(	(											-LRB-	punct	58
60	s-	s-		in	in_othr								XX	prep	59
61	also	also		rb	othr								RB	advmod	60
62	)	)											-RRB-	punct	60
63	remember	remember	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	2
64	seeing	see	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	63
65	that	that		pro	dem	sg							DT	dobj	64
66	because	because		cs	cos								IN	mark	69
67	like	like											UH	intj	69
68	i	i		pro	1st	sg							PRP	nsubj	69
69	knew	know	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		causative		VBD	advcl	63
70	she	she		pro	3rd	sg							PRP	nsubj	71
71	said	say	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	69
72	it	it		pro	3rd	sg							PRP	nsubj	73
73	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	71
74	like	like											UH	intj	73
75	the	the		dt	art								DT	det	77
76	corrected	correct	attr+npremod	jj	attr	ed							VBN	amod	77
77	version	version		nn									NN	attr	73
78	of	of	of+npostmod	in	nmod								IN	prep	77
79	the	the		dt	art								DT	det	83
80	point	point	nn+npremod	nn			npremod						NN	nmod	83
81	of	of	of+npostmod	in	nmod								IN	prep	80
82	view	view		nn									NN	pobj	81
83	thing	thing		nn		nom							NN	pobj	78
84	,	,											,	punct	63
85	but	but		cc	cls								CC	cc	63
86	i	i		pro	1st	sg							PRP	nsubj	89
87	do	do		vbaux									VBP	aux	89
88	n't	not											RB	neg	89
89	understand	understand		vbmain	vblex	pres	simple	active					VB	conj	63
90													_SP	dep	89
91	yeah	yeah											UH	intj	89
92													_SP	dep	89
93	where	where		comp	comp_wh								WRB	advmod	99
94	the	the		dt	art								DT	det	98
95	point	point	nn+npremod	nn			npremod						NN	nmod	98
96	of	of	of+npostmod	in	nmod								IN	prep	95
97	view	view		nn									NN	pobj	96
98	thing	thing		nn		nom							NN	nsubj	99
99	was	be	whcls+vcomp	vbmain	be	past	simple	active	compcls	whcls	vcomp		VBD	ccomp	89
100	like	like											UH	intj	99
101	,	,											,	punct	99
102													_SP	dep	99
103	wrong	wrong											JJ	intj	99
104													_SP	dep	99
105	wrong	wrong											JJ	intj	99
106													_SP	dep	99
107	yeah	yeah											UH	intj	99
108													_SP	dep	89
109	like	like											UH	intj	111
110	i	i		pro	1st	sg							PRP	nsubj	111
111	understand	understand	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	2
112	that	that		pro	dem	sg							DT	dobj	111
113													_SP	dep	111
114	because	because		cs	cos								IN	mark	128
115													_SP	dep	128
116	it	it		pro	3rd	sg							PRP	nsubj	118
117	would	would		vbaux	mod	prd							MD	aux	118
118	be	be		vbmain	be	vp_w_modal	simple	active					VB	meta	128
119													_SP	dep	118
120	yeah	yeah											UH	intj	118
121	and	and		cc	cls								CC	cc	118
122	it	it		pro	3rd	sg							PRP	nsubj	123
123	's	be		vbmain	be	pres	simple	active					VBZ	conj	118
124													_SP	dep	118
125	it	it		pro	3rd	sg							PRP	nsubj	128
126	would	would		vbaux	mod	prd							MD	aux	128
127	just	just	rb+advl	rb	advl		splaux						RB	advmod	128
128	be	be	finitecls+advl	vbmain	be	vp_w_modal	simple	active	advlcls		causative		VB	advcl	111
129	another	another		dt									DT	det	130
130	version	version		nn									NN	attr	128
131	of	of	of+npostmod	in	nmod								IN	prep	130
132	point	point		nn									NN	pobj	131
133	of	of	of+npostmod	in	nmod								IN	prep	132
134	view	view		nn									NN	pobj	133
135	like	like											UH	intj	128
136	,	,											,	punct	135
137	like	like											UH	intj	140
138	you	you		pro	2nd	sg							PRP	nsubj	140
139	just	just	rb+advl	rb	advl								RB	advmod	140
140	thinking	think		vbmain	prepv	nonfinite	simple	active		ingcls			VBG	meta	135
141	of	of	in+advl	in	advl								IN	prep	140
142	us	we		pro	pl								PRP	pobj	141
143	,	,											,	punct	140
144	i	i		pro	1st	sg							PRP	nsubj	145
145	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	140
146	just	just	rb+advl	rb	advl								RB	advmod	147
147	correcting	correct		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	meta	140
148	yourself	yourself		pro	2nd								PRP	dobj	147
149	,	,											,	punct	140
150	but	but		cc	cls								CC	cc	140
151	it	it		pro	3rd	sg							PRP	nsubj	153
152	still	still	rb+advl	rb	advl								RB	advmod	153
153	be	be		vbmain	be	nonfinite	simple	active					VB	conj	140
154	point	point		nn									NN	attr	153
155	of	of	of+npostmod	in	nmod								IN	prep	154
156													_SP	dep	155
157	view	view		nn									NN	pobj	155
158	,	,											,	punct	154
159	yeah	yeah											UH	intj	154
160													_SP	dep	153
161	point	point		nn									NN	attr	153
162	of	of	of+npostmod	in	nmod								IN	prep	161
163	view	view		nn									NN	pobj	162
164	,	,											,	punct	161
165	yeah	yeah											UH	intj	161
166	.	.											.	punct	2

#sentid = 439
0	like	like											UH	intj	22
1	,	,											,	punct	22
2	if	if		cs	cnd								IN	mark	6
3	point	point		nn									NN	nsubj	6
4	of	of	of+npostmod	in	nmod								IN	prep	3
5	view	view		nn									NN	pobj	4
6	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBZ	advcl	22
7	just	just	rb+advl	rb	advl								RB	advmod	10
8	where	where		comp	comp_wh								WRB	advmod	10
9	you	you		pro	2nd	sg							PRP	nsubj	10
10	think	think	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	6
11	you	you		pro	2nd	sg							PRP	nsubj	12
12	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	10
13	at	at	in+advl	in	advl								IN	prep	12
14	that	that		dt	dt_dem								DT	det	15
15	moment	moment		nn		nom							NN	pobj	13
16	,	,											,	punct	22
17	then	then		rb	link								RB	advmod	22
18	is	be		vbaux									VBZ	auxpass	22
19	n't	not											RB	neg	22
20	it	it		pro	3rd	sg							PRP	nsubjpass	22
21	continuously	continuously	rb+advl	rb	advl	ly							RB	advmod	22
22	corrected	correct		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	22
23	cuz	cuz		cs	cs_othr								IN	mark	40
24	like	like											UH	intj	39
25	,	,											,	punct	39
26													_SP	dep	39
27	yeah	yeah											UH	intj	29
28	,	,											,	punct	29
29	exactly	exactly	rb+advl	rb	advl	ly							RB	advmod	39
30													_SP	dep	39
31	you	you		pro	2nd	sg							PRP	nsubj	33
32	're	be		vbaux									VBP	aux	33
33	correcting	correct		vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	39
34	where	where		comp	comp_wh								WRB	advmod	36
35	you	you		pro	2nd	sg							PRP	nsubj	36
36	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	33
37	you	you		pro	2nd	sg							PRP	nsubj	39
38	're	be		vbaux									VBP	aux	39
39	gon	go		vbaux									VBG	aux	40
40	na	to	ingcls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	ingcls	other_advl		VBG	advcl	22
41	,	,											,	punct	40
42													_SP	dep	40
43	mhm	mhm											UH	intj	44
44	mhm	mhm											UH	intj	42
45													_SP	dep	44
46	so	so											RB	meta	40
47													_SP	dep	52
48	so	so		rb	link								RB	advmod	52
49	how	how		rb	advl								WRB	advmod	52
50	could	could		vbaux	mod	pos							MD	aux	52
51	that	that		pro	dem	sg							DT	nsubj	52
52	be	be		vbmain	be	vp_w_modal	simple	active					VB	meta	22
53	,	,											,	punct	52
54	a	a		dt	art								DT	det	56
55	different	different	attr+npremod	jj	attr								JJ	amod	56
56	view	view		nn									NN	attr	52
57	?	?											.	punct	52

#sentid = 440
0													_SP	dep	0

#sentid = 441
0	(	(											-LRB-	ROOT	0
1	xx	xx											XX	punct	0
2	)	)											-RRB-	punct	0

#sentid = 442
0													_SP	dep	43
1	yeah	yeah											UH	intj	0
2	,	,											,	punct	1
3	or	or		cc									CC	cc	1
4	,	,											,	punct	3
5	i	i		pro	1st	sg							PRP	nsubj	6
6	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	9
7	it	it		pro	3rd	sg							PRP	nsubj	9
8	might	might		vbaux	mod	pos							MD	aux	9
9	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	1
10	totally	totally	rb+jjrbmod	rb	adjmod	ly							RB	advmod	11
11	different	different		jj	pred								JJ	acomp	9
12	but	but		cc	cls								CC	cc	9
13	she	she		pro	3rd	sg							PRP	nsubj	35
14	just	just	rb+advl	rb	advl								RB	advmod	35
15	,	,											,	punct	35
16	it	it		pro	3rd	sg							PRP	nsubj	35
17	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	35
18	not	not											RB	neg	17
19	like	like		cs	cs_othr								IN	mark	20
20	stated	state		vbmain	vblex	nonfinite	simple	active		edcls	other_advl		VBN	dep	17
21	,	,											,	punct	17
22	like	like											UH	intj	35
23	the	the		dt	art								DT	det	24
24	way	way		nn									NN	nsubj	35
25	it	it		pro	3rd	sg							PRP	nsubjpass	27
26	's	be		vbaux									VBZ	auxpass	27
27	labeled	label	finitecls+rel	vbmain	vblex	pres	simple	pasv_agls	nmod_cls		rel	reldel	VBN	relcl	24
28	as	as	in+advl	in	advl								IN	prep	27
29	corrected	correct	attr+npremod	jj	attr	ed							VBN	amod	30
30	point	point		nn									NN	pobj	28
31	of	of	of+npostmod	in	nmod								IN	prep	30
32	view	view		nn									NN	pobj	31
33	,	,											,	punct	35
34	probably	probably	rb+advl	rb	advl	ly							RB	advmod	35
35	is	be		vbmain	be	pres	simple	active					VBZ	conj	9
36	n't	not											RB	neg	35
37	the	the		dt	art								DT	det	38
38	best	good											JJS	attr	35
39	,	,											,	punct	35
40	but	but		cc	phrs								CC	cc	35
41	no-	no-											UH	punct	35
42	i	i		pro	1st	sg							PRP	nsubj	43
43	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	43
44	no	no		dt									DT	det	45
45	clue	clue		nn									NN	dobj	43
46	what	what											WP	attr	52
47	his	his		dt	poss	sg							PRP$	poss	49
48	final	final	attr+npremod	jj	attr								JJ	amod	49
49	point	point		nn									NN	nsubj	52
50	like	like	in+npostmod	in	nmod								IN	prep	49
51	this	this		pro	dem	sg							DT	pobj	50
52	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	43
53	what	what											WP	attr	55
54	it	it		pro	3rd	sg							PRP	nsubj	55
55	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	52
56	.	.											.	punct	43

#sentid = 443
0													_SP	dep	19
1	cuz	cuz											IN	dep	19
2													_SP	dep	6
3	well	well											UH	intj	6
4	he	he		pro	3rd	sg							PRP	dep	6
5	he	he		pro	3rd	sg							PRP	nsubj	6
6	wants	want		vbmain	in_othr	pres	simple	active					VBZ	prep	1
7	you	you		pro	2nd	sg							PRP	nsubj	9
8	to	to		to									TO	aux	9
9	think	think		vbmain	prepv	nonfinite	simple	active	compcls	tocls	vcomp		VB	ccomp	6
10	about	about	in+advl	in	advl								IN	prep	9
11	it	it		pro	3rd	sg							PRP	pobj	10
12													_SP	dep	19
13	yeah	yeah											UH	intj	19
14													_SP	dep	13
15	well	well											UH	intj	16
16	wait	wait		vbmain	vblex	nonfinite	simple	active					VB	parataxis	19
17	is	be		vbaux									VBZ	aux	19
18	he	he		pro	3rd	sg							PRP	nsubj	19
19	saying	say		vbmain	vblex	pres	prog	active					VBG	ROOT	19
20	that	that		comp	comp_that								IN	mark	24
21	the	the		dt	art								DT	det	23
22	soul	soul	nn+npremod	nn			npremod						NN	compound	23
23	thing	thing		nn		nom							NN	nsubj	24
24	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	19
25	what	what											WP	nsubj	28
26	he	he		pro	3rd	sg							PRP	nsubj	27
27	think	think	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	24
28	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	27
29	cor-	cor-		jj	pred								JJ	acomp	28
30	what	what											WP	nsubj	33
31	he	he		pro	3rd	sg							PRP	nsubj	32
32	thinks	think	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	27
33	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	32
34	correct	correct		jj	pred								JJ	acomp	33
35	?	?											.	punct	24

#sentid = 444
0													_SP	dep	0
1	mm	mm											UH	preconj	0

#sentid = 445
0													_SP	dep	0
1	cuz	cuz		cs	cs_othr								IN	mark	3
2	he	he		pro	3rd	sg							PRP	nsubj	3
3	said	say		vbmain	vblex	past	simple	active	compcls		other_advl	compdel	VBD	pcomp	0
4	like	like											UH	intj	3
5	right	right	rb+jjrbmod	rb	othr								RB	advmod	6
6	here	here	rb+advl	rb	advl								RB	advmod	9
7	my	my		dt	poss								PRP$	poss	8
8	mood	mood		nn									NN	nsubj	9
9	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	3
10	,	,											,	punct	9
11	on	on	in+advl	in	advl								IN	prep	9
12	like	like											UH	intj	11
13	the	the		dt	art								DT	det	14
14	top	top		nn									NN	pobj	11
15	of	of	of+npostmod	in	nmod								IN	prep	14
16	two	two											CD	nummod	20
17	-	-											HYPH	punct	20
18	twenty	twenty											CD	nummod	20
19	-	-											HYPH	punct	20
20	five	five											CD	pobj	15
21	,	,											,	punct	9
22													_SP	dep	9
23	you	you		pro	2nd	sg							PRP	nsubj	24
24	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	9
25	,	,											,	punct	9
26	so	so											RB	meta	9
27													_SP	dep	9
28	okay	okay											UH	intj	36
29	,	,											,	punct	36
30	if	if		cs	cnd								IN	mark	31
31	you	you		pro	2nd	sg							PRP	dep	36
32	,	,											,	punct	36
33	do	do		vbmain	vblex	pres	simple	active					VBP	dep	36
34	you	you		pro	2nd	sg							PRP	nmod	35
35	guys	guy		nn	pl								NNS	nsubj	36
36	wanna	wanna		vbmain	vblex	nonfinite	simple	active					VB	parataxis	37
37	take	take		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	9
38	a	a		dt	art								DT	det	40
39	short	short	attr+npremod	jj	attr								JJ	amod	40
40	break	break		nn									NN	dobj	37
41	?	?											.	punct	9

#sentid = 446
0													_SP	dep	11
1	yeah	yeah											UH	intj	3
2	,	,											,	punct	3
3	sure	sure											UH	intj	11
4													_SP	dep	11
5	okay	okay											UH	dep	11
6	w-	w-											XX	dep	11
7	no	no											DT	quantmod	10
8	more	more		jj	attr								JJR	amod	10
9	than	than											IN	quantmod	10
10	five	five											CD	nummod	11
11	minutes	minute		nn	pl								NNS	ROOT	11
12	.	.											.	punct	11

#sentid = 447
0													_SP	dep	3
1	she	she		pro	3rd	sg							PRP	nsubj	3
2	's	be		vbaux									VBZ	aux	3
3	limiting	limit		vbmain	vblex	pres	prog	active					VBG	ROOT	3
4	us	we		pro	pl								PRP	dobj	3
5	.	.											.	punct	3

#sentid = 448
0													_SP	dep	2
1	five	five											CD	nummod	2
2	minutes	minute		nn	pl								NNS	ROOT	2
3	maximum	maximum		jj	attr								RB	amod	2
4	,	,											,	punct	2
5	and	and		cc	phrs								CC	cc	2
6	then	then	rb+jjrbmod	rb	othr								RB	advmod	8
7	back	back	rb+jjrbmod	rb	othr								RB	advmod	8
8	here	here											RB	conj	2
9	.	.											.	punct	8

#sentid = 449
0													_SP	dep	0
1	okay	okay											UH	intj	0
2	um	um											UH	intj	1
3	...	...											:	punct	2
4	okay	okay											UH	intj	8
5	guys	guy		nn	pl								NNS	npadvmod	8
6	um	um											UH	intj	8
7	,	,											,	punct	8
8	like	like		vbmain	vblex	pres	simple	active					VBP	meta	0
9	to	to		to									TO	aux	10
10	get	get	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	8
11	back	back	rb+advl	rb	advl								RB	advmod	10
12	,	,											,	punct	10
13	back	back	rb+jjrbmod	rb	othr								RB	advmod	14
14	together	together	rb+advl	rb	advl								RB	advmod	10
15	.	.											.	punct	8

#sentid = 450
0	and	and		cc	cls								CC	cc	20
1	just	just	rb+advl	rb	advl								RB	advmod	4
2	to	to		to									TO	aux	4
3	to	to		to									TO	aux	4
4	poll	poll	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls			VB	advcl	20
5	where	where											WRB	pobj	10
6	you	you		pro	2nd	sg							PRP	nmod	7
7	guys	guy		nn	pl								NNS	nsubj	8
8	got	get	finitecls+advl	vbmain	vblex	past	simple	active	advlcls				VBD	advcl	20
9	to	to											TO	dep	8
10	in	in	in+advl	in	advl								IN	prep	8
11	your	your		dt	poss								PRP$	poss	12
12	deliberations	deliberation		nn	pl	nom							NNS	pobj	10
13	,	,											,	punct	20
14	did	do		vbaux									VBD	aux	20
15	you	you		pro	2nd	sg							PRP	dep	20
16	,	,											,	punct	20
17	did	do		vbaux									VBD	aux	20
18	you	you		pro	2nd	sg							PRP	nmod	19
19	guys	guy		nn	pl								NNS	nsubj	20
20	come	come		vbmain	phrsv	past	simple	active					VB	ROOT	20
21	up	up		rb	prtcle								RP	prt	20
22	with	with	in+advl	in	advl								IN	prep	20
23	a	a											DT	pobj	22
24	with	with	in+advl	in	advl								IN	prep	20
25	a	a											DT	pobj	24
26	,	,											,	punct	24
27	with	with		in	in_othr								IN	prep	24
28	a	a		dt	art								DT	det	30
29	best	good	attr+npremod	jj	attr								JJS	amod	30
30	answer	answer		nn		nom							NN	pobj	27
31	?	?											.	punct	20

#sentid = 451
0													_SP	dep	0
1	(	(											-LRB-	punct	2
2	with	with		in	in_othr								IN	prep	0
3	like	like											UH	intj	2
4	)	)											-RRB-	punct	2
5	five	five											CD	pobj	2
6													_SP	dep	2

#sentid = 452
0	i	i		pro	1st	sg							PRP	nsubj	1
1	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	we	we		pro	1st								PRP	nsubj	3
3	came	come	thatcls+vcomp	vbmain	phrsv	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	1
4	up	up		rb	prtcle								RP	prt	3
5	with	with	in+advl	in	advl								IN	prep	3
6	five	five											CD	pobj	5
7	.	.											.	punct	1

#sentid = 453
0													_SP	dep	0
1	five	five											CD	appos	0
2	?	?											.	punct	1

#sentid = 454
0													_SP	dep	2
1	that	that		pro	dem	sg							DT	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	our	our		dt	poss								PRP$	poss	4
4	best	good											JJS	attr	2
5	.	.											.	punct	2

#sentid = 455
0													_SP	dep	0

#sentid = 456
0	how	how											WRB	ROOT	0
1	come	come		vbmain	vblex	nonfinite	simple	active					VB	advmod	0
2	?	?											.	punct	1

#sentid = 457
0													_SP	dep	7
1	um	um											UH	intj	7
2	,	,											,	punct	7
3	beca-	beca-											XX	dep	7
4	well	well											UH	intj	7
5	basically	basically	rb+advl	rb	advl	ly							RB	advmod	7
6	we	we		pro	1st								PRP	nsubj	7
7	looked	look		vbmain	prepv	past	simple	active					VBD	ROOT	7
8	at	at	in+advl	in	advl								IN	prep	7
9	it	it		pro	3rd	sg							PRP	pobj	8
10	as	as	in+advl	in	advl								IN	prep	7
11	,	,											,	punct	10
12	ki-	ki-											XX	punct	10
13	a	a		dt	art								DT	det	14
14	lot	lot		nn									NN	pobj	10
15	like	like	in+npostmod	in	nmod								IN	prep	14
16	three	three											CD	pobj	15
17	,	,											,	punct	10
18													_SP	dep	10
19	mhm	mhm											UH	intj	10
20													_SP	dep	10
21	but	but											CC	pobj	10
22	,	,											,	punct	10
23	with	with											IN	conj	10
24	a	a		dt	art								DT	det	28
25	set	set	attr+npremod	jj	attr	ed							VBN	amod	28
26	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	27
27	of	of		rb	othr								RB	advmod	28
28	standard	standard		nn									NN	pobj	23
29	?	?											.	punct	10

#sentid = 458
0	but	but		cc	cls								CC	cc	5
1	we	we		pro	1st								PRP	nsubj	5
2	did	do		vbaux									VBD	aux	5
3	n't	not											RB	neg	5
4	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	5
5	know	know		vbmain	vblex	past	simple	active					VB	ROOT	5
6	what	what											WP	attr	8
7	that	that		pro	dem	sg							DT	nsubj	8
8	was	be	whcls+vcomp	vbmain	be	past	simple	active	compcls	whcls	vcomp		VBD	ccomp	5
9	,	,											,	punct	5
10	so	so	rb+advl	rb	advl								RB	advmod	5
11	.	.											.	punct	5

#sentid = 459
0	with	with	in+advl	in	advl								IN	prep	14
1	what	what											WP	pobj	5
2	we	we		pro	1st								PRP	nsubj	4
3	could	could		vbaux	mod	pos							MD	aux	4
4	think	think		vbmain	prepv	vp_w_modal	simple	active	compcls		incomp	compdel	VB	pcomp	0
5	of	of	in+advl	in	advl								IN	prep	4
6	as	as	in+advl	in	advl								IN	prep	4
7	being	be	ingcls+incomp	vbmain	be	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	6
8	the	the		dt	art								DT	det	11
9	best	good	attr+npremod	jj	attr								JJS	amod	11
10	set	set	attr+npremod	jj	attr	ed							VBN	amod	11
11	standard	standard		nn									NN	attr	7
12	,	,											,	punct	14
13	we	we		pro	1st								PRP	nsubj	14
14	liked	like		vbmain	vblex	past	simple	active					VBD	ROOT	14
15	it	it		pro	3rd	sg							PRP	dobj	14
16	,	,											,	punct	14
17													_SP	dep	14
18	(	(											-LRB-	punct	20
19	i	i		pro	1st	sg							PRP	nsubj	20
20	think	think		vbmain	vblex	pres	simple	active					VBP	parataxis	14
21	)	)											-RRB-	punct	20

#sentid = 460
0													_SP	dep	8
1	mhm	mhm											UH	intj	8
2	so	so		rb	link								RB	advmod	8
3	,	,											,	punct	5
4	you	you		pro	2nd	sg							PRP	nsubj	5
5	think	think		vbmain	vblex	pres	simple	active					VBP	parataxis	8
6	,	,											,	punct	5
7	it	it		pro	3rd	sg							PRP	nsubj	8
8	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	8
9	not	not											RB	neg	8
10	just	just		rb	othr								RB	advmod	11
11	for	for	in+advl	in	advl								IN	prep	8
12	the	the		dt	art								DT	det	13
13	case	case		nn									NN	pobj	11
14	where	where		rb	advl								WRB	advmod	16
15	he	he		pro	3rd	sg							PRP	nsubj	16
16	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	21
17	,	,											,	punct	21
18	where	where		rb	advl								WRB	advmod	21
19	the	the		dt	art								DT	det	20
20	connections	connection		nn	pl	nom							NNS	nsubj	21
21	start	start	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	whcls	rel		VBP	relcl	13
22	fizzling	fizzle	ingcls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	21
23	out	out		rb	prtcle								RP	prt	22
24	,	,											,	punct	8
25													_SP	dep	8
26	mhm	mhm											UH	intj	8
27													_SP	dep	8
28	but	but		cc	cls								CC	cc	8
29	it	it		pro	3rd	sg							PRP	nsubj	30
30	works	work		vbmain	prepv	pres	simple	active					VBZ	conj	8
31	for	for	in+advl	in	advl								IN	prep	30
32	all	all											DT	pobj	31
33	of	of		in	in_othr								IN	prep	32
34	the	the		dt	art								DT	det	35
35	cases	case		nn	pl								NNS	pobj	33
36	.	.											.	punct	30

#sentid = 461
0	you	you		pro	2nd	sg							PRP	nsubj	1
1	are	be		vbmain	be	pres	simple	active					VBP	ROOT	1
2	wherever	wherever		rb	advl								WRB	advmod	13
3	,	,											,	punct	13
4	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	5
5	of	of		rb	othr								RB	advmod	7
6	the	the		dt	art								DT	det	7
7	center	center		nn		nom							NN	nsubj	13
8	of	of	of+npostmod	in	nmod								IN	prep	7
9	gravity	gravity		nn		nom							NN	pobj	8
10	for	for	in+npostmod	in	nmod								IN	prep	7
11	you	you		pro	2nd	sg							PRP	pobj	10
12	,	,											,	punct	13
13	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	1
14	.	.											.	punct	1

#sentid = 462
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2	.	.											.	punct	0

#sentid = 463
0													_SP	dep	2
1	what	what											WP	dep	2
2	about	about											IN	dep	4
3	what	what											WP	dep	4
4	about	about											IN	ROOT	4
5	other	other	attr+npremod	jj	attr								JJ	amod	6
6	groups	group		nn	pl								NNS	pobj	4
7	?	?											.	punct	4

#sentid = 464
0													_SP	dep	4
1	uh	uh											UH	intj	4
2	,	,											,	punct	4
3	we	we		pro	1st								PRP	nsubj	4
4	went	go		vbmain	vblex	past	simple	active					VBD	ROOT	4
5	with	with	in+advl	in	advl								IN	prep	4
6	four	four											CD	pobj	5
7	,	,											,	punct	6
8	more	more		rb	othr								RBR	advmod	6
9	or	or		cc	phrs								CC	cc	8
10	less	less											RBR	conj	8
11	.	.											.	punct	4

#sentid = 465
0													_SP	dep	1
1	body	body		nn									NN	ROOT	1
2	plus	plus		cc	phrs								CC	cc	1
3	brain	brain		nn									NN	conj	1
4	?	?											.	punct	1

#sentid = 466
0	so	so		rb	link								RB	advmod	2
1	you	you		pro	2nd	sg							PRP	nsubj	2
2	're	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	6
3	partly	partly	rb+advl	rb	advl	ly							RB	advmod	2
4	,	,											,	punct	6
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	're	be		vbmain	be	pres	simple	active					VBP	ROOT	6
7	partly	partly	rb+advl	rb	advl	ly							RB	advmod	6
8	where	where		rb	advl								WRB	advmod	11
9	your	your		dt	poss								PRP$	poss	10
10	body	body		nn									NN	nsubj	11
11	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	6
12													_SP	dep	6
13	right	right											JJ	intj	6
14													_SP	dep	6
15	and	and		cc	cls								CC	cc	6
16	partly	partly	rb+advl	rb	advl	ly							RB	advmod	21
17	what	what											WP	attr	21
18	your	your		dt	poss								PRP$	poss	19
19													_SP	dep	21
20	brain	brain		nn									NN	nsubj	21
21	is	be		vbmain	be	pres	simple	active					VBZ	conj	6
22													_SP	dep	21
23	right	right		jj	pred								JJ	acomp	21
24	because	because		cs	cos								IN	mark	50
25	when	when		rb	advl								WRB	advmod	27
26	they	they		pro	pl								PRP	nsubj	27
27	were	be	finitecls+advl	vbmain	be	past	simple	active	advlcls	whcls			VBD	advcl	43
28	together	together	rb+advl	rb	advl								RB	advmod	27
29	,	,											,	punct	27
30	uh	uh											UH	intj	27
31	like	like											UH	intj	27
32	right	right		rb	othr								RB	advmod	33
33	in	in	in+advl	in	advl								IN	prep	27
34	the	the		dt	art								DT	det	35
35	beginning	beginning		nn		nom							NN	pobj	33
36	before	before	in+advl	in	advl								IN	prep	27
37	any	any											DT	pobj	36
38	of	of		in	in_othr								IN	prep	37
39	the	the		dt	art								DT	det	40
40	operations	operation		nn	pl	nom							NNS	pobj	38
41	,	,											,	punct	43
42	he	he		pro	3rd	sg							PRP	nsubj	43
43	knew	know		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	50
44	exactly	exactly		rb	othr	ly							RB	advmod	45
45	where	where		comp	comp_wh								WRB	advmod	47
46	he	he		pro	3rd	sg							PRP	nsubj	47
47	was	be	whcls+vcomp	vbmain	be	past	simple	active	compcls	whcls	vcomp		VBD	ccomp	43
48	,	,											,	punct	50
49	he	he		pro	3rd	sg							PRP	nsubj	50
50	knew	know	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		causative		VBD	advcl	6
51	everything	everything		nn	other	nom							NN	dobj	50
52	about	about	in+npostmod	in	nmod								IN	prep	51
53	himself	himself		pro	3rd	sg							PRP	pobj	52
54	.	.											.	punct	6

#sentid = 467
0	but	but		cc	cls								CC	cc	9
1	then	then		rb	link								RB	advmod	9
2	when	when		rb	advl								WRB	advmod	5
3	he	he		pro	3rd	sg							PRP	nsubjpass	5
4	got	got		vbaux									VBD	auxpass	5
5	separated	separate	finitecls+advl	vbmain	vblex	past	simple	pasv_agls	advlcls	whcls			VBN	advcl	9
6	,	,											,	punct	9
7	he	he		pro	3rd	sg							PRP	nsubj	9
8	still	still	rb+advl	rb	advl								RB	advmod	9
9	had	have		vbmain	vblex	past	simple	active					VBD	ROOT	9
10	a	a		dt	art								DT	det	11
11	point	point		nn									NN	dobj	9
12	of	of	of+npostmod	in	nmod								IN	prep	11
13	a	a											DT	pobj	12
14	,	,											,	punct	11
15	a	a		dt	art								DT	det	17
16	specific	specific	attr+npremod	jj	attr								JJ	amod	17
17	point	point	appos+npostmod	nn			nappos						NN	appos	11
18	of	of	of+npostmod	in	nmod								IN	prep	17
19	view	view		nn									NN	pobj	18
20	.	.											.	punct	9

#sentid = 468
0													_SP	dep	7
1	mhm	mhm											UH	intj	0
2													_SP	dep	0
3	but	but		cc	cls								CC	cc	7
4	he	he		pro	3rd	sg							PRP	nsubj	7
5	did	do		vbaux									VBD	aux	7
6	n't	not											RB	neg	7
7	know	know		vbmain	vblex	past	simple	active					VB	ROOT	7
8	which	which		dt									WDT	det	9
9	one	one		nn									NN	ccomp	7
10	and	and		cc	cls								CC	cc	7
11	that	that		pro	dem	sg							DT	nsubj	12
12	's	be		vbmain	be	pres	simple	active					VBZ	conj	7
13	when	when		rb	advl								WRB	advmod	15
14	he	he		pro	3rd	sg							PRP	nsubj	15
15	started	start	finitecls+advl	vbmain	vblex	past	simple	active	advlcls	whcls			VBD	advcl	12
16	questioning	question	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	15
17	it	it		pro	3rd	sg							PRP	dobj	16
18	.	.											.	punct	12

#sentid = 469
0	and	and		cc	cls								CC	cc	14
1	then	then		rb	link								RB	advmod	14
2	uh	uh											UH	intj	14
3	,	,											,	punct	14
4	when	when		rb	advl								WRB	advmod	7
5	everything	everything		nn	other	nom							NN	nsubjpass	7
6	got	got		vbaux									VBD	auxpass	7
7	severed	sever	finitecls+advl	vbmain	vblex	past	simple	pasv_agls	advlcls	whcls			VBN	advcl	14
8	,	,											,	punct	14
9	i-	i-											PRP	punct	14
10	he	he		pro	3rd	sg							PRP	nsubj	14
11	did	do		vbaux									VBD	aux	14
12	n't	not											RB	neg	14
13	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	14
14	have	have		vbmain	vblex	past	simple	active					VB	ROOT	14
15	a	a		dt	art								DT	det	16
16	body	body		nn									NN	dobj	14
17	.	.											.	punct	14

#sentid = 470
0	you	you		pro	2nd	sg							PRP	nsubj	1
1	know	know		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	?	?											.	punct	1

#sentid = 471
0	it	it		pro	3rd	sg							PRP	nsubj	1
1	was	be		vbmain	be	past	simple	active					VBD	ROOT	1
2	just	just	rb+advl	rb	advl								RB	advmod	1
3	like	like											UH	intj	1
4	wow	wow											UH	intj	8
5	i	i		pro	1st	sg							PRP	nsubj	8
6	do	do		vbaux									VBP	aux	8
7	n't	not											RB	neg	8
8	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	1
9	a	a		dt	art								DT	det	10
10	body	body		nn									NN	dobj	8
11	,	,											,	punct	1
12	and	and		cc	cls								CC	cc	1
13	he	he		pro	3rd	sg							PRP	nsubj	14
14	seemed	seem		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	29
15	(	(											-LRB-	punct	14
16	just	just	rb+advl	rb	advl								RB	advmod	14
17	)	)											-RRB-	punct	14
18	so	so	rb+advl	rb	advl								RB	advmod	14
19	,	,											,	punct	14
20	like	like											UH	intj	14
21	discontent	discontent											JJ	oprd	14
22	because	because		cs	cos								IN	mark	26
23	he	he		pro	3rd	sg							PRP	nsubj	26
24	did	do		vbaux									VBD	aux	26
25	n't	not											RB	neg	26
26	understand	understand	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		causative		VB	advcl	14
27	anything	anything		nn	other	nom							NN	dobj	26
28	he	he		pro	3rd	sg							PRP	nsubj	29
29	was	be		vbmain	be	past	simple	active					VBD	conj	1
30	just	just	rb+advl	rb	advl								RB	advmod	29
31	like	like											UH	intj	29
32	what	what											WP	nsubj	33
33	's	be		vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	43
34	this	this		pro	dem	sg							DT	nsubj	33
35	what	what											WP	dep	36
36	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	33
37	that	that		pro	dem	sg							DT	nsubj	36
38	,	,											,	punct	43
39	all	all											DT	nsubj	43
40	he	he		pro	3rd	sg							PRP	nsubj	42
41	could	could		vbaux	mod	pos							MD	aux	42
42	do	do	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls		rel	reldel	VB	relcl	39
43	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	29
44	think	think		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	43
45	and	and		cc	cls								CC	cc	29
46	it	it		pro	3rd	sg							PRP	nsubj	49
47	did	do		vbaux									VBD	aux	49
48	n't	not											RB	neg	49
49	seem	seem		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VB	ccomp	63
50	like	like		cs	cs_othr								IN	mark	53
51	he	he		pro	3rd	sg							PRP	nsubj	53
52	really	really	rb+advl	rb	advl	ly							RB	advmod	53
53	had	have	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		other_advl		VBD	advcl	49
54	any	any		dt									DT	det	55
55	point	point		nn									NN	dobj	53
56	of	of	of+npostmod	in	nmod								IN	prep	55
57	view	view		nn									NN	pobj	56
58	,	,											,	punct	63
59	he	he		pro	3rd	sg							PRP	nsubj	63
60	did	do		vbaux									VBD	aux	63
61	n't	not											RB	neg	63
62	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	63
63	have	have		vbmain	vblex	past	simple	active					VB	conj	29
64	much	much											JJ	dobj	63
65	of	of	in+jcomp	in	jcomp								IN	prep	64
66	an	an		dt									DT	det	67
67	identity	identity		nn		nom							NN	pobj	65
68	.	.											.	punct	1

#sentid = 472
0	and	and		cc	cls								CC	cc	8
1	then	then		rb	link								RB	advmod	8
2	once	once		cs	cs_othr								IN	mark	6
3	the	the		dt	art								DT	det	5
4	new	new	attr+npremod	jj	attr								JJ	amod	5
5	body	body		nn									NN	nsubj	6
6	came	come	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		other_advl		VBD	advcl	8
7	it	it		pro	3rd	sg							PRP	nsubj	8
8	was	be		vbmain	be	past	simple	active					VBD	ROOT	8
9	like	like											UH	intj	8
10	,	,											,	punct	8
11	it	it		pro	3rd	sg							PRP	nsubj	12
12	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	8
13	a	a		dt	art								DT	det	15
14	new	new	attr+npremod	jj	attr								JJ	amod	15
15	body	body		nn									NN	attr	12
16	.	.											.	punct	8

#sentid = 473
0	and	and		cc	cls								CC	cc	3
1	then	then		rb	link								RB	advmod	3
2	he	he		pro	3rd	sg							PRP	nsubj	3
3	was	be		vbmain	be	past	simple	active					VBD	ROOT	3
4	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	5
5	of	of	rb+jjrbmod	rb	adjmod								RB	advmod	6
6	complete	complete		jj	pred								JJ	acomp	3
7	but	but		cc	phrs								CC	cc	3
8	then	then		rb	link								RB	advmod	13
9	it	it		pro	3rd	sg							PRP	nsubjpass	13
10	got	got		vbaux									VBD	auxpass	13
11	all	all											DT	dep	13
12	kinda	kinda	rb+advl	rb	advl								RB	advmod	13
13	jumbled	jumble		vbmain	vblex	past	simple	pasv_agls					VBN	conj	3
14													_SP	dep	13
15	with	with	in+advl	in	advl								IN	prep	13
16	the	the		dt	art								DT	det	22
17													_SP	dep	22
18	o-	o-											HYPH	nummod	22
19													_SP	dep	22
20	two	two											CD	nummod	22
21	different	different	attr+npremod	jj	attr								JJ	amod	22
22	brains	brain		nn	pl								NNS	pobj	15
23	.	.											.	punct	13

#sentid = 474
0													_SP	dep	4
1	okay	okay											UH	intj	4
2	so	so		rb	link								RB	advmod	4
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	thought	think		vbmain	vblex	past	simple	active					VBD	ROOT	4
5	his	his				sg							PRP$	dep	18
6	,	,											,	punct	18
7	when	when		rb	advl								WRB	advmod	10
8	the	the		dt	art								DT	det	9
9	body	body		nn									NN	nsubj	10
10	starts	start	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	18
11	losing	lose	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	10
12	contact	contact		nn									NN	dobj	11
13	,	,											,	punct	18
14	the	the		dt	art								DT	det	15
15	body	body		nn									NN	nsubj	18
16	just	just	rb+advl	rb	advl								RB	advmod	18
17	,	,											,	punct	18
18	dies	die	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	4
19	,	,											,	punct	18
20													_SP	dep	18
21	mhm	mhm											UH	intj	18
22													_SP	dep	18

#sentid = 475
0	and	and		cc	cls								CC	cc	6
1	so	so		rb	link								RB	advmod	6
2	,	,											,	punct	6
3	he	he		pro	3rd	sg							PRP	nsubjpass	6
4	's	be		vbaux									VBZ	auxpass	6
5	only	only	rb+advl	rb	advl	ly							RB	advmod	6
6	located	locate		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	6
7	in	in	in+advl	in	advl								IN	prep	6
8	Houston	houston		nn		proper							NNP	pobj	7
9	where	where		rb	advl								WRB	advmod	12
10	his	his		dt	poss	sg							PRP$	poss	11
11	brain	brain		nn									NN	nsubj	12
12	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	8
13	.	.											.	punct	6

#sentid = 476
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	0

#sentid = 477
0													_SP	dep	23
1	um	um											UH	intj	23
2	even	even	rb+advl	rb	advl								RB	advmod	23
3	,	,											,	punct	23
4	even	even		rb	othr								RB	advmod	5
5	when	when		rb	othr								WRB	advmod	6
6	the	the											DT	dep	23
7	,	,											,	punct	23
8	even	even		rb	othr								RB	advmod	9
9	when	when		rb	othr								WRB	advmod	11
10	the	the		dt	art								DT	det	11
11	connection	connection		nn		nom							NN	dep	23
12	,	,											,	punct	23
13	even	even	rb+advl	rb	advl								RB	advmod	19
14	before	before		cs	cs_othr								IN	mark	19
15	the	the		dt	art								DT	det	17
16	br-	br-	attr+npremod	jj	attr								XX	amod	17
17	body	body		nn									NN	nsubj	19
18	completely	completely	rb+advl	rb	advl	ly							RB	advmod	19
19	dies	die	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	23
20	,	,											,	punct	23
21	do	do		vbaux									VBP	aux	23
22	you	you		pro	2nd	sg							PRP	nsubj	23
23	think	think		vbmain	vblex	pres	simple	active					VB	ROOT	23
24	that	that		pro	dem	sg							DT	nsubj	25
25	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	23
26	right	right		jj	pred								JJ	acomp	25
27	?	?											.	punct	23

#sentid = 478
0	if	if		cs	cnd								IN	mark	4
1	the	the		dt	art								DT	det	2
2	connection	connection		nn		nom							NN	nsubjpass	4
3	is	be		vbaux									VBZ	auxpass	4
4	severed	sever	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls		conditional		VBN	advcl	10
5	,	,											,	punct	10
6	he	he		pro	3rd	sg							PRP	dep	10
7	lo-	lo-											XX	dep	10
8	he	he		pro	3rd	sg							PRP	nsubjpass	10
9	's	be		vbaux									VBZ	auxpass	10
10	located	locate		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	10
11	where	where		comp	comp_wh								WRB	advmod	14
12	the	the		dt	art								DT	det	13
13	brain	brain		nn									NN	nsubj	14
14	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	10
15	?	?											.	punct	10

#sentid = 479
0													_SP	dep	5
1	what	what											WP	dobj	5
2	do	do		vbaux									VBP	aux	5
3	you	you		pro	2nd	sg							PRP	nsubj	5
4													_SP	dep	5
5	mean	mean		vbmain	vblex	pres	simple	active					VB	ROOT	5
6	?	?											.	punct	5

#sentid = 480
0													_SP	dep	8
1	so	so		rb	link								RB	advmod	8
2	well	well											UH	intj	8
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	might	might		vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	MD	ccomp	8
5	,	,											,	punct	8
6	it	it		pro	3rd	sg							PRP	nsubj	8
7	probably	probably	rb+advl	rb	advl	ly							RB	advmod	8
8	takes	take		vbmain	vblex	pres	simple	active					VBZ	ROOT	8
9	his	his		dt	poss	sg							PRP$	poss	10
10	body	body		nn									NN	dative	8
11	a	a		dt	art								DT	det	12
12	little	little	attr+npremod	jj	attr								JJ	amod	15
13	,	,											,	punct	15
14	a	a		dt	art								DT	det	15
15	while	while		nn									NN	dobj	8
16	to	to		to									TO	aux	23
17	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	23
18	,	,											,	punct	20
19	you	you		pro	2nd	sg							PRP	nsubj	20
20	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	23
21	,	,											,	punct	20
22	completely	completely	rb+advl	rb	advl	ly	splaux						RB	advmod	23
23	die	die	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	8
24	,	,											,	punct	23
25													_SP	dep	8
26	right	right											UH	intj	8
27													_SP	dep	8
28	after	after		cs	cs_othr								IN	mark	32
29	the	the		dt	art								DT	det	30
30	connections	connection		nn	pl	nom							NNS	nsubjpass	32
31	are	be		vbaux									VBP	auxpass	32
32	severed	sever	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls		other_advl		VBN	advcl	8
33	.	.											.	punct	8

#sentid = 481
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	1

#sentid = 482
0													_SP	dep	19
1	um	um											UH	intj	19
2	,	,											,	punct	19
3	so	so		rb	link								RB	advmod	19
4	,	,											,	punct	19
5	before	before		cs	cs_othr								IN	mark	9
6	the	the		dt	art								DT	det	7
7	body	body		nn									NN	nsubj	9
8	completely	completely	rb+advl	rb	advl	ly							RB	advmod	9
9	dies	die	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	19
10	,	,											,	punct	9
11	but	but		cc	phrs								CC	cc	9
12	the	the		dt	art								DT	det	13
13	connections	connection		nn	pl	nom							NNS	nsubjpass	15
14	are	be		vbaux									VBP	auxpass	15
15	severed	sever		vbmain	vblex	pres	simple	pasv_agls					VBN	conj	9
16	,	,											,	punct	19
17	do	do		vbaux									VBP	aux	19
18	you	you		pro	2nd	sg							PRP	nsubj	19
19	think	think		vbmain	vblex	pres	simple	active					VB	ROOT	19
20	,	,											,	punct	19
21	do	do		vbaux									VBP	aux	23
22	you	you		pro	2nd	sg							PRP	nsubj	23
23	think	think		vbmain	vblex	pres	simple	active	compcls		vcomp		VB	ccomp	19
24	he	he		pro	3rd	sg							PRP	nsubj	25
25	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	23
26	in	in	in+advl	in	advl								IN	prep	25
27	both	both		dt									DT	det	28
28	places	place		nn	pl								NNS	pobj	26
29	or	or		cc	phrs								CC	cc	25
30	do	do		vbaux									VBP	aux	32
31	you	you		pro	2nd	sg							PRP	nsubj	32
32	think	think		vbmain	vblex	pres	simple	active					VB	conj	19
33	he	he		pro	3rd	sg							PRP	nsubj	34
34	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	32
35	in	in	in+advl	in	advl								IN	prep	34
36	,	,											,	punct	35
37	just	just		rb	othr								RB	advmod	38
38	in	in		in	in_othr								IN	prep	35
39	Houston	houston		nn		proper							NNP	pobj	38
40	?	?											.	punct	32

#sentid = 483
0													_SP	dep	4
1	well	well											UH	intj	4
2	,	,											,	punct	4
3	he	he		pro	3rd	sg							PRP	nsubj	4
4	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	partly	partly	rb+advl	rb	advl	ly							RB	advmod	4
6	in	in	in+advl	in	advl								IN	prep	4
7	both	both											DT	pobj	6
8	pl-	pl-											XX	punct	4

#sentid = 484
0	i	i		pro	1st	sg							PRP	nsubj	1
1	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	3
2	he	he		pro	3rd	sg							PRP	nsubj	3
3	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	35
4	predominately	predominately	rb+advl	rb	advl	ly							RB	advmod	3
5	,	,											,	punct	4
6	like	like		in	in_othr								IN	prep	4
7	most	most											JJS	pobj	6
8	of	of	in+jcomp	in	jcomp								IN	prep	7
9	him	he		pro	3rd	sg							PRP	pobj	8
10	,	,											,	punct	4
11	the	the		dt	art								DT	det	12
12	part	part		nn									NN	attr	3
13	of	of	of+npostmod	in	nmod								IN	prep	12
14	him	he		pro	3rd	sg							PRP	pobj	13
15	where	where		rb	advl								WRB	advmod	19
16	,	,											,	punct	15
17	where	where		rb	advl								WRB	advmod	19
18	everything	everything		nn	other	nom							NN	nsubj	19
19	goes	go	finitecls+rel	vbmain	prepv	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	12
20	on	on		rb	prtcle								RP	prt	19
21	,	,											,	punct	19
22	like	like	in+advl	in	advl								IN	prep	19
23	everything	everything	nn+npremod	nn		nom	npremod						NN	nmod	12
24													_SP	dep	3
25	mhm	mhm											UH	intj	3
26													_SP	dep	3
27	(	(											-LRB-	punct	29
28	that	that		pro	dem	sg							DT	nsubj	29
29	makes	make		vbmain	vblex	pres	simple	active					VBZ	parataxis	3
30	)	)											-RRB-	punct	29
31	i	i		pro	1st	sg							PRP	nsubj	32
32	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	35
33	his	his		dt	poss	sg							PRP$	poss	34
34	body	body		nn									NN	nsubj	35
35	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	35
36	alive	alive		jj	pred								JJ	acomp	35
37	and	and		cc	phrs								CC	cc	36
38	breathing	breathe		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	36
39	,	,											,	punct	35
40	so	so		cc	cls								CC	cc	35
41	that	that		pro	dem	sg							DT	nsubj	42
42	's	be		vbmain	be	pres	simple	active					VBZ	conj	35
43	part	part		nn									NN	attr	42
44	of	of	of+npostmod	in	nmod								IN	prep	43
45	him	he		pro	3rd	sg							PRP	pobj	44
46	that	that		relpro	relpro_that	sg							WDT	nsubj	47
47	's	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	43
48	alive	alive		jj	pred								JJ	acomp	47
49	in	in	in+advl	in	advl								IN	prep	47
50													_SP	dep	49
51	mhm	mhm											UH	intj	49
52													_SP	dep	49

#sentid = 485
0	i	i		pro	1st	sg							PRP	nsubj	1
1	thought	think		vbmain	vblex	past	simple	active					VBD	ROOT	1
2	it	it		pro	3rd	sg							PRP	nsubj	3
3	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	1
4	in	in	in+advl	in	advl								IN	prep	3
5	Tulsa	tulsa		nn		proper							NNP	pobj	4
6	?	?											.	punct	1

#sentid = 486
0	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	0
1	that	that		pro	dem	sg							DT	nsubj	0
2	where	where		rb	advl								WRB	advmod	4
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	was	be	finitecls+advl	vbmain	be	past	simple	active	advlcls	whcls			VBD	advcl	0
5	?	?											.	punct	0

#sentid = 487
0													_SP	dep	0
1	i	i		pro	1st	sg							PRP	nsubj	5
2	do	do		vbaux									VBP	aux	5
3	n't	not											RB	neg	5
4	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	5
5	remember	remember		vbmain	in_othr	pres	simple	active					VB	prep	0
6													_SP	dep	5
7	yeah	yeah											UH	intj	11
8	i	i		pro	1st	sg							PRP	nsubj	11
9	do	do		vbaux									VBP	aux	11
10	n't	not											RB	neg	11
11	remember	remember		vbmain	vblex	pres	simple	active					VB	meta	5
12	it	it		pro	3rd	sg							PRP	dobj	11
13	exactly	exactly	rb+advl	rb	advl	ly							RB	advmod	11
14													_SP	dep	5
15	so	so		rb	link								RB	advmod	18
16	,	,											,	punct	18
17	that	that		pro	dem	sg							DT	nsubj	18
18	's	be		vbmain	be	pres	simple	active					VBZ	meta	5
19	still	still	rb+advl	rb	advl								RB	advmod	18
20	alive	alive		jj	pred								JJ	acomp	18
21	so	so		cc	cls								CC	cc	18
22	that	that		pro	dem	sg							DT	nsubj	23
23	's	be		vbmain	be	pres	simple	active					VBZ	conj	18
24	still	still	rb+advl	rb	advl								RB	advmod	23
25	there	there	rb+advl	rb	advl								RB	advmod	23
26	.	.											.	punct	5

#sentid = 488
0	but	but		cc	cls								CC	cc	30
1	once	once		cs	cs_othr								IN	mark	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	dies	die	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	30
4	and	and		cc	cls								CC	cc	3
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	know	know		vbmain	vblex	pres	simple	active					VBP	conj	3
7	it	it		pro	3rd	sg							PRP	nsubj	10
8	does	do		vbaux									VBZ	aux	10
9	n't	not											RB	neg	10
10	know	know	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	6
11	where	where		comp	comp_wh								WRB	advmod	13
12	it	it		pro	3rd	sg							PRP	nsubj	13
13	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	10
14	then	then	rb+advl	rb	advl								RB	advmod	13
15	,	,											,	punct	6
16	or	or		cc	cls								CC	cc	6
17	when	when		rb	advl								WRB	advmod	21
18	that	that		dt	dt_dem								DT	det	19
19	point	point		nn									NN	nsubj	21
20	exactly	exactly		rb	othr	ly							RB	advmod	19
21	comes	come		vbmain	vblex	pres	simple	active					VBZ	conj	6
22	,	,											,	punct	30
23	then	then		rb	link								RB	advmod	30
24	everything	everything		nn	other	nom							NN	nsubj	30
25	that	that		relpro	relpro_that	sg							WDT	nsubjpass	27
26	's	be		vbaux									VBZ	auxpass	27
27	left	leave	finitecls+rel	vbmain	vblex	pres	simple	pasv_agls	nmod_cls	thatcls	rel		VBN	relcl	24
28	of	of	in+advl	in	advl								IN	prep	27
29	him	he		pro	3rd	sg							PRP	pobj	28
30	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	30
31	,	,											,	punct	30
32	what	what											WP	nsubj	33
33	's	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	30
34	in	in	in+advl	in	advl								IN	prep	33
35	Houston	houston		nn		proper							NNP	pobj	34
36	.	.											.	punct	30

#sentid = 489
0													_SP	dep	0
1	okay	okay											UH	intj	9
2	,	,											,	punct	9
3	so	so		rb	link								RB	advmod	7
4	you	you		pro	2nd	sg							PRP	dep	7
5	,	,											,	punct	7
6	you	you		pro	2nd	sg							PRP	dep	7
7	're	be		vbmain	be	pres	simple	active					VBP	dep	9
8	you	you		pro	2nd	sg							PRP	nsubj	9
9	're	be		vbmain	in_othr	pres	simple	active					VBP	prep	0
10	inclined	inclined		jj	pred								JJ	acomp	9
11	to	to		to									TO	aux	12
12	think	think	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	10
13	that	that		comp	comp_that								IN	mark	22
14	,	,											,	punct	22
15	still	still	rb+advl	rb	advl								RB	advmod	18
16	before	before		cs	cs_othr								IN	mark	18
17	it	it		pro	3rd	sg							PRP	nsubj	18
18	dies	die	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	22
19	,	,											,	punct	22
20	it	it		pro	3rd	sg							PRP	nsubjpass	22
21	's	be		vbaux									VBZ	auxpass	22
22	located	locate	thatcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls	thatcls	vcomp		VBN	ccomp	12
23	in	in	in+advl	in	advl								IN	prep	22
24	two	two											CD	nummod	25
25	places	place		nn	pl								NNS	pobj	23
26	.	.											.	punct	9

#sentid = 490
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2	.	.											.	punct	0

#sentid = 491
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2	.	.											.	punct	0

#sentid = 492
0	and	and		cc	cls								CC	cc	4
1	you	you		pro	2nd	sg							PRP	nmod	2
2	guys	guy		nn	pl								NNS	nsubj	4
3	would	would		vbaux	mod	prd							MD	aux	4
4	think	think		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	4
5	,	,											,	punct	4
6	in	in	in+advl	in	advl								IN	prep	13
7	going	go	ingcls+incomp	vbmain	prepv	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	6
8	for	for	in+advl	in	advl								IN	prep	7
9	number	number		nn		nom							NN	pobj	8
10	five	five											CD	nummod	9
11	,	,											,	punct	13
12	you	you		pro	2nd	sg							PRP	nsubj	13
13	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	4
14	inclined	inclined		jj	pred								JJ	acomp	13
15	to	to		to									TO	aux	16
16	think	think	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	14
17	when	when		rb	othr								WRB	advmod	19
18	the	the		dt	art								DT	det	19
19	se-	se-											XX	dobj	23
20	when	when		rb	advl								WRB	advmod	23
21	the	the		dt	art								DT	det	22
22	severing	severing		nn		nom							NN	nsubj	23
23	comes	come	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	27
24	,	,											,	punct	27
25	he	he		pro	3rd	sg							PRP	nsubjpass	27
26	's	be		vbaux									VBZ	auxpass	27
27	located	locate	thatcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	16
28	actually	actually	rb+advl	rb	advl	ly							RB	advmod	27
29	where	where		rb	advl								WRB	advmod	32
30	his	his		dt	poss	sg							PRP$	poss	31
31	brain	brain		nn									NN	nsubj	32
32	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	27
33	,	,											,	punct	36
34	not	not											RB	neg	36
35	not	not											RB	neg	36
36	in	in	in+advl	in	advl								IN	prep	27
37	both	both		dt									DT	det	38
38	places	place		nn	pl								NNS	pobj	36
39	.	.											.	punct	4

#sentid = 493
0	and	and		cc	cls								CC	cc	9
1	before	before		cs	cs_othr								IN	mark	4
2	the	the		dt	art								DT	det	3
3	severing	severing		nn		nom							NN	nsubj	4
4	comes	come	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	9
5	,	,											,	punct	9
6	where	where		rb	advl								WRB	advmod	9
7	would	would		vbaux	mod	prd							MD	aux	9
8	you	you		pro	2nd	sg							PRP	nsubj	9
9	say	say		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	9
10	the	the		dt	art								DT	det	11
11	center	center		nn		nom							NN	nsubj	14
12	of	of	of+npostmod	in	nmod								IN	prep	11
13	gravity	gravity		nn		nom							NN	pobj	12
14	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	9
15	?	?											.	punct	9

#sentid = 494
0													_SP	dep	4
1	i	i		pro	1st	sg							PRP	nsubj	4
2	do	do		vbaux									VBP	aux	4
3	n't	not											RB	neg	4
4	know	know		vbmain	vblex	pres	simple	active					VB	ROOT	4
5	.	.											.	punct	4

#sentid = 495
0	before	before		cs	cs_othr								IN	mark	2
1	he	he		pro	3rd	sg							PRP	nsubj	2
2	loses	lose		vbmain	vblex	pres	simple	active			other_advl		VBZ	ROOT	2
3	communication	communication		nn		nom							NN	dobj	2
4	with	with	in+npostmod	in	nmod								IN	prep	3
5	,	,											,	punct	4
6													_SP	dep	4
7	mhm	mhm											UH	intj	4
8													_SP	dep	4
9	with	with		in	in_othr								IN	prep	4
10	the	the		dt	art								DT	det	11
11	body	body		nn									NN	pobj	4
12	?	?											.	punct	4

#sentid = 496
0													_SP	dep	7
1	okay	okay											UH	intj	7
2	so	so		rb	link								RB	advmod	7
3	it	it		pro	3rd	sg							PRP	nsubj	7
4	just	just	rb+advl	rb	advl								RB	advmod	7
5	,	,											,	punct	7
6	it	it		pro	3rd	sg							PRP	nsubj	7
7	travels	travel		vbmain	vblex	pres	simple	active					VBZ	ROOT	7
8	back	back	rb+advl	rb	advl								RB	advmod	7
9	and	and		cc	phrs								CC	cc	8
10	forth	forth											RB	conj	8
11	depending	depend	ingcls+advl	vbmain	prepv	nonfinite	simple	active	advlcls	ingcls			VBG	advcl	7
12	on	on	in+advl	in	advl								IN	prep	11
13	where	where		comp	comp_wh								WRB	advmod	22
14													_SP	dep	22
15	yeah	yeah											UH	intj	22
16													_SP	dep	22
17	his	his		dt	poss	sg							PRP$	poss	18
18	point	point		nn									NN	nsubj	22
19	of	of	of+npostmod	in	nmod								IN	prep	18
20	view	view		nn									NN	pobj	19
21	should	should		vbaux	mod	nec							MD	aux	22
22	be	be	whcls+incomp	vbmain	be	vp_w_modal	simple	active	compcls	whcls	incomp		VB	pcomp	12
23	.	.											.	punct	7

#sentid = 497
0	what	what											WP	dep	1
1	about	about											IN	ROOT	1
2	what	what											WP	dep	3
3	about	about		in	in_othr								IN	prep	1
4	you	you		pro	2nd	sg							PRP	nmod	5
5	guys	guy		nn	pl								NNS	pobj	3
6	?	?											.	punct	1

#sentid = 498
0	what	what											WP	pobj	6
1	did	do		vbaux									VBD	aux	4
2	you	you		pro	2nd	sg							PRP	nsubj	4
3	,	,											,	punct	4
4	come	come		vbmain	phrsv	past	simple	active					VB	ROOT	4
5	up	up		rb	prtcle								RP	prt	4
6	with	with	in+advl	in	advl								IN	prep	4
7	?	?											.	punct	4

#sentid = 499
0													_SP	dep	2
1	we	we		pro	1st								PRP	nsubj	2
2	went	go		vbmain	vblex	past	simple	active					VBD	ROOT	2
3	with	with	in+advl	in	advl								IN	prep	2
4	number	number		nn		nom							NN	pobj	3
5	five	five											CD	nummod	4
6	as	as		rb	othr								RB	advmod	7
7	well	well	rb+advl	rb	advl								RB	advmod	2
8	.	.											.	punct	2

#sentid = 500
0	pretty	pretty	rb+jjrbmod	rb	othr								RB	advmod	1
1	much	much		rb	othr								RB	advmod	6
2	like	like											UH	intj	6
3	,	,											,	punct	6
4	the	the		dt	art								DT	det	6
5	same	same	attr+npremod	jj	attr								JJ	amod	6
6	reasons	reason		nn	pl								NNS	ROOT	6
7	as	as	in+npostmod	in	nmod								IN	prep	6
8	them	they		pro	pl								PRP	pobj	7
9	,	,											,	punct	6
10	and	and		cc	phrs								CC	cc	6
11	,	,											,	punct	22
12	how	how		rb	advl								WRB	advmod	14
13	you	you		pro	2nd	sg							PRP	nsubj	14
14	said	say		vbmain	vblex	past	simple	active					VBD	parataxis	22
15	like	like											UH	intj	14
16	the	the		dt	art								DT	det	17
17	severing	severing		nn		nom							NN	nsubj	22
18	,	,											,	punct	22
19													_SP	dep	22
20	mhm	mhm											UH	intj	22
21													_SP	dep	22
22	was	be		vbmain	be	past	simple	active					VBD	conj	6
23	like	like											UH	intj	22
24	,	,											,	punct	22
25	with	with	in+advl	in	advl								IN	prep	22
26	the	the		dt	art								DT	det	27
27	body	body		nn									NN	pobj	25
28	.	.											.	punct	22

#sentid = 501
0													_SP	dep	0
1	so	so		rb	link								RB	advmod	15
2	,	,											,	punct	15
3	when	when		rb	advl								WRB	advmod	12
4	yo-	yo-											XX	punct	12
5	when	when		rb	advl								WRB	advmod	7
6	it	it		pro	3rd	sg							PRP	nsubj	7
7	severs	sever	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	12
8	,	,											,	punct	12
9	when	when		rb	advl								WRB	advmod	12
10	the	the		dt	art								DT	det	11
11	severing	severing		nn		nom							NN	nsubj	12
12	comes	come	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	15
13	,	,											,	punct	15
14	he	he		pro	3rd	sg							PRP	nsubj	15
15	's	be		vbmain	in_othr	pres	simple	active					VBZ	prep	0
16	wholly	wholly		rb	othr	ly							RB	advmod	17
17	with	with	in+advl	in	advl								IN	prep	15
18	his	his		dt	poss	sg							PRP$	poss	19
19	brain	brain		nn									NN	pobj	17
20	,	,											,	punct	17
21	not	not											RB	neg	22
22	with	with		in	in_othr								IN	prep	17
23	,	,											,	punct	22
24	not	not											RB	neg	26
25	at	at	rb+jjrbmod	rb	othr								RB	advmod	26
26	all	all		rb	othr								RB	advmod	22
27	with	with		in	in_othr								IN	prep	22
28	the	the		dt	art								DT	det	31
29	the	the		dt	art								DT	det	31
30	living	live	attr+npremod	jj	attr	ing							VBG	amod	31
31	body	body		nn									NN	pobj	17
32	that	that		pro	dem	sg							DT	nsubj	33
33	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	15
34	,	,											,	punct	37
35	just	just	rb+jjrbmod	rb	adjmod								RB	advmod	37
36	completely	completely	rb+jjrbmod	rb	adjmod	ly							RB	advmod	37
37	disconnected	disconnected		jj	pred								JJ	acomp	33
38	.	.											.	punct	15

#sentid = 502
0													_SP	dep	0
1	mhm	mhm											UH	intj	0
2	.	.											.	punct	0

#sentid = 503
0													_SP	dep	0
1	what	what											WP	dep	2
2	about	about											IN	dep	4
3	what	what											WP	dep	4
4	about	about		in	in_othr								IN	prep	0
5	you	you		pro	2nd	sg							PRP	nmod	6
6	guys	guy		nn	pl								NNS	pobj	4
7	?	?											.	punct	0

#sentid = 504
0													_SP	dep	4
1	i	i		pro	1st	sg							PRP	nsubj	4
2	do	do		vbaux									VBP	aux	4
3	n't	not											RB	neg	4
4	think	think		vbmain	vblex	pres	simple	active					VB	ROOT	4
5	we	we		pro	1st								PRP	nsubj	7
6	actually	actually	rb+advl	rb	advl	ly							RB	advmod	7
7	came	come	thatcls+vcomp	vbmain	phrsv	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	4
8	up	up		rb	prtcle								RP	prt	7
9	with	with	in+advl	in	advl								IN	prep	7
10	one	one		pro	other	pl							CD	pobj	9
11	that	that		pro	dem	sg							WDT	dobj	15
12	we	we		pro	1st								PRP	nsubj	15
13	,	,											,	punct	15
14	totally	totally	rb+advl	rb	advl	ly							RB	advmod	15
15	liked	like	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel		VBD	relcl	10
16	.	.											.	punct	4

#sentid = 505
0													_SP	dep	4
1	mhm	mhm											UH	intj	4
2													_SP	dep	4
3	there	there											EX	expl	4
4	were	be		vbmain	be	past	simple	active					VBD	ROOT	4
5	_	_											NFP	attr	4
6	like	like											UH	intj	8
7	we	we		pro	1st								PRP	nsubj	8
8	had	have	finitecls+advl	vbmain	vblex	past	simple	active	advlcls				VBD	advcl	4
9	a	a		dt	art								DT	det	10
10	lot	lot		nn									NN	dobj	8
11	of	of	of+npostmod	in	nmod								IN	prep	10
12	people	people		nn	pl								NNS	pobj	11
13	,	,											,	punct	10
14	i	i		pro	1st	sg							PRP	nsubj	15
15	guess	guess		vbmain	vblex	pres	simple	active					VBP	parataxis	10
16	,	,											,	punct	10
17	like	like											UH	intj	8
18	five	five											CD	dobj	8
19	,	,											,	punct	8
20	but	but		cc	cls								CC	cc	8
21	we	we		pro	1st								PRP	nsubj	25
22	did	do		vbaux									VBD	aux	25
23	n't	not											RB	neg	25
24	totally	totally	rb+advl	rb	advl	ly	splaux						RB	advmod	25
25	understand	understand		vbmain	vblex	past	simple	active					VB	conj	8
26	five	five											CD	dobj	25
27	and	and		cc									CC	cc	26
28	how	how		rb	advl								WRB	advmod	33
29	it	it		pro	3rd	sg							PRP	dep	33
30	,	,											,	punct	33
31	how	how		rb	advl								WRB	advmod	33
32	it	it		pro	3rd	sg							PRP	nsubj	33
33	varied	vary		vbmain	vblex	past	simple	active					VBD	conj	26
34	from	from	in+advl	in	advl								IN	prep	33
35	,	,											,	punct	34
36	regular	regular	attr+npremod	jj	attr								JJ	amod	37
37	point	point		nn									NN	pobj	34
38	of	of	of+npostmod	in	nmod								IN	prep	37
39	view	view		nn									NN	pobj	38
40	,	,											,	punct	33
41	so	so	rb+advl	rb	advl								RB	advmod	33
42	,	,											,	punct	33
43	we	we		pro	1st								PRP	nsubj	48
44	could	could		vbaux	mod	pos							MD	aux	48
45	n't	not											RB	neg	48
46	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	48
47	like	like											UH	intj	48
48	accept	accept		vbmain	vblex	vp_w_modal	simple	active					VB	conj	33
49	that	that		dt	dt_dem								DT	det	50
50	one	one		pro	other	pl							CD	dobj	48
51	,	,											,	punct	48
52	but	but		cc	cls								CC	cc	48
53	,	,											,	punct	48
54	i	i		pro	1st	sg							PRP	nsubj	57
55	do	do		vbaux									VBP	aux	57
56	n't	not											RB	neg	57
57	know	know		vbmain	vblex	pres	simple	active					VB	conj	48
58	.	.											.	punct	4

#sentid = 506
0													_SP	dep	5
1	are	are											XX	dep	5
2	,	,											,	punct	5
3	you	you		pro	2nd	sg							PRP	nmod	4
4	guys	guy		nn	pl								NNS	nsubj	5
5	were	be		vbmain	be	past	simple	active					VBD	ROOT	5
6	also	also	rb+advl	rb	advl								RB	advmod	5
7	pretty	pretty	rb+jjrbmod	rb	adjmod								RB	advmod	8
8	tempted	tempted		jj	pred								JJ	acomp	5
9	i	i		pro	1st	sg							PRP	nsubj	10
10	kn-	kn-											XX	parataxis	8
11	i	i		pro	1st	sg							PRP	nsubj	12
12	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	10
13	you	you		pro	2nd	sg							PRP	nsubj	14
14	were	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	12
15													_SP	dep	14
16	wha-	wha-											XX	dep	14
17													_SP	dep	18
18	by	by											IN	dep	14
19	the	the		dt	art								DT	det	20
20	bra-	bra-											XX	pobj	18
21	just	just		rb	othr								RB	advmod	25
22	the	the		dt	art								DT	det	25
23	straight	straight	attr+npremod	jj	attr								JJ	amod	24
24	brain	brain	nn+npremod	nn			npremod						NN	compound	25
25	theory	theory		nn		nom							NN	dep	5
26	.	.											.	punct	5

#sentid = 507
0	i	i		pro	1st	sg							PRP	nsubj	2
1	'm	be		vbaux									VBP	aux	2
2	wondering	wonder		vbmain	vblex	pres	prog	active					VBG	ROOT	2
3	whether	whether		cs	cs_othr								IN	mark	6
4	there	there											EX	expl	6
5	could	could		vbaux	mod	pos							MD	aux	6
6	be	be		vbmain	be	vp_w_modal	simple	active	compcls		other_advl	compdel	VB	ccomp	2
7	a	a		dt	art								DT	det	8
8	comeback	comeback		nn									NN	attr	6
9	for	for	in+npostmod	in	nmod								IN	prep	8
10	the	the		dt	art								DT	det	12
11	brain	brain	nn+npremod	nn			npremod						NN	compound	12
12	theory	theory		nn		nom							NN	pobj	9
13	against	against	in+npostmod	in	nmod								IN	prep	12
14	this	this		pro	dem	sg							DT	pobj	13
15	,	,											,	punct	14
16	this	this		dt	dt_dem								DT	det	17
17	intuition	intuition	appos+npostmod	nn		nom	nappos						NN	appos	14
18	about	about	in+npostmod	in	nmod								IN	prep	17
19	your	your		dt	poss								PRP$	poss	20
20	point	point		nn									NN	pobj	18
21	of	of	of+npostmod	in	nmod								IN	prep	20
22	,	,											,	punct	21
23	your	your		dt	poss								PRP$	poss	24
24	point	point		nn									NN	pobj	21
25	,	,											,	punct	21
26	you	you		pro	2nd	sg							PRP	nsubj	27
27	are	be		vbmain	be	pres	simple	active	compcls		incomp	compdel	VBP	pcomp	21
28	where	where		rb	advl								WRB	advmod	33
29	your	your		dt	poss								PRP$	poss	30
30	point	point		nn									NN	nsubj	33
31	of	of	of+npostmod	in	nmod								IN	prep	30
32	view	view		nn									NN	pobj	31
33	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	27
34	.	.											.	punct	2

#sentid = 508
0													_SP	dep	4
1	i	i		pro	1st	sg							PRP	nsubj	4
2	do	do		vbaux									VBP	aux	4
3	n't	not											RB	neg	4
4	know	know		vbmain	vblex	pres	simple	active					VB	ROOT	4
5	.	.											.	punct	4

#sentid = 509
0													_SP	dep	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	felt	feel		vbmain	prepv	past	simple	active					VBD	ROOT	2
3	like	like		cs	cs_othr								IN	mark	6
4	number	number		nn		nom							NN	nsubj	6
5	five	five											CD	nummod	4
6	combined	combine	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		other_advl		VBD	advcl	2
7	the	the		dt	art								DT	det	8
8	two	two											CD	dobj	6
9	,	,											,	punct	8
10	two	two											CD	conj	8
11	and	and		cc									CC	cc	10
12	three	three											CD	conj	10
13	,	,											,	punct	2
14	like	like											UH	intj	17
15	,	,											,	punct	17
16	it	it		pro	3rd	sg							PRP	nsubj	17
17	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBZ	advcl	2
18	your	your		dt	poss								PRP$	poss	19
19	brain	brain		nn									NN	attr	17
20	but	but		cc	cls								CC	cc	17
21	then	then		rb	link								RB	advmod	23
22	it	it		pro	3rd	sg							PRP	nsubj	23
23	's	be		vbmain	be	pres	simple	active					VBZ	conj	17
24	,	,											,	punct	23
25	i	i		pro	1st	sg							PRP	nsubj	26
26	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	23
27	it	it		pro	3rd	sg							PRP	nsubj	28
28	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	23
29	your	your		dt	poss								PRP$	poss	30
30	point	point		nn									NN	attr	28
31	of	of	of+npostmod	in	nmod								IN	prep	30
32	view	view		nn									NN	pobj	31
33	but	but		cc	cls								CC	cc	23
34	then	then		rb	link								RB	advmod	37
35	your	your		dt	poss								PRP$	poss	36
36	brain	brain		nn									NN	nsubj	37
37	is	be		vbmain	be	pres	simple	active					VBZ	conj	23
38	what	what											WP	nsubj	40
39	is	be		vbaux									VBZ	aux	40
40	correcting	correct	whcls+vcomp	vbmain	vblex	pres	prog	active	compcls	whcls	vcomp		VBG	ccomp	37
41	itself	itself											PRP	dobj	40
42	.	.											.	punct	2

#sentid = 510
0	i	i		pro	1st	sg							PRP	nsubj	3
1	do	do		vbaux									VBP	aux	3
2	n't	not											RB	neg	3
3	know	know		vbmain	vblex	pres	simple	active					VB	ROOT	3
4	if	if		cs	cnd								IN	mark	7
5	that	that		pro	dem	sg							DT	nsubj	7
6	that	that		pro	dem	sg							DT	nsubj	7
7	helps	help		vbmain	vblex	pres	simple	active	compcls		conditional	compdel	VBZ	ccomp	3
8													_SP	dep	7
9	with	with	in+advl	in	advl								IN	prep	7
10	anything	anything		nn	other	nom							NN	pobj	9
11													_SP	dep	3

#sentid = 511
0	so	so		cc	cls								CC	cc	2
1	how	how		rb	advl								WRB	advmod	2
2	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	it	it		pro	3rd	sg							PRP	nsubj	2
4	how	how		comp	comp_wh								WRB	advmod	7
5	does	do		vbaux									VBZ	aux	7
6	it	it		pro	3rd	sg							PRP	nsubj	7
7	combine	combine	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VB	ccomp	2
8	the	the		dt	art								DT	det	9
9	two	two											CD	dobj	7
10	?	?											.	punct	7

#sentid = 512
0													_SP	dep	24
1	cuz	cuz	rb+advl	rb	advl								IN	advmod	24
2	it	it		pro	3rd	sg							PRP	nsubj	3
3	's	be		vbmain	in_othr	pres	simple	active					VBZ	prep	1
4	your	your		dt	poss								PRP$	poss	5
5	point	point		nn									NN	attr	3
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	view	view		nn									NN	pobj	6
8	,	,											,	punct	3
9	like	like		cs	cs_othr								IN	mark	11
10	you	you		pro	2nd	sg							PRP	nsubj	11
11	said	say	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		other_advl		VBD	advcl	3
12	,	,											,	punct	3
13	and	and		cc	phrs								CC	cc	3
14	then	then		rb	link								RB	advmod	17
15	it	it		pro	3rd	sg							PRP	nsubjpass	17
16	's	be		vbaux									VBZ	auxpass	17
17	corrected	correct		vbmain	vblex	pres	simple	pasv_agls					VBN	conj	3
18	,	,											,	punct	17
19	like	like		cs	cs_othr								IN	mark	21
20	that	that		pro	dem	sg							DT	nsubj	21
21	's	be		vbmain	be	pres	simple	active			other_advl		VBZ	parataxis	24
22	,	,											,	punct	24
23	it	it		pro	3rd	sg							PRP	nsubj	24
24	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	24
25	like	like		cs	cs_othr								IN	mark	28
26	logical	logical	attr+npremod	jj	attr								JJ	amod	27
27	thinking	thinking		nn		nom							NN	nsubj	28
28	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	24
29	what	what											WP	nsubj	31
30	's	be		vbaux									VBZ	aux	31
31	correcting	correct	whcls+vcomp	vbmain	vblex	pres	prog	active	compcls	whcls	vcomp		VBG	ccomp	28
32	it	it		pro	3rd	sg							PRP	dobj	31
33	and	and		cc	cls								CC	cc	28
34	that	that		pro	dem	sg							DT	nsubj	35
35	's	be		vbmain	be	pres	simple	active					VBZ	conj	28
36	basically	basically	rb+advl	rb	advl	ly							RB	advmod	35
37	your	your		dt	poss								PRP$	poss	38
38	brain	brain		nn									NN	attr	35
39	and	and		cc	phrs								CC	cc	35
40	when	when		rb	advl								WRB	advmod	53
41	,	,											,	punct	53
42	the	the		dt	art								DT	det	44
43	whole	whole	attr+npremod	jj	attr								JJ	amod	44
44	time	time		nn									NN	npadvmod	53
45	the	the		dt	art								DT	det	53
46	perspective	perspective		nn									NN	nsubj	53
47	,	,											,	punct	46
48	perspective	perspective	appos+npostmod	nn			nappos						NN	appos	46
49	that	that		pro	dem	sg							WDT	dobj	52
50	we	we		pro	1st								PRP	nsubj	52
51	're	be		vbaux									VBP	aux	52
52	getting	get	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel		VBG	relcl	48
53	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	24
54	from	from	in+advl	in	advl								IN	prep	53
55	the	the		dt	art								DT	det	56
56	brain	brain		nn									NN	pobj	54
57	so	so		rb	link								RB	advmod	60
58	,	,											,	punct	60
59	i	i		pro	1st	sg							PRP	nsubj	60
60	feel	feel	finitecls+advl	vbmain	prepv	pres	simple	active	advlcls				VBP	advcl	24
61	like	like		cs	cs_othr								IN	mark	63
62	that	that		pro	dem	sg							DT	nsubj	63
63	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	60
64	what	what											WP	nsubj	68
65	's	be		vbaux									VBZ	aux	68
66	,	,											,	punct	68
67	actively	actively	rb+advl	rb	advl	ly	splaux						RB	advmod	68
68	correcting	correct	whcls+vcomp	vbmain	vblex	pres	prog	active	compcls	whcls	vcomp		VBG	ccomp	63
69	,	,											,	punct	68
70	the	the		dt	art								DT	det	71
71	point	point		nn									NN	attr	63
72	of	of	of+npostmod	in	nmod								IN	prep	71
73	view	view		nn									NN	pobj	72
74	.	.											.	punct	24

#sentid = 513
0													_SP	dep	15
1	well	well											UH	intj	6
2	,	,											,	punct	6
3	your	your		dt	poss								PRP$	poss	4
4	brain	brain		nn									NN	nsubj	6
5	is	be		vbaux									VBZ	aux	6
6	doing	do		vbmain	in_othr	pres	prog	active					VBG	prep	0
7	all	all											DT	dobj	6
8	of	of		in	in_othr								IN	prep	7
9	the	the		dt	art								DT	det	10
10	th-	th-											DT	pobj	8
11	all	all											DT	pobj	8
12	of	of		in	in_othr								IN	prep	11
13	the	the		dt	art								DT	det	14
14	thinking	thinking		nn		nom							NN	pobj	12
15	right	right											JJ	ROOT	15
16	?	?											.	punct	15

#sentid = 514
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2	.	.											.	punct	1

#sentid = 515
0													_SP	dep	6
1	um	um											UH	intj	6
2	,	,											,	punct	6
3	but	but		cc	phrs								CC	cc	6
4	i	i		pro	1st	sg							PRP	nsubj	6
5	'm	be		vbaux									VBP	aux	6
6	wondering	wonder		vbmain	vblex	pres	prog	active					VBG	ROOT	6
7	how	how	rb+jjrbmod	rb	othr								WRB	advmod	8
8	exactly	exactly		rb	othr	ly							RB	advmod	13
9	,	,											,	punct	13
10	how	how	rb+jjrbmod	rb	othr								WRB	advmod	11
11	exactly	exactly		rb	othr	ly							RB	advmod	13
12	number	number		nn		nom	npremod						NN	compound	13
13	five	five											CD	ccomp	6
14	can	can		vbaux	mod	pos							MD	aux	15
15	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	6
16	a	a		dt	art								DT	det	17
17	combination	combination		nn		nom							NN	attr	15
18	of	of	of+npostmod	in	nmod								IN	prep	17
19	two	two											CD	pobj	18
20	and	and		cc									CC	cc	19
21	three	three											CD	conj	19
22	.	.											.	punct	6

#sentid = 516
0													_SP	dep	8
1	i	i		pro	1st	sg							PRP	nsubj	2
2	'm	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	8
3	just	just	rb+advl	rb	advl								RB	advmod	2
4	,	,											,	punct	8
5	i	i		pro	1st	sg							PRP	nsubj	8
6	do	do		vbaux									VBP	aux	8
7	n't	not											RB	neg	8
8	know	know		vbmain	vblex	pres	simple	active					VB	ROOT	8
9	.	.											.	punct	8

#sentid = 517
0													_SP	dep	18
1	c-	c-											XX	dep	18
2	could	could		vbmain	vblex	vp_w_modal	simple	active					MD	dep	18
3													_SP	dep	18
4	if	if		cs	cnd								IN	mark	8
5	i	i		pro	1st	sg							PRP	nsubj	8
6	did	do		vbaux									VBD	aux	8
7	n't	not											RB	neg	8
8	kn-	kn-											XX	advcl	18
9	if	if		cs	cnd								IN	mark	13
10	i	i		pro	1st	sg							PRP	nsubj	13
11	did	do		vbaux									VBD	aux	13
12	n't	not											RB	neg	13
13	explain	explain	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VB	advcl	18
14	it	it		pro	3rd	sg							PRP	dobj	13
15	,	,											,	punct	18
16	then	then		rb	link								RB	advmod	18
17	it	it		pro	3rd	sg							PRP	nsubj	18
18	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	18
19	(	(											-LRB-	punct	18
20	xx	xx											XX	dep	18
21	)	)											-RRB-	punct	18

#sentid = 518
0													_SP	dep	8
1	well	well											UH	intj	4
2	,	,											,	punct	4
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	8
5	just	just	rb+advl	rb	advl								RB	advmod	4
6	the	the		dt	art								DT	det	7
7	thing	thing		nn		nom							NN	nsubj	8
8	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	8
9	,	,											,	punct	8
10	two	two											CD	nsubj	11
11	says	say	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	8
12	,	,											,	punct	11
13	you	you		pro	2nd	sg							PRP	nsubj	14
14	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	11
15	wha-	wha-											XX	dobj	14
16	just	just	rb+jjrbmod	rb	adjmod								RB	advmod	17
17	identical	identical		jj	pred								JJ	acomp	14
18	to	to	in+jcomp	in	jcomp								IN	prep	17
19	your	your		dt	poss								PRP$	poss	20
20	brain	brain		nn									NN	pobj	18
21	.	.											.	punct	8

#sentid = 519
0	your	your		dt	poss								PRP$	poss	1
1	body	body		nn									NN	nsubj	2
2	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	just	just		rb	othr								RB	advmod	5
4	this	this		dt	dt_dem								DT	det	5
5	kind	kind		nn									NN	attr	2
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	,	,											,	punct	6
8	it	it		pro	3rd	sg							PRP	nsubj	9
9	's	be		vbmain	be	pres	simple	active					VBZ	parataxis	6
10	like	like	in+advl	in	advl								IN	prep	9
11	a-	a-											DT	pcomp	10
12	having	have	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	10
13	artificial	artificial	attr+npremod	jj	attr								JJ	amod	14
14	limb	limb		nn									NN	dobj	12
15	.	.											.	punct	2

#sentid = 520
0	it	it		pro	3rd	sg							PRP	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	no	no											RB	neg	3
3	more	more		jj	attr								JJR	amod	4
4	you	you		pro	2nd	sg							PRP	attr	1
5	than	than		cs	cs_othr								IN	mark	9
6	an	an		dt									DT	det	8
7	artificial	artificial	attr+npremod	jj	attr								JJ	amod	8
8	limb	limb		nn									NN	nsubj	9
9	are	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBP	advcl	4
10	,	,											,	punct	4
11	is	be		vbmain	be	pres	simple	active					VBZ	parataxis	4
12	,	,											,	punct	11
13	or	or		cc	phrs								CC	cc	4
14	no	no											RB	neg	15
15	more	more		jj	attr								JJR	amod	16
16	you	you		pro	2nd	sg							PRP	conj	4
17	than	than		cs	cs_othr								IN	mark	20
18	your	your		dt	poss								PRP$	poss	19
19	clothes	clothe		nn	pl								NNS	nsubj	20
20	are	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBP	advcl	16
21	.	.											.	punct	1

#sentid = 521
0	um	um											UH	intj	4
1	...	...											:	punct	0
2	so	so		rb	link								RB	advmod	4
3	,	,											,	punct	4
4	looks	look		vbmain	prepv	pres	simple	active					VBZ	ROOT	4
5	like	like		cs	cs_othr								IN	mark	31
6	number	number		nn		nom							NN	nsubj	30
7	five	five											CD	nummod	6
8	,	,											,	punct	6
9	the	the		dt	art								DT	det	10
10	sort	sort	appos+npostmod	nn			nappos						NN	appos	6
11	of	of	of+npostmod	in	nmod								IN	prep	10
12	point	point		nn									NN	pobj	11
13	of	of	of+npostmod	in	nmod								IN	prep	12
14	view	view		nn									NN	pobj	13
15	corrected	correct	edcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	edcls	ncomp		VBN	acl	12
16	,	,											,	punct	10
17	point	point	appos+npostmod	nn			nappos						NN	appos	10
18	of	of	of+npostmod	in	nmod								IN	prep	17
19	view	view		nn									NN	pobj	18
20	,	,											,	punct	10
21	um	um											UH	intj	10
22	,	,											,	punct	10
23	center	center	nn+npremod	nn		nom	npremod						NN	nmod	26
24	of	of	of+npostmod	in	nmod								IN	prep	23
25	gravity	gravity		nn		nom							NN	pobj	24
26	view	view	appos+npostmod	nn			nappos						NN	appos	10
27	,	,											,	punct	6
28	does	do		vbaux									VBZ	aux	30
29	n't	not											RB	neg	30
30	wanna	wanna		vbaux									VB	aux	31
31	take	take		vbmain	vblex	nonfinite	simple	active			other_advl		VB	dep	4
32	that	that		dt	dt_dem								DT	det	33
33	kind	kind		nn									NN	dobj	31
34	of	of	of+npostmod	in	nmod								IN	prep	33
35	view	view		nn									NN	pobj	34
36	about	about	in+npostmod	in	nmod								IN	prep	35
37	what	what											WP	attr	39
38	you	you		pro	2nd	sg							PRP	nsubj	39
39	are	be	whcls+incomp	vbmain	be	pres	simple	active	compcls	whcls	incomp		VBP	pcomp	36
40	.	.											.	punct	4

#sentid = 522
0	they	they		pro	pl								PRP	nsubj	7
1	does	do		vbaux									VBZ	aux	7
2	,	,											,	punct	6
3	they	they		pro	pl								PRP	nsubj	6
4	do	do		vbaux									VBP	aux	6
5	n't	not											RB	neg	6
6	wanna	wanna		vbaux									VB	aux	7
7	say	say		vbmain	vblex	pres	simple	active					VB	ROOT	7
8	,	,											,	punct	7
9	a-	a-		dt									DT	det	10
10	advocate	advocate		nn		nom							NN	nsubj	16
11	of	of	of+npostmod	in	nmod								IN	prep	10
12	number	number		nn		nom							NN	pobj	11
13	five	five											CD	nummod	12
14	does	do		vbaux									VBZ	aux	16
15	n't	not											RB	neg	16
16	wanna	wanna	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	7
17	say	say		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	16
18	,	,											,	punct	17
19	you	you		pro	2nd	sg							PRP	nsubjpass	22
20	're	be		vbaux									VBP	auxpass	22
21	wholly	wholly	rb+advl	rb	advl	ly							RB	advmod	22
22	identified	identify	thatcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	17
23	with	with	in+advl	in	advl								IN	prep	22
24	your	your		dt	poss								PRP$	poss	25
25	brain	brain		nn									NN	pobj	23
26	,	,											,	punct	22
27	irrespective	irrespective	rb+advl	rb	advl								RB	advmod	22
28	of	of		in	in_othr								IN	prep	27
29	where	where		comp	comp_wh								WRB	advmod	33
30	you	you		pro	2nd	sg							PRP	nsubj	31
31	think	think		vbmain	vblex	pres	simple	active	compcls		incomp	compdel	VBP	pcomp	28
32	you	you		pro	2nd	sg							PRP	nsubj	33
33	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	31
34	.	.											.	punct	7

#sentid = 523
0	s-	s-											XX	dep	22
1	so	so		rb	othr								RB	advmod	13
2	number	number	nn+npremod	nn		nom	npremod						NN	nmod	13
3	three	three											CD	nummod	2
4	,	,											,	punct	13
5	the	the		dt	art								DT	det	6
6	advocate	advocate	nn+npremod	nn		nom	npremod						NN	nmod	13
7	of	of	of+npostmod	in	nmod								IN	prep	6
8	_	_											NFP	punct	7
9	sorry	sorry											UH	intj	7
10	,	,											,	punct	7
11	n-	n-											XX	nmod	6
12	the	the		dt	art								DT	det	13
13	advocate	advocate		in	in_othr	nom							NN	prep	0
14	of	of	of+npostmod	in	nmod								IN	prep	13
15	number	number		nn		nom							NN	pobj	14
16	two	two											CD	nummod	15
17	,	,											,	punct	15
18	the	the		dt	art								DT	det	20
19	brain	brain	nn+npremod	nn			npremod						NN	compound	20
20	theory	theory	appos+npostmod	nn		nom	nappos						NN	appos	15
21	would	would		vbaux	mod	prd							MD	aux	22
22	say	say		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	22
23	,	,											,	punct	22
24	it	it		pro	3rd	sg							PRP	nsubj	25
25	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	22
26	just	just		rb	othr								RB	advmod	28
27	an	an		dt									DT	det	28
28	illusion	illusion		nn									NN	attr	25
29	to	to		to									TO	aux	30
30	think	think	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	25
31	,	,											,	punct	25
32	that	that		comp	comp_that								IN	mark	36
33	you	you		pro	2nd	sg							PRP	nsubj	36
34	are	be		vbaux									VBP	aux	36
35	,	,											,	punct	36
36	walking	walk	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls	thatcls	vcomp		VBG	ccomp	25
37	around	around	rb+advl	rb	advl								RB	advmod	36
38	,	,											,	punct	36
39	underground	underground	rb+advl	rb	advl								RB	advmod	36
40	.	.											.	punct	22

#sentid = 524
0	that	that		pro	dem	sg							DT	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	completely	completely	rb+jjrbmod	rb	adjmod	ly							RB	advmod	6
3	,	,											,	punct	6
4	just	just	rb+jjrbmod	rb	adjmod								RB	advmod	6
5	as	as		rb	adjmod								RB	advmod	6
6	much	much	attr+npremod	jj	attr								JJ	amod	8
7	an	an		dt									DT	det	8
8	illusion	illusion		nn									NN	attr	1
9	as	as		cs	cs_othr								IN	mark	12
10	if	if		cs	cnd								IN	mark	12
11	you	you		pro	2nd	sg							PRP	nsubj	12
12	were	be	finitecls+advl	vbmain	be	past	simple	active	advlcls		other_advl		VBD	advcl	8
13	in	in	in+advl	in	advl								IN	prep	12
14	this	this		pro	dem	sg							DT	pobj	13
15	um	um											UH	intj	19
16	,	,											,	punct	19
17	you	you		pro	2nd	sg							PRP	nsubj	19
18	were	be		vbaux									VBD	aux	19
19	controlling	control		vbmain	vblex	past	prog	active	nmod_cls		ncomp	reldel	VBG	acl	8
20	this	this		pro	dem	sg							DT	dobj	19
21	um	um											UH	intj	28
22	,	,											,	punct	28
23	this	this											DT	dep	28
24	this	this											DT	intj	28
25	um	um											UH	intj	28
26	uh	uh											UH	intj	28
27	you	you		pro	2nd	sg							PRP	nsubj	28
28	're	be		vbmain	be	pres	simple	active					VBP	meta	1
29	on	on	in+advl	in	advl								IN	prep	28
30	this	this		dt	dt_dem								DT	det	31
31	boat	boat		nn									NN	pobj	29
32	controlling	control	ingcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	28
33	this	this		dt	dt_dem								DT	det	35
34	robot	robot	nn+npremod	nn			npremod						NN	compound	35
35	underseas	undersea		nn	pl								NNS	dobj	32
36	,	,											,	punct	32
37	with	with	in+advl	in	advl								IN	prep	1
38	this	this		dt	dt_dem								DT	det	41
39	virtual	virtual	attr+npremod	jj	attr								JJ	amod	40
40	reality	reality	nn+npremod	nn		nom	npremod						NN	nmod	41
41	kind	kind		nn									NN	pobj	37
42	of	of	of+npostmod	in	nmod								IN	prep	41
43	,	,											,	punct	42
44	m-	m-	nn+npremod	nn			npremod						NN	compound	45
45	manipulation	manipulation		nn		nom							NN	pobj	42
46	.	.											.	punct	1

#sentid = 525
0	on	on	in+advl	in	advl								IN	prep	8
1	that	that		dt	dt_dem								DT	det	2
2	kind	kind		nn									NN	pobj	0
3	of	of	of+npostmod	in	nmod								IN	prep	2
4	case	case		nn									NN	pobj	3
5	,	,											,	punct	8
6	you	you		pro	2nd	sg							PRP	nsubj	8
7	really	really	rb+advl	rb	advl	ly							RB	advmod	8
8	are	be		vbmain	be	pres	simple	active					VBP	ROOT	8
9	up	up	rb+advl	rb	advl								RB	advmod	8
10	on	on		in	in_othr								IN	prep	9
11	the	the		dt	art								DT	det	12
12	boat	boat		nn									NN	pobj	10
13	y-	y-											XX	punct	8
14	however	however	rb+jjrbmod	rb	othr								WRB	advmod	15
15	much	much											JJ	dobj	18
16	it	it		pro	3rd	sg							PRP	nsubj	18
17	might	might		vbaux	mod	pos							MD	aux	18
18	seem	seem		vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	25
19	,	,											,	punct	18
20	virtual	virtual	attr+npremod	jj	attr								JJ	amod	21
21	reality	reality		nn		nom							NN	npadvmod	22
22	wise	wise	rb+advl	rb	advl								RB	advmod	18
23	that	that											WDT	mark	25
24	you	you		pro	2nd	sg							PRP	nsubj	25
25	were	be		vbmain	be	past	simple	active					VBD	dep	8
26	,	,											,	punct	25
27	um	um											UH	intj	25
28	under	under	in+advl	in	advl								IN	prep	25
29	,	,											,	punct	25
30	on	on	in+advl	in	advl								IN	prep	25
31	the	the		dt	art								DT	det	33
32	sea	sea	nn+npremod	nn			npremod						NN	compound	33
33	floor	floor		nn		nom							NN	pobj	30
34	.	.											.	punct	8

#sentid = 526
0	and	and		cc	cls								CC	cc	6
1	,	,											,	punct	6
2	the	the		dt	art								DT	det	3
3	advocate	advocate	nn+npremod	nn		nom	npremod						NN	compound	4
4	number	number		nn		nom							NN	nsubj	6
5	two	two											CD	nummod	4
6	says	say		vbmain	vblex	pres	simple	active					VBZ	ROOT	6
7	it	it		pro	3rd	sg							PRP	nsubj	8
8	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	6
9	the	the		dt	art								DT	det	11
10	same	same	attr+npremod	jj	attr								JJ	amod	11
11	thing	thing		nn		nom							NN	attr	8
12	,	,											,	punct	11
13	with	with	in+npostmod	in	nmod								IN	prep	11
14	your	your		dt	poss								PRP$	poss	15
15	brain	brain		nn									NN	pobj	13
16	.	.											.	punct	6

#sentid = 527
0	you	you		pro	2nd	sg							PRP	nsubj	1
1	are	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	30
2	wherever	wherever		rb	advl								WRB	advmod	5
3	your	your		dt	poss								PRP$	poss	4
4	brain	brain		nn									NN	nsubj	5
5	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	1
6	even	even	rb+advl	rb	advl								RB	advmod	10
7	though	though		cs	con								IN	mark	10
8	it	it		pro	3rd	sg							PRP	nsubj	10
9	may	may		vbaux	mod	pos							MD	aux	10
10	seem	seem	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		concessive		VB	advcl	19
11	that	that		comp	comp_that								IN	mark	13
12	you	you		pro	2nd	sg							PRP	nsubj	13
13	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	10
14	completely	completely	rb+advl	rb	advl	ly							RB	advmod	13
15	,	,											,	punct	19
16	um	um											UH	intj	19
17	,	,											,	punct	19
18	you	you		pro	2nd	sg							PRP	nsubj	19
19	're	be		vbmain	be	pres	simple	active					VBP	dep	1
20	in	in	in+advl	in	advl								IN	prep	19
21	completely	completely		rb	othr	ly							RB	advmod	20
22	,	,											,	punct	20
23	another	another		dt									DT	det	24
24	place	place		nn									NN	pobj	20
25	altogether	altogether		rb	othr								RB	advmod	24
26													_SP	dep	1
27	so	so		rb	link								RB	advmod	30
28	,	,											,	punct	30
29	i	i		pro	1st	sg							PRP	nsubj	30
30	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	30
31	that	that		comp	comp_that								IN	mark	33
32	it	it		pro	3rd	sg							PRP	nsubj	33
33	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	30
34	hard	hard		jj	pred								JJ	acomp	33
35	to	to		to									TO	aux	36
36	combine	combine	xtrapos+tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	33
37	two	two											CD	dobj	36
38	and	and		cc									CC	cc	37
39	three	three											CD	conj	37
40	.	.											.	punct	30

#sentid = 528
0	um	um											UH	intj	4
1	,	,											,	punct	4
2	they	they		pro	pl								PRP	nsubj	4
3	've	've		vbaux									VBP	aux	4
4	got	get		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBN	ccomp	15
5	really	really	rb+jjrbmod	rb	adjmod	ly							RB	advmod	6
6	_	_	attr+npremod	jj	attr								JJ	amod	7
7	number	number		nn		nom							NN	dobj	4
8	,	,											,	punct	7
9	the	the		dt	art								DT	det	10
10	advocate	advocate		nn		nom							NN	nsubj	15
11	of	of	of+npostmod	in	nmod								IN	prep	10
12	number	number		nn		nom							NN	pobj	11
13	three	three											CD	nummod	12
14	,	,											,	punct	10
15	thinks	think		vbmain	vblex	pres	simple	active					VBZ	ROOT	15
16	well	well											UH	intj	19
17	look	look		vbmain	vblex	nonfinite	simple	active					VB	intj	19
18	you	you		pro	2nd	sg							PRP	nsubj	19
19	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	15
20	wherever	wherever		rb	advl								WRB	advmod	24
21	you	you		pro	2nd	sg							PRP	nsubj	22
22	think	think	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBP	advcl	19
23	you	you		pro	2nd	sg							PRP	nsubj	24
24	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	22
25	.	.											.	punct	15

#sentid = 529
0	where	where		comp	comp_wh								WRB	advmod	2
1	you	you		pro	2nd	sg							PRP	nsubj	2
2	are	be		vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	csubj	7
3	who	who											WP	attr	5
4	you	you		pro	2nd	sg							PRP	nsubj	5
5	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	2
6	,	,											,	punct	7
7	depends	depend		vbmain	prepv	pres	simple	active					VBZ	ROOT	7
8	on	on	in+advl	in	advl								IN	prep	7
9	your	your											PRP$	pobj	8
10	,	,											,	punct	11
11	on	on		in	in_othr								IN	prep	8
12	your	your		dt	poss								PRP$	poss	15
13	actual	actual	attr+npremod	jj	attr								JJ	amod	15
14	,	,											,	punct	15
15	point	point		nn									NN	pobj	11
16	of	of	of+npostmod	in	nmod								IN	prep	15
17	view	view		nn									NN	pobj	16
18	.	.											.	punct	7

#sentid = 530
0	what	what											WP	dobj	3
1	how	how		rb	advl								WRB	advmod	3
2	it	it		pro	3rd	sg							PRP	nsubj	3
3	seems	seem		vbmain	vblex	pres	simple	active					VBZ	ROOT	3
4	to	to	in+advl	in	advl								IN	prep	3
5	you	you		pro	2nd	sg							PRP	pobj	4
6	...	...											:	punct	3

#sentid = 531
0	a	a		dt	art								DT	det	1
1	couple	couple		nn									NN	dep	5
2	of	of	of+npostmod	in	nmod								IN	prep	1
3	people	people		nn	pl								NNS	pobj	2
4	i	i		pro	1st	sg							PRP	nsubj	5
5	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	5
6	you	you		pro	2nd	sg							PRP	nsubj	10
7	,	,											,	punct	10
8	um	um											UH	intj	10
9	were	be		vbaux									VBD	aux	10
10	saying	say	thatcls+vcomp	vbmain	vblex	past	prog	active	compcls		vcomp	compdel	VBG	ccomp	5
11	,	,											,	punct	10
12	a	a		dt	art								DT	det	13
13	problem	problem		nn									NN	nsubj	18
14	for	for	in+npostmod	in	nmod								IN	prep	13
15	number	number		nn		nom							NN	pobj	14
16	three	three											CD	nummod	15
17	would	would		vbaux	mod	prd							MD	aux	18
18	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	10
19	that	that		comp	comp_that								IN	mark	24
20	uh	uh											UH	intj	24
21	how	how		comp	comp_wh								WRB	advmod	24
22	can	can		vbaux	mod	pos							MD	aux	24
23	you	you		pro	2nd	sg							PRP	nsubj	24
24	be	be	whcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls	whcls	vcomp		VB	ccomp	18
25	where	where											WRB	dep	28
26	,	,											,	punct	28
27	it	it		pro	3rd	sg							PRP	nsubj	28
28	seems	seem		vbmain	vblex	pres	simple	active					VBZ	parataxis	47
29	to	to	in+advl	in	advl								IN	prep	28
30	you	you		pro	2nd	sg							PRP	pobj	29
31	,	,											,	punct	28
32	cuz	cuz		cs	cs_othr								IN	mark	38
33	in	in	in+advl	in	advl								IN	prep	38
34	dreams	dream		nn	pl								NNS	pobj	33
35	for	for	in+advl	in	advl								IN	prep	38
36	instance	instance		nn		nom							NN	pobj	35
37	you	you		pro	2nd	sg							PRP	nsubj	38
38	're	be		vbmain	be	pres	simple	active	compcls		other_advl	compdel	VBP	ccomp	42
39	um	um											UH	intj	38
40	,	,											,	punct	38
41	you	you		pro	2nd	sg							PRP	nsubj	42
42	're	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	47
43	clearly	clearly	rb+advl	rb	advl	ly							RB	advmod	42
44	,	,											,	punct	42
45	not	not											RB	neg	42
46	,	,											,	punct	47
47	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	24
48	that	that		pro	dem	sg							DT	nsubj	47
49	?	?											.	punct	5

#sentid = 532
0													_SP	dep	0
1	mhm	mhm											UH	intj	0
2	.	.											.	punct	1

#sentid = 533
0	yeah	yeah											UH	intj	3
1	,	,											,	punct	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	was	be		vbmain	be	past	simple	active					VBD	ROOT	3
4	just	just		rb	othr								RB	advmod	5
5	what	what		comp	comp_wh								WP	dobj	7
6	we	we		pro	1st								PRP	nsubj	7
7	said	say	whcls+vcomp	vbmain	vblex	past	simple	active	compcls	whcls	vcomp		VBD	ccomp	3
8	.	.											.	punct	3

#sentid = 534
0													_SP	dep	7
1	what	what											WP	dobj	2
2	do	do		vbmain	vblex	pres	simple	active					VBP	dep	7
3	,	,											,	punct	7
4	what	what											WP	dobj	7
5	do	do		vbaux									VBP	aux	7
6	people	people		nn	pl								NNS	nsubj	7
7	think	think		vbmain	vblex	pres	simple	active					VB	ROOT	7
8	?	?											.	punct	7

#sentid = 535
0	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	0
1	it	it		pro	3rd	sg							PRP	nsubj	0
2	,	,											,	punct	5
3	could	could		vbaux	mod	pos							MD	aux	5
4	you	you		pro	2nd	sg							PRP	nsubj	5
5	be	be		vbmain	be	vp_w_modal	simple	active					VB	parataxis	7
6	,	,											,	punct	5
7	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	0
8	that	that		pro	dem	sg							DT	nsubj	7
9	a	a		dt	art								DT	det	11
10	good	good	attr+npremod	jj	attr								JJ	amod	11
11	objection	objection		nn		nom							NN	attr	7
12	to	to	in+npostmod	in	nmod								IN	prep	11
13	the	the		dt	art								DT	det	15
14	,	,											,	punct	15
15	number	number		nn		nom							NN	pobj	12
16	three	three											CD	nummod	15
17	?	?											.	punct	7

#sentid = 536
0													_SP	dep	0
1	mhm	mhm											UH	intj	0
2	.	.											.	punct	0

#sentid = 537
0													_SP	dep	10
1	well	well											UH	intj	10
2	,	,											,	punct	10
3	and	and		cc	phrs								CC	cc	10
4	a	a											DT	quantmod	5
5	lotta	lotta		nn									NN	nummod	6
6	people	people		nn	pl								NNS	nsubjpass	10
7	are	be		vbaux									VBP	auxpass	10
8	are	be		vbaux									VBP	auxpass	10
9	really	really	rb+advl	rb	advl	ly							RB	advmod	10
10	tempted	tempt		vbmain	vblex	pres	simple	pasv_by					VBN	ROOT	10
11	by	by											IN	agent	10
12	,	,											,	punct	11
13	by	by											IN	agent	11
14	the	the		dt	art								DT	det	15
15	idea	idea		nn									NN	pobj	13
16	that	that		relpro	relpro_that								IN	mark	18
17	you	you		pro	2nd	sg							PRP	nsubj	18
18	are	be	thatcls+ncomp	vbmain	be	pres	simple	active	nmod_cls	thatcls	ncomp		VBP	acl	15
19	this	this		dt	dt_dem								DT	det	20
20	sort	sort		nn									NN	attr	18
21	of	of	of+npostmod	in	nmod								IN	prep	20
22	immaterial	immaterial	attr+npremod	jj	attr								JJ	amod	23
23	thing	thing		nn		nom							NN	pobj	21
24	,	,											,	punct	20
25	this	this		dt	dt_dem								DT	det	27
26	semi-	semi-	attr+npremod	jj	attr								JJ	amod	27
27	center	center	appos+npostmod	nn		nom	nappos						NN	appos	20
28	of	of	of+npostmod	in	nmod								IN	prep	27
29	gravity	gravity		nn		nom							NN	pobj	28
30	.	.											.	punct	10

#sentid = 538
0	how	how		rb	advl								WRB	advmod	6
1	do	do		vbaux									VB	aux	6
2	how	how	rb+jjrbmod	rb	othr								WRB	advmod	3
3	exactly	exactly	rb+advl	rb	advl	ly	splaux						RB	advmod	6
4	do	do		vbaux									VBP	aux	6
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	think	think		vbmain	vblex	pres	simple	active					VB	ROOT	6
7	we	we		pro	1st								PRP	nsubj	9
8	should	should		vbaux	mod	nec							MD	aux	9
9	capture	capture	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	6
10	the	the		dt	art								DT	det	11
11	idea	idea		nn									NN	dobj	9
12	of	of	of+npostmod	in	nmod								IN	prep	11
13	,	,											,	punct	12
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	12
16	,	,											,	punct	15
17	where	where		comp	comp_wh								WRB	advmod	23
18	your	your		dt	poss								PRP$	poss	19
19	center	center		nn		nom							NN	nsubj	23
20	of	of	of+npostmod	in	nmod								IN	prep	19
21	gravity	gravity		nn		nom							NN	pobj	20
22	should	should		vbaux	mod	nec							MD	aux	23
23	be	be	whcls+incomp	vbmain	be	vp_w_modal	simple	active	compcls	whcls	incomp		VB	pcomp	12
24	?	?											.	punct	6

#sentid = 539
0													_SP	dep	24
1	how	how		rb	advl								WRB	advmod	4
2	do	do		vbaux									VBP	aux	4
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	decide	decide	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VB	advcl	24
5	that	that		comp	comp_that								IN	mark	7
6	you	you		pro	2nd	sg							PRP	nsubj	7
7	were	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls	thatcls	vcomp		VBD	ccomp	4
8	wrong	wrong		jj	pred								JJ	acomp	7
9	that	that		comp	comp_that								IN	mark	11
10	your	your		dt	poss								PRP$	poss	11
11	center	center		nn		nom							NN	ccomp	8
12	of	of	of+npostmod	in	nmod								IN	prep	11
13	gravity	gravity		nn		nom							NN	pobj	12
14	,	,											,	punct	24
15	how	how		rb	advl								WRB	advmod	24
16	can	can		vbaux	mod	pos							MD	aux	24
17	you	you		pro	2nd	sg							PRP	nsubj	24
18	ever	ever	rb+advl	rb	advl		splaux						RB	advmod	24
19	just	just	rb+advl	rb	advl		splaux						RB	advmod	24
20	,	,											,	punct	22
21	you	you		pro	2nd	sg							PRP	nsubj	22
22	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	24
23	,	,											,	punct	22
24	decide	decide		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	24
25	that	that		comp	comp_that								IN	mark	27
26	you	you		pro	2nd	sg							PRP	nsubj	27
27	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	24
28	wrong	wrong		jj	pred								JJ	acomp	27
29	about	about	in+jcomp	in	jcomp								IN	prep	28
30	where	where		comp	comp_wh								WRB	advmod	35
31	your	your		dt	poss								PRP$	poss	32
32	center	center		nn		nom							NN	nsubj	35
33	of	of	of+npostmod	in	nmod								IN	prep	32
34	gravity	gravity		nn		nom							NN	pobj	33
35	is	be	whcls+incomp	vbmain	be	pres	simple	active	compcls	whcls	incomp		VBZ	pcomp	29
36	?	?											.	punct	24

#sentid = 540
0													_SP	dep	5
1	wait	wait		vbmain	vblex	nonfinite	simple	active					VB	intj	5
2	,	,											,	punct	5
3	could	could		vbaux	mod	pos							MD	aux	5
4	you	you		pro	2nd	sg							PRP	nsubj	5
5	say	say		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	5
6	that	that		pro	dem	sg							DT	dobj	5
7	again	again	rb+advl	rb	advl								RB	advmod	5
8	?	?											.	punct	5

#sentid = 541
0													_SP	dep	4
1	i	i		pro	1st	sg							PRP	nsubj	4
2	'm	be		vbaux									VBP	aux	4
3	just	just	rb+advl	rb	advl		splaux						RB	advmod	4
4	wondering	wonder		vbmain	vblex	pres	prog	active					VBG	ROOT	4
5	what	what											WP	attr	16
6	the	the		dt	art								DT	det	7
7	standard	standard		nn									NN	nsubj	16
8	for	for	in+npostmod	in	nmod								IN	prep	7
9	,	,											,	punct	8
10	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	11
11	of	of	rb+advl	rb	advl								RB	advmod	12
12	correcting	correct	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	8
13	your	your											PRP$	dobj	12
14	,	,											,	punct	8
15	yourself	yourself		pro	2nd								PRP	pobj	8
16	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	4
17	.	.											.	punct	4

#sentid = 542
0	so	so		rb	link								RB	advmod	14
1	in	in	in+advl	in	advl								IN	prep	14
2	the	the		dt	art								DT	det	3
3	case	case		nn									NN	pobj	1
4	of	of	of+npostmod	in	nmod								IN	prep	3
5	a	a		dt	art								DT	det	6
6	dream	dream		nn									NN	pobj	4
7	,	,											,	punct	10
8	(	(											-LRB-	punct	10
9	you	you		pro	2nd	sg							PRP	nsubj	10
10	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	14
11	)	)											-RRB-	punct	10
12	you	you		pro	2nd	sg							PRP	nsubj	14
13	're	be		vbaux									VBP	aux	14
14	dreaming	dream		vbmain	vblex	pres	prog	active					VBG	ROOT	14
15	,	,											,	punct	14
16	that	that		comp	comp_that								IN	mark	18
17	you	you		pro	2nd	sg							PRP	nsubj	18
18	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	14
19	on	on	in+advl	in	advl								IN	prep	18
20	Mars	mars		nn		proper							NNP	pobj	19
21	.	.											.	punct	14

#sentid = 543
0													_SP	dep	7
1	mhm	mhm											UH	intj	7
2													_SP	dep	7
3	and	and		cc	phrs								CC	cc	7
4	,	,											,	punct	7
5	maybe	maybe	rb+advl	rb	advl								RB	advmod	7
6	it	it		pro	3rd	sg							PRP	nsubj	7
7	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	7
8	a	a		dt	art								DT	det	13
9	completely	completely	rb+jjrbmod	rb	adjmod	ly							RB	advmod	12
10	,	,											,	punct	12
11	absolutely	absolutely	rb+jjrbmod	rb	adjmod	ly							RB	advmod	12
12	lifelike	lifelike	attr+npremod	jj	attr								JJ	amod	13
13	dream	dream		nn									NN	attr	7
14	.	.											.	punct	7

#sentid = 544
0	you	you		pro	2nd	sg							PRP	nsubj	2
1	're	be		vbaux									VBP	aux	2
2	imagining	imagine		vbmain	vblex	pres	prog	active					VBG	ROOT	2
3	it	it		pro	3rd	sg							PRP	dobj	2
4	vividly	vividly	rb+advl	rb	advl	ly							RB	advmod	2
5	and	and		cc	cls								CC	cc	2
6	,	,											,	punct	8
7	it	it		pro	3rd	sg							PRP	nsubj	8
8	's	be		vbmain	be	pres	simple	active					VBZ	conj	2
9	completely	completely	rb+jjrbmod	rb	adjmod	ly							RB	advmod	10
10	true	true		jj	pred								JJ	acomp	8
11	,	,											,	punct	8
12	that	that		comp	comp_that								IN	mark	14
13	Mars	mars		nn		proper							NNP	nsubj	14
14	is	be	xtrapos+thatcls+jcomp	vbmain	be	pres	simple	active	compcls	thatcls	jcomp		VBZ	ccomp	8
15	like	like	in+advl	in	advl								IN	prep	14
16	that	that		pro	dem	sg							DT	pobj	15
17	.	.											.	punct	8

#sentid = 545
0	but	but		cc	cls								CC	cc	3
1	,	,											,	punct	3
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	're	be		vbmain	be	pres	simple	active					VBP	ROOT	3
4	actually	actually	rb+advl	rb	advl	ly							RB	advmod	3
5	,	,											,	punct	8
6	we	we		pro	1st								PRP	nsubj	7
7	wanna	wanna		vbaux	mod								MD	aux	8
8	say	say		vbmain	vblex	vp_w_modal	simple	active					VB	parataxis	3
9	you	you		pro	2nd	sg							PRP	nsubj	10
10	're	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	8
11	actually	actually	rb+advl	rb	advl	ly							RB	advmod	10
12	at	at	in+advl	in	advl								IN	prep	10
13	home	home		nn									NN	pobj	12
14	in	in	in+advl	in	advl								IN	prep	10
15	bed	bed		nn									NN	pobj	14
16	under	under	in+advl	in	advl								IN	prep	10
17	the	the		dt	art								DT	det	18
18	covers	cover		nn	pl	nom							NNS	pobj	16
19	asleep	asleep											JJ	advcl	10
20	.	.											.	punct	3

#sentid = 546
0	how	how		comp	comp_wh								WRB	advmod	1
1	is	be		vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	5
2	it	it		pro	3rd	sg							PRP	nsubj	1
3	_	_											:	punct	1
4	why	why		rb	advl								WRB	advmod	5
5	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	5
6	that	that		pro	dem	sg							DT	nsubj	5
7	the	the		dt	art								DT	det	9
8	right	right	attr+npremod	jj	attr								JJ	amod	9
9	answer	answer		nn		nom							NN	attr	5
10	?	?											.	punct	5

#sentid = 547
0	why	why		rb	advl								WRB	advmod	9
1	why	why		rb	advl								WRB	advmod	2
2	does	do		vbaux									VBZ	aux	9
3	the	the		dt	art								DT	det	4
4	center	center		nn		nom							NN	dep	9
5	of	of	of+npostmod	in	nmod								IN	prep	4
6	gravity	gravity		nn		nom							NN	pobj	5
7	,	,											,	punct	9
8	why	why		rb	advl		splaux						WRB	advmod	9
9	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	9
10	your	your		dt	poss								PRP$	poss	11
11	center	center		nn		nom							NN	nsubj	9
12	of	of	of+npostmod	in	nmod								IN	prep	11
13	gravity	gravity		nn		nom							NN	pobj	12
14	still	still	rb+advl	rb	advl								RB	advmod	9
15	here	here	rb+advl	rb	advl								RB	advmod	9
16	on	on		in	in_othr								IN	prep	15
17	earth	earth		nn									NN	pobj	16
18	,	,											,	punct	9
19	even	even	rb+advl	rb	advl								RB	advmod	23
20	though	though		cs	con								IN	mark	23
21	you	you		pro	2nd	sg							PRP	nsubj	23
22	're	be		vbaux									VBP	aux	23
23	dreaming	dream	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		concessive		VBG	advcl	9
24	about	about	in+advl	in	advl								IN	prep	23
25	Mars	mars		nn		proper							NNP	pobj	24
26	?	?											.	punct	9

#sentid = 548
0													_SP	dep	10
1	cuz	cuz											IN	dep	10
2	it	it		pro	3rd	sg							PRP	nsubj	3
3	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	10
4	not	not											RB	neg	3
5	real	real		jj	pred								JJ	acomp	3
6	it	it		pro	3rd	sg							PRP	nsubj	10
7	's	be		vbaux									VBZ	aux	10
8	not	not											RB	neg	10
9	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	10
10	happening	happen		vbmain	vblex	pres	prog	active					VBG	ROOT	10
11	.	.											.	punct	10

#sentid = 549
0	your	your		dt	poss								PRP$	poss	1
1	point	point		nn									NN	nsubj	6
2	of	of	of+npostmod	in	nmod								IN	prep	1
3	view	view		nn									NN	pobj	2
4	does	do		vbaux									VBZ	aux	6
5	n't	not											RB	neg	6
6	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	6
7	n't	not											RB	neg	6
8	only	only		rb	othr	ly							RB	advmod	9
9	like	like	in+advl	in	advl								IN	prep	6
10	you	you		pro	2nd	sg							PRP	nsubj	11
11	looking	look	ingcls+incomp	vbmain	prepv	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	9
12	at	at	in+advl	in	advl								IN	prep	11
13	Mars	mars		nn		proper							NNP	pobj	12
14	.	.											.	punct	6

#sentid = 550
0	it	it		pro	3rd	sg							PRP	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	,	,											,	punct	1
3	what	what		comp	comp_wh								WP	dobj	8
4	that	that		dt	dt_dem								DT	det	5
5	point	point		nn									NN	nsubj	8
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	view	view		nn									NN	pobj	6
8	is	be		vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	csubj	9
9	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	1
10	that	that		comp	comp_that								IN	mark	13
11	your	your		dt	poss								PRP$	poss	12
12	body	body		nn									NN	nsubj	13
13	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	9
14	up	up	rb+jjrbmod	rb	othr								RB	advmod	15
15	there	there	rb+advl	rb	advl								RB	advmod	13
16	on	on		in	in_othr								IN	prep	15
17	Mars	mars		nn		proper							NNP	pobj	16
18	and	and		cc	cls								CC	cc	13
19	you	you		pro	2nd	sg							PRP	nsubj	21
20	're	be		vbaux									VBP	aux	21
21	interacting	interact		vbmain	vblex	pres	prog	active					VBG	conj	13
22	with	with	in+advl	in	advl								IN	prep	21
23	things	thing		nn	pl	nom							NNS	pobj	22
24	like	like	in+npostmod	in	nmod								IN	prep	23
25	feeling	feel	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	24
26	them	they		pro	pl								PRP	nsubj	27
27	looking	look		vbmain	prepv	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	ccomp	25
28	at	at	in+advl	in	advl								IN	prep	27
29	them	they		pro	pl								PRP	pobj	28
30													_SP	dep	25
31	mhm	mhm											UH	intj	25
32													_SP	dep	25
33	hearing	hear		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	dep	25
34	them	they		pro	pl								PRP	nsubj	35
35	smelling	smell		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	dep	33
36	them	they		pro	pl								PRP	dobj	35
37	whatever	whatever											WDT	dep	25
38	.	.											.	punct	1

#sentid = 551
0	but	but		cc	cls								CC	cc	3
1	the	the		dt	art								DT	det	2
2	fact	fact		nn									NN	nsubj	3
3	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	like	like											UH	intj	3
5	that	that		pro	dem	sg							DT	nsubj	9
6	's	be		vbaux									VBZ	aux	9
7	not	not											RB	neg	9
8	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	9
9	happening	happen	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	3
10	.	.											.	punct	3

#sentid = 552
0	that	that		pro	dem	sg							DT	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	not	not											RB	neg	1
3	,	,											,	punct	1
4	what	what											WP	nsubj	7
5	's	be		vbaux									VBZ	aux	7
6	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	7
7	going	go	whcls+vcomp	vbmain	prepv	pres	prog	active	compcls	whcls	vcomp		VBG	ccomp	1
8	on	on		rb	prtcle								RP	prt	7
9	.	.											.	punct	1

#sentid = 553
0	what	what											WP	dep	9
1	your	your											PRP$	advcl	7
2	,	,											,	punct	7
3	where	where		rb	advl								WRB	advmod	7
4	your	your		dt	poss								PRP$	poss	5
5	body	body		nn									NN	nsubj	7
6	really	really	rb+advl	rb	advl	ly							RB	advmod	7
7	is	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls	whcls			VBZ	advcl	9
8	,	,											,	punct	9
9	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	9
10	under	under	in+advl	in	advl								IN	prep	9
11	the	the		dt	art								DT	det	12
12	covers	cover		nn	pl	nom							NNS	pobj	10
13	,	,											,	punct	9
14	and	and		cc	cls								CC	cc	9
15	because	because	in+advl	in	advl								IN	prep	21
16	of	of											IN	pcomp	15
17	that	that		pro	dem	sg							DT	pobj	15
18	you	you		pro	2nd	sg							PRP	nsubj	21
19	ca	can		vbaux	mod								MD	aux	21
20	n't	not											RB	neg	21
21	see	see		vbmain	vblex	vp_w_modal	simple	active					VB	conj	9
22	and	and		cc	cls								CC	cc	21
23	you	you		pro	2nd	sg							PRP	nsubj	26
24	ca	can		vbaux	mod								MD	aux	26
25	n't	not											RB	neg	26
26	hear	hear		vbmain	vblex	vp_w_modal	simple	active					VB	conj	21
27	and	and		cc	cls								CC	cc	26
28	you	you		pro	2nd	sg							PRP	nsubj	31
29	ca	can		vbaux	mod								MD	aux	31
30	n't	not											RB	neg	31
31	do	do		vbmain	vblex	vp_w_modal	simple	active					VB	conj	26
32	any	any											DT	dobj	31
33	of	of		in	in_othr								IN	prep	32
34	that	that		dt	dt_dem								DT	det	35
35	stuff	stuff		nn									NN	pobj	33
36													_SP	dep	9
37	mhm	mhm											UH	intj	9
38													_SP	dep	37
39	cuz	cuz											IN	dep	42
40	you	you		pro	2nd	sg							PRP	nsubj	42
41	're	be		vbaux									VBP	aux	42
42	dreaming	dream		vbmain	vblex	pres	prog	active					VBG	conj	37
43	,	,											,	punct	42
44	so	so		cc	cls								CC	cc	42
45	it	it		pro	3rd	sg							PRP	nsubj	46
46	's	be		vbmain	be	pres	simple	active					VBZ	conj	42
47	not	not											RB	neg	46
48	real	real		jj	pred								JJ	acomp	46
49	and	and		cc	cls								CC	cc	46
50	that	that		pro	dem	sg							DT	nsubj	51
51	's	be		vbmain	be	pres	simple	active					VBZ	conj	46
52	why	why		rb	advl								WRB	advmod	56
53	you	you		pro	2nd	sg							PRP	nsubj	56
54	do	do		vbaux									VBP	aux	56
55	n't	not											RB	neg	56
56	take	take	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VB	advcl	51
57	it	it		pro	3rd	sg							PRP	dobj	56
58	as	as	in+advl	in	advl								IN	prep	56
59	real	real		jj	attr								JJ	amod	58
60	.	.											.	punct	37

#sentid = 554
0													_SP	dep	5
1	okay	okay											UH	intj	5
2	so	so		rb	link								RB	advmod	5
3	maybe	maybe	rb+advl	rb	advl								RB	advmod	5
4	that	that		pro	dem	sg							DT	nsubj	5
5	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	5
6	a	a		dt	art								DT	det	13
7	,	,											,	punct	13
8	a	a		dt	art								DT	det	13
9	new	new	attr+npremod	jj	attr								JJ	amod	13
10	,	,											,	punct	13
11	a	a		dt	art								DT	det	13
12	different	different	attr+npremod	jj	attr								JJ	amod	13
13	way	way		nn									NN	attr	5
14	of	of	of+npostmod	in	nmod								IN	prep	13
15	understanding	understand	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	14
16	what	what											WP	attr	21
17	a	a		dt	art								DT	det	18
18	point	point		nn									NN	nsubj	21
19	of	of	of+npostmod	in	nmod								IN	prep	18
20	view	view		nn									NN	pobj	19
21	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	15
22	.	.											.	punct	5

#sentid = 555
0	a	a		dt	art								DT	det	1
1	point	point		nn									NN	nsubj	4
2	of	of	of+npostmod	in	nmod								IN	prep	1
3	view	view		nn									NN	pobj	2
4	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	where	where		comp	comp_wh								WRB	advmod	8
6	,	,											,	punct	8
7	the	the		dt	art								DT	det	8
8	place	place		nn						whcls			NN	ccomp	4
9	where	where		rb	advl								WRB	advmod	16
10	all	all											DT	nsubj	16
11	of	of		in	in_othr								IN	prep	10
12	the	the		dt	art								DT	det	14
13	sensory	sensory	attr+npremod	jj	attr								JJ	amod	14
14	information	information		nn		nom							NN	pobj	11
15	is	be		vbaux									VBZ	aux	16
16	coming	come	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls	whcls	rel		VBG	relcl	8
17	in	in	rb+advl	rb	advl								RP	advmod	16
18	.	.											.	punct	4

#sentid = 556
0													_SP	dep	0
1	right	right											UH	intj	0
2	.	.											.	punct	0

#sentid = 557
0													_SP	dep	0
1	so	so		rb	othr								RB	advmod	13
2	in	in		in	in_othr								IN	prep	13
3	the	the		dt	art								DT	det	4
4	case	case		nn									NN	pobj	2
5	of	of	of+npostmod	in	nmod								IN	prep	4
6	the	the		dt	art								DT	det	8
7	the	the		dt	art								DT	det	8
8	body	body		nn									NN	pobj	5
9													_SP	dep	8
10	example	example	appos+npostmod	nn			nappos						NN	appos	8
11													_SP	dep	8
12	well	well											UH	intj	13
13													_SP	dep	0
14	hm	hm											UH	intj	13
15	?	?											.	punct	14
16													_SP	dep	18
17	that	that		pro	dem	sg							DT	nsubj	18
18	's	be		vbmain	be	pres	simple	active					VBZ	meta	0
19	,	,											,	punct	18
20	that	that		pro	dem	sg							DT	nsubj	21
21	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	18
22	not	not											RB	neg	21
23	where	where		comp	comp_wh								WRB	advmod	25
24	you	you		pro	2nd	sg							PRP	nsubj	25
25	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	21
26	,	,											,	punct	18
27	but	but		cc									CC	cc	0
28	i	i		pro	1st	sg							PRP	nsubj	30
29	'm	be		vbaux									VBP	aux	30
30	saying	say		vbmain	vblex	pres	prog	active					VBG	conj	0
31	in	in	in+advl	in	advl								IN	prep	38
32	that	that		dt	dt_dem								DT	det	34
33	particular	particular	attr+npremod	jj	attr								JJ	amod	34
34	case	case		nn									NN	pobj	31
35	you	you		pro	2nd	sg							PRP	nsubj	38
36	ca	can		vbaux	mod								MD	aux	38
37	n't	not											RB	neg	38
38	take	take	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	30
39	a	a		dt	art								DT	det	40
40	dream	dream		nn									NN	dobj	38
41	as	as		cs	cs_othr								IN	mark	43
42	to	to		to									TO	aux	43
43	be	be	tocls+advl	vbmain	be	nonfinite	simple	active	advlcls	tocls	other_advl		VB	advcl	38
44	,	,											,	punct	38
45	as	as		cs	cs_othr								IN	mark	46
46	in	in	in+advl	in	advl								IN	prep	52
47	well	well											UH	intj	46
48	,	,											,	punct	52
49	you	you		pro	2nd	sg							PRP	nsubj	52
50	ca	can		vbaux	mod								MD	aux	52
51	n't	not											RB	neg	52
52	say	say		vbmain	vblex	vp_w_modal	simple	active	nmod_cls		ncomp	reldel	VB	acl	35
53	that	that		comp	comp_that								IN	mark	57
54	your	your		dt	poss								PRP$	poss	56
55	your	your		dt	poss								PRP$	poss	56
56	brain	brain		nn									NN	nsubj	57
57	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	52
58	up	up	rb+advl	rb	advl								RB	advmod	57
59	on	on		in	in_othr								IN	prep	58
60	Mars	mars		nn		proper							NNP	pobj	59
61	and	and		cc	cls								CC	cc	38
62	you	you		pro	2nd	sg							PRP	nsubj	68
63													_SP	dep	68
64	mhm	mhm											UH	intj	68
65													_SP	dep	68
66	ca	can		vbaux	mod								MD	aux	68
67	n't	not											RB	neg	68
68	say	say		vbmain	vblex	vp_w_modal	simple	active					VB	conj	38
69	that	that		comp	comp_that								IN	mark	74
70	your	your		dt	poss								PRP$	poss	71
71	point	point		nn									NN	nsubj	74
72	of	of	of+npostmod	in	nmod								IN	prep	71
73	view	view		nn									NN	pobj	72
74	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	68
75	up	up	rb+advl	rb	advl								RB	advmod	74
76	on	on		in	in_othr								IN	prep	75
77	Mars	mars		nn		proper							NNP	pobj	76
78	because	because		cs	cos								IN	mark	80
79	that	that		pro	dem	sg							DT	nsubj	80
80	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		causative		VBZ	advcl	68
81	just	just		rb	othr								RB	advmod	83
82	an	an		dt									DT	det	83
83	illusion	illusion		nn									NN	attr	80
84	,	,											,	punct	80
85	you	you		pro	2nd	sg							PRP	nsubj	86
86	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	80
87	?	?											.	punct	68

#sentid = 558
0	it	it		pro	3rd	sg							PRP	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	like	like		cs	cs_othr								IN	mark	12
3	if	if		cs	cnd								IN	mark	12
4	somebody	somebody		nn	other	sg							NN	nsubj	12
5	,	,											,	punct	12
6													_SP	dep	12
7	i	i		pro	1st	sg							PRP	nsubj	10
8	do	do		vbaux									VBP	aux	10
9	n't	not											RB	neg	10
10	agree	agree		vbmain	vblex	pres	simple	active					VB	parataxis	12
11													_SP	dep	10
12	goes	go	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	1
13	and	and		cc	phrs								CC	cc	12
14	,	,											,	punct	12
15	like	like											UH	intj	16
16	hypnotizes	hypnotize		vbmain	vblex	pres	simple	active					VBZ	conj	12
17	me	i		pro	1st	sg							PRP	dobj	16
18	or	or		cc	phrs								CC	cc	16
19	something	something		nn		nom							NN	conj	16
20	that	that		relpro	relpro_that	sg							WDT	nsubj	23
21	does	do		vbaux									VBZ	aux	23
22	n't	not											RB	neg	23
23	mean	mean	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VB	relcl	19
24	that	that		comp	comp_that								IN	mark	26
25	that	that		pro	dem	sg							DT	nsubj	26
26	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	23
27	the	the		dt	art								DT	det	28
28	way	way		nn									NN	attr	26
29	things	thing		nn	pl	nom							NNS	nsubj	30
30	are	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls		rel	reldel	VBP	relcl	28
31	,	,											,	punct	33
32	it	it		pro	3rd	sg							PRP	nsubj	33
33	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	1
34	just	just		rb	othr								RB	advmod	36
35	an	an		dt									DT	det	36
36	illusion	illusion		nn									NN	attr	33
37													_SP	dep	1
38	(	(											-LRB-	punct	40
39	to	to		to									TO	aux	40
40	see	see		vbmain	vblex	nonfinite	simple	active		tocls			VB	parataxis	1
41	that	that		pro	dem	sg							DT	dobj	40
42	)	)											-RRB-	punct	40
43													_SP	dep	1
44	but	but		cc	phrs								CC	cc	46
45	that	that		pro	dem	sg							DT	nsubj	46
46	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	1
47	your	your		dt	poss								PRP$	poss	48
48	point	point		nn									NN	attr	46
49	of	of	of+npostmod	in	nmod								IN	prep	48
50	view	view		nn									NN	pobj	49
51	though	though	rb+advl	rb	advl								RB	advmod	46
52	.	.											.	punct	46

#sentid = 559
0	you	you		pro	2nd	sg							PRP	nsubj	3
1	'll	will		vbaux	mod								MD	aux	3
2	still	still	rb+advl	rb	advl		splaux						RB	advmod	3
3	say	say		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	3
4	,	,											,	punct	3
5	i	i		pro	1st	sg							PRP	nsubj	6
6	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	20
7	if	if		cs	cnd								IN	mark	11
8	s-	s-											XX	dep	11
9	if	if		cs	cnd								IN	mark	11
10	you	you		pro	2nd	sg							PRP	nsubj	11
11	asked	ask	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	20
12	a	a		dt	art								DT	det	14
13	dream	dream	nn+npremod	nn			npremod						NN	compound	14
14	person	person		nn									NN	dobj	11
15	where	where		comp	comp_wh								WRB	advmod	17
16	they	they		pro	pl								PRP	nsubj	17
17	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	11
18	they	they		pro	pl								PRP	nsubj	20
19	'll	will		vbaux	mod								MD	aux	20
20	say	say	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	3
21	wherever	wherever		rb	advl								WRB	advmod	24
22	you	you		pro	2nd	sg							PRP	nsubj	24
23	're	be		vbaux									VBP	aux	24
24	dreaming	dream	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls	whcls			VBG	advcl	34
25	that	that		comp	comp_that								IN	mark	27
26	you	you		pro	2nd	sg							PRP	nsubj	27
27	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBP	ccomp	24
28	,	,											,	punct	34
29	whether	whether		cs	cs_othr								IN	mark	34
30	or	or		cc	phrs								CC	cc	34
31	not	not											RB	neg	34
32	your	your		dt	poss								PRP$	poss	33
33	body	body		nn									NN	nsubj	34
34	's	be		vbmain	be	pres	simple	active	compcls		other_advl	compdel	VBZ	ccomp	20
35	there	there	rb+advl	rb	advl								RB	advmod	34
36	.	.											.	punct	3

#sentid = 560
0													_SP	dep	6
1	well	well											UH	intj	6
2	,	,											,	punct	6
3	then	then		rb	link								RB	advmod	6
4	you	you		pro	2nd	sg							PRP	nsubj	6
5	could	could		vbaux	mod	pos							MD	aux	6
6	go	go		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	6
7	like	like											UH	intj	6
8	,	,											,	punct	6
9	the	the		dt	art								DT	det	11
10	same	same	attr+npremod	jj	attr								JJ	amod	11
11	thing	thing		nn		nom							NN	nsubj	20
12	that	that		relpro	relpro_that	sg							WDT	nsubj	13
13	happened	happen	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls	thatcls	rel		VBD	relcl	11
14	with	with	in+advl	in	advl								IN	prep	13
15	uh	uh											UH	intj	14
16	,	,											,	punct	14
17	(	(											-LRB-	punct	14
18	Wira	wira		nn		proper							NNP	pobj	14
19	)	)											-RRB-	punct	14
20	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	6
21	it	it		pro	3rd	sg							PRP	nsubj	20
22	Perry	perry	s+gen	dt	poss	proper	sgen						NNP	poss	24
23	's	's											POS	case	22
24	dialogues	dialogue		nn	pl								NNS	attr	20
25	?	?											.	punct	6

#sentid = 561
0													_SP	dep	4
1	mhm	mhm											UH	intj	4
2													_SP	dep	4
3	it	it		pro	3rd	sg							PRP	nsubj	4
4	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	like	like											UH	intj	4
6	is	be		vbmain	be	pres	simple	active					VBZ	meta	4
7	it	it		pro	3rd	sg							PRP	nsubj	6
8	,	,											,	punct	6
9	is	be		vbmain	be	pres	simple	active					VBZ	dep	6
10	that	that		pro	dem	sg							DT	nsubj	9
11	your	your		dt	poss								PRP$	poss	12
12	point	point		nn									NN	attr	9
13	of	of	of+npostmod	in	nmod								IN	prep	12
14	view	view		nn									NN	pobj	13
15	,	,											,	punct	9
16	is	be		vbaux									VBZ	auxpass	18
17	that	that		pro	dem	sg							DT	nsubjpass	18
18	caused	cause	thatcls+vcomp	vbmain	vblex	pres	simple	pasv_agls	compcls		vcomp	compdel	VBN	ccomp	4
19	the	the		dt	art								DT	det	21
20	right	right	attr+npremod	jj	attr								JJ	amod	21
21	way	way		nn									NN	npadvmod	18
22	or	or		cc	phrs								CC	cc	21
23	the	the		dt	art								DT	det	25
24	wrong	wrong	attr+npremod	jj	attr								JJ	amod	25
25	way	way		nn									NN	conj	21
26	,	,											,	punct	18
27	or	or		cc	cls								CC	cc	18
28	is	be		vbmain	be	pres	simple	active					VBZ	conj	18
29	it	it		pro	3rd	sg							PRP	nsubj	28
30	your	your		dt	poss								PRP$	poss	32
31	seeming	seeming	attr+npremod	jj	attr								JJ	amod	32
32	point	point		nn									NN	attr	28
33	of	of	of+npostmod	in	nmod								IN	prep	32
34	view	view		nn									NN	pobj	33
35	?	?											.	punct	28

#sentid = 562
0	you	you		pro	2nd	sg							PRP	nsubj	2
1	could	could		vbaux	mod	pos							MD	aux	2
2	go	go		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	2
3	back	back	rb+advl	rb	advl								RB	advmod	2
4	to	to		in	in_othr								IN	prep	3
5	that	that		dt	dt_dem								DT	det	7
6	sorta	sorta	attr+npremod	jj	attr								JJ	amod	7
7	argument	argument		nn		nom							NN	pobj	4
8	you	you		pro	2nd	sg							PRP	nsubj	9
9	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	2
10	?	?											.	punct	2

#sentid = 563
0													_SP	dep	4
1	but	but		cc	phrs								CC	cc	4
2	,	,											,	punct	4
3	that	that		pro	dem	sg							DT	nsubj	4
4	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	not	not											RB	neg	4
6	really	really	rb+advl	rb	advl	ly							RB	advmod	4
7	the	the		dt	art								DT	det	8
8	argument	argument		nn		nom							NN	attr	4
9	.	.											.	punct	4

#sentid = 564
0	all	all											DT	nsubj	4
1	it	it		pro	3rd	sg							PRP	nsubj	3
2	's	be		vbaux									VBZ	aux	3
3	saying	say	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel	reldel	VBG	relcl	0
4	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	that	that		comp	comp_that								IN	mark	10
6	,	,											,	punct	10
7	the	the		dt	art								DT	det	10
8	number	number		nn		nom							NN	nsubj	10
9	three	three											CD	nummod	8
10	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	4
11	like	like											UH	intj	10
12	,	,											,	punct	10
13	wherever	wherever		rb	advl								WRB	advmod	16
14	you	you		pro	2nd	sg							PRP	nsubj	16
15	're	be		vbaux									VBP	aux	16
16	thinking	think	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls	whcls			VBG	advcl	20
17	you	you		pro	2nd	sg							PRP	nsubj	18
18	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	16
19	that	that		pro	dem	sg							DT	nsubj	20
20	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	10
21	where	where		comp	comp_wh								WRB	advmod	23
22	you	you		pro	2nd	sg							PRP	nsubj	23
23	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	20
24	.	.											.	punct	4

#sentid = 565
0													_SP	dep	9
1	um	um											UH	intj	9
2	,	,											,	punct	9
3	right	right											UH	intj	5
4	i	i		pro	1st	sg							PRP	nsubj	5
5	think	think		vbmain	vblex	pres	simple	active					VBP	meta	9
6	that	that		pro	dem	sg							DT	nsubj	7
7	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	5
8	i	i		pro	1st	sg							PRP	nsubj	9
9	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	9
10	that	that		pro	dem	sg							DT	nsubj	11
11	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	9
12	a	a		dt	art								DT	det	14
13	good	good	attr+npremod	jj	attr								JJ	amod	14
14	point	point		nn									NN	attr	11
15	.	.											.	punct	9

#sentid = 566
0	i	i		pro	1st	sg							PRP	nsubj	1
1	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	actually	actually	rb+advl	rb	advl	ly							RB	advmod	1
3	both	both											DT	nsubj	6
4	of	of		in	in_othr								IN	prep	3
5	these	these		pro	dem	pl							DT	pobj	4
6	are	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	1
7	really	really	rb+jjrbmod	rb	adjmod	ly							RB	advmod	8
8	good	good	attr+npremod	jj	attr								JJ	amod	9
9	points	point		nn	pl								NNS	attr	6
10	because	because		cs	cos								IN	mark	21
11	,	,											,	punct	21
12	um	um											UH	intj	21
13	,	,											,	punct	21
14													_SP	dep	21
15	yeah	yeah											UH	intj	21
16	you	you		pro	2nd	sg							PRP	nsubj	21
17	could	could		vbaux	mod	pos							MD	aux	21
18	,	,											,	punct	21
19	could	could		vbaux	mod	pos							MD	aux	21
20	be	be		vbaux									VB	aux	21
21	giving	give	finitecls+advl	vbmain	vblex	vp_w_modal	prog	active	advlcls		causative		VBG	advcl	1
22	us	we		pro	pl								PRP	dative	21
23	a	a		dt	art								DT	det	25
24	new	new	attr+npremod	jj	attr								JJ	amod	25
25	way	way		nn									NN	dobj	21
26	of	of	of+npostmod	in	nmod								IN	prep	25
27	trying	try	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	26
28	to	to		to									TO	aux	29
29	figure	figure	tocls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	27
30	out	out		rb	prtcle								RP	prt	29
31	where	where		comp	comp_wh								WRB	advmod	37
32	your	your		dt	poss								PRP$	poss	34
33	real	real	attr+npremod	jj	attr								JJ	amod	34
34	point	point		nn									NN	nsubj	37
35	of	of	of+npostmod	in	nmod								IN	prep	34
36	view	view		nn									NN	pobj	35
37	is	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBZ	ccomp	29
38	.	.											.	punct	1

#sentid = 567
0	you	you		pro	2nd	sg							PRP	nmod	1
1	point	point		nn									NN	ROOT	1
2	of	of	of+npostmod	in	nmod								IN	prep	1
3	view	view		nn									NN	pobj	2
4	,	,											,	punct	1
5	if	if		cs	cnd								IN	mark	13
6	the	the		dt	art								DT	det	8
7	seeming	seem	attr+npremod	jj	attr	ing							VBG	amod	8
8	point	point		nn									NN	nsubj	13
9	of	of	of+npostmod	in	nmod								IN	prep	8
10	view	view		nn									NN	pobj	9
11	is	be		vbaux									VBZ	aux	13
12	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	13
13	coming	come	finitecls+advl	vbmain	prepv	pres	prog	active	advlcls		conditional		VBG	advcl	1
14	from	from	in+advl	in	advl								IN	prep	13
15	ac-	ac-											XX	pobj	14
16	real	real	attr+npremod	jj	attr								JJ	amod	19
17	,	,											,	punct	19
18	sensory	sensory	attr+npremod	jj	attr								JJ	amod	19
19	input	input		nn									NN	pobj	14
20	,	,											,	punct	19
21	in	in	in+npostmod	in	nmod								IN	prep	19
22	the	the		dt	art								DT	det	23
23	case	case		nn									NN	pobj	21
24	an-	an-											DT	punct	13
25	and	and		cc	phrs								CC	cc	27
26	that	that		pro	dem	sg							DT	nsubj	27
27	is	be		vbmain	be	pres	simple	active					VBZ	conj	1
28	the	the		dt	art								DT	det	29
29	case	case		nn									NN	attr	27
30	,	,											,	punct	27
31	with	with	in+advl	in	advl								IN	prep	27
32	the	the											DT	pobj	31
33	um	um											UH	intj	31
34	,	,											,	punct	31
35	with	with		in	in_othr								IN	prep	31
36	when	when		rb	advl								WRB	advmod	40
37	your	your		dt	poss								PRP$	poss	38
38	body	body		nn									NN	nsubjpass	40
39	is	be		vbaux									VBZ	auxpass	40
40	separated	separate	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls	whcls			VBN	advcl	35
41	from	from	in+advl	in	advl								IN	prep	40
42	your	your		dt	poss								PRP$	poss	43
43	brain	brain		nn									NN	pobj	41
44	.	.											.	punct	27

#sentid = 568
0	the	the		dt	art								DT	det	1
1	body	body		nn									NN	nsubj	3
2	is	be		vbaux									VBZ	aux	3
3	gathering	gather		vbmain	vblex	pres	prog	active					VBG	ROOT	3
4	real	real	attr+npremod	jj	attr								JJ	amod	6
5	sensory	sensory	attr+npremod	jj	attr								JJ	amod	6
6	input	input		nn									NN	dobj	3
7	.	.											.	punct	3

#sentid = 569
0	it	it		pro	3rd	sg							PRP	nsubjpass	2
1	's	be		vbaux									VBZ	auxpass	2
2	got	get		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	2
3	a	a		dt	art								DT	det	8
4	real	real	attr+npremod	jj	attr								JJ	amod	8
5	,	,											,	punct	8
6	you	you		pro	2nd	sg							PRP	nsubj	7
7	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	8
8	point	point		nn									NN	dobj	2
9	of	of	of+npostmod	in	nmod								IN	prep	8
10	view	view		nn									NN	pobj	9
11	on	on	in+npostmod	in	nmod								IN	prep	10
12	the	the		dt	art								DT	det	13
13	world	world		nn									NN	pobj	11
14	.	.											.	punct	2

#sentid = 570
0	whereas	whereas		cs	cs_othr								IN	mark	8
1	in	in	in+advl	in	advl								IN	prep	8
2	the	the		dt	art								DT	det	4
3	dreaming	dream	attr+npremod	jj	attr	ing							VBG	amod	4
4	case	case		nn									NN	pobj	1
5	,	,											,	punct	8
6	you	you		pro	2nd	sg							PRP	nsubj	8
7	've	've		vbaux									VBP	aux	8
8	got	get		vbmain	vblex	pres	simple	active			other_advl		VBN	ROOT	8
9	,	,											,	punct	13
10	you	you		pro	2nd	sg							PRP	nsubj	13
11	've	've		vbaux									VBP	aux	13
12	just	just	rb+advl	rb	advl		splaux						RB	advmod	13
13	imagining	imagine		vbmain	vblex	pres	simple	active					VBG	dep	8
14	input	input		nn									NN	dobj	8
15	.	.											.	punct	8

#sentid = 571
0	there	there											EX	expl	1
1	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	n't	not											RB	neg	1
3	any	any		dt									DT	det	5
4	real	real	attr+npremod	jj	attr								JJ	amod	5
5	input	input		nn									NN	attr	1
6	.	.											.	punct	1

#sentid = 572
0	so	so		rb	link								RB	advmod	3
1	that	that		pro	dem	sg							DT	nsubj	3
2	might	might		vbaux	mod	pos							MD	aux	3
3	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	3
4	a	a		dt	art								DT	det	5
5	way	way		nn									NN	attr	3
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	distinguishing	distinguish	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	6
8	number	number		nn		nom							NN	dobj	7
9	three	three											CD	nummod	8
10	from	from	in+advl	in	advl								IN	prep	7
11	number	number		nn		nom							NN	pobj	10
12	five	five											CD	nummod	11
13	.	.											.	punct	3

#sentid = 573
0	number	number		nn		nom							NN	nsubj	2
1	five	five											CD	nummod	0
2	says	say		vbmain	vblex	pres	simple	active					VBZ	ROOT	2
3	look	look		vbmain	vblex	nonfinite	simple	active					VB	punct	2
4	in	in	in+advl	in	advl								IN	prep	15
5	order	order		nn		nom							NN	pobj	4
6	to	to		to									TO	aux	7
7	have	have		vbmain	vblex	nonfinite	simple	active	nmod_cls		ncomp		VB	acl	5
8	a	a		dt	art								DT	det	11
9	,	,											,	punct	11
10	a	a		dt	art								DT	det	11
11	point	point		nn									NN	dobj	7
12	of	of	of+npostmod	in	nmod								IN	prep	11
13	view	view		nn									NN	pobj	12
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	have	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VBP	advcl	3
16	to	to		to									TO	aux	17
17	have	have		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	15
18	real	real	attr+npremod	jj	attr								JJ	amod	19
19	input	input		nn									NN	dobj	17
20	,	,											,	punct	19
21	coming	come	ingcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	19
22	into	into	in+advl	in	advl								IN	prep	21
23	you	you		pro	2nd	sg							PRP	pobj	22
24	.	.											.	punct	2

#sentid = 574
0	and	and		cc									CC	cc	1
1	um	um											UH	intj	27
2	if	if		cs	cnd								IN	mark	4
3	there	there											EX	expl	4
4	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		conditional		VBZ	advcl	27
5	n-	n-											XX	dep	4
6	and	and											CC	dep	4
7	in	in											IN	dep	4
8	the	the		dt	art								DT	det	9
9	case	case		nn									NN	pobj	7
10	where	where		rb	advl								WRB	advmod	16
11	the	the		dt	art								DT	det	14
12	the	the		dt	art								DT	det	14
13	the	the		dt	art								DT	det	14
14	link	link		nn									NN	nsubjpass	16
15	got	got		vbaux									VBD	auxpass	16
16	severed	sever	finitecls+rel	vbmain	vblex	past	simple	pasv_agls	nmod_cls	whcls	rel		VBN	relcl	9
17	between	between	in+npostmod	in	nmod								IN	prep	14
18	the	the		dt	art								DT	det	19
19	body	body		nn									NN	pobj	17
20	and	and		cc	phrs								CC	cc	19
21	the	the		dt	art								DT	det	22
22	brain	brain		nn									NN	conj	19
23	,	,											,	punct	4
24	you	you		pro	2nd	sg							PRP	nsubj	27
25	do	do		vbaux									VBP	aux	27
26	n't	not											RB	neg	27
27	have	have		vbmain	vblex	pres	simple	active					VB	ROOT	27
28	any	any		dt									DT	det	31
29	more	more	attr+npremod	jj	attr								JJR	amod	31
30	real	real	attr+npremod	jj	attr								JJ	amod	31
31	input	input		nn									NN	dobj	27
32	going	go	ingcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	31
33	in	in	rb+advl	rb	advl								IN	advmod	32
34	,	,											,	punct	33
35	to	to	in+advl	in	advl								IN	prep	32
36	that	that		dt	dt_dem								DT	det	38
37	distant	distant	attr+npremod	jj	attr								JJ	amod	38
38	body	body		nn									NN	pobj	35
39	.	.											.	punct	27

#sentid = 575
0	so	so		rb	link								RB	advmod	4
1	you	you		pro	2nd	sg							PRP	nsubj	4
2	do	do		vbaux									VBP	aux	4
3	n't	not											RB	neg	4
4	have	have		vbmain	vblex	pres	simple	active					VB	ROOT	4
5	an	an		dt									DT	det	7
6	apparent	apparent	attr+npremod	jj	attr								JJ	amod	7
7	point	point		nn									NN	dobj	4
8	of	of	of+npostmod	in	nmod								IN	prep	7
9	view	view		nn									NN	pobj	8
10	that	that		relpro	relpro_that	sg							WDT	nsubj	11
11	's	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	7
12	distinct	distinct		jj	pred								JJ	acomp	11
13	from	from	in+jcomp	in	jcomp								IN	prep	12
14	,	,											,	punct	13
15	from	from		in	in_othr								IN	prep	13
16	where	where		rb	advl								WRB	advmod	26
17	your	your		dt	poss								PRP$	poss	18
18	th-	th-											XX	dep	26
19	your	your		dt	poss								PRP$	poss	24
20	actual	actual	attr+npremod	jj	attr								JJ	amod	24
21	um	um											UH	intj	24
22	,	,											,	punct	24
23	mental	mental	attr+npremod	jj	attr								JJ	amod	24
24	processing	processing		nn		nom							NN	nsubj	26
25	is	be		vbaux									VBZ	aux	26
26	taking	take	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls	whcls			VBG	advcl	15
27	place	place		nn									NN	dobj	26
28	back	back	rb+advl	rb	advl								RB	advmod	26
29	in	in		in	in_othr								IN	prep	28
30	the	the		dt	art								DT	det	31
31	brain	brain		nn									NN	pobj	29
32	.	.											.	punct	4

#sentid = 576
0	yeah	yeah											UH	ROOT	0
1	?	?											.	punct	0

#sentid = 577
0													_SP	dep	2
1	i	i		pro	1st	sg							PRP	nsubj	2
2	had	have		vbmain	vblex	past	simple	active					VBD	ROOT	2
3	a	a		dt	art								DT	det	4
4	question	question		nn		nom							NN	dobj	2
5	that	that		relpro	relpro_that	sg							WDT	nsubj	6
6	led	lead	finitecls+rel	vbmain	phrsv	past	simple	active	nmod_cls	thatcls	rel		VBD	relcl	4
7	up	up		rb	prtcle								RP	prt	6
8	,	,											,	punct	4
9	uh	uh											UH	intj	4
10	about	about	in+npostmod	in	nmod								IN	prep	4
11	how	how		comp	comp_wh								WRB	advmod	15
12	he	he		pro	3rd	sg							PRP	dep	15
13	,	,											,	punct	15
14	he	he		pro	3rd	sg							PRP	nsubj	15
15	came	come	whcls+incomp	vbmain	phrsv	past	simple	active	compcls	whcls	incomp		VBD	pcomp	10
16	about	about		rb	prtcle								RP	prt	15
17	with	with	in+advl	in	advl								IN	prep	15
18	number	number		nn		nom							NN	pobj	17
19	five	five											CD	nummod	18
20	.	.											.	punct	2

#sentid = 578
0	once	once		cs	cs_othr								IN	mark	7
1	the	the		dt	art								DT	det	2
2	body	body		nn									NN	nsubjpass	7
3	and	and		cc	phrs								CC	cc	2
4	the	the		dt	art								DT	det	5
5	brain	brain		nn									NN	conj	2
6	got	got		vbaux									VBD	auxpass	7
7	severed	sever	finitecls+advl	vbmain	vblex	past	simple	pasv_agls	advlcls		other_advl		VBN	advcl	13
8	and	and		cc	phrs								CC	cc	7
9	separated	separate		vbmain	vblex	nonfinite	simple	active		edcls			VBN	conj	7
10	,	,											,	punct	13
11	he	he		pro	3rd	sg							PRP	nsubj	13
12	was	be		vbaux									VBD	aux	13
13	talking	talk		vbmain	prepv	past	prog	active					VBG	ROOT	13
14	about	about	in+advl	in	advl								IN	prep	13
15	,	,											,	punct	13
16	a	a		dt	art								DT	det	17
17	connection	connection		nn		nom							NN	dobj	13
18	how	how		rb	advl								WRB	advmod	21
19	he	he		pro	3rd	sg							PRP	nsubj	21
20	was	be		vbaux									VBD	aux	21
21	losing	lose	finitecls+rel	vbmain	vblex	past	prog	active	nmod_cls	whcls	rel		VBG	relcl	17
22	the	the		dt	art								DT	det	23
23	connection	connection		nn		nom							NN	dobj	21
24													_SP	dep	13

#sentid = 579
0	mhm	mhm											UH	intj	9
1													_SP	dep	0
2	but	but		cc	phrs								CC	cc	9
3	what	what		dt									WP	det	4
4	type	type		nn									NN	dobj	9
5	of	of	of+npostmod	in	nmod								IN	prep	4
6	connection	connection		nn		nom							NN	pobj	5
7	did	do		vbaux									VBD	aux	9
8	they	they		pro	pl								PRP	nsubj	9
9	have	have		vbmain	vblex	past	simple	active					VB	ROOT	9
10	?	?											.	punct	9

#sentid = 580
0	i	i		pro	1st	sg							PRP	nsubj	2
1	was	be		vbaux									VBD	aux	2
2	wondering	wonder		vbmain	vblex	past	prog	active					VBG	ROOT	2
3	about	about	in+advl	in	advl								IN	prep	2
4	that	that		pro	dem	sg							DT	pobj	3
5	because	because		cs	cos								IN	mark	36
6	,	,											,	punct	36
7	in	in	in+advl	in	advl								IN	prep	36
8	the	the		dt	art								DT	det	9
9	examples	example		nn	pl								NNS	pobj	7
10	that	that		pro	dem	sg							WDT	dobj	12
11	you	you		pro	2nd	sg							PRP	nsubj	12
12	gave	give	finitecls+rel	vbmain	vblex	past	simple	active	nmod_cls		rel		VBD	relcl	9
13	like	like											UH	intj	9
14	a	a		dt	art								DT	det	18
15	,	,											,	punct	18
16	a	a		dt	art								DT	det	18
17	remote	remote	attr+npremod	jj	attr								JJ	amod	18
18	control	control	appos+npostmod	nn			nappos						NN	appos	9
19													_SP	dep	18
20	mhm	mhm											UH	intj	18
21													_SP	dep	18
22	and	and		cc	phrs								CC	cc	18
23	then	then		rb	othr								RB	advmod	25
24	the	the		dt	art								DT	det	25
25	car	car		nn									NN	conj	18
26	or	or		cc	phrs								CC	cc	25
27	whatever	whatever											WDT	conj	25
28	,	,											,	punct	36
29	uh	uh											UH	intj	36
30	,	,											,	punct	36
31	the	the		dt	art								DT	det	33
32	remote	remote	attr+npremod	jj	attr								JJ	amod	33
33	control	control		nn									NN	nsubj	36
34	is	be		vbaux									VBZ	aux	36
35	c-	c-											XX	dep	36
36	controlling	control	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		causative		VBG	advcl	2
37	the	the		dt	art								DT	det	38
38	car	car		nn									NN	dobj	36
39	just	just	rb+advl	rb	advl								RB	advmod	44
40	as	as		cs	cs_othr								IN	mark	44
41	a	a		dt	art								DT	det	42
42	brain	brain		nn									NN	nsubj	44
43	would	would		vbaux	mod	prd							MD	aux	44
44	control	control	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls		other_advl		VB	advcl	36
45													_SP	dep	44
46	mhm	mhm											UH	intj	44
47													_SP	dep	36
48	a	a		dt	art								DT	det	49
49	body	body		nn									NN	dobj	36
50	as	as		cs	cs_othr								IN	mark	52
51	it	it		pro	3rd	sg							PRP	nsubj	52
52	seems	seem	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	36
53	in	in	in+advl	in	advl								IN	prep	52
54	that	that		dt	dt_dem								DT	det	55
55	example	example		nn									NN	pobj	53
56	,	,											,	punct	36
57	so	so		rb	link								RB	advmod	66
58	like	like											UH	intj	66
59	what	what		dt									WP	det	60
60	kind	kind		nn									NN	dobj	66
61	of	of	of+npostmod	in	nmod								IN	prep	60
62	connection	connection		nn		nom							NN	pobj	61
63	wo-	wo-											XX	dobj	66
64	did	do		vbaux									VBD	aux	66
65	they	they		pro	pl								PRP	nsubj	66
66	have	have		vbmain	vblex	past	simple	active					VB	conj	36
67	?	?											.	punct	36

#sentid = 581
0													_SP	dep	3
1	it	it		pro	3rd	sg							PRP	nsubjpass	3
2	's	be		vbaux									VBZ	auxpass	3
3	supposed	suppose		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	3
4	to	to		to									TO	aux	5
5	be	be	tocls+vcomp	vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	3
6	something	something		nn		nom							NN	attr	5
7	just	just		rb	othr								RB	advmod	8
8	like	like	in+npostmod	in	nmod								IN	prep	6
9	that	that		pro	dem	sg							DT	pobj	8
10	.	.											.	punct	3

#sentid = 582
0	he	he		pro	3rd	sg							PRP	nsubj	1
1	says	say		vbmain	vblex	pres	simple	active					VBZ	ROOT	1
2	it	it		pro	3rd	sg							PRP	nsubj	3
3	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	1
4	radio	radio	nn+npremod	nn			npremod						NN	compound	5
5	connection	connection		nn		nom							NN	attr	3
6	,	,											,	punct	5
7	between	between	in+npostmod	in	nmod								IN	prep	5
8													_SP	dep	7
9	the	the		dt	art								DT	det	11
10	the	the		dt	art								DT	det	11
11	neurons	neuron		nn	pl								NNS	pobj	7
12													_SP	dep	1
13	so	so		rb	link								CC	advmod	27
14	like	like											UH	intj	27
15	if	if		cs	cnd								IN	mark	18
16	he	he		pro	3rd	sg							PRP	nsubj	18
17	was	be		vbaux									VBD	aux	18
18	thinking	think	finitecls+advl	vbmain	vblex	past	prog	active	advlcls		conditional		VBG	advcl	27
19	to	to		to									TO	aux	20
20	raise	raise	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	18
21	the	the		dt	art								DT	det	22
22	arm	arm		nn									NN	dobj	20
23	,	,											,	punct	27
24	the	the		dt	art								DT	det	25
25	arm	arm		nn									NN	nsubj	27
26	would	would		vbaux	mod	prd							MD	aux	27
27	raise	raise	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	1
28	.	.											.	punct	27

#sentid = 583
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2	.	.											.	punct	1

#sentid = 584
0													_SP	dep	0
1	okay	okay											UH	intj	0
2	.	.											.	punct	1

#sentid = 585
0													_SP	dep	4
1	yeah	yeah											UH	intj	4
2	,	,											,	punct	4
3	so	so		rb	link								RB	advmod	4
4	think	think		vbmain	vblex	nonfinite	simple	active					VB	parataxis	42
5	,	,											,	punct	4
6	whatever	whatever											WDT	dobj	11
7	the	the											DT	dep	11
8	,	,											,	punct	11
9	you	you		pro	2nd	sg							PRP	nsubj	11
10	've	've		vbaux									VBP	aux	11
11	got	get		vbmain	vblex	pres	simple	active					VBN	dep	19
12	,	,											,	punct	19
13	for	for	in+advl	in	advl								IN	prep	19
14	all	all											DT	pobj	13
15	of	of		in	in_othr								IN	prep	14
16	your	your		dt	poss								PRP$	poss	17
17	i-	i-											XX	pobj	15
18	it	it		pro	3rd	sg							PRP	nsubj	19
19	's	be		vbmain	be	pres	simple	active					VBZ	meta	4
20	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	21
21	of	of		rb	othr								RB	advmod	31
22	an	an		dt									DT	det	31
23	,	,											,	punct	31
24	outrageously	outrageously	rb+jjrbmod	rb	adjmod	ly							RB	advmod	25
25	complex	complex	attr+npremod	jj	attr								JJ	amod	31
26	and	and		cc	phrs								CC	cc	25
27	and	and		cc	phrs								CC	cc	25
28	probably	probably	rb+jjrbmod	rb	othr	ly							RB	advmod	30
29	technologically	technologically	rb+jjrbmod	rb	othr	ly							RB	advmod	30
30	impossible	impossible											JJ	conj	25
31	feat	feat		nn									NN	attr	19
32	,	,											,	punct	19
33													_SP	dep	36
34	well	well											UH	intj	36
35	i	i		pro	1st	sg							PRP	nsubj	36
36	was	be		vbmain	be	past	simple	active					VBD	meta	19
37	just	just	rb+advl	rb	advl								RB	advmod	36
38													_SP	dep	4
39	but	but		cc	phrs								CC	cc	42
40	the	the		dt	art								DT	det	41
41	idea	idea		nn									NN	nsubj	42
42	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	42
43	that	that		comp	comp_that								IN	mark	57
44	for	for	in+advl	in	advl								IN	prep	57
45	every	every											DT	pobj	44
46	of	of		in	in_othr								IN	prep	45
47	of	of		in	in_othr								IN	prep	46
48	your	your		dt	poss								PRP$	poss	49
49	neurons	neuron		nn	pl								NNS	pobj	47
50	coming	come		jj	attr	ing							VBG	amod	45
51	,	,											,	punct	50
52	output	output	nn+npremod	nn			npremod						NN	compound	53
53	neurons	neuron	appos+npostmod	nn	pl		nappos						NNS	appos	45
54	,	,											,	punct	57
55	you	you		pro	2nd	sg							PRP	nsubj	57
56	've	've		vbaux									VBP	aux	57
57	got	get	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VBN	ccomp	42
58	a	a		dt	art								DT	det	62
59	little	little	attr+npremod	jj	attr								JJ	amod	62
60	,	,											,	punct	62
61	uh	uh											UH	intj	62
62	transmitter	transmitter		nn		nom							NN	dobj	57
63	attached	attach	edcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	edcls	ncomp		VBN	acl	62
64	that	that		relpro	relpro_that	sg							WDT	nsubj	67
65	would	would		vbaux	mod	prd							MD	aux	67
66	trama-	trama-											XX	dep	67
67	transmit	transmit	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	62
68	it	it		pro	3rd	sg							PRP	dobj	67
69	to	to	in+advl	in	advl								IN	prep	67
70	,	,											,	punct	69
71	the	the		dt	art								DT	det	73
72	other	other	attr+npremod	jj	attr								JJ	amod	73
73	end	end		nn									NN	pobj	69
74	of	of	of+npostmod	in	nmod								IN	prep	73
75	the	the		dt	art								DT	det	78
76	ne-	ne-											XX	nmod	78
77	the	the		dt	art								DT	det	78
78	nerve	nerve		nn									NN	pobj	74
79	,	,											,	punct	67
80	which	which											WDT	nsubj	83
81	would	would		vbaux	mod	prd							MD	aux	83
82	,	,											,	punct	83
83	help	help	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls	whcls			VB	advcl	67
84	control	control		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	83
85	your	your		dt	poss								PRP$	poss	86
86	muscles	muscle		nn	pl								NNS	dobj	84
87	in	in	in+npostmod	in	nmod								IN	prep	86
88	the	the		dt	art								DT	det	89
89	body	body		nn									NN	pobj	87
90	.	.											.	punct	42

#sentid = 586
0	and	and		cc	cls								CC	cc	19
1	then	then		rb	link								RB	advmod	19
2	vice	vice	rb+jjrbmod	rb	othr								RB	advmod	3
3	versa	versa	rb+advl	rb	advl								RB	advmod	19
4	,	,											,	punct	19
5	for	for	in+advl	in	advl								IN	prep	19
6	every	every											DT	pobj	5
7	for	for		in	in_othr								IN	prep	6
8	every	every		dt									DT	det	9
9	nerve	nerve		nn									NN	pobj	7
10	and	and		cc	phrs								CC	cc	9
11	um	um											UH	intj	16
12	,	,											,	punct	16
13	sensory	sensory	attr+npremod	jj	attr								JJ	amod	16
14	,	,											,	punct	16
15	uh	uh											UH	intj	16
16	neuron	neuron		nn									NN	conj	9
17	,	,											,	punct	19
18	you	you		pro	2nd	sg							PRP	nsubj	19
19	have	have		vbmain	vblex	pres	simple	active					VBP	ROOT	19
20	another	another		dt									DT	det	21
21	transmitter	transmitter		nn		nom							NN	dobj	19
22	going	go	ingcls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	21
23	back	back	rb+advl	rb	advl								RB	advmod	22
24	to	to		in	in_othr								IN	prep	23
25	hooking	hook	ingcls+incomp	vbmain	phrsv	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	24
26	it	it		pro	3rd	sg							PRP	dobj	25
27	up	up		rb	prtcle								RP	prt	25
28	to	to	in+advl	in	advl								IN	prep	25
29	the	the		dt	art								DT	det	31
30	right	right	attr+npremod	jj	attr								JJ	amod	31
31	place	place		nn									NN	pobj	28
32	in	in	in+npostmod	in	nmod								IN	prep	31
33	the	the		dt	art								DT	det	34
34	brain	brain		nn									NN	pobj	32
35	.	.											.	punct	19

#sentid = 587
0	so	so		rb	link								RB	advmod	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	just	just		rb	othr								RB	advmod	4
4	like	like	in+advl	in	advl								IN	prep	2
5	these	these		dt	dt_dem								DT	det	11
6	these	these		dt	dt_dem								DT	det	11
7	um	um											UH	intj	11
8	,	,											,	punct	11
9	remote	remote		rb	othr								JJ	advmod	10
10	control	control	nn+npremod	nn			npremod						NN	compound	11
11	cars	car		nn	pl								NNS	pobj	4
12	and	and		cc	phrs								CC	cc	11
13	so	so	rb+jjrbmod	rb	othr								RB	advmod	14
14	on	on											RB	conj	11
15	...	...											:	punct	2

#sentid = 588
0	but	but		cc	cls								CC	cc	2
1	this	this		pro	dem	sg							DT	nsubj	2
2	raises	raise		vbmain	vblex	pres	simple	active					VBZ	ROOT	2
3	another	another		dt									DT	det	5
4	i	i		pro	1st	sg							PRP	nsubj	5
5	me-	me-											PRP	dobj	2
6	this	this		dt	dt_dem								DT	det	7
7	suggestion	suggestion		nn		nom							NN	dobj	2
8	,	,											,	punct	7
9	yeah	yeah											UH	intj	11
10	your	your		dt	poss								PRP$	poss	11
11	suggestion	suggestion	appos+npostmod	nn		nom	nappos						NN	appos	7
12	,	,											,	punct	7
13	um	um											UH	intj	7
14	that	that		relpro	relpro_that								IN	mark	17
15	that	that		relpro	relpro_that								IN	mark	17
16	you	you		pro	2nd	sg							PRP	nsubj	17
17	are	be	thatcls+ncomp	vbmain	be	pres	simple	active	nmod_cls	thatcls	ncomp		VBP	acl	7
18	wherever	wherever											WRB	pobj	30
19	tha-	tha-											DT	dep	29
20	your	your		dt	poss								PRP$	poss	24
21	real	real	attr+npremod	jj	attr								JJ	amod	24
22	,	,											,	punct	24
23	sensory	sensory	attr+npremod	jj	attr								JJ	amod	24
24	input	input		nn									NN	nsubjpass	29
25	is	be		vbaux									VBZ	aux	29
26	being	be		vbaux									VBG	auxpass	29
27	,	,											,	punct	29
28	um	um											UH	intj	29
29	channeled	channel	finitecls+advl	vbmain	vblex	pres	simple	pasv_agls	advlcls				VBN	advcl	17
30	from	from	in+advl	in	advl								IN	prep	29
31	.	.											.	punct	2

#sentid = 589
0													_SP	dep	16
1	i	i		pro	1st	sg							PRP	nsubj	2
2	do	do		vbaux									VBP	aux	16
3	n't	not											RB	neg	2
4	really	really											RB	dep	2
5													_SP	dep	16
6	well	well											UH	intj	16
7	,	,											,	punct	16
8													_SP	dep	16
9	i	i		pro	1st	sg							PRP	nsubj	10
10	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	16
11	,	,											,	punct	16
12	i	i		pro	1st	sg							PRP	nsubj	16
13	do	do		vbaux									VBP	aux	16
14	n't	not											RB	neg	16
15	really	really	rb+advl	rb	advl	ly	splaux						RB	advmod	16
16	believe	believe		vbmain	prepv	pres	simple	active					VB	ROOT	16
17	in	in	in+advl	in	advl								IN	prep	16
18	the	the		dt	art								DT	det	23
19	whole	whole	attr+npremod	jj	attr								JJ	amod	23
20	point	point	nn+npremod	nn			npremod						NN	nmod	23
21	of	of	of+npostmod	in	nmod								IN	prep	20
22	view	view		nn									NN	pobj	21
23	thing	thing		nn		nom							NN	pobj	17
24	to	to		to									TO	aux	25
25	begin	begin	tocls+rel	vbmain	prepv	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	23
26	with	with		rb	prtcle								RP	prt	25
27													_SP	dep	16
28	okay	okay											UH	intj	16
29	.	.											.	punct	16

#sentid = 590
0													_SP	dep	4
1	but	but		cc	phrs								CC	cc	4
2	i	i		pro	1st	sg							PRP	nsubj	4
3	'm	be		vbaux									VBP	aux	4
4	saying	say		vbmain	vblex	pres	prog	active					VBG	ROOT	4
5	just	just	rb+advl	rb	advl								RB	advmod	4
6	,	,											,	punct	4
7	like	like											UH	intj	4
8	what	what		comp	comp_wh								WP	dobj	11
9	i	i		pro	1st	sg							PRP	nsubj	11
10	was	be		vbaux									VBD	aux	11
11	saying	say		vbmain	vblex	past	prog	active	compcls	whcls	vcomp		VBG	csubj	12
12	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	4
13	just	just	rb+advl	rb	advl								RB	advmod	12
14	kinda	kinda		rb	othr								RB	advmod	15
15	in	in	in+advl	in	advl								IN	prep	12
16	response	response		nn									NN	pobj	15
17	to	to	in+npostmod	in	nmod								IN	prep	16
18	your	your		dt	poss								PRP$	poss	21
19	whole	whole	attr+npremod	jj	attr								JJ	amod	21
20	dream	dream	nn+npremod	nn			npremod						NN	compound	21
21	thing	thing		nn		nom							NN	pobj	17
22	.	.											.	punct	4

#sentid = 591
0													_SP	dep	6
1	okay	okay											UH	intj	6
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	6
4	,	,											,	punct	6
5	that	that		pro	dem	sg							DT	nsubj	6
6	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	6
7	okay	okay		jj	pred								JJ	acomp	6
8	.	.											.	punct	6

#sentid = 592
0	you	you		pro	2nd	sg							PRP	nsubj	3
1	do	do		vbaux									VBP	aux	3
2	n't	not											RB	neg	3
3	have	have		vbmain	vblex	pres	simple	active					VB	ROOT	3
4	to	to											TO	xcomp	3
5	_	_											.	punct	3

#sentid = 593
0	i	i		pro	1st	sg							PRP	nsubj	3
1	'm	be		vbaux									VBP	aux	3
2	not	not											RB	neg	3
3	saying	say		vbmain	vblex	pres	prog	active					VBG	ROOT	3
4	,	,											,	punct	3
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	3
7	,	,											,	punct	3
8	it	it		pro	3rd	sg							PRP	nsubj	9
9	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	16
10	your	your		dt	poss								PRP$	poss	13
11	final	final	attr+npremod	jj	attr								JJ	amod	13
12	considered	considered	attr+npremod	jj	attr								JJ	amod	13
13	opinion	opinion		nn									NN	attr	9
14	,	,											,	punct	16
15	it	it		pro	3rd	sg							PRP	nsubj	16
16	was	be	thatcls+vcomp	vbmain	be	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	3
17	just	just	rb+advl	rb	advl								RB	advmod	16
18	,	,											,	punct	16
19	reaction	reaction		nn		nom							NN	attr	16
20	to	to	in+npostmod	in	nmod								IN	prep	19
21	this	this		dt	dt_dem								DT	det	22
22	point	point		nn									NN	pobj	20
23	.	.											.	punct	3

#sentid = 594
0	um	um											UH	intj	4
1	,	,											,	punct	4
2	but	but		cc									CC	cc	4
3	,	,											,	punct	2
4													_SP	dep	6
5	just	just	rb+advl	rb	advl								RB	advmod	6
6	relax	relax		vbmain	vblex	nonfinite	simple	active					VB	ROOT	6
7	alright	alright											UH	intj	6
8	,	,											,	punct	6
9													_SP	dep	6
10	God	god		nn		proper							NNP	npadvmod	6
11													_SP	dep	6

#sentid = 595
0	one	one											CD	nummod	2
1	one	one											CD	nummod	2
2	thing	thing		nn		nom							NN	nsubj	12
3	one	one											CD	nummod	4
4	question	question	appos+npostmod	nn		nom	nappos						NN	appos	2
5	it	it		pro	3rd	sg							PRP	dobj	7
6	it	it		pro	3rd	sg							PRP	nsubj	7
7	raises	raise	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	4
8	for	for											IN	dative	7
9	me	i		pro	1st	sg							PRP	pobj	8
10	at	at		rb	othr								IN	advmod	11
11	least	least	rb+advl	rb	advl								JJS	advmod	7
12	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	12
13	,	,											,	punct	12
14	what	what		comp	comp_wh								WP	dobj	17
15	do	do		vbaux									VBP	aux	17
16	we	we		pro	1st								PRP	nsubj	17
17	say	say	whcls+vcomp	vbmain	vblex	pres	simple	active	compcls	whcls	vcomp		VB	ccomp	12
18	about	about	in+advl	in	advl								IN	prep	17
19	the	the		dt	art								DT	det	21
20	the	the		dt	art								DT	det	21
21	person	person		nn									NN	pobj	18
22	who	who		relpro	relpro_wh								WP	nsubj	23
23	's	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	21
24	who	who											WP	nsubj	26
25	's	be		vbaux									VBZ	aux	26
26	controlling	control	whcls+vcomp	vbmain	vblex	pres	prog	active	compcls	whcls	vcomp		VBG	ccomp	23
27	the	the		dt	art								DT	det	28
28	robot	robot		nn									NN	dobj	26
29	under	under	in+advl	in	advl								IN	prep	26
30	,	,											,	punct	29
31	under	under		in	in_othr								IN	prep	29
32	the	the		dt	art								DT	det	33
33	sea	sea		nn									NN	pobj	31
34	?	?											.	punct	21

#sentid = 596
0	who	who											WP	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	on	on	in+advl	in	advl								IN	prep	1
3	the	the		dt	art								DT	det	4
4	ship	ship		nn									NN	pobj	2
5	and	and		cc	phrs								CC	cc	1
6	has	have		vbaux									VBZ	aux	7
7	got	get		vbmain	vblex	pres	perf	active					VBD	conj	1
8	these	these		pro	dem	pl							DT	dobj	7
9	,	,											,	punct	8
10	these	these		dt	dt_dem								DT	det	11
11	connections	connection	appos+npostmod	nn	pl	nom	nappos						NNS	appos	8
12	with	with	in+npostmod	in	nmod								IN	prep	11
13	the	the		dt	art								DT	det	14
14	robot	robot		nn									NN	pobj	12
15	undersea	undersea		rb	othr								RB	advmod	14
16	and	and		cc									CC	cc	8
17	it	it		pro	3rd	sg							PRP	nsubj	19
18	,	,											,	punct	19
19	seems	seem		vbmain	vblex	pres	simple	active					VBZ	conj	1
20	to	to	in+advl	in	advl								IN	prep	19
21	that	that		dt	dt_dem								DT	det	22
22	person	person		nn									NN	pobj	20
23	in	in	in+advl	in	advl								IN	prep	19
24	some	some		dt									DT	det	25
25	ways	way		nn	pl								NNS	pobj	23
26	,	,											,	punct	19
27	that	that		comp	comp_that								IN	mark	29
28	she	she		pro	3rd	sg							PRP	nsubj	29
29	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	19
30	,	,											,	punct	29
31	down	down	rb+advl	rb	advl								RB	advmod	29
32	on	on		in	in_othr								IN	prep	31
33	the	the		dt	art								DT	det	35
34	sea	sea	nn+npremod	nn			npremod						NN	compound	35
35	floor	floor		nn		nom							NN	pobj	32
36	.	.											.	punct	1

#sentid = 597
0	that	that											IN	mark	3
1	she	she		pro	3rd	sg							PRP	nsubj	3
2	can	can		vbaux	mod	pos							MD	aux	3
3	see	see		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	3
4	things	thing		nn	pl	nom							NNS	dobj	3
5	down	down	rb+jjrbmod	rb	othr								RB	advmod	6
6	there	there	rb+advl	rb	advl								RB	advmod	3
7	that	that		relpro	relpro_that								WDT	mark	10
8	she	she		pro	3rd	sg							PRP	nsubj	10
9	could	could		vbaux	mod	pos							MD	aux	10
10	move	move	thatcls+ncomp	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	ncomp		VB	acl	4
11	around	around	rb+advl	rb	advl								RB	advmod	10
12	to	to		to									TO	aux	13
13	pick	pick	tocls+advl	vbmain	phrsv	nonfinite	simple	active	advlcls	tocls			VB	advcl	10
14	things	thing		nn	pl	nom							NNS	dobj	13
15	up	up		rb	prtcle								RP	prt	13
16	,	,											,	punct	10
17	drag	drag		vbmain	vblex	nonfinite	simple	active					VB	dep	10
18	them	they		pro	pl								PRP	dobj	17
19	,	,											,	punct	10
20	and	and		cc	cls								CC	cc	10
21	she	she		pro	3rd	sg							PRP	nsubj	23
22	's	be		vbaux									VBZ	aux	23
23	getting	get		vbmain	vblex	pres	prog	active					VBG	conj	10
24	real	real	attr+npremod	jj	attr								JJ	amod	26
25	sensory	sensory	attr+npremod	jj	attr								JJ	amod	26
26	input	input		nn									NN	dobj	23
27	from	from	in+advl	in	advl								IN	prep	23
28	down	down	rb+jjrbmod	rb	othr								RB	advmod	29
29	there	there											RB	pcomp	27
30	,	,											,	punct	23
31	and	and		cc	phrs								CC	cc	23
32	real	real		jj	attr								JJ	amod	38
33	,	,											,	punct	38
34	you	you		pro	2nd	sg							PRP	nsubj	35
35	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	38
36	,	,											,	punct	38
37	really	really	rb+advl	rb	advl	ly							RB	advmod	38
38	manipulating	manipulate		vbmain	vblex	nonfinite	simple	active		ingcls			VBG	conj	23
39	,	,											,	punct	38
40	uh	uh											UH	intj	38
41	,	,											,	punct	38
42	a	a		dt	art								DT	det	43
43	body	body		nn									NN	dobj	38
44	,	,											,	punct	43
45	down	down	rb+jjrbmod	rb	othr								RB	advmod	46
46	there	there		rb	othr								RB	advmod	43
47	.	.											.	punct	3

#sentid = 598
0	should	should		vbaux	mod	nec							MD	aux	17
1	we	we		pro	1st								PRP	nsubj	17
2	,	,											,	punct	17
3	should	should		vbaux	mod	nec							MD	aux	17
4	the	the		dt	art								DT	det	5
5	advocate	advocate		nn		nom							NN	nsubj	17
6	of	of	of+npostmod	in	nmod								IN	prep	5
7	the	the		dt	art								DT	det	9
8	the	the		dt	art								DT	det	9
9	point	point		nn									NN	pobj	6
10	of	of	of+npostmod	in	nmod								IN	prep	9
11	view	view		nn									NN	pobj	10
12	,	,											,	punct	9
13	center	center	appos+npostmod	nn		nom	nappos						NN	appos	9
14	of	of	of+npostmod	in	nmod								IN	prep	13
15	gravity	gravity	nn+npremod	nn		nom	npremod						NN	compound	16
16	view	view		nn									NN	pobj	14
17	say	say		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	17
18	that	that		comp	comp_that								DT	mark	22
19	,	,											,	punct	22
20	that	that		dt	dt_dem								DT	det	21
21	person	person		nn									NN	nsubj	22
22	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	17
23	partly	partly		rb	othr	ly							RB	advmod	24
24	on	on	in+advl	in	advl								IN	prep	22
25	the	the		dt	art								DT	det	27
26	sea	sea	nn+npremod	nn			npremod						NN	compound	27
27	floor	floor		nn		nom							NN	pobj	24
28	and	and		cc									CC	cc	24
29	,	,											,	punct	24
30	partly	partly	rb+jjrbmod	rb	othr	ly							RB	advmod	31
31	up	up											RB	conj	24
32	,	,											,	punct	31
33	on	on											IN	conj	31
34	the	the		dt	art								DT	det	35
35	ship	ship		nn									NN	pobj	33
36	?	?											.	punct	22

#sentid = 599
0	or	or		cc	phrs								CC	cc	2
1	wholly	wholly	rb+jjrbmod	rb	othr	ly							RB	advmod	2
2	down	down											RB	ROOT	2
3	on	on		in	in_othr								IN	prep	2
4	the	the		dt	art								DT	det	6
5	sea	sea	nn+npremod	nn			npremod						NN	compound	6
6	floor	floor		nn		nom							NN	pobj	3
7	?	?											.	punct	2

#sentid = 600
0													_SP	dep	2
1	what	what											WP	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	on	on	in+advl	in	advl								IN	prep	2
4	top	top		nn									NN	pobj	3
5	of	of	of+npostmod	in	nmod								IN	prep	4
6	the	the		dt	art								DT	det	7
7	ship	ship		nn									NN	pobj	5
8	?	?											.	punct	2

#sentid = 601
0	just	just		rb	othr								RB	advmod	2
1	a	a		dt	art								DT	det	2
2	brain	brain		nn									NN	ROOT	2
3	?	?											.	punct	2

#sentid = 602
0													_SP	dep	5
1	no	no											UH	intj	5
2	,	,											,	punct	5
3	the	the		dt	art								DT	det	5
4	whole	whole	attr+npremod	jj	attr								JJ	amod	5
5	body	body		nn									NN	ROOT	5
6	.	.											.	punct	5

#sentid = 603
0	the	the		dt	art								DT	det	1
1	person	person		nn									NN	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	there	there	rb+advl	rb	advl								RB	advmod	2
4	,	,											,	punct	6
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	2
7													_SP	dep	2
8	oh	oh											UH	intj	17
9	like	like	in+advl	in	advl								IN	prep	17
10	a	a											DT	appos	9
11	do	do		vbmain	vblex	nonfinite	simple	active	advlcls				VB	advcl	17
12	it	it		pro	3rd	sg							PRP	dobj	11
13	like	like											IN	meta	11
14	a	a											DT	intj	11
15	,	,											,	punct	17
16	machine	machine		nn									NN	nsubj	17
17	is	be		vbmain	be	pres	simple	active					VBZ	meta	2
18	down	down	rb+advl	rb	advl								RB	advmod	17
19	on	on		in	in_othr								IN	prep	18
20	the	the		dt	art								DT	det	21
21	bottom	bottom		nn									NN	pobj	19
22													_SP	dep	17
23	yeah	yeah											UH	intj	17
24	.	.											.	punct	17

#sentid = 604
0	the	the		dt	art								DT	det	1
1	machine	machine		nn									NN	nsubj	2
2	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	2
3	down	down	rb+advl	rb	advl								RB	advmod	2
4	on	on		in	in_othr								IN	prep	3
5	the	the		dt	art								DT	det	6
6	bottom	bottom		nn									NN	pobj	4
7	,	,											,	punct	2
8	the	the		dt	art								DT	det	9
9	person	person		nn									NN	nsubj	10
10	is	be		vbmain	be	pres	simple	active					VBZ	conj	2
11	up	up	rb+advl	rb	advl								RB	advmod	10
12	on	on		in	in_othr								IN	prep	11
13	top	top		nn									NN	pobj	12
14	,	,											,	punct	10
15	and	and		cc	phrs								CC	cc	10
16	she	she		pro	3rd	sg							PRP	nsubjpass	18
17	's	be		vbaux									VBZ	auxpass	18
18	got	get		vbmain	vblex	pres	simple	pasv_agls					VBN	conj	10
19	,	,											,	punct	18
20	you	you		pro	2nd	sg							PRP	nsubj	21
21	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	18
22	,	,											,	punct	18
23	a	a		dt	art								DT	det	25
24	whole	whole		jj	attr								JJ	amod	25
25	ki-	ki-											XX	dobj	18

#sentid = 605
0	all	all											PDT	predet	2
1	these	these		dt	dt_dem								DT	det	2
2	levers	lever		nn	pl	nom							NNS	npadvmod	5
3	,	,											,	punct	5
4	it	it		pro	3rd	sg							PRP	nsubj	5
5	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	5
6	like	like	in+advl	in	advl								IN	prep	5
7	a	a											DT	intj	5
8	it	it		pro	3rd	sg							PRP	nsubj	9
9	's	be		vbmain	be	pres	simple	active					VBZ	meta	5
10	like	like	in+advl	in	advl								IN	prep	9
11	a	a		dt	art								DT	det	16
12	really	really	rb+jjrbmod	rb	adjmod	ly							RB	advmod	14
13	high	high		jj	attr								JJ	amod	14
14	tech	tech	attr+npremod	jj	attr								JJ	amod	16
15	video	video	nn+npremod	nn			npremod						NN	compound	16
16	game	game		nn									NN	pobj	10
17	.	.											.	punct	5

#sentid = 606
0													_SP	dep	0
1	mhm	mhm											UH	intj	0

#sentid = 607
0													_SP	dep	9
1	and	and		cc	phrs								CC	cc	9
2	you	you		pro	2nd	sg							PRP	nsubj	3
3	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	9
4	,	,											,	punct	9
5	she	she		pro	3rd	sg							PRP	nsubj	9
6	can	can		vbaux	mod	pos							MD	aux	9
7	she	she		pro	3rd	sg							PRP	dep	6
8	,	,											,	punct	9
9	pulls	pull		vbmain	vblex	vp_w_modal	simple	active					VBZ	ROOT	9
10	and	and		cc	phrs								CC	cc	9
11	and	and		cc	phrs								CC	cc	9
12	pushes	push		vbmain	vblex	pres	simple	active					VBZ	conj	9
13	as	as		cs	cs_othr								IN	mark	16
14	if	if		cs	cnd								IN	mark	16
15	she	she		pro	3rd	sg							PRP	nsubj	16
16	were	be	finitecls+advl	vbmain	be	past	simple	active	advlcls		other_advl		VBD	advcl	12
17	down	down	rb+advl	rb	advl								RB	advmod	16
18	on	on		in	in_othr								IN	prep	17
19	the	the		dt	art								DT	det	20
20	bottom	bottom		nn									NN	pobj	18
21	,	,											,	punct	9
22	and	and		cc	phrs								CC	cc	9
23	i-	i-											PRP	conj	9
24	and	and		cc	phrs								CC	cc	9
25	starts	start		vbmain	vblex	pres	simple	active					VBZ	conj	9
26	to	to		to									TO	aux	27
27	feel	feel	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	25
28	to	to	in+advl	in	advl								IN	prep	27
29	her	she				sg							PRP	pobj	28
30	as	as		cs	cs_othr								IN	mark	33
31	if	if		cs	cnd								IN	mark	33
32	she	she		pro	3rd	sg							PRP	nsubj	33
33	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	27
34	,	,											,	punct	33
35	really	really	rb+advl	rb	advl	ly							RB	advmod	33
36	down	down	rb+jjrbmod	rb	othr								RB	advmod	37
37	there	there	rb+advl	rb	advl								RB	advmod	33
38	.	.											.	punct	9

#sentid = 608
0	she	she		pro	3rd	sg							PRP	nsubj	3
1	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	2
2	of	of	rb+advl	rb	advl								RB	advmod	3
3	identifies	identify		vbmain	vblex	pres	simple	active					VBZ	ROOT	3
4	with	with	in+advl	in	advl								IN	prep	3
5	the	the											DT	pobj	4
6	with	with	in+advl	in	advl								IN	prep	3
7	the	the		dt	art								DT	det	8
8	machine	machine		nn									NN	pobj	6
9	down	down	rb+jjrbmod	rb	othr								RB	advmod	10
10	there	there		rb	othr								RB	advmod	8
11	.	.											.	punct	3

#sentid = 609
0													_SP	dep	5
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	's	be		vbmain	be	pres	simple	active					VBZ	meta	5
3	ki-	ki-											XX	dep	2
4	it	it		pro	3rd	sg							PRP	nsubj	5
5	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	5
6	like	like											UH	intj	5
7	a	a		dt	art								DT	det	9
8	virtual	virtual	attr+npremod	jj	attr								JJ	amod	9
9	reality	reality		nn		nom							NN	attr	5
10	,	,											,	punct	9
11	machine	machine	appos+npostmod	nn			nappos						NN	appos	9
12	for	for	in+npostmod	in	nmod								IN	prep	11
13	her	she				sg							PRP	pobj	12
14	.	.											.	punct	5

#sentid = 610
0	does	do		vbaux									VBZ	aux	2
1	that	that		pro	dem	sg							DT	nsubj	2
2	make	make		vbmain	vblex	pres	simple	active	compcls		vcomp		VB	ccomp	14
3	her	she				sg							PRP	ccomp	2
4	partly	partly	rb+advl	rb	advl	ly							RB	advmod	2
5	,	,											,	punct	2
6	down	down	rb+jjrbmod	rb	othr								RB	advmod	7
7	there	there	rb+advl	rb	advl								RB	advmod	2
8	on	on		in	in_othr								IN	prep	7
9	the	the		dt	art								DT	det	11
10	sea	sea	nn+npremod	nn			npremod						NN	compound	11
11	floor	floor		nn		nom							NN	pobj	8
12	do	do		vbaux									VBP	aux	14
13	you	you		pro	2nd	sg							PRP	nsubj	14
14	think	think		vbmain	vblex	pres	simple	active					VB	ROOT	14
15	?	?											.	punct	14

#sentid = 611
0													_SP	dep	4
1	i	i		pro	1st	sg							PRP	nsubj	4
2	do	do		vbaux									VBP	aux	4
3	n't	not											RB	neg	4
4	think	think		vbmain	vblex	pres	simple	active					VB	ROOT	4
5	so	so	rb+advl	rb	advl								RB	advmod	4
6	.	.											.	punct	4

#sentid = 612
0	i	i		pro	1st	sg							PRP	dep	3
1	thi-	thi-		vbmain	nmod	pres	simple	active					VBP	prep	0
2	i	i		pro	1st	sg							PRP	nsubj	3
3	think	think		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	82
4	for	for	in+advl	in	advl								IN	prep	3
5	one	one											CD	nummod	6
6	thing	thing		nn		nom							NN	pobj	4
7	like	like											UH	intj	12
8	,	,											,	punct	12
9	cert-	cert-											XX	dep	12
10	she	she		pro	3rd	sg							PRP	nsubj	12
11	'll	will		vbaux	mod								MD	aux	12
12	have	have	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	3
13	certain	certain	attr+npremod	jj	attr								JJ	amod	15
14	sensory	sensory	attr+npremod	jj	attr								JJ	amod	15
15	inputs	input		nn	pl								NNS	dobj	12
16	from	from	in+npostmod	in	nmod								IN	prep	15
17	down	down											RB	pcomp	16
18	on	on		in	in_othr								IN	prep	17
19	the	the		dt	art								DT	det	21
20	sea	sea	nn+npremod	nn			npremod						NN	compound	21
21	floor	floor		nn		nom							NN	pobj	18
22													_SP	dep	3
23	mhm	mhm											UH	intj	3
24													_SP	dep	3
25	but	but		cc	cls								CC	cc	3
26	like	like											UH	intj	50
27	if	if		cs	cnd								IN	mark	29
28	someone	someone		nn	other	sg							NN	nsubj	29
29	calls	call	finitecls+advl	vbmain	phrsv	pres	simple	active	advlcls		conditional		VBZ	advcl	43
30	out	out		rb	prtcle								RP	prt	29
31	her	her		dt	poss	sg							PRP$	poss	32
32	name	name		nn									NN	dobj	29
33	up	up	rb+advl	rb	advl								RB	advmod	29
34	on	on		in	in_othr								IN	prep	33
35	the	the		dt	art								DT	det	36
36	ship	ship		nn									NN	pobj	34
37	,	,											,	punct	43
38													_SP	dep	43
39	mhm	mhm											UH	intj	43
40													_SP	dep	39
41	she	she		pro	3rd	sg							PRP	nsubj	43
42	's	be		vbaux									VBZ	aux	43
43	gon	go		vbaux									TO	aux	50
44	na	to		vbaux									TO	aux	50
45	be	be		vbaux									VB	aux	50
46	,	,											,	punct	50
47	like	like											UH	intj	50
48	she	she		pro	3rd	sg							PRP	nsubj	50
49	'll	will		vbaux	mod								MD	aux	50
50	respond	respond		vbmain	prepv	vp_w_modal	simple	active					VB	conj	3
51	to	to	in+advl	in	advl								IN	prep	50
52	that	that		pro	dem	sg							DT	pobj	51
53	if	if		cs	cnd								IN	mark	82
54	w-	w-											XX	punct	82
55	when	when		rb	advl								WRB	advmod	60
56	just	just		rb	othr								RB	advmod	58
57	the	the		dt	art								DT	det	58
58	brain	brain		nn									NN	nsubj	60
59	's	be		vbaux									VBZ	aux	60
60	sitting	sit	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls	whcls			VBG	advcl	82
61	in	in	in+advl	in	advl								IN	prep	60
62	the	the		dt	art								DT	det	63
63	vat	vat		nn									NN	pobj	61
64	,	,											,	punct	82
65	if	if		cs	cnd								IN	mark	67
66	someone	someone		nn	other	sg							NN	nsubj	67
67	calls	call	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBZ	advcl	82
68	your	your		dt	poss								PRP$	poss	69
69	name	name		nn									NN	dobj	67
70	to	to	in+advl	in	advl								IN	prep	67
71	the	the		dt	art								DT	det	72
72	brain	brain		nn									NN	pobj	70
73	,	,											,	punct	82
74													_SP	dep	82
75	mhm	mhm											UH	intj	80
76	mhm	mhm											UH	intj	75
77													_SP	dep	75
78	there	there											EX	expl	80
79	's	be		vbaux									VBZ	aux	80
80	gon	go		vbaux									TO	aux	82
81	na	to		vbaux									TO	aux	82
82	be	be		vbmain	be	nonfinite	simple	active			conditional		VB	ROOT	82
83	no	no		dt									DT	det	84
84	response	response		nn									NN	attr	82
85	whatsoever	whatsoever		rb	othr								RB	advmod	84
86	.	.											.	punct	82

#sentid = 613
0													_SP	dep	14
1	so	so		rb	link								RB	advmod	3
2	she	she		pro	3rd	sg							PRP	nsubj	3
3	's	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	14
4	,	,											,	punct	14
5	the	the		dt	art								DT	det	6
6	fact	fact		nn									NN	dep	14
7	that	that		comp	comp_that								IN	mark	9
8	she	she		pro	3rd	sg							PRP	nsubj	9
9	's	be		vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	14
10	already	already	rb+advl	rb	advl								RB	advmod	9
11	,	,											,	punct	14
12	she	she		pro	3rd	sg							PRP	nsubjpass	14
13	's	be		vbaux									VBZ	auxpass	14
14	got	get		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	14
15	a	a		dt	art								DT	det	16
16	point	point		nn									NN	dobj	14
17	of	of	of+npostmod	in	nmod								IN	prep	16
18	view	view		nn									NN	pobj	17
19	,	,											,	punct	16
20	a	a		dt	art								DT	det	23
21	situated	situated	attr+npremod	jj	attr								JJ	amod	23
22	,	,											,	punct	23
23	perspective	perspective	appos+npostmod	nn			nappos						NN	appos	16
24	up	up		rb	othr								RB	advmod	23
25	on	on		in	in_othr								IN	prep	24
26	the	the		dt	art								DT	det	27
27	ship	ship		nn									NN	pobj	25
28													_SP	dep	14
29	yeah	yeah											UH	intj	14
30													_SP	dep	14
31	and	and		cc	phrs								CC	cc	14
32	a	a		dt	art								DT	det	34
33	situated	situated	attr+npremod	jj	attr								JJ	amod	34
34	perspective	perspective		nn									NN	dobj	14
35	down	down		rb	othr								RB	advmod	34
36	on	on		in	in_othr								IN	prep	35
37	the	the		dt	art								DT	det	39
38	sea	sea	nn+npremod	nn			npremod						NN	compound	39
39	floor	floor		nn		nom							NN	pobj	36
40	,	,											,	punct	43
41	do	do		vbaux									VBP	aux	43
42	you	you		pro	2nd	sg							PRP	nsubj	43
43	wanna	wanna		vbmain	vblex	pres	simple	active					VB	parataxis	34
44	say	say		vbmain	vblex	nonfinite	simple	active	nmod_cls		ncomp		VB	acl	34
45	that	that		comp	comp_that								IN	mark	48
46	,	,											,	punct	48
47	it	it		pro	3rd	sg							PRP	nsubj	48
48	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls	thatcls	vcomp		VBZ	ccomp	44
49	only	only		rb	othr	ly							RB	advmod	51
50	the	the		dt	art								DT	det	51
51	one	one											CD	attr	48
52	on	on		in	in_othr								IN	prep	51
53	the	the		dt	art								DT	det	54
54	ship	ship		nn									NN	pobj	52
55	that	that		pro	dem	sg							WDT	nsubj	56
56	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls				VBZ	advcl	61
57	that	that		pro	dem	sg							DT	nsubj	58
58	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	56
59	,	,											,	punct	61
60	that	that		relpro	relpro_that	sg							WDT	nsubj	61
61	's	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	51
62	really	really	rb+advl	rb	advl	ly							RB	advmod	61
63	,	,											,	punct	61
64	real	real		jj	pred								JJ	acomp	61
65	?	?											.	punct	34

#sentid = 614
0													_SP	dep	0
1	yeah	yeah											UH	intj	0
2	.	.											.	punct	1

#sentid = 615
0													_SP	dep	3
1	does	do		vbaux									VBZ	aux	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	seem	seem		vbmain	vblex	pres	simple	active					VB	ROOT	3
4	right	right											JJ	oprd	3
5	to	to	in+advl	in	advl								IN	prep	3
6	other	other	attr+npremod	jj	attr								JJ	amod	7
7	people	people		nn	pl								NNS	pobj	5
8	?	?											.	punct	3

#sentid = 616
0	and	and		cc	cls								CC	cc	3
1	you	you		pro	2nd	sg							PRP	nsubj	3
2	might	might		vbaux	mod	pos							MD	aux	3
3	think	think		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	3
4	,	,											,	punct	3
5	one	one											CD	nummod	6
6	_	_											.	punct	3

#sentid = 617
0	you	you		pro	2nd	sg							PRP	nsubj	2
1	might	might		vbaux	mod	pos							MD	aux	2
2	think	think		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	2
3	look	look		vbmain	vblex	nonfinite	simple	active	advlcls				VB	advcl	8
4	,	,											,	punct	8
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	8
7	she	she		pro	3rd	sg							PRP	nsubj	8
8	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	2
9	probably	probably	rb+advl	rb	advl	ly							RB	advmod	8
10	in	in	in+advl	in	advl								IN	prep	8
11	two	two											CD	nummod	12
12	places	place		nn	pl								NNS	pobj	10
13	.	.											.	punct	2

#sentid = 618
0	this	this		dt	dt_dem								DT	det	1
1	center	center		nn		nom							NN	nsubj	4
2	of	of	of+npostmod	in	nmod								IN	prep	1
3	gravity	gravity		nn		nom							NN	pobj	2
4	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	is	be		vbmain	be	pres	simple	active					VBZ	dep	4
6	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	7
7	of	of	rb+jjrbmod	rb	adjmod								RB	advmod	8
8	divided	divided		jj	pred								JJ	acomp	5
9	,	,											,	punct	5
10	in	in	in+advl	in	advl								IN	prep	5
11	this	this		dt	dt_dem								DT	det	12
12	kind	kind		nn									NN	pobj	10
13	of	of	of+npostmod	in	nmod								IN	prep	12
14	case	case		nn									NN	pobj	13
15	.	.											.	punct	4

#sentid = 619
0	because	because		cs	cos								IN	mark	3
1	you	you		pro	2nd	sg							PRP	nsubj	3
2	've	've		vbaux									VBP	aux	3
3	got	get		vbmain	vblex	pres	simple	active			causative		VBN	ROOT	3
4	both	both		dt									CC	det	6
5	the	the		dt	art								DT	det	6
6	ability	ability		nn		nom							NN	dobj	3
7	to	to		to									TO	aux	8
8	respond	respond	tocls+ncomp	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	ncomp		VB	acl	6
9	an-	an-											CC	dep	8
10	to	to	in+advl	in	advl								IN	prep	8
11	things	thing		nn	pl	nom							NNS	pobj	10
12	going	go	ingcls+rel	vbmain	prepv	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	11
13	on	on		rb	prtcle								RP	prt	12
14	in	in	in+advl	in	advl								IN	prep	12
15	the	the		dt	art								DT	det	16
16	ship	ship		nn									NN	pobj	14
17	,	,											,	punct	6
18	and	and		cc	phrs								CC	cc	6
19	the	the		dt	art								DT	det	20
20	ability	ability		nn		nom							NN	conj	6
21	and	and		cc	phrs								CC	cc	20
22	readiness	readiness		nn		nom							NN	conj	20
23	to	to		to									TO	aux	24
24	respond	respond	tocls+ncomp	vbmain	prepv	nonfinite	simple	active	nmod_cls	tocls	ncomp		VB	acl	20
25	to	to	in+advl	in	advl								IN	prep	24
26	things	thing		nn	pl	nom							NNS	pobj	25
27	down	down	rb+advl	rb	advl								RB	advmod	24
28	,	,											,	punct	27
29	on	on		in	in_othr								IN	prep	27
30	the	the		dt	art								DT	det	32
31	sea	sea	nn+npremod	nn			npremod						NN	compound	32
32	floor	floor		nn		nom							NN	pobj	29
33	.	.											.	punct	3

#sentid = 620
0	you	you		pro	2nd	sg							PRP	nsubj	2
1	've	've		vbaux									VBP	aux	2
2	got	get		vbmain	vblex	pres	simple	active					VBN	ROOT	2
3	this	this		dt	dt_dem								DT	det	10
4	,	,											,	punct	10
5	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	6
6	of	of		rb	othr								RB	advmod	10
7	two	two											CD	nummod	10
8	,	,											,	punct	10
9	two	two											CD	nummod	10
10	part	part	nn+npremod	nn			npremod						NN	nmod	12
11	,	,											,	punct	12
12	consciousness	consciousness		nn		nom							NN	dobj	2
13	.	.											.	punct	2

#sentid = 621
0	or	or		cc	cls								CC	cc	3
1	maybe	maybe	rb+advl	rb	advl								RB	advmod	3
2	it	it		pro	3rd	sg							PRP	nsubj	3
3	depends	depend		vbmain	prepv	pres	simple	active					VBZ	ROOT	3
4	on	on	in+advl	in	advl								IN	prep	3
5	where	where		comp	comp_wh								WRB	advmod	8
6	you	you		pro	2nd	sg							PRP	nsubj	8
7	're	be		vbaux									VBP	aux	8
8	focusing	focus	whcls+incomp	vbmain	vblex	pres	prog	active	compcls	whcls	incomp		VBG	pcomp	4
9	your	your		dt	poss								PRP$	poss	10
10	attention	attention		nn		nom							NN	dobj	8
11	.	.											.	punct	3

#sentid = 622
0													_SP	dep	0
1	i	i		pro	1st	sg							PRP	nsubj	2
2	agree	agree		vbmain	in_othr	pres	simple	active					VBP	prep	0
3	like	like											UH	intj	2
4	temporarily	temporarily	rb+advl	rb	advl	ly							RB	advmod	2
5	like	like		cs	cs_othr								IN	mark	7
6	she	she		pro	3rd	sg							PRP	nsubj	7
7	feels	feel	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	2
8	that	that											DT	dep	7
9	but	but		cc	cls								CC	cc	2
10	,	,											,	punct	2
11													_SP	dep	17
12	mhm	mhm											UH	intj	17
13													_SP	dep	12
14	i	i		pro	1st	sg							PRP	nsubj	17
15	do	do		vbaux									VBP	aux	17
16	n't	not											RB	neg	17
17	know	know	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls				VB	advcl	29
18	it	it		pro	3rd	sg							PRP	nsubj	19
19	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	17
20	a	a		dt	art								DT	det	21
21	machine	machine		nn									NN	attr	19
22	and	and		cc	phrs								CC	cc	19
23	after	after		cs	cs_othr								IN	mark	24
24	sh-	sh-											XX	conj	19
25	you	you		pro	2nd	sg							PRP	nsubj	26
26	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	29
27	it	it		pro	3rd	sg							PRP	nsubj	29
28	'll	will		vbaux	mod								MD	aux	29
29	come	come		vbmain	phrsv	vp_w_modal	simple	active					VB	conj	2
30	up	up		rb	prtcle								RP	prt	29
31	and	and		cc	cls								CC	cc	29
32	she	she		pro	3rd	sg							PRP	nsubj	34
33	'll	will		vbaux	mod								MD	aux	34
34	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	29
35	herself	herself		pro	3rd	sg							PRP	attr	34
36	and	and		cc	phrs								CC	cc	34
37	,	,											,	punct	40
38	there	there											EX	expl	40
39	's	be		vbaux									VBZ	auxpass	40
40	got	get		vbmain	vblex	pres	simple	pasv_agls					VBN	conj	34
41	ta	to		vbmain	vblex	nonfinite	simple	active		edcls			VBN	dep	34
42	,	,											,	punct	34
43	you	you		pro	2nd	sg							PRP	nsubj	46
44	got	got		vbaux	mod								MD	aux	46
45	ta	to		vbaux	mod								MD	aux	46
46	say	say		vbmain	vblex	vp_w_modal	simple	active					VB	parataxis	34
47	something	something		nn	other	nom							NN	dobj	46
48	about	about	in+npostmod	in	nmod								IN	prep	47
49	like	like											UH	intj	48
50	,	,											,	punct	48
51	you	you		pro	2nd	sg							PRP	nsubj	52
52	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	48
53	pers-	pers-											XX	punct	48

#sentid = 623
0	i	i		pro	1st	sg							PRP	nsubj	1
1	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	she	she		pro	3rd	sg							PRP	nsubj	6
3	'd	have		vbmain	vblex	past	simple	active					VBD	dep	6
4	she	she		pro	3rd	sg							PRP	nsubj	6
5	'd	would		vbaux	mod								MD	aux	6
6	feel	feel	thatcls+vcomp	vbmain	prepv	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	1
7	like	like		cs	cs_othr								IN	mark	9
8	she	she		pro	3rd	sg							PRP	nsubj	9
9	's	be	finitecls+advl	vbmain	be	pres	simple	active	advlcls		other_advl		VBZ	advcl	6
10	down	down	rb+jjrbmod	rb	othr								RB	advmod	11
11	there	there	rb+advl	rb	advl								RB	advmod	9
12	you	you		pro	2nd	sg							PRP	nsubj	13
13	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	9
14	and	and		cc	cls								CC	cc	6
15	she	she		pro	3rd	sg							PRP	nsubj	17
16	'd	would		vbaux	mod								MD	aux	17
17	feel	feel		vbmain	prepv	vp_w_modal	simple	active					VB	conj	6
18	like	like	in+advl	in	advl								IN	prep	17
19	a	a		dt	art								DT	det	20
20	part	part		nn									NN	pobj	18
21	and	and		cc	cls								CC	cc	17
22	she	she		pro	3rd	sg							PRP	nsubj	24
23	'd	would		vbaux	mod								MD	aux	24
24	feel	feel		vbmain	vblex	vp_w_modal	simple	active					VB	conj	17
25	physically	physically	rb+advl	rb	advl	ly							RB	advmod	24
26	she	she		pro	3rd	sg							PRP	nsubj	28
27	'd	would		vbaux	mod								MD	aux	28
28	feel	feel	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	24
29	down	down	rb+jjrbmod	rb	othr								RB	advmod	30
30	there	there	rb+advl	rb	advl								RB	advmod	28
31	but	but		cc	cls								CC	cc	1
32	i	i		pro	1st	sg							PRP	nsubj	35
33	do	do		vbaux									VBP	aux	35
34	n't	not											RB	neg	35
35	think	think		vbmain	vblex	pres	simple	active					VB	conj	1
36	,	,											,	punct	38
37	i	i		pro	1st	sg							PRP	nsubj	38
38	think	think	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	35
39	if	if		cs	cnd								IN	mark	41
40	you	you		pro	2nd	sg							PRP	nsubj	41
41	asked	ask	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	52
42	her	she				sg							PRP	dobj	41
43	straight	straight	rb+jjrbmod	rb	othr								RB	advmod	44
44	out	out	rb+advl	rb	advl								RB	advmod	41
45	like	like											UH	intj	41
46	where	where		comp	comp_wh								WRB	advmod	47
47	are	be	whcls+vcomp	vbmain	be	pres	simple	active	compcls	whcls	vcomp		VBP	ccomp	41
48	you	you		pro	2nd	sg							PRP	nsubj	47
49	?	?											.	punct	47
50	she	she		pro	3rd	sg							PRP	nsubj	52
51	'd	would		vbaux	mod								MD	aux	52
52	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	38
53	like	like											UH	intj	52
54	,	,											,	punct	52
55	on	on	in+advl	in	advl								IN	prep	52
56	the	the		dt	art								DT	det	57
57	boat	boat		nn									NN	pobj	55
58	.	.											.	punct	1

#sentid = 624
0	i	i		pro	1st	sg							PRP	nsubj	1
1	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	2
2	i	i		pro	1st	sg							PRP	ROOT	2
3													_SP	dep	2
4	mhm	mhm											UH	dep	2
5													_SP	dep	4
6	and	and		cc	phrs								CC	cc	50
7	if	if		cs	cnd								IN	mark	9
8	you	you		pro	2nd	sg							PRP	nsubj	9
9	asked	ask	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	18
10	a	a		dt	art								DT	det	11
11	machine	machine		nn									NN	dobj	9
12	,	,											,	punct	18
13	obviously	obviously	rb+advl	rb	advl	ly							RB	advmod	18
14	the	the		dt	art								DT	det	15
15	machine	machine		nn									NN	nsubj	18
16	would	would		vbaux	mod	prd							MD	aux	18
17	n't	not											RB	neg	18
18	answer	answer		vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	50
19	anything	anything		nn	other	nom							NN	dobj	18
20	(	(											-LRB-	punct	24
21	it	it		pro	3rd	sg							PRP	nsubj	24
22	did	do		vbaux									VBD	aux	24
23	n't	not											RB	neg	24
24	know	know		vbmain	vblex	past	simple	active					VB	parataxis	18
25	)	)											-RRB-	punct	24
26													_SP	dep	18
27	so	so		rb	link								RB	advmod	29
28	she	she		pro	3rd	sg							PRP	nsubj	29
29	's	be		vbmain	be	pres	simple	active					VBZ	conj	18
30	always	always	rb+advl	rb	advl								RB	advmod	29
31	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	32
32	of	of	rb+jjrbmod	rb	adjmod								RB	advmod	35
33													_SP	dep	35
34	somewhat	somewhat	rb+jjrbmod	rb	adjmod								RB	advmod	35
35	aware	aware		jj	pred								JJ	acomp	29
36													_SP	dep	35
37	just	just	rb+jjrbmod	rb	othr								RB	advmod	38
38	physically	physically	rb+jjrbmod	rb	adjmod	ly							RB	advmod	35
39													_SP	dep	35
40	of	of	in+jcomp	in	jcomp								IN	prep	35
41	her	her		dt	poss	sg							PRP$	poss	45
42	real	real	attr+npremod	jj	attr								JJ	amod	45
43													_SP	dep	45
44	physical	physical	attr+npremod	jj	attr								JJ	amod	45
45	body	body		nn									NN	pobj	40
46													_SP	dep	50
47	i	i		pro	1st	sg							PRP	nsubj	48
48	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	50
49	she	she		pro	3rd	sg							PRP	nsubj	50
50	's	be		vbmain	be	pres	simple	active					VBZ	meta	2
51	just	just	rb+advl	rb	advl								RB	advmod	50
52	the	the											DT	dep	62
53	,	,											,	punct	62
54	when	when		rb	advl								WRB	advmod	56
55	you	you		pro	2nd	sg							PRP	nsubj	56
56	do	do	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	62
57	virtual	virtual	attr+npremod	jj	attr								JJ	amod	58
58	reality	reality		nn		nom							NN	dobj	56
59	,	,											,	punct	62
60	you	you		pro	2nd	sg							PRP	nsubj	62
61	're	be		vbaux									VBP	aux	62
62	devoting	devote	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	50
63	your	your		dt	poss								PRP$	poss	64
64	consciousness	consciousness		nn		nom							NN	dobj	62
65	and	and		cc	phrs								CC	cc	64
66	all	all		dt									PDT	det	69
67	your	your		dt	poss								PRP$	poss	69
68	physical	physical	attr+npremod	jj	attr								JJ	amod	69
69	energy	energy		nn									NN	conj	64
70	towards	towards	in+advl	in	advl								IN	prep	62
71	,	,											,	punct	70
72	moving	move	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	70
73	a	a		dt	art								DT	det	74
74	machine	machine		nn									NN	dobj	72
75	.	.											.	punct	50

#sentid = 625
0													_SP	dep	0
1	mhm	mhm											UH	intj	0
2	.	.											.	punct	1

#sentid = 626
0	would	would		vbaux	mod	prd							MD	aux	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	make	make		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	2
3	a	a		dt	art								DT	det	4
4	difference	difference		nn		nom							NN	dobj	2
5	do	do		vbaux									VBP	aux	7
6	you	you		pro	2nd	sg							PRP	nsubj	7
7	think	think		vbmain	vblex	pres	simple	active					VB	parataxis	2
8	if	if		cs	cnd								IN	mark	13
9	you	you		pro	2nd	sg							PRP	dep	13
10	,	,											,	punct	13
11	if	if		cs	cnd								IN	mark	13
12	she	she		pro	3rd	sg							PRP	nsubj	13
13	went	go	finitecls+advl	vbmain	vblex	past	simple	active	advlcls		conditional		VBD	advcl	2
14	into	into	in+advl	in	advl								IN	prep	13
15	a	a		dt	art								DT	det	16
16	sort	sort		nn									NN	pobj	14
17	of	of	of+npostmod	in	nmod								IN	prep	16
18	a	a		dt	art								DT	det	19
19	trance	trance		nn		nom							NN	pobj	17
20	?	?											.	punct	2

#sentid = 627
0	you	you		pro	2nd	sg							PRP	nsubj	1
1	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	6
2	you	you		pro	2nd	sg							PRP	nmod	4
3	_	_											XX	appos	2
4	people	people		nn	pl								NNS	nsubj	6
5	can	can		vbaux	mod	pos							MD	aux	6
6	get	get		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	6
7	so	so	rb+jjrbmod	rb	adjmod								RB	advmod	8
8	concentrated	concentrated		jj	pred								JJ	acomp	6
9	on	on	in+jcomp	in	jcomp								IN	prep	8
10	what	what		comp	comp_wh								WP	dobj	13
11	they	they		pro	pl								PRP	nsubj	13
12	're	be		vbaux									VBP	aux	13
13	doing	do	whcls+incomp	vbmain	vblex	pres	prog	active	compcls	whcls	incomp		VBG	pcomp	9
14	that	that											IN	mark	18
15	,	,											,	punct	18
16	you	you		pro	2nd	sg							PRP	nsubj	17
17	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	18
18	y-	y-											PRP	dep	6
19	you	you		pro	2nd	sg							PRP	nmod	18
20	,	,											,	punct	19
21	you	you		pro	2nd	sg							PRP	nsubj	22
22	nudge	nudge		vbmain	vblex	pres	simple	active					VBP	meta	18
23	them	they		pro	pl								PRP	dobj	22
24	or	or		cc	cls								CC	cc	22
25	you	you		pro	2nd	sg							PRP	dep	30
26	you	you		pro	2nd	sg							PRP	nmod	25
27	you	you		pro	2nd	sg							PRP	meta	25
28	you	you		pro	2nd	sg							PRP	dep	25
29	you	you		pro	2nd	sg							PRP	nsubj	30
30	say	say		vbmain	vblex	pres	simple	active					VBP	conj	22
31	something	something		nn	other	nom							NN	dobj	30
32	to	to	in+advl	in	advl								IN	prep	30
33	them	they		pro	pl								PRP	pobj	32
34	and	and		cc	cls								CC	cc	30
35	they	they		pro	pl								PRP	nsubj	41
36	just	just	rb+advl	rb	advl								RB	advmod	41
37	,	,											,	punct	41
38	they	they		pro	pl								PRP	nsubj	41
39	c-	c-		vbaux	mod								MD	aux	41
40	completely	completely	rb+advl	rb	advl	ly	splaux						RB	advmod	41
41	ignore	ignore		vbmain	vblex	vp_w_modal	simple	active					VBP	conj	30
42	you	you		pro	2nd	sg							PRP	dobj	41
43	.	.											.	punct	6

#sentid = 628
0	if	if		cs	cnd								IN	mark	2
1	she	she		pro	3rd	sg							PRP	nsubj	2
2	was	be	finitecls+advl	vbmain	be	past	simple	active	advlcls		conditional		VBD	advcl	20
3	so	so		rb	link								RB	advmod	4
4	bound	bind		jj	pred	ed							VBN	acomp	2
5	up	up		rb	prtcle								RP	prt	4
6	in	in	in+advl	in	advl								IN	prep	4
7	in	in	in+advl	in	advl								IN	prep	4
8	what	what											WP	nsubj	10
9	was	be		vbaux									VBD	aux	10
10	going	go	whcls+incomp	vbmain	prepv	past	prog	active	compcls	whcls	incomp		VBG	pcomp	7
11	on	on		rb	prtcle								RP	prt	10
12	under	under	in+advl	in	advl								IN	prep	10
13	,	,											,	punct	12
14	under	under		in	in_othr								IN	prep	12
15	the	the		dt	art								DT	det	16
16	sea	sea		nn									NN	pobj	14
17	,	,											,	punct	20
18	would	would		vbaux	mod	prd							MD	aux	20
19	it	it		pro	3rd	sg							PRP	nsubj	20
20	make	make		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	20
21	sense	sense		nn									NN	dobj	20
22	then	then	rb+advl	rb	advl								RB	advmod	20
23	?	?											.	punct	20

#sentid = 629
0	would	would		vbaux	mod	prd							MD	aux	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	2
3	like	like	in+advl	in	advl								IN	prep	2
4	having	have	ingcls+incomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	incomp		VBG	pcomp	3
5	a	a		dt	art								DT	det	8
6	remote	remote	rb+advl	rb	advl								RB	advmod	7
7	controlled	control	attr+npremod	jj	attr	ed							VBN	amod	8
8	body	body		nn									NN	dobj	4
9	?	?											.	punct	2

#sentid = 630
0													_SP	dep	6
1	can	can		vbaux	mod	pos							MD	aux	6
2	you	you		pro	2nd	sg							PRP	nsubj	6
3	,	,											,	punct	6
4	i	i		pro	1st	sg							PRP	nsubj	5
5	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	6
6	is	be		vbmain	be	vp_w_modal	simple	active					VBZ	ROOT	6
7	temporarily	temporarily	rb+advl	rb	advl	ly							RB	advmod	6
8	a	a		dt	art								DT	det	9
9	a	a											DT	attr	6
10	,	,											,	punct	9
11	an	an		dt									DT	det	13
12	acceptable	acceptable	attr+npremod	jj	attr								JJ	amod	13
13	answer	answer		nn		nom							NN	attr	6
14	?	?											.	punct	6

#sentid = 631
0													_SP	dep	5
1	yeah	yeah											UH	intj	5
2	,	,											,	punct	5
3	well	well											UH	intj	5
4	i	i		pro	1st	sg							PRP	nsubj	5
5	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	5
6	with	with	in+advl	in	advl								IN	prep	24
7	the	the		dt	art								DT	det	18
8	,	,											,	punct	10
9	i	i		pro	1st	sg							PRP	nsubj	10
10	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	7
11	,	,											,	punct	10
12	the	the		dt	art								DT	det	18
13	the	the		dt	art								DT	det	15
14	shifting	shift	attr+npremod	jj	attr	ing							VBG	amod	15
15	center	center	nn+npremod	nn		nom	npremod						NN	nmod	18
16	of	of	of+npostmod	in	nmod								IN	prep	15
17	gravity	gravity		nn		nom							NN	pobj	16
18	point	point		nn									NN	pobj	6
19	of	of	of+npostmod	in	nmod								IN	prep	18
20	view	view		nn									NN	pobj	19
21	,	,											,	punct	24
22	um	um											UH	intj	24
23	,	,											,	punct	24
24	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	5
25	something	something		nn	other	nom							NN	nsubj	24
26	that	that		relpro	relpro_that	sg							WDT	nsubj	35
27	,	,											,	punct	35
28	that	that											WDT	dep	35
29	that	that		pro	dem	sg							DT	nsubj	31
30	can	can		vbaux	mod	pos							MD	aux	31
31	change	change	finitecls+advl	vbmain	vblex	vp_w_modal	simple	active	advlcls				VB	advcl	35
32	,	,											,	punct	35
33	that	that		relpro	relpro_that	sg							WDT	nsubj	35
34	can	can		vbaux	mod	pos							MD	aux	35
35	move	move	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	25
36	from	from	in+advl	in	advl								IN	prep	35
37	one	one											CD	nummod	38
38	place	place		nn									NN	pobj	36
39	to	to		in	in_othr								IN	prep	36
40	another	another											DT	pobj	39
41	in	in	in+advl	in	advl								IN	prep	35
42	an	an		dt									DT	det	43
43	instant	instant		nn		nom							NN	pobj	41
44	.	.											.	punct	5

#sentid = 632
0	i	i		pro	1st	sg							PRP	nsubj	1
1	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	what	what											WP	attr	9
5	Den-	den-		nn		proper	npremod						NNP	compound	6
6	Dennett	dennett	s+gen	dt	poss	proper	sgen						NNP	poss	8
7	's	's											POS	case	6
8	idea	idea		nn									NN	nsubj	9
9	was	be	whcls+vcomp	vbmain	be	past	simple	active	compcls	whcls	vcomp		VBD	ccomp	3
10	,	,											,	punct	11
11	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	3
12	that	that		comp	comp_that								IN	mark	41
13	at	at	in+advl	in	advl								IN	prep	41
14	the	the											DT	intj	13
15	,	,											,	punct	16
16	at	at		in	in_othr								IN	prep	13
17	,	,											,	punct	16
18	during	during		in	in_othr								IN	prep	16
19	this	this		dt	dt_dem								DT	det	20
20	example	example		nn									NN	pobj	18
21	where	where		rb	advl								WRB	advmod	25
22	th-	th-											DT	dep	25
23	the	the		dt	art								DT	det	24
24	body	body		nn									NN	nsubj	25
25	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	20
26	under	under	in+advl	in	advl								IN	prep	25
27	,	,											,	punct	26
28	underground	underground	rb+advl	rb	advl								RB	advmod	25
29	,	,											,	punct	28
30	in	in	in+advl	in	advl								IN	prep	25
31	Tulsa	tulsa		nn		proper							NNP	pobj	30
32	um	um											UH	intj	25
33	,	,											,	punct	25
34	and	and		cc									CC	cc	13
35	also	also		rb	othr								RB	advmod	40
36	when	when		rb	othr								WRB	advmod	40
37	the	the		dt	art								DT	det	38
38	connections	connection		nn	pl	nom							NNS	nsubj	39
39	start	start		vbaux									VBP	aux	40
40	shif-	shif-											XX	conj	13
41	start	start		vbmain	vblex	nonfinite	simple	active	compcls	thatcls	vcomp		VB	ccomp	11
42	going	go	ingcls+vcomp	vbmain	prepv	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	41
43	on	on	in+advl	in	advl								IN	prep	42
44	the	the		dt	art								DT	det	45
45	fritz	fritz		nn									NN	pobj	43
46	,	,											,	punct	48
47	he	he		pro	3rd	sg							PRP	nsubj	48
48	says	say	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	11
49	well	well											UH	intj	50
50	look	look		vbmain	vblex	nonfinite	simple	active					VB	parataxis	59
51	it	it		pro	3rd	sg							PRP	meta	50
52	just	just		rb	othr								RB	advmod	53
53	it	it		pro	3rd	sg							PRP	dep	59
54	sh-	sh-											XX	dep	59
55	his	his		dt	poss	sg							PRP$	poss	56
56	center	center		nn		nom							NN	nsubj	59
57	of	of	of+npostmod	in	nmod								IN	prep	56
58	gravity	gravity		nn		nom							NN	pobj	57
59	shifted	shift	thatcls+vcomp	vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VBD	ccomp	48
60	in	in	in+advl	in	advl								IN	prep	59
61	an	an		dt									DT	det	62
62	instant	instant		nn		nom							NN	pobj	60
63	,	,											,	punct	59
64	back	back	rb+advl	rb	advl								RB	advmod	59
65	to	to		in	in_othr								IN	prep	64
66	,	,											,	punct	65
67	um	um											UH	intj	65
68	,	,											,	punct	65
69	back	back		rb	othr								RB	advmod	65
70	to	to		in	in_othr								IN	prep	69
71	the	the		dt	art								DT	det	72
72	vat	vat		nn									NN	pobj	70
73	.	.											.	punct	3

#sentid = 633
0	it	it		pro	3rd	sg							PRP	nsubj	3
1	did	do		vbaux									VBD	aux	3
2	n't	not											RB	neg	3
3	take	take		vbmain	vblex	past	simple	active	compcls		vcomp	compdel	VB	ccomp	14
4	any	any		dt									DT	det	5
5	time	time		nn									NN	dobj	3
6	,	,											,	punct	14
7	it	it		pro	3rd	sg							PRP	nsubj	8
8	does	do		vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	14
9	n't	not											RB	neg	8
10	you	you		pro	2nd	sg							PRP	nsubj	11
11	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	14
12	,	,											,	punct	14
13	there	there											EX	expl	14
14	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	14
15	no	no		dt									DT	det	17
16	material	material	nn+npremod	nn		nom	npremod						NN	compound	17
17	transfer	transfer		nn		nom							NN	attr	14
18	of	of	of+npostmod	in	nmod								IN	prep	17
19	anything	anything		nn	other	nom							NN	pobj	18
20	that	that		relpro	relpro_that	sg							WDT	nsubj	21
21	has	have	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	19
22	to	to		to									TO	aux	23
23	take	take		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	21
24	place	place		nn									NN	dobj	23
25	...	...											:	punct	14

#sentid = 634
0	so	so		rb	link								RB	advmod	1
1	looks	look		vbmain	prepv	pres	simple	active					VBZ	ROOT	1
2	like	like	in+advl	in	advl								IN	prep	1
3	you	you		pro	2nd	sg							PRP	nsubj	4
4	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	8
5	the	the		dt	art								DT	det	8
6	the	the		dt	art								DT	det	8
7	the	the		dt	art								DT	det	8
8	time	time		nn									NN	pobj	2
9	it	it		pro	3rd	sg							PRP	nsubj	10
10	takes	take	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls		rel	reldel	VBZ	relcl	8
11	,	,											,	punct	8
12	or	or		cc	phrs								CC	cc	8
13	the	the		dt	art								DT	det	15
14	time	time	nn+npremod	nn			npremod						NN	compound	15
15	aspect	aspect		nn									NN	nsubj	16
16	does	do		vbmain	vblex	pres	simple	active					VBZ	conj	8
17	n't	not											RB	neg	16
18	,	,											,	punct	16
19	and	and		cc	phrs								CC	cc	8
20	distance	distance	nn+npremod	nn		nom	npremod						NN	compound	21
21	travel	travel		nn									NN	nsubj	24
22	does	do		vbaux									VBZ	aux	24
23	n't	not											RB	neg	24
24	make	make		vbmain	vblex	pres	simple	active					VB	conj	8
25	any	any		dt									DT	det	26
26	difference	difference		nn		nom							NN	dobj	24
27	t-	t-											XX	dep	24
28	for	for		cs	cs_othr								IN	mark	41
29	this	this		dt	dt_dem								DT	det	30
30	kind	kind		nn									NN	nsubj	41
31	of	of	of+npostmod	in	nmod								IN	prep	30
32	,	,											,	punct	41
33	for	for		cs	cs_othr								IN	mark	38
34	this	this		dt	dt_dem								DT	det	35
35	kind	kind		nn									NN	nsubj	38
36	of	of	of+npostmod	in	nmod								IN	prep	35
37	view	view		nn									NN	pobj	36
38	to	to		to									TO	aux	41
39	,	,											,	punct	41
40	to	to		to									TO	aux	41
41	work	work	tocls+advl	vbmain	vblex	nonfinite	simple	active	advlcls	tocls	other_advl		VB	advcl	24
42	.	.											.	punct	1

#sentid = 635
0													_SP	dep	93
1	um	um											UH	intj	4
2	,	,											,	punct	4
3	i	i		pro	1st	sg							PRP	nsubj	4
4	wanna	wanna		vbmain	in_othr	pres	simple	active					VBP	prep	0
5	i	i		pro	1st	sg							PRP	nsubj	7
6	wanna	wanna		vbaux	mod								MD	aux	7
7	take	take	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	4
8	a	a											DT	quantmod	9
9	few	few											JJ	nummod	10
10	minutes	minute		nn	pl								NNS	dobj	7
11	just	just	rb+advl	rb	advl								RB	advmod	13
12	to	to		to									TO	aux	13
13	talk	talk	tocls+advl	vbmain	prepv	nonfinite	simple	active	advlcls	tocls			VB	advcl	7
14	about	about	in+advl	in	advl								IN	prep	13
15	um	um											UH	intj	14
16	,	,											,	punct	14
17	um	um											UH	intj	14
18	for	for	in+advl	in	advl								IN	prep	23
19	next	next	attr+npremod	jj	attr								JJ	amod	20
20	time	time		nn									NN	pobj	18
21	i	i		pro	1st	sg							PRP	nsubj	23
22	'd	would		vbaux	mod								MD	aux	23
23	like	like		vbmain	vblex	vp_w_modal	simple	active	compcls		incomp	compdel	VB	pcomp	14
24	to	to		to									TO	aux	25
25	follow	follow	tocls+vcomp	vbmain	phrsv	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	23
26	up	up		rb	prtcle								RP	prt	25
27	next	next	attr+npremod	jj	attr								JJ	amod	28
28	time	time		nn									NN	npadvmod	25
29	to	to		to									IN	aux	31
30	,	,											,	punct	29
31	talk	talk		vbmain	prepv	nonfinite	simple	active					VB	dep	25
32	about	about	in+advl	in	advl								IN	prep	31
33	the	the		dt	art								DT	det	35
34	next	next	attr+npremod	jj	attr								JJ	amod	35
35	stage	stage		nn		nom							NN	pobj	32
36	of	of	of+npostmod	in	nmod								IN	prep	35
37	this	this		dt	dt_dem								DT	det	39
38	thought	thought	nn+npremod	nn			npremod						NN	compound	39
39	experiment	experiment		nn		nom							NN	pobj	36
40	taking	take	ingcls+rel	vbmain	phrsv	nonfinite	simple	active	nmod_cls	ingcls	ncomp		VBG	acl	35
41	it	it		pro	3rd	sg							PRP	dobj	40
42	on	on		rb	prtcle								RP	prt	40
43	to	to	in+advl	in	advl								IN	prep	40
44	the	the		dt	art								DT	det	48
45	,	,											,	punct	48
46	the	the		dt	art								DT	det	48
47	,	,											,	punct	48
48	stage	stage		nn		nom							NN	pobj	43
49	where	where		rb	advl								WRB	advmod	52
50	he	he		pro	3rd	sg							PRP	nsubjpass	52
51	's	be		vbaux									VBZ	auxpass	52
52	got	get	finitecls+rel	vbmain	vblex	pres	simple	pasv_agls	nmod_cls	whcls	rel		VBN	relcl	48
53	a	a		dt	art								DT	det	57
54	new	new	attr+npremod	jj	attr								JJ	amod	57
55	,	,											,	punct	57
56	spare	spare	attr+npremod	jj	attr								JJ	amod	57
57	brain	brain		nn									NN	dobj	52
58	which	which		relpro	relpro_wh								WDT	nsubj	59
59	is	be	finitecls+rel	vbmain	be	pres	simple	active	nmod_cls	whcls	rel		VBZ	relcl	57
60	actually	actually	rb+advl	rb	advl	ly							RB	advmod	59
61	a	a		dt	art								DT	det	62
62	computer	computer		nn		nom							NN	attr	59
63	,	,											,	punct	52
64	um	um											UH	intj	52
65	,	,											,	punct	52
66	and	and		cc	cls								CC	cc	7
67	whether	whether		cs	cs_othr								IN	mark	69
68	that	that		pro	dem	sg							DT	nsubj	69
69	's	be		vbmain	be	pres	simple	active			other_advl		VBZ	conj	7
70	actually	actually	rb+advl	rb	advl	ly							RB	advmod	69
71	just	just		rb	othr								RB	advmod	72
72	one	one											CD	nummod	73
73	person	person		nn									NN	attr	69
74	,	,											,	punct	73
75	or	or		cc	phrs								CC	cc	73
76	two	two											CD	nummod	77
77	people	people		nn	pl								NNS	conj	73
78	um	um											UH	intj	69
79	,	,											,	punct	69
80	and	and		cc	cls								CC	cc	69
81	whether	whether		cs	cs_othr								IN	mark	83
82	you	you		pro	2nd	sg							PRP	nsubj	83
83	can	can		vbmain	vblex	vp_w_modal	simple	active			other_advl		MD	conj	69
84	actually	actually		rb	othr	ly							RB	advmod	83
85	,	,											,	punct	93
86	one	one											CD	nummod	88
87	one	one											CD	nummod	88
88	worry	worry		nn		nom							NN	nsubj	93
89	th-	th-											DT	appos	88
90	you	you		pro	2nd	sg							PRP	nsubj	92
91	might	might		vbaux	mod	pos							MD	aux	92
92	have	have		vbmain	in_othr	vp_w_modal	simple	active					VB	prep	89
93	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	93
94	whether	whether		cs	cs_othr								IN	mark	100
95	the	the		dt	art								DT	det	97
96	the	the		dt	art								DT	det	97
97	computer	computer		nn		nom							NN	nsubj	100
98	is	be		vbaux									VBZ	aux	100
99	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	100
100	doing	do	finitecls+advl	vbmain	vblex	pres	prog	active	advlcls		other_advl		VBG	advcl	93
101	any	any		dt									DT	det	102
102	thinking	thinking		nn		nom							NN	dobj	100
103	at	at	rb+jjrbmod	rb	othr								RB	advmod	104
104	all	all		rb	othr								RB	advmod	102
105	,	,											,	punct	100
106	um	um											UH	intj	100
107	and	and		cc	cls								CC	cc	100
108	whether	whether		cs	cs_othr								IN	mark	111
109	you	you		pro	2nd	sg							PRP	nsubj	111
110	can	can		vbaux	mod	pos							MD	aux	111
111	have	have		vbmain	vblex	vp_w_modal	simple	active			other_advl		VB	conj	100
112	one	one											CD	nummod	113
113	person	person		nn									NN	dobj	111
114	with	with	in+npostmod	in	nmod								IN	prep	113
115	these	these		dt	dt_dem								DT	det	117
116	two	two											CD	nummod	117
117	brains	brain		nn	pl								NNS	pobj	114
118	.	.											.	punct	93

#sentid = 636
0	um	um											UH	intj	5
1	,	,											,	punct	5
2	so	so		rb	link								RB	advmod	5
3	,	,											,	punct	5
4	that	that		pro	dem	sg							DT	nsubj	5
5	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	5
6	what	what											WP	pobj	8
7	i	i		pro	1st	sg							PRP	nsubj	8
8	wanna	wanna		vbaux									VBP	aux	9
9	concentrate	concentrate	thatcls+vcomp	vbmain	prepv	pres	simple	active	compcls		vcomp	compdel	VB	ccomp	5
10	on	on	in+advl	in	advl								IN	prep	9
11	next	next	attr+npremod	jj	attr								JJ	amod	12
12	time	time		nn									NN	npadvmod	9
13	and	and		cc	cls								CC	cc	5
14	i	i		pro	1st	sg							PRP	nsubj	15
15	wanted	want		vbmain	vblex	past	simple	active					VBD	conj	5
16	to	to		to									TO	aux	17
17	find	find		vbmain	phrsv	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	15
18	out	out		rb	prtcle								RP	prt	17
19	if	if		cs	cnd								IN	mark	22
20	there	there											EX	expl	22
21	'd	would		vbaux	mod								MD	aux	22
22	be	be		vbmain	be	vp_w_modal	simple	active	compcls		conditional	compdel	VB	ccomp	17
23	some	some		dt									DT	det	24
24	people	people		nn	pl								NNS	attr	22
25	willing	willing		jj	attr								JJ	amod	24
26	to	to		to									TO	aux	30
27	,	,											,	punct	30
28	um	um											UH	intj	30
29	,	,											,	punct	30
30	volunteer	volunteer	tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	jcomp		VB	xcomp	25
31	to	to		to									TO	aux	32
32	lead	lead	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	30
33	the	the		dt	art								DT	det	34
34	discussion	discussion		nn									NN	dobj	32
35	for	for	in+advl	in	advl								IN	prep	32
36	that	that		pro	dem	sg							DT	pobj	35
37	,	,											,	punct	32
38	next	next	attr+npremod	jj	attr								JJ	amod	39
39	time	time		nn									NN	npadvmod	32
40	?	?											.	punct	15

#sentid = 637
0													_SP	dep	3
1	i	i		pro	1st	sg							PRP	nsubj	3
2	'll	will		vbaux	mod								MD	aux	3
3	do	do		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	3
4	it	it		pro	3rd	sg							PRP	dobj	3
5	.	.											.	punct	3

#sentid = 638
0													_SP	dep	9
1	okay	okay											UH	intj	9
2	,	,											,	punct	9
3	um	um											UH	intj	9
4	,	,											,	punct	9
5	also	also	rb+advl	rb	advl								RB	advmod	9
6	people	people		nn	pl		npremod						NNS	nmod	7
7	su-	su-											XX	nmod	8
8	someone	someone		nn	other	sg							NN	nsubj	9
9	suggested	suggest		vbmain	vblex	past	simple	active					VBD	ROOT	9
10	,	,											,	punct	9
11	that	that		comp	comp_that								IN	mark	15
12	we	we		pro	1st								PRP	nsubj	15
13	might	might		vbaux	mod	pos							MD	aux	15
14	just	just	rb+advl	rb	advl		splaux						RB	advmod	15
15	give	give	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls	thatcls	vcomp		VB	ccomp	9
16	,	,											,	punct	15
17	a	a		dt	art								DT	det	20
18	sign	sign	attr+npremod	jj	attr								VB	amod	20
19	up	up		rb	prtcle								RP	prt	18
20	sheet	sheet		nn									NN	dobj	15
21	and	and		cc	phrs								CC	cc	15
22	let	let		vbmain	vblex	nonfinite	simple	active					VB	conj	15
23	you	you		pro	2nd	sg							PRP	nsubj	24
24	sign	sign	thatcls+vcomp	vbmain	phrsv	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	22
25	up	up		rb	prtcle								RP	prt	24
26	beforehand	beforehand	rb+advl	rb	advl								RB	advmod	24
27	for	for	in+advl	in	advl								IN	prep	24
28	,	,											,	punct	27
29	um	um											UH	intj	27
30	,	,											,	punct	27
31	the	the		dt	art								DT	det	32
32	rest	rest		nn									NN	pobj	27
33	of	of	of+npostmod	in	nmod								IN	prep	32
34	the	the		dt	art								DT	det	37
35	,	,											,	punct	37
36	the	the		dt	art								DT	det	37
37	presentations	presentation		nn	pl	nom							NNS	pobj	33
38	.	.											.	punct	9

#sentid = 639
0	um	um											UH	intj	4
1	,	,											,	punct	4
2	would	would		vbaux	mod	prd							MD	aux	4
3	that	that		pro	dem	sg							DT	nsubj	4
4	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	4
5	,	,											,	punct	4
6	would	would		vbaux	mod	prd							MD	aux	8
7	people	people		nn	pl								NNS	nsubj	8
8	like	like	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	4
9	to	to		to									TO	aux	10
10	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	8
11	that	that		pro	dem	sg							DT	dobj	10
12	or	or		cc	cls								CC	cc	8
13	would	would		vbaux	mod	prd							MD	aux	15
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	like	like		vbmain	vblex	vp_w_modal	simple	active					VB	conj	8
16	to	to		to									TO	aux	17
17	continue	continue	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	15
18	doing	do	ingcls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	xcomp	17
19	it	it		pro	3rd	sg							PRP	dobj	18
20	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	21
21	of	of		rb	othr								RB	advmod	22
22	on	on	in+advl	in	advl								IN	prep	18
23	a	a											DT	pobj	22
24	,	,											,	punct	17
25	um	um											UH	intj	17
26	,	,											,	punct	17
27	after	after		cs	cs_othr								IN	mark	30
28	we	we		pro	1st								PRP	nsubj	30
29	've	've		vbaux									VBP	aux	30
30	had	have	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBN	advcl	17
31	a	a		dt	art								DT	det	32
32	chance	chance		nn		nom							NN	dobj	30
33	to	to		to									TO	aux	34
34	do	do	tocls+ncomp	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	ncomp		VB	acl	32
35	the	the		dt	art								DT	det	36
36	readings	reading		nn	pl	nom							NNS	dobj	34
37	for	for	in+npostmod	in	nmod								IN	prep	36
38	the	the		dt	art								DT	det	39
39	week	week		nn									NN	pobj	37
40	?	?											.	punct	4

#sentid = 640
0													_SP	dep	0
1	let	let		vbmain	in_othr	nonfinite	simple	active					VB	prep	0
2	's	us											PRP	nsubj	3
3	do	do		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	1
4	a	a		dt	art								DT	det	8
5	sign	sign	attr+npremod	jj	attr								VB	amod	8
6	-	-											HYPH	punct	5
7	up	up		rb	prtcle								RP	prt	5
8	sheet	sheet		nn									NN	dobj	3
9	.	.											.	punct	1

#sentid = 641
0													_SP	dep	4
1	let	let		vbmain	vblex	nonfinite	simple	active	advlcls				VB	advcl	4
2	me	i		pro	1st	sg							PRP	dobj	1
3	,	,											,	punct	4
4	let	let		vbmain	vblex	nonfinite	simple	active					VB	ROOT	4
5	me	i		pro	1st	sg							PRP	nsubj	6
6	take	take		vbmain	vblex	nonfinite	simple	active	compcls		vcomp	compdel	VB	ccomp	4
7	a	a		dt	art								DT	det	8
8	vote	vote		nn									NN	dobj	6
9	.	.											.	punct	4

#sentid = 642
0	for	for											IN	ROOT	0
1	of	of		in	in_othr								IN	prep	0
2	,	,											,	punct	1
3	how	how	rb+jjrbmod	rb	adjmod								WRB	advmod	4
4	many	many	attr+npremod	jj	attr								JJ	amod	5
5	people	people		nn	pl								NNS	nsubj	8
6	have	have		vbaux									VBP	aux	8
7	n't	not											RB	neg	8
8	done	do		vbmain	vblex	pres	perf	active					VBN	parataxis	1
9	a	a		dt	art								DT	det	10
10	presentation	presentation		nn		nom							NN	dobj	8
11	so	so	rb+jjrbmod	rb	othr								RB	advmod	12
12	far	far	rb+advl	rb	advl								RB	advmod	8
13	?	?											.	punct	1

#sentid = 643
0	okay	okay											UH	ROOT	0
1	,	,											,	punct	0
2	of	of		in	in_othr								IN	prep	0
3	the	the		dt	art								DT	det	4
4	people	people		nn	pl								NNS	pobj	2
5	who	who		relpro	relpro_wh								WP	nsubj	8
6	have	have		vbaux									VBP	aux	8
7	n't	not											RB	neg	8
8	done	do	finitecls+rel	vbmain	vblex	pres	perf	active	nmod_cls	whcls	rel		VBN	relcl	4
9	a	a		dt	art								DT	det	10
10	presentation	presentation		nn		nom							NN	dobj	8
11	so	so	rb+jjrbmod	rb	othr								RB	advmod	12
12	far	far	rb+advl	rb	advl								RB	advmod	8
13	,	,											,	punct	2
14	how	how	rb+jjrbmod	rb	othr								WRB	advmod	15
15	many	many											JJ	nsubj	17
16	would	would		vbaux	mod	prd							MD	aux	17
17	like	like		vbmain	vblex	vp_w_modal	simple	active					VB	conj	2
18	to	to		to									TO	aux	19
19	do	do	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	17
20	sign	sign	attr+npremod	jj	attr								VB	amod	23
21	-	-											HYPH	punct	20
22	up	up		rb	prtcle								RP	prt	20
23	sheet	sheet		nn									NN	dobj	19
24	now	now	rb+advl	rb	advl								RB	advmod	19
25	in	in	in+advl	in	advl								IN	prep	19
26	advance	advance		nn		nom							NN	pobj	25
27	of	of	of+npostmod	in	nmod								IN	prep	26
28	the	the		dt	art								DT	det	29
29	readings	reading		nn	pl	nom							NNS	pobj	27
30	,	,											,	punct	17
31	and	and		cc	phrs								CC	cc	17
32	versus	versus											IN	conj	17
33	how	how	rb+jjrbmod	rb	adjmod								WRB	advmod	34
34	many	many	attr+npremod	jj	attr								JJ	amod	35
35	people	people		nn	pl								NNS	nsubj	37
36	would	would		vbaux	mod	prd							MD	aux	37
37	like	like		vbmain	vblex	vp_w_modal	simple	active	compcls		incomp	compdel	VB	pcomp	32
38	to	to		to									TO	aux	39
39	wait	wait	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	37
40	until	until		cs	cs_othr								IN	mark	42
41	we	we		pro	1st								PRP	nsubj	42
42	do	do	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBP	advcl	39
43	the	the		dt	art								DT	det	44
44	readings	reading		nn	pl	nom							NNS	dobj	42
45	,	,											,	punct	37
46	so	so		cc	phrs								RB	cc	37
47	,	,											,	punct	37
48	sign	sign	attr+npremod	jj	attr								VB	amod	51
49	-	-											HYPH	punct	48
50	up	up		rb	prtcle								RP	prt	48
51	sheet	sheet		nn									NN	dobj	37
52	now	now		rb	othr								RB	advmod	51
53	?	?											.	punct	0

#sentid = 644
0	how	how	rb+jjrbmod	rb	adjmod								WRB	advmod	1
1	many	many	attr+npremod	jj	attr								JJ	amod	2
2	people	people		nn	pl								NNS	ROOT	2
3	for	for	in+npostmod	in	nmod								IN	prep	2
4	a	a		dt	art								DT	det	8
5	sign	sign	attr+npremod	jj	attr								VB	amod	8
6	-	-											HYPH	punct	5
7	up	up		rb	prtcle								RP	prt	5
8	sheet	sheet		nn									NN	pobj	3
9	now	now		rb	othr								RB	advmod	2
10	?	?											.	punct	2

#sentid = 645
0	one	one											CD	ROOT	0
1	?	?											.	punct	0

#sentid = 646
0													_SP	dep	0
1	two	two											CD	nummod	3
2													_SP	dep	3
3	two	two											CD	appos	0
4	?	?											.	punct	3

#sentid = 647
0	how	how	rb+jjrbmod	rb	adjmod								WRB	advmod	1
1	many	many	attr+npremod	jj	attr								JJ	amod	2
2	people	people		nn	pl								NNS	ROOT	2
3	for	for	in+npostmod	in	nmod								IN	prep	2
4	wait	wait		vbmain	vblex	nonfinite	simple	active	compcls		incomp	compdel	VB	pcomp	3
5	,	,											,	punct	3
6	three	three											CD	pobj	3
7	.	.											.	punct	2

#sentid = 648
0													_SP	dep	0
1	three	three											CD	appos	0
2	.	.											.	punct	0

#sentid = 649
0													_SP	dep	0
1	wait	wait		vbmain	in_othr	nonfinite	simple	active					VB	prep	0
2	and	and		cc	phrs								CC	cc	1
3	see	see		vbmain	vblex	nonfinite	simple	active					VB	conj	1
4	?	?											.	punct	1

#sentid = 650
0													_SP	dep	1
1	come	come		vbmain	phrsv	nonfinite	simple	active					VB	ROOT	1
2	on	on		rb	prtcle								RP	prt	1
3	people	people		nn	pl								NNS	npadvmod	1
4	.	.											.	punct	1

#sentid = 651
0													_SP	dep	5
1	you	you		pro	2nd	sg							PRP	nsubj	5
2	ca	can		vbaux	mod								MD	aux	5
3	n't	not											RB	neg	5
4	be	be		vbaux									VB	aux	5
5	voting	vote		vbmain	vblex	vp_w_modal	prog	active					VBG	ROOT	5
6	for	for	in+advl	in	advl								IN	prep	5
7	both	both											DT	pobj	6
8	.	.											.	punct	5

#sentid = 652
0													_SP	dep	10
1	oh	oh											UH	intj	10
2	whoops	whoops											UH	intj	1
3	,	,											,	punct	10
4	no	no											UH	intj	10
5	,	,											,	punct	10
6	i	i		pro	1st	sg							PRP	dep	10
7	,	,											,	punct	10
8	i	i		pro	1st	sg							PRP	nsubj	10
9	'll	will		vbaux	mod								MD	aux	10
10	go	go		vbmain	prepv	vp_w_modal	simple	active					VB	ROOT	10
11	for	for	in+advl	in	advl								IN	prep	10
12	the	the		dt	art								DT	det	13
13	wait	wait		nn									NN	pobj	11
14	and	and		cc	phrs								CC	cc	13
15	see	see		vbmain	vblex	nonfinite	simple	active					VB	conj	13
16	.	.											.	punct	10

#sentid = 653
0													_SP	dep	8
1	wait	wait		vbmain	vblex	nonfinite	simple	active	advlcls				VB	advcl	8
2	,	,											,	punct	1
3	wait	wait		vbmain	vblex	nonfinite	simple	active	advlcls				VB	advcl	8
4	and	and		cc	phrs								CC	cc	3
5	see	see		vbmain	vblex	nonfinite	simple	active					VB	conj	3
6	,	,											,	punct	8
7	that	that		pro	dem	sg							DT	nsubj	8
8	was	be		vbmain	be	past	simple	active					VBD	ROOT	8
9	one	one											CD	nummod	12
10	two	two											CD	nummod	12
11	three	three											CD	nummod	12
12	four	four											CD	attr	8
13	.	.											.	punct	8

#sentid = 654
0	oh	oh											UH	intj	3
1	,	,											,	punct	3
2	i	i		pro	1st	sg							PRP	nsubj	3
3	think	think		vbmain	vblex	pres	simple	active					VBP	ROOT	3
4	the	the		dt	art								DT	det	5
5	wait	wait		nn									NN	nsubj	8
6	and	and		cc	phrs								CC	cc	5
7	sees	see		nn	pl	nom							NNS	conj	5
8	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	3
9	it	it		pro	3rd	sg							PRP	dobj	8
10	,	,											,	punct	8
11	um	um											UH	intj	8
12													_SP	dep	3
13	can	can		vbaux	mod	pos							MD	aux	15
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	send	send	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	3
16	me	i		pro	1st	sg							PRP	dobj	15
17	around	around	in+advl	in	advl								IN	prep	15
18	a	a		dt	art								DT	det	21
19	sign	sign	attr+npremod	jj	attr								VB	amod	21
20	up	up		rb	prtcle								RP	prt	19
21	sheet	sheet		nn									NN	dobj	15
22	please	please											UH	intj	3
23	?	?											.	punct	3

#sentid = 655
0	i	i		pro	1st	sg							PRP	nsubj	2
1	'd	would		vbaux	mod								MD	aux	2
2	like	like		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	2
3	to	to		to									TO	aux	4
4	know	know	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	2
5	(	(											-LRB-	punct	4
6	xx	xx											XX	dep	4
7	)	)											-RRB-	punct	4
8													_SP	dep	4
9	when	when		rb	othr								WRB	advmod	13
10	would	would		vbaux	mod	prd							MD	aux	12
11	you	you		pro	2nd	sg							PRP	nsubj	12
12	like	like	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	4
13	to	to											TO	xcomp	12
14	?	?											.	punct	4

#sentid = 656
0													_SP	dep	5
1	um	um											UH	intj	5
2	,	,											,	punct	5
3	i	i		pro	1st	sg							PRP	nsubj	5
4	'd	would		vbaux	mod								MD	aux	5
5	say	say		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	5
6	,	,											,	punct	5
7	mid	mid	attr+npremod	jj	attr								JJ	amod	8
8	March	march		nn		proper							NNP	npadvmod	5
9	,	,											,	punct	8
10	to	to		in	nmod								IN	prep	8
11	late	late	attr+npremod	jj	attr								JJ	amod	12
12	March	march		nn		proper							NNP	pobj	10
13	.	.											.	punct	5

#sentid = 657
0													_SP	dep	0
1	um	um											UH	intj	0
2	...	...											:	punct	1

#sentid = 658
0	no	no											UH	intj	9
1	the	the											DT	intj	0
2	,	,											,	punct	1
3	no	no											UH	intj	4
4	actually	actually											RB	meta	1
5	(	(											-LRB-	punct	9
6	we	we		pro	1st								PRP	nsubj	9
7	did	do		vbaux									VBD	aux	9
8	n't	not											RB	neg	9
9	do	do		vbmain	vblex	past	simple	active					VB	ROOT	9
10	this	this		pro	dem	sg							DT	dobj	9
11	)	)											-RRB-	punct	9
12	the	the		dt	art								DT	det	14
13	last	last	attr+npremod	jj	attr								JJ	amod	14
14	time	time		nn									NN	npadvmod	9
15	,	,											,	punct	9
16	but	but		cc	cls								CC	cc	9
17	one	one											CD	nummod	18
18	thing	thing		nn		nom							NN	nsubj	37
19	to	to											TO	nmod	18
20	,	,											,	punct	18
21	one	one											CD	nummod	22
22	thing	thing	appos+npostmod	nn		nom	nappos						NN	appos	18
23	to	to											TO	nmod	22
24	,	,											,	punct	18
25	that	that		relpro	relpro_that								WDT	mark	28
26	i	i		pro	1st	sg							PRP	nsubj	28
27	'd	would		vbaux	mod								MD	aux	28
28	like	like	finitecls+rel	vbmain	vblex	vp_w_modal	simple	active	nmod_cls	thatcls	rel		VB	relcl	18
29	to	to											TO	xcomp	28
30	,	,											,	punct	32
31	to	to		to									TO	aux	32
32	go	go	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	28
33	(	(											-LRB-	punct	32
34	through	through	in+advl	in	advl								IN	prep	32
35	then	then	rb+advl	rb	advl								RB	advmod	32
36	)	)											-RRB-	punct	32
37	is	be		vbmain	be	pres	simple	active					VBZ	conj	9
38	the	the		dt	art								DT	det	39
39	is	be		vbmain	be	pres	simple	active					VBZ	attr	37
40	the	the		dt	art								DT	det	41
41	plausibility	plausibility		nn		nom							NN	attr	39
42	of	of	of+npostmod	in	nmod								IN	prep	41
43	the	the		dt	art								DT	det	45
44	second	second	attr+npremod	jj	attr								JJ	amod	45
45	scenario	scenario		nn									NN	pobj	42
46	.	.											.	punct	9

#sentid = 659
0	could	could		vbaux	mod	pos							MD	aux	2
1	you	you		pro	2nd	sg							PRP	nsubj	2
2	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	2
3	,	,											,	punct	2
4	could	could		vbaux	mod	pos							MD	aux	6
5	you	you		pro	2nd	sg							PRP	nsubj	6
6	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	dep	2
7	two	two											CD	nummod	10
8	(	(											-LRB-	punct	10
9	controlling	control	attr+npremod	jj	attr	ing							VBG	amod	10
10	centers	center		nn	pl	nom							NNS	dobj	6
11	)	)											-RRB-	punct	10
12	in	in	in+npostmod	in	nmod								IN	prep	10
13	one	one											CD	nummod	14
14	person	person		nn									NN	pobj	12
15	,	,											,	punct	6
16	um	um											UH	intj	6
17	and	and		cc	cls								CC	cc	2
18	secondly	secondly	rb+advl	rb	advl	ly							RB	advmod	20
19	,	,											,	punct	20
20	is	be		vbmain	be	pres	simple	active					VBZ	conj	2
21	it	it		pro	3rd	sg							PRP	nsubj	20
22	plausible	plausible		jj	pred								JJ	acomp	20
23	to	to		to									TO	aux	24
24	think	think	xtrapos+tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	20
25	that	that		cs	cs_othr								IN	mark	31
26	,	,											,	punct	31
27	a	a		dt	art								DT	det	28
28	computer	computer		nn		nom							NN	nsubj	31
29	,	,											,	punct	31
30	could	could		vbaux	mod	pos							MD	aux	31
31	be	be	finitecls+advl	vbmain	be	vp_w_modal	simple	active	advlcls				VB	advcl	49
32	a	a		dt	art								DT	det	35
33	real	real		jj	attr								JJ	amod	35
34	(	(											-LRB-	punct	35
35	xx	xx											XX	attr	31
36	)	)											-RRB-	punct	35
37	a	a		dt	art								DT	det	39
38	real	real	attr+npremod	jj	attr								JJ	amod	39
39	control	control		nn									NN	dep	49
40	(	(											-LRB-	punct	41
41	center	center	appos+npostmod	nn		nom	nappos						NN	appos	39
42	,	,											,	punct	41
43	the	the		dt	art								DT	det	44
44	com-	com-	appos+npostmod	nn			nappos						NN	appos	41
45	)	)											-RRB-	punct	39
46	a	a		dt	art								DT	det	47
47	computer	computer		nn		nom							NN	nsubj	49
48	would	would		vbaux	mod	prd							MD	aux	49
49	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	24
50	a	a		dt	art								DT	det	51
51	person	person		nn									NN	attr	49
52	.	.											.	punct	20

#sentid = 660
0	uh	uh											UH	intj	5
1	,	,											,	punct	5
2	because	because		cs	cos								IN	mark	5
3	he	he		pro	3rd	sg							PRP	nsubj	5
4	's	be		vbaux									VBZ	aux	5
5	assuming	assume		vbmain	vblex	pres	prog	active			causative		VBG	ROOT	5
6	that	that		comp	comp_that								IN	mark	28
7	as	as		cs	cs_othr								IN	mark	9
8	he	he		pro	3rd	sg							PRP	nsubj	9
9	switches	switch	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		other_advl		VBZ	advcl	28
10	back	back	rb+advl	rb	advl								RP	advmod	9
11	,	,											,	punct	9
12	(	(											-LRB-	punct	9
13	from	from	in+advl	in	advl								IN	prep	9
14	)	)											-RRB-	punct	9
15	one	one											CD	nummod	18
16	,	,											,	punct	18
17	one	one											CD	nummod	18
18	brain	brain		nn									NN	dobj	9
19	to	to	in+advl	in	advl								IN	prep	9
20	another	another		dt									DT	det	23
21	,	,											,	punct	23
22	artificial	artificial	attr+npremod	jj	attr								JJ	amod	23
23	brain	brain		nn									NN	pobj	19
24	,	,											,	punct	28
25	it	it		pro	3rd	sg							PRP	nsubj	28
26	does	do		vbaux									VBZ	aux	28
27	n't	not											RB	neg	28
28	make	make	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls	thatcls	vcomp		VB	ccomp	5
29	any	any		dt									DT	det	30
30	difference	difference		nn		nom							NN	dobj	28
31	...	...											:	punct	5

#sentid = 661
0	did	do		vbaux									VBD	aux	5
1	y-	y-											PRP	dep	0
2	do	do		vbaux									VBP	aux	5
3	you	you		pro	2nd	sg							PRP	nsubj	5
4	two	two											CD	appos	3
5	know	know		vbmain	vblex	pres	simple	active					VB	ROOT	5
6	each	each		dt									DT	det	7
7	other	other											JJ	dobj	5
8	?	?											.	punct	5

#sentid = 662
0													_SP	dep	15
1	i	i		pro	1st	sg							PRP	nsubj	2
2	'm	be		vbmain	be	pres	simple	active					VBP	punct	0
3	Pearl	pearl		nn		proper							NNP	attr	2
4													_SP	dep	2
5	i	i		pro	1st	sg							PRP	nsubj	6
6	'm	be		dt	be	pres	simple	active					VBP	det	0
7	Max	max		nn		proper							NNP	attr	6
8													_SP	dep	6
9	um	um											UH	intj	15
10	,	,											,	punct	15
11	so	so		rb	link								CC	advmod	15
12	we	we		pro	1st								PRP	nsubj	15
13	were	be		vbaux									VBD	aux	15
14	just	just	rb+advl	rb	advl		splaux						RB	advmod	15
15	talking	talk		vbmain	prepv	past	prog	active					VBG	ROOT	15
16	about	about	in+advl	in	advl								IN	prep	15
17	what	what											WP	pobj	20
18	to	to		to									TO	aux	19
19	concentrate	concentrate		vbmain	prepv	nonfinite	simple	active	compcls	tocls	incomp		VB	pcomp	16
20	on	on	in+advl	in	advl								IN	prep	19
21	next	next	attr+npremod	jj	attr								JJ	amod	22
22	time	time		nn									NN	npadvmod	19
23	.	.											.	punct	15

#sentid = 663
0	um	um											UH	intj	10
1	,	,											,	punct	10
2	um	um											UH	intj	10
3	two	two											CD	nummod	4
4	things	thing		nn	pl	nom							NNS	nsubj	10
5	to	to											TO	dep	8
6	,	,											,	punct	8
7	to	to		to									TO	aux	8
8	think	think	tocls+rel	vbmain	prepv	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	4
9	about	about	in+advl	in	advl								IN	prep	8
10	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	10
11	,	,											,	punct	10
12	to	to											TO	dep	10
13	,	,											,	punct	10
14	how	how	rb+jjrbmod	rb	adjmod								WRB	advmod	15
15	plausible	plausible		jj	pred								JJ	acomp	16
16	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	10
17	this	this		dt	dt_dem								DT	det	18
18	case	case		nn									NN	nsubj	16
19	as	as	in+jcomp	in	jcomp								IN	prep	15
20	,	,											,	punct	19
21	is	be		vbmain	be	pres	simple	active	compcls		incomp	compdel	VBZ	pcomp	19
22	it	it		pro	3rd	sg							PRP	nsubj	21
23	plausible	plausible		jj	pred								JJ	acomp	21
24	to	to		to									TO	aux	25
25	think	think	xtrapos+tocls+jcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	21
26	a	a		dt	art								DT	det	27
27	person	person		nn									NN	nsubj	29
28	could	could		vbaux	mod	pos							MD	aux	29
29	have	have	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	25
30	two	two											CD	nummod	33
31	different	different	attr+npremod	jj	attr								JJ	amod	33
32	control	control	nn+npremod	nn			npremod						NN	compound	33
33	centers	center		nn	pl	nom							NNS	dobj	29
34	,	,											,	punct	29
35	and	and		cc	phrs								CC	cc	29
36	still	still	rb+advl	rb	advl								RB	advmod	37
37	be	be		vbmain	be	nonfinite	simple	active					VB	conj	29
38	one	one											CD	nummod	39
39	person	person		nn									NN	attr	37
40	?	?											.	punct	10

#sentid = 664
0	the	the		dt	art								DT	det	3
1	spare	spare	attr+npremod	jj	attr								JJ	amod	2
2	brain	brain	nn+npremod	nn			npremod						NN	compound	3
3	idea	idea		nn									NN	dep	5
4	,	,											,	punct	5
5	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	5
6	that	that		pro	dem	sg							DT	nsubj	5
7	even	even		rb	othr								RB	advmod	9
8	a	a		dt	art								DT	det	9
9	s-	s-											XX	nmod	12
10	a	a		dt	art								DT	det	12
11	starting	starting	nn+npremod	nn		nom	npremod						NN	compound	12
12	point	point		nn									NN	attr	5
13	?	?											.	punct	5

#sentid = 665
0	um	um											UH	intj	3
1	a	a		dt	art								DT	det	3
2	second	second	attr+npremod	jj	attr								JJ	amod	3
3	kind	kind		nn									NN	ROOT	3
4	of	of	of+npostmod	in	nmod								IN	prep	3
5	idea	idea		nn									NN	pobj	4
6	.	.											.	punct	3

#sentid = 666
0	one	one		pro	other	pl							CD	nsubjpass	10
1	of	of		in	in_othr								IN	prep	0
2	these	these		dt	dt_dem								DT	det	3
3	brains	brain		nn	pl								NNS	pobj	1
4	,	,											,	punct	0
5	brains	brain	appos+npostmod	nn	pl		nappos						NNS	appos	0
6	quote	quote											UH	intj	7
7	unquote	unquote		cc	phrs								UH	cc	5
8	,	,											,	punct	0
9	is	be		vbaux									VBZ	auxpass	10
10	supposed	suppose		vbmain	vblex	pres	simple	pasv_agls					VBN	ROOT	10
11	to	to		to									TO	aux	12
12	be	be	tocls+vcomp	vbmain	be	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	10
13	a	a		dt	art								DT	det	14
14	computer	computer		nn		nom							NN	attr	12
15	.	.											.	punct	10

#sentid = 667
0	could	could		vbaux	mod	pos							MD	aux	4
1	a	a		dt	art								DT	det	2
2	computer	computer		nn		nom							NN	nsubj	4
3	actually	actually	rb+advl	rb	advl	ly	splaux						RB	advmod	4
4	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	4
5	a	a		dt	art								DT	det	6
6	person	person		nn									NN	attr	4
7	?	?											.	punct	4

#sentid = 668
0	could	could		vbaux	mod	pos							MD	aux	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	have	have		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	2
3	thoughts	thought		nn	pl								NNS	dobj	2
4	and	and		cc	phrs								CC	cc	3
5	feelings	feeling		nn	pl	nom							NNS	conj	3
6	and	and		cc	cls								CC	cc	2
7	(	(											-LRB-	punct	13
8	xx	xx											XX	dep	13
9	)	)											-RRB-	punct	13
10	could	could		vbaux	mod	pos							MD	aux	13
11	that	that		pro	dem	sg							DT	nsubj	13
12	even	even	rb+advl	rb	advl		splaux						RB	advmod	13
13	be	be		vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	19
14	part	part		nn									NN	attr	13
15	of	of	of+npostmod	in	nmod								IN	prep	14
16	_	_											NFP	punct	15
17	could	could		vbaux	mod	pos							MD	aux	19
18	it	it		pro	3rd	sg							PRP	nsubj	19
19	be	be		vbmain	be	vp_w_modal	simple	active					VB	conj	2
20	a	a		dt	art								DT	det	21
21	person	person		nn									NN	attr	19
22	?	?											.	punct	19

#sentid = 669
0	could	could		vbaux	mod	pos							MD	aux	2
1	it	it		pro	3rd	sg							PRP	nsubj	2
2	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	2
3	part	part		nn									NN	attr	2
4	of	of	of+npostmod	in	nmod								IN	prep	3
5	a	a		dt	art								DT	det	6
6	person	person		nn									NN	pobj	4
7	?	?											.	punct	2

#sentid = 670
0	um	um											UH	intj	4
1	,	,											,	punct	4
2	so	so		rb	link								RB	advmod	4
3	that	that		pro	dem	sg							DT	nsubj	4
4	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	4
5	another	another		dt									DT	det	9
6	uh	uh											UH	intj	9
7	,	,											,	punct	9
8	another	another		dt									DT	det	9
9	worry	worry		nn		nom							NN	attr	4
10	.	.											.	punct	4

#sentid = 671
0	um	um											UH	intj	7
1	,	,											,	punct	7
2	and	and		cc	phrs								CC	cc	7
3	then	then		rb	link								RB	advmod	7
4	a	a		dt	art								DT	det	6
5	final	final	attr+npremod	jj	attr								JJ	amod	6
6	worry	worry		nn		nom							NN	nsubj	7
7	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	7
8	well	well											UH	intj	14
9	,	,											,	punct	14
10	what	what											WP	dep	13
11	should	should		vbmain	vblex	vp_w_modal	simple	active					MD	dep	13
12	,	,											,	punct	13
13	what	what											WP	dep	14
14	should	should		vbmain	vblex	vp_w_modal	simple	active					MD	nsubj	23
15	what	what		dt									WP	det	16
16	kind	kind		nn									NN	dep	22
17	of	of	of+npostmod	in	nmod								IN	prep	16
18	a	a		dt	art								DT	det	19
19	theory	theory		nn		nom							NN	pobj	17
20	should	should		vbaux	mod	nec							MD	aux	22
21	we	we		pro	1st								PRP	nsubj	22
22	think	think	thatcls+vcomp	vbmain	vblex	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	7
23	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	22
24	true	true		jj	pred								JJ	acomp	23
25	in	in	in+advl	in	advl								IN	prep	22
26	order	order		nn		nom							NN	pobj	25
27	to	to		to									TO	aux	31
28	,	,											,	punct	31
29	you	you		pro	2nd	sg							PRP	nsubj	30
30	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	31
31	describe	describe		vbmain	vblex	nonfinite	simple	active	nmod_cls		ncomp		VB	acl	26
32	this	this		dt	dt_dem								DT	det	33
33	person	person		nn									NN	dobj	31
34	?	?											.	punct	7

#sentid = 672
0	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	0
1	it	it		pro	3rd	sg							PRP	nsubj	0
2	,	,											,	punct	0
3	if	if		cs	cnd								IN	mark	5
4	we	we		pro	1st								PRP	nsubj	5
5	take	take	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls		conditional		VBP	advcl	25
6	Dennett	dennett	s+gen	dt	poss	proper	sgen						NNP	poss	8
7	's	's											POS	case	6
8	word	word		nn									NN	dobj	5
9	and	and		cc	cls								CC	cc	5
10	it	it		pro	3rd	sg							PRP	nsubj	11
11	's	be		vbmain	be	pres	simple	active					VBZ	conj	5
12	one	one											CD	nummod	13
13	person	person		nn									NN	attr	11
14	,	,											,	punct	13
15	two	two											CD	nummod	16
16	brains	brain	appos+npostmod	nn	pl		nappos						NNS	appos	13
17	,	,											,	punct	13
18	one	one											CD	nummod	20
19	artificial	artificial		jj	attr								JJ	amod	20
20	one	one											CD	appos	13
21	real	real		jj	attr								JJ	amod	20
22	,	,											,	punct	25
23	um	um											UH	intj	25
24	,	,											,	punct	25
25	is	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	0
26	it	it		pro	3rd	sg							PRP	nsubj	25
27	the	the		dt	art								DT	det	28
28	point	point		nn									NN	attr	25
29	of	of	of+npostmod	in	nmod								IN	prep	28
30	view	view		nn									NN	pobj	29
31	,	,											,	punct	28
32	number	number	appos+npostmod	nn		nom	nappos						NN	appos	28
33	five	five											CD	nummod	32
34	that	that		pro	dem	sg							WDT	pobj	38
35	he	he		pro	3rd	sg							PRP	nsubj	37
36	's	be		vbaux									VBZ	aux	37
37	appealing	appeal	finitecls+rel	vbmain	vblex	pres	prog	active	nmod_cls		rel	reldel	VBG	relcl	32
38	to	to	in+advl	in	advl								IN	prep	37
39	here	here	rb+advl	rb	advl								RB	advmod	37
40	?	?											.	punct	25

#sentid = 673
0													_SP	dep	5
1	(	(											-LRB-	punct	5
2	are	be		vbaux									VBP	aux	5
3	we	we		pro	1st								PRP	nsubj	5
4	)	)											-RRB-	punct	5
5	applying	apply		vbmain	vblex	pres	prog	active					VBG	ROOT	5
6	the	the		dt	art								DT	det	9
7	,	,											,	punct	6
8	the	the		dt	art								DT	det	9
9	theory	theory		nn		nom							NN	dobj	5
10													_SP	dep	5
11	(	(											-LRB-	punct	5
12	on	on	in+advl	in	advl								IN	prep	5
13	Dennett	dennett		nn		proper							NNP	pobj	12
14	's	's											POS	case	13
15	,	,											-RRB-	punct	5
16	)	)											-RRB-	punct	5
17	okay	okay											UH	intj	5
18													_SP	dep	5
19	yeah	yeah											UH	intj	5
20	.	.											.	punct	5

#sentid = 674
0	i	i		pro	1st	sg							PRP	nsubj	1
1	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	that	that		pro	dem	sg							DT	nsubj	6
5	might	might		vbaux	mod	pos							MD	aux	6
6	be	be	thatcls+vcomp	vbmain	be	vp_w_modal	simple	active	compcls		vcomp	compdel	VB	ccomp	3
7	a	a		dt	art								DT	det	13
8	harder	hard	attr+npremod	jj	attr								JJR	amod	13
9	,	,											,	punct	13
10													_SP	dep	13
11	a	a		dt	art								DT	det	13
12	harder	hard	attr+npremod	jj	attr								JJR	amod	13
13	thing	thing		nn		nom							NN	attr	6
14	to	to		to									TO	aux	15
15	get	get	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	13
16	a	a		dt	art								DT	det	17
17	grip	grip		nn									NN	dobj	15
18	on	on	in+npostmod	in	nmod								IN	prep	17
19	,	,											,	punct	3
20	but	but		cc	cls								CC	cc	3
21	that	that		pro	dem	sg							DT	nsubj	22
22	's	be		vbmain	be	pres	simple	active					VBZ	conj	3
23	that	that		pro	dem	sg							DT	nsubj	24
24	's	be	thatcls+vcomp	vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	22
25	another	another		dt									DT	det	26
26	direction	direction		nn		nom							NN	attr	24
27	to	to		to									TO	aux	28
28	take	take	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	26
29	it	it		pro	3rd	sg							PRP	dobj	28
30	.	.											.	punct	22

#sentid = 675
0	how	how											WRB	ROOT	0
1	,	,											,	punct	2
2	what	what		in	in_othr								WP	prep	0
3	cou-	cou-											XX	punct	2

#sentid = 676
0	what	what											WP	dobj	4
1	should	should		vbaux	mod	nec							MD	aux	4
2	the	the		dt	art								DT	det	3
3	theory	theory		nn		nom							NN	nsubj	4
4	say	say		vbmain	vblex	vp_w_modal	simple	active					VB	ROOT	4
5	about	about	in+advl	in	advl								IN	prep	4
6	this	this		pro	dem	sg							DT	pobj	5
7	?	?											.	punct	5

#sentid = 677
0	about	about											IN	ROOT	0
1	this	this		dt	dt_dem								DT	det	2
2	kind	kind		nn									NN	pobj	0
3	of	of	of+npostmod	in	nmod								IN	prep	2
4	case	case		nn									NN	pobj	3
5	and	and		cc									CC	cc	0
6	,	,											,	punct	0
7	you	you		pro	2nd	sg							PRP	nsubj	8
8	know	know		vbmain	vblex	nonfinite	simple	active					VB	parataxis	13
9	what	what											WP	nsubj	10
10	seems	seem	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBZ	advcl	13
11	,	,											,	punct	10
12	what	what											WP	nsubj	13
13	seems	seem		vbmain	vblex	pres	simple	active					VBZ	conj	0
14	plausible	plausible											JJ	oprd	13
15	?	?											.	punct	13

#sentid = 678
0	um	um											UH	ROOT	0
1	,	,											,	punct	0
2	and	and		cc									CC	cc	0
3	um	um											UH	intj	0
4	,	,											,	punct	3
5	and	and		cc	phrs								CC	cc	17
6	then	then		rb	link								RB	advmod	17
7	when	when		rb	advl								WRB	advmod	13
8	the	the		dt	art								DT	det	9
9	two	two											CD	nsubj	13
10	,	,											,	punct	9
11	the	the		dt	art								DT	det	12
12	two	two											CD	appos	9
13	come	come	finitecls+advl	vbmain	vblex	pres	simple	active	advlcls	whcls			VBP	advcl	17
14	apart	apart	rb+advl	rb	advl								RB	advmod	13
15	,	,											,	punct	17
16	that	that		pro	dem	sg							DT	nsubj	17
17	's	be		vbmain	be	pres	simple	active					VBZ	conj	0
18	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	19
19	of	of		rb	othr								RB	advmod	21
20	the	the		dt	art								DT	det	21
21	case	case		nn									NN	attr	17
22	that	that		relpro	relpro_that								IN	mark	28
23	um	um											UH	intj	28
24	,	,											,	punct	28
25	that	that		relpro	relpro_that								DT	mark	28
26	Parfit	parfit		nn		proper							NNP	nsubj	28
27	was	be		vbaux									VBD	aux	28
28	thinking	think	thatcls+ncomp	vbmain	prepv	past	prog	active	nmod_cls	thatcls	ncomp		VBG	acl	21
29	about	about	in+advl	in	advl								IN	prep	28
30	where	where		rb	advl								WRB	advmod	32
31	you	you		pro	2nd	sg							PRP	nsubj	32
32	have	have		vbmain	vblex	pres	simple	active					VBP	dep	41
33	,	,											,	punct	32
34	you	you		pro	2nd	sg							PRP	nsubj	35
35	know	know		vbmain	vblex	pres	simple	active					VBP	parataxis	32
36	two	two											CD	dobj	32
37	_	_											NFP	punct	36
38	where	where		comp	comp_wh								WRB	advmod	41
39	you	you		pro	2nd	sg							PRP	nsubj	41
40	've	've		vbaux									VBP	aux	41
41	got	get	whcls+incomp	vbmain	vblex	pres	simple	active	compcls	whcls	incomp		VBN	pcomp	29
42	,	,											,	punct	41
43	uh	uh											UH	intj	41
44	,	,											,	punct	41
45	a	a		dt	art								DT	det	46
46	consciousness	consciousness		nn		nom							NN	dobj	41
47	that	that		relpro	relpro_that	sg							WDT	nsubj	48
48	divides	divide	finitecls+rel	vbmain	vblex	pres	simple	active	nmod_cls	thatcls	rel		VBZ	relcl	46
49	,	,											,	punct	48
50	um	um											UH	intj	48
51	and	and		cc	cls								CC	cc	41
52	they	they		pro	pl								PRP	nsubj	53
53	're	be		vbmain	be	pres	simple	active					VBP	conj	41
54	both	both											DT	dep	53
55	(	(											-LRB-	punct	53
56	okay	okay											UH	intj	59
57	)	)											-RRB-	punct	59
58	just	just		rb	othr								RB	advmod	59
59	gon	go											TO	meta	53
60	na	to		vbaux									TO	aux	61
61	be	be		vbmain	be	nonfinite	simple	active	compcls		vcomp	compdel	VB	xcomp	53
62	survivors	survivor		nn	pl	nom							NNS	attr	61
63	,	,											,	punct	62
64	of	of	of+npostmod	in	nmod								IN	prep	62
65	you	you		pro	2nd	sg							PRP	pobj	64
66	,	,											,	punct	53
67	and	and		cc	phrs								CC	cc	53
68	all	all	rb+jjrbmod	rb	othr								DT	advmod	70
69	of	of	rb+jjrbmod	rb	othr								IN	advmod	70
70	sudden	sudden	rb+advl	rb	advl								RB	advmod	53
71	you	you		pro	2nd	sg							PRP	nsubj	72
72	have	have	thatcls+vcomp	vbmain	vblex	pres	simple	active	compcls		vcomp	compdel	VBP	ccomp	17
73	two	two											CD	nummod	74
74	people	people		nn	pl								NNS	dobj	72
75	in	in	in+npostmod	in	nmod								IN	prep	74
76	one	one											CD	nummod	77
77	body	body		nn									NN	pobj	75
78	,	,											,	punct	74
79	um	um											UH	intj	74
80	,	,											,	punct	74
81	(	(											-LRB-	punct	72
82	this	this											DT	intj	72
83	)	)											-RRB-	punct	72
84	so	so		cc	cls								CC	cc	72
85	that	that		pro	dem	sg							DT	nsubj	86
86	's	be		vbmain	be	pres	simple	active					VBZ	conj	72
87	a-	a-											DT	attr	86
88	also	also	rb+advl	rb	advl								RB	advmod	86
89	kind	kind	rb+jjrbmod	rb	othr								RB	advmod	90
90	of	of		rb	othr								RB	advmod	94
91	a	a		dt	art								DT	det	94
92	split	split	attr+npremod	jj	attr	ed							VBN	amod	93
93	brain	brain	nn+npremod	nn			npremod						NN	compound	94
94	case	case		nn									NN	attr	86
95	.	.											.	punct	72

#sentid = 679
0	so	so		rb	link								RB	advmod	3
1	,	,											,	punct	3
2	that	that		pro	dem	sg							DT	nsubj	3
3	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	3
4	another	another		dt									DT	det	7
5	another	another		dt									DT	det	7
6	,	,											,	punct	7
7	place	place		nn									NN	attr	3
8	to	to		to									TO	aux	11
9	,	,											,	punct	11
10	to	to		to									TO	aux	11
11	wonder	wonder	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	7
12	about	about	in+advl	in	advl								IN	prep	11
13	what	what		comp	comp_wh								WP	dobj	16
14	should	should		vbaux	mod	nec							MD	aux	16
15	we	we		pro	1st								PRP	nsubj	16
16	say	say	whcls+incomp	vbmain	vblex	vp_w_modal	simple	active	compcls	whcls	incomp		VB	pcomp	12
17	about	about	in+advl	in	advl								IN	prep	16
18	that	that		dt	dt_dem								DT	det	19
19	kind	kind		nn									NN	pobj	17
20	of	of	of+npostmod	in	nmod								IN	prep	19
21	case	case		nn									NN	pobj	20
22	?	?											.	punct	3

#sentid = 680
0	are	be		vbmain	be	pres	simple	active					VBP	ROOT	0
1	(	(											-LRB-	punct	0
2	they	they		pro	pl								PRP	nsubj	0
3	)	)											-RRB-	punct	0
4	really	really	rb+advl	rb	advl	ly							RB	advmod	0
5	two	two											CD	nummod	6
6	people	people		nn	pl								NNS	attr	0
7	or	or		cc	phrs								CC	cc	6
8	one	one											CD	nummod	9
9	people	people		nn	pl								NNS	conj	6
10	.	.											.	punct	0

#sentid = 681
0	so	so		rb	link								RB	advmod	6
1	you	you		pro	2nd	sg							PRP	nsubj	6
2	,	,											,	punct	6
3	i	i		pro	1st	sg							PRP	nsubj	4
4	mean	mean		vbmain	vblex	pres	simple	active					VBP	parataxis	6
5	these	these		pro	dem	pl							DT	nsubj	6
6	are	be		vbmain	be	pres	simple	active					VBP	ROOT	6
7	just	just		rb	othr								RB	advmod	11
8	sort	sort	rb+jjrbmod	rb	othr								RB	advmod	9
9	of	of		rb	othr								RB	advmod	11
10	starting	start	attr+npremod	jj	attr	ing							VBG	amod	11
11	points	point		nn	pl								NNS	attr	6
12	to	to		to									TO	aux	13
13	get	get	tocls+rel	vbmain	vblex	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	11
14	you	you		pro	2nd	sg							PRP	nsubj	15
15	thinking	think		vbmain	prepv	nonfinite	simple	active	compcls	ingcls	vcomp		VBG	ccomp	13
16	about	about	in+advl	in	advl								IN	prep	15
17	what	what											WP	dep	22
18	,	,											,	punct	22
19	you	you		pro	2nd	sg							PRP	nsubj	22
20	can	can		vbaux	mod	pos							MD	aux	22
21	(	(											-LRB-	punct	22
22	cull	cull		vbmain	vblex	vp_w_modal	simple	active	compcls		incomp	compdel	VB	pcomp	16
23	something	something		nn	other	nom							NN	dobj	22
24	out	out	in+advl	in	advl								IN	prep	22
25	of	of		in	in_othr								IN	prep	24
26	)	)											-RRB-	punct	22
27	just	just		rb	othr								RB	advmod	28
28	one	one											CD	nummod	32
29	or	or		cc									CC	cc	28
30	two	two											CD	conj	28
31	,	,											,	punct	32
32	points	point		nn	pl								NNS	dep	22
33	of	of	of+npostmod	in	nmod								IN	prep	32
34	this	this		pro	dem	sg							DT	pobj	33
35	.	.											.	punct	6

#sentid = 682
0													_SP	dep	0
1	(	(											-LRB-	punct	0
2	xx	xx											XX	punct	1
3	)	)											-RRB-	punct	1
4													_SP	dep	0
5	oh	oh											UH	intj	4
6	.	.											.	punct	4

#sentid = 683
0	yes	yes											UH	intj	1
1	thank	thank		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	you	you		pro	2nd	sg							PRP	dobj	1
3	.	.											.	punct	1

#sentid = 684
0													_SP	dep	0
1	okay	okay											UH	intj	2
2	okay	okay											UH	intj	0
3	.	.											.	punct	2

#sentid = 685
0	and	and		cc	cls								CC	cc	3
1	um	um											UH	intj	3
2	Grace	grace		nn		proper							NNP	nsubj	3
3	is	be		vbmain	be	pres	simple	active	compcls		vcomp	compdel	VBZ	ccomp	12
4	sick	sick		jj	pred								JJ	acomp	3
5	today	today		nn									NN	npadvmod	3
6	,	,											,	punct	3
7													_SP	dep	3
8	ah	ah											UH	intj	3
9													_SP	dep	3
10	so	so		rb	link								RB	advmod	12
11	she	she		pro	3rd	sg							PRP	nsubj	12
12	told	tell		vbmain	vblex	past	simple	active					VBD	ROOT	12
13	me	i		pro	1st	sg							PRP	dobj	12
14	to	to		to									TO	aux	15
15	tell	tell	tocls+vcomp	vbmain	vblex	nonfinite	simple	active	compcls	tocls	vcomp		VB	xcomp	12
16	you	you		pro	2nd	sg							PRP	dative	15
17	that	that		pro	dem	sg							DT	dobj	15
18	.	.											.	punct	12

#sentid = 686
0													_SP	dep	2
1	okay	okay											UH	intj	2
2	thanks	thank		nn	pl								NNS	ROOT	2
3	.	.											.	punct	2

#sentid = 687
0	i	i		pro	1st	sg							PRP	nsubj	1
1	hope	hope		vbmain	vblex	pres	simple	active					VBP	ROOT	1
2	she	she		pro	3rd	sg							PRP	nsubj	5
3	's	be		vbaux									VBZ	aux	5
4	,	,											,	punct	5
5	feeling	feel	thatcls+vcomp	vbmain	vblex	pres	prog	active	compcls		vcomp	compdel	VBG	ccomp	1
6	better	well		jj	pred								JJR	acomp	5
7	.	.											.	punct	1

#sentid = 688
0	it	it		pro	3rd	sg							PRP	nsubj	1
1	's	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	a	a		dt	art								DT	det	4
3	bad	bad	attr+npremod	jj	attr								JJ	amod	4
4	time	time		nn									NN	attr	1
5	to	to		to									TO	aux	6
6	be	be	tocls+rel	vbmain	be	nonfinite	simple	active	nmod_cls	tocls	rel		VB	relcl	4
7	sick	sick		jj	pred								JJ	acomp	6
8	.	.											.	punct	1

#sentid = 689
0													_SP	dep	7
1	so	so		rb	link								RB	advmod	7
2	,	,											,	punct	7
3	okay	okay											UH	intj	7
4													_SP	dep	3
5	do	do		vbaux									VBP	aux	7
6	you	you		pro	2nd	sg							PRP	nsubj	7
7	have	have		vbmain	vblex	pres	simple	active					VB	ROOT	7
8	my	my		dt	poss								PRP$	poss	12
9	Parfit	parfit	nn+npremod	nn		proper	npremod						NNP	nmod	12
10	,	,											,	punct	12
11	uh	uh											UH	intj	12
12	sheet	sheet		nn									NN	dobj	7
13	(	(											-LRB-	punct	12
14	that	that		pro	dem	sg							WDT	dobj	16
15	i	i		pro	1st	sg							PRP	nsubj	16
16	handed	hand	finitecls+rel	vbmain	phrsv	past	simple	active	nmod_cls		rel		VBD	relcl	12
17	in	in		rb	prtcle								RP	prt	16
18	?	?											.	punct	12
19	)	)											.	punct	7

#sentid = 690
0													_SP	dep	6
1	oh	oh											UH	intj	6
2	um	um											UH	intj	1
3	,	,											,	punct	6
4	yes	yes											UH	intj	6
5	i	i		pro	1st	sg							PRP	nsubj	6
6	do	do		vbmain	vblex	pres	simple	active					VBP	ROOT	6
7	.	.											.	punct	6

#sentid = 691
0	where	where		rb	advl								WRB	advmod	1
1	is	be		vbmain	be	pres	simple	active					VBZ	ROOT	1
2	it	it		pro	3rd	sg							PRP	nsubj	1
3	?	?											.	punct	1

#sentid = 692
0	it	it		pro	3rd	sg							PRP	nsubj	2
1	should	should		vbaux	mod	nec							MD	aux	2
2	be	be		vbmain	be	vp_w_modal	simple	active					VB	ROOT	2
3	in	in	in+advl	in	advl								IN	prep	2
4	my	my		dt	poss								PRP$	poss	5
5	bag	bag		nn									NN	pobj	3
6	.	.											.	punct	2